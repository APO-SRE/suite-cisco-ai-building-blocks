{
  "openapi":"3.0.3",
  "info":{
    "contact":{
      "email":"hyperfabric-support@cisco.com",
      "name":"Cisco Nexus Hyperfabric REST API",
      "url":"https://hyperfabric.cisco.com"
    },
    "description":"Public APIs for all versions.\r\n\r\n## Authentication\r\n\r\nRequests are authenticated using Bearer Tokens. Tokens should be created from within the HyperFabric Cloud Contoller web UI and stored securely.\r\n",
    "license":{
      "name":"Cisco Licensing",
      "url":"https://www.cisco.com/c/dam/en_us/about/doing_business/legal/Cisco_General_Terms.pdf"
    },
    "termsOfService":"https://www.cisco.com/c/dam/en_us/about/doing_business/legal/Cisco_General_Terms.pdf",
    "title":"Cisco Nexus Hyperfabric REST API",
    "version":"1.0.0-Rev.1"
  },
  "paths":{
    "/assertions":{
      "put":{
        "operationId":"fabricsLatchAssertions",
        "requestBody":{
          "content":{
            "application/json":{
              "examples":{
                "request":{
                  "$ref":"#/components/examples/LatchAssertions..configd.LatchAssertionsRequest"
                }
              },
              "schema":{
                "$ref":"#/components/schemas/configLatchAssertionsRequest"
              }
            }
          },
          "description":"Latch one or more assertions.",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/LatchAssertions..configd.AssertionsResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configAssertionsResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Latch/unlatch one or more assertions.",
        "tags":[
          "Fabrics"
        ]
      }
    },
    "/assertions/counters":{
      "get":{
        "operationId":"historyGetAssertionHistoryCounterReport",
        "parameters":[
          {
            "description":"The start time in datetime string format",
            "in":"query",
            "name":"startTime",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The end time in datetime string format",
            "in":"query",
            "name":"endTime",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The query granularity in time interval",
            "in":"query",
            "name":"granularity",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The maximum number (default to 500) of results to return in a single response.",
            "in":"query",
            "name":"limit",
            "schema":{
              "format":"int32",
              "type":"integer"
            }
          },
          {
            "description":"Filter by the fabric UUID or name",
            "in":"query",
            "name":"fabric",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Filter by the device MAC address or name",
            "in":"query",
            "name":"device",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Filter by the port id or name",
            "in":"query",
            "name":"port",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Filter by one or more assertion types.",
            "in":"query",
            "name":"assertType",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Filter by one or more counter_type",
            "in":"query",
            "name":"counterType",
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/GetAssertionHistoryCounterReport..reader.AssertCounterReportResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/readerAssertCounterReportResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "404":{
            "content":{
              "application/json":{
                "examples":{
                  "404":{
                    "$ref":"#/components/examples/404"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Not Found",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "409":{
            "content":{
              "application/json":{
                "examples":{
                  "409":{
                    "$ref":"#/components/examples/409"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Conflict",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get the list of assertion counters and type history",
        "tags":[
          "History"
        ]
      }
    },
    "/assertions/records":{
      "get":{
        "operationId":"historyGetAssertionHistoryRecord",
        "parameters":[
          {
            "description":"The start time in datetime string format",
            "in":"query",
            "name":"startTime",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The end time in datetime string format",
            "in":"query",
            "name":"endTime",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The query granularity in time interval",
            "in":"query",
            "name":"granularity",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The maximum number (default to 500) of results to return in a single response.",
            "in":"query",
            "name":"limit",
            "schema":{
              "format":"int32",
              "type":"integer"
            }
          },
          {
            "description":"Filter by the fabric id",
            "in":"query",
            "name":"fabric",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Filter by the device id",
            "in":"query",
            "name":"device",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Filter by the port id or name",
            "in":"query",
            "name":"port",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Filter by one or more assertion types.",
            "in":"query",
            "name":"assertType",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Filter by one or more counter_type",
            "in":"query",
            "name":"counterType",
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/GetAssertionHistoryRecord..reader.AssertHistoryApiRecordResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/readerAssertHistoryApiRecordResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "404":{
            "content":{
              "application/json":{
                "examples":{
                  "404":{
                    "$ref":"#/components/examples/404"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Not Found",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "409":{
            "content":{
              "application/json":{
                "examples":{
                  "409":{
                    "$ref":"#/components/examples/409"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Conflict",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get the list of assertion history records",
        "tags":[
          "History"
        ]
      }
    },
    "/bearerTokens":{
      "get":{
        "operationId":"authGetBearerTokens",
        "parameters":[
          {
            "description":"Include metadata in the response.",
            "in":"query",
            "name":"includeMetadata",
            "schema":{
              "type":"boolean"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/authGetBearerTokensResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/authBearerTokensResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get the list of bearer tokens configuration information of a specific user.",
        "tags":[
          "Auth"
        ]
      },
      "post":{
        "operationId":"authCreateBearerTokens",
        "requestBody":{
          "content":{
            "application/json":{
              "examples":{
                "request":{
                  "$ref":"#/components/examples/authCreateBearerTokensRequest"
                }
              },
              "schema":{
                "$ref":"#/components/schemas/authCreateBearerTokensRequest"
              }
            }
          },
          "description":"Create one or more new bearer tokens.",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/authCreateBearerTokensResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/authCreateBearerTokensResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Add one or more bearer tokens for a specific user.",
        "tags":[
          "Auth"
        ]
      }
    },
    "/bearerTokens/{tokenId}":{
      "delete":{
        "operationId":"authDeleteBearerToken",
        "parameters":[
          {
            "description":"The id of the token to delete.",
            "in":"path",
            "name":"tokenId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "204":{
            "description":"No Content",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Delete a specific bearer token.",
        "tags":[
          "Auth"
        ]
      },
      "get":{
        "operationId":"authGetBearerToken",
        "parameters":[
          {
            "description":"The token id.",
            "in":"path",
            "name":"tokenId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Include metadata in the response.",
            "in":"query",
            "name":"includeMetadata",
            "schema":{
              "type":"boolean"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/authGetBearerTokenResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/authBearerToken"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get a specific bearer token configuration information.",
        "tags":[
          "Auth"
        ]
      }
    },
    "/devices":{
      "get":{
        "operationId":"devicesGetDevices",
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configGetDevices"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configGetDevicesResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get the list of devices, both bound and unbound.",
        "tags":[
          "Devices"
        ]
      }
    },
    "/fabrics":{
      "get":{
        "operationId":"fabricsGetAllFabrics",
        "parameters":[
          {
            "description":"Filter by one or more fabric ids and or names.",
            "in":"query",
            "name":"fabricId",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The candidate configuration name. If not set the running configuration values are returned.",
            "in":"query",
            "name":"candidate",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Include object metadata in the response.",
            "in":"query",
            "name":"includeMetadata",
            "schema":{
              "type":"boolean"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configGetFabricsResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configGetAllFabricsResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get the list of fabrics configuration information.",
        "tags":[
          "Fabrics"
        ]
      },
      "post":{
        "operationId":"fabricsAddFabrics",
        "requestBody":{
          "content":{
            "application/json":{
              "examples":{
                "request":{
                  "$ref":"#/components/examples/configAddFabricsRequest"
                }
              },
              "schema":{
                "$ref":"#/components/schemas/configAddFabricsRequest"
              }
            }
          },
          "description":"Add one or more fabrics.",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configAddFabricsResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configAddFabricsResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Add a fabric. Currently only one fabric permitted per call.",
        "tags":[
          "Fabrics"
        ]
      }
    },
    "/fabrics/{fabricId}":{
      "delete":{
        "operationId":"fabricsDeleteFabric",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "204":{
            "description":"No Content",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Delete a specific fabric.",
        "tags":[
          "Fabrics"
        ]
      },
      "get":{
        "operationId":"fabricsGetFabric",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The candidate configuration name. If not set the running configuration values are returned.",
            "in":"query",
            "name":"candidate",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Include object metadata in the response.",
            "in":"query",
            "name":"includeMetadata",
            "schema":{
              "type":"boolean"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configGetFabricResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configFabric"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "404":{
            "content":{
              "application/json":{
                "examples":{
                  "404":{
                    "$ref":"#/components/examples/404"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Not Found",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get a specific fabric configuration information.",
        "tags":[
          "Fabrics"
        ]
      },
      "put":{
        "operationId":"fabricsUpdateFabric",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "examples":{
                "request":{
                  "$ref":"#/components/examples/configUpdateFabricRequest"
                }
              },
              "schema":{
                "$ref":"#/components/schemas/configFabric"
              }
            }
          },
          "description":"Update the configuration of a named fabric.",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configUpdateFabricResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configFabric"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Update a specific fabric configuration.",
        "tags":[
          "Fabrics"
        ]
      }
    },
    "/fabrics/{fabricId}/candidates":{
      "get":{
        "operationId":"fabricsGetFabricCandidates",
        "parameters":[
          {
            "description":"The fabric identifier.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The transaction name.",
            "in":"query",
            "name":"name",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The transaction sequence number.",
            "in":"query",
            "name":"txnId",
            "schema":{
              "format":"int64",
              "type":"integer"
            }
          },
          {
            "description":"Include committed/reverted transactions.",
            "in":"query",
            "name":"needInactive",
            "schema":{
              "type":"boolean"
            }
          },
          {
            "description":"Include review logs.",
            "in":"query",
            "name":"needReviews",
            "schema":{
              "type":"boolean"
            }
          },
          {
            "description":"Include activity events.",
            "in":"query",
            "name":"needEvents",
            "schema":{
              "type":"boolean"
            }
          },
          {
            "description":"Start value of the time range.",
            "in":"query",
            "name":"startTime",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"End value of the time range.",
            "in":"query",
            "name":"endTime",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Maximum number of objects to return.",
            "in":"query",
            "name":"pagination.limit",
            "schema":{
              "format":"int32",
              "type":"integer"
            }
          },
          {
            "description":"Start after the supplied cursor.",
            "in":"query",
            "name":"pagination.cursor",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Sort by this field.",
            "in":"query",
            "name":"pagination.sortBy",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Sort in the descending order.",
            "in":"query",
            "name":"pagination.sortDesc",
            "schema":{
              "type":"boolean"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configGetFabricCandidatesResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configGetFabricCandidatesResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get the list of candidate configurations information in a fabric.",
        "tags":[
          "Fabrics"
        ]
      }
    },
    "/fabrics/{fabricId}/candidates/{name}":{
      "delete":{
        "operationId":"fabricsRevertFabricCandidate",
        "parameters":[
          {
            "description":"The fabric identifier. Fabric identifier is mandatory.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The candidate name.",
            "in":"path",
            "name":"name",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "204":{
            "description":"No Content",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Discard a specific candidate configuration in a fabric.",
        "tags":[
          "Fabrics"
        ]
      },
      "get":{
        "operationId":"fabricsGetFabricCandidate",
        "parameters":[
          {
            "description":"The fabric identifier.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The candidate name.",
            "in":"path",
            "name":"name",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Include committed/reverted transactions.",
            "in":"query",
            "name":"needInactive",
            "schema":{
              "type":"boolean"
            }
          },
          {
            "description":"Include review logs.",
            "in":"query",
            "name":"needReviews",
            "schema":{
              "type":"boolean"
            }
          },
          {
            "description":"Include activity events.",
            "in":"query",
            "name":"needEvents",
            "schema":{
              "type":"boolean"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configGetFabricCandidateResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configFabricCandidate"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get a specific candidate configuration in a fabric.",
        "tags":[
          "Fabrics"
        ]
      },
      "post":{
        "operationId":"fabricsCommitFabricCandidate",
        "parameters":[
          {
            "description":"The fabric identifier. Fabric identifier is mandatory.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The candidate name.",
            "in":"path",
            "name":"name",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "examples":{
                "request":{
                  "$ref":"#/components/examples/configCommitFabricCandidateRequest"
                }
              },
              "schema":{
                "$ref":"#/components/schemas/configCommitFabricCandidateRequest"
              }
            }
          },
          "description":"CommitFabricCandidateRequest encapsulates properties to commit a pending fabric candidate. Candidates commit may require special user privileges.",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configCommitFabricCandidateResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configCommitFabricCandidateResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Commit a specific candidate configuration to the running configuration in a fabric.",
        "tags":[
          "Fabrics"
        ]
      },
      "put":{
        "operationId":"fabricsReviewFabricCandidate",
        "parameters":[
          {
            "description":"The fabric identifier. Fabric identifier is mandatory.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The candidate name.",
            "in":"path",
            "name":"name",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "examples":{
                "request":{
                  "$ref":"#/components/examples/configReviewFabricCandidateRequest"
                }
              },
              "schema":{
                "$ref":"#/components/schemas/configReviewFabricCandidateRequest"
              }
            }
          },
          "description":"ReviewFabricCandidateRequest encapsulates properties to add a comment to an existing candidate.",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configReviewFabricCandidateResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configReviewFabricCandidateResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Add a comment to a specific candidate configuration in a fabric.",
        "tags":[
          "Fabrics"
        ]
      }
    },
    "/fabrics/{fabricId}/configurations":{
      "get":{
        "operationId":"fabricsGetFabricConfig",
        "parameters":[
          {
            "description":"The fabric identifier.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The candidate name.",
            "in":"query",
            "name":"candidate",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Do not include tenants.",
            "in":"query",
            "name":"noTenants",
            "schema":{
              "type":"boolean"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/GetFabricConfig..configd.GetFabricConfigResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configGetFabricConfigResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "404":{
            "content":{
              "application/json":{
                "examples":{
                  "404":{
                    "$ref":"#/components/examples/404"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Not Found",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get the entire configuration of a specific fabric.",
        "tags":[
          "Fabrics"
        ]
      }
    },
    "/fabrics/{fabricId}/connections":{
      "delete":{
        "operationId":"fabricsDeleteFabricConnections",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "204":{
            "description":"No Content",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Delete all connections in a specific fabric.",
        "tags":[
          "Fabrics"
        ]
      },
      "get":{
        "operationId":"fabricsGetFabricConnections",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The candidate configuration name. If not set the running configuration values are returned.",
            "in":"query",
            "name":"candidate",
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configGetFabricConnectionsResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configFabricConnectionsResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get the list of connections configuration information in a specific fabric.",
        "tags":[
          "Fabrics"
        ]
      },
      "post":{
        "operationId":"fabricsAddFabricConnections",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "examples":{
                "request":{
                  "$ref":"#/components/examples/configAddFabricConnectionsRequest"
                }
              },
              "schema":{
                "$ref":"#/components/schemas/configAddFabricConnectionsRequest"
              }
            }
          },
          "description":"Add one or more connections to a specific fabric.",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configAddFabricConnectionsResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configFabricConnectionsResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Add one or more connections to a specific fabric.",
        "tags":[
          "Fabrics"
        ]
      },
      "put":{
        "description":"This is a complete replacement of the connections in a fabric. If no connections exist new ones will be created.",
        "operationId":"fabricsSetFabricConnections",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "examples":{
                "request":{
                  "$ref":"#/components/examples/configSetFabricConnectionsRequest"
                }
              },
              "schema":{
                "$ref":"#/components/schemas/configSetFabricConnectionsRequest"
              }
            }
          },
          "description":"Set the connections for a single fabric.",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configSetFabricConnectionsResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configFabricConnectionsResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Update the list of connections configuration in a specific fabric.",
        "tags":[
          "Fabrics"
        ]
      }
    },
    "/fabrics/{fabricId}/connections/{connectionId}":{
      "delete":{
        "operationId":"fabricsDeleteFabricConnection",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The connection id or port name.",
            "in":"path",
            "name":"connectionId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "204":{
            "description":"No Content",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Delete a specific connection in a fabric.",
        "tags":[
          "Fabrics"
        ]
      },
      "get":{
        "operationId":"fabricsGetFabricConnection",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The connection id, connections are not named.",
            "in":"path",
            "name":"connectionId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The candidate configuration name. If not set the running configuration values are returned.",
            "in":"query",
            "name":"candidate",
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/GetFabricConnection..models.PortConnection"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/modelsPortConnection"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get a specific connection configuration information in a fabric.",
        "tags":[
          "Fabrics"
        ]
      }
    },
    "/fabrics/{fabricId}/devices/{deviceId}/assertions":{
      "get":{
        "operationId":"stateGetDeviceAssertions",
        "parameters":[
          {
            "description":"The device id or name.",
            "in":"path",
            "name":"deviceId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Filter by assertion latch state.",
            "in":"query",
            "name":"state",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Filter by one or more assertion types.",
            "in":"query",
            "name":"type",
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/stateGetDeviceAssertions"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/stateAssertionsResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "404":{
            "content":{
              "application/json":{
                "examples":{
                  "404":{
                    "$ref":"#/components/examples/404"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Not Found",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "409":{
            "content":{
              "application/json":{
                "examples":{
                  "409":{
                    "$ref":"#/components/examples/409"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Conflict",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get the list of assertions of a specific device.",
        "tags":[
          "State"
        ]
      }
    },
    "/fabrics/{fabricId}/devices/{deviceId}/counters":{
      "get":{
        "operationId":"stateGetDeviceCounters",
        "parameters":[
          {
            "description":"The device id or name.",
            "in":"path",
            "name":"deviceId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/stateGetDeviceCounters"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/stateCountersResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "404":{
            "content":{
              "application/json":{
                "examples":{
                  "404":{
                    "$ref":"#/components/examples/404"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Not Found",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "409":{
            "content":{
              "application/json":{
                "examples":{
                  "409":{
                    "$ref":"#/components/examples/409"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Conflict",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get the list of counters information of a specific device.",
        "tags":[
          "State"
        ]
      }
    },
    "/fabrics/{fabricId}/devices/{deviceId}/managementPorts":{
      "get":{
        "operationId":"devicesGetDeviceManagementPorts",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The device id or name.",
            "in":"path",
            "name":"deviceId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/stateGetDeviceManagementPortsResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/stateDeviceManagementPortsResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "404":{
            "content":{
              "application/json":{
                "examples":{
                  "404":{
                    "$ref":"#/components/examples/404"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Not Found",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "409":{
            "content":{
              "application/json":{
                "examples":{
                  "409":{
                    "$ref":"#/components/examples/409"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Conflict",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Return the management port configuration reported by a device.",
        "tags":[
          "Devices"
        ]
      }
    },
    "/fabrics/{fabricId}/devices/{deviceId}/ports/{port}/assertions":{
      "get":{
        "operationId":"stateGetDevicePortAssertions",
        "parameters":[
          {
            "description":"The device id or name.",
            "in":"path",
            "name":"deviceId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The port index or name.",
            "in":"path",
            "name":"port",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Filter by assertion latch state.",
            "in":"query",
            "name":"state",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Filter by one or more assertion types.",
            "in":"query",
            "name":"type",
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/stateGetDevicePortAssertions"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/stateAssertionsResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "404":{
            "content":{
              "application/json":{
                "examples":{
                  "404":{
                    "$ref":"#/components/examples/404"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Not Found",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "409":{
            "content":{
              "application/json":{
                "examples":{
                  "409":{
                    "$ref":"#/components/examples/409"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Conflict",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get the list of assertions for a specific port of a device.",
        "tags":[
          "State"
        ]
      }
    },
    "/fabrics/{fabricId}/devices/{deviceId}/ports/{port}/counters":{
      "get":{
        "operationId":"stateGetDevicePortCounters",
        "parameters":[
          {
            "description":"The chassis id or name.",
            "in":"path",
            "name":"deviceId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The port id, index or name.",
            "in":"path",
            "name":"port",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/stateGetDevicePortCounters"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/stateCountersResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "404":{
            "content":{
              "application/json":{
                "examples":{
                  "404":{
                    "$ref":"#/components/examples/404"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Not Found",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "409":{
            "content":{
              "application/json":{
                "examples":{
                  "409":{
                    "$ref":"#/components/examples/409"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Conflict",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get the list of port counters information on a specific port of a device.",
        "tags":[
          "State"
        ]
      }
    },
    "/fabrics/{fabricId}/devices/{deviceId}/sensors":{
      "get":{
        "operationId":"stateGetDeviceSensors",
        "parameters":[
          {
            "description":"The device id or name.",
            "in":"path",
            "name":"deviceId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/GetDeviceSensors..sextant.SensorsResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/stateSensorsResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "404":{
            "content":{
              "application/json":{
                "examples":{
                  "404":{
                    "$ref":"#/components/examples/404"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Not Found",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "409":{
            "content":{
              "application/json":{
                "examples":{
                  "409":{
                    "$ref":"#/components/examples/409"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Conflict",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get the list of sensor information of a specific device.",
        "tags":[
          "State"
        ]
      }
    },
    "/fabrics/{fabricId}/nodes":{
      "get":{
        "operationId":"nodesGetFabricNodes",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The candidate configuration name. If not set the running configuration values are returned.",
            "in":"query",
            "name":"candidate",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Include object metadata in the response.",
            "in":"query",
            "name":"includeMetadata",
            "schema":{
              "type":"boolean"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configGetFabricNodesResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configGetFabricNodesResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get the list of nodes configuration information in a specific fabric.",
        "tags":[
          "Nodes"
        ]
      },
      "post":{
        "operationId":"nodesAddFabricNodes",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "examples":{
                "request":{
                  "$ref":"#/components/examples/configAddFabricNodesRequest"
                }
              },
              "schema":{
                "$ref":"#/components/schemas/configAddFabricNodesRequest"
              }
            }
          },
          "description":"Request Body",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configAddFabricNodesResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configAddFabricNodesResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Add one or more nodes to a specific fabric.",
        "tags":[
          "Nodes"
        ]
      }
    },
    "/fabrics/{fabricId}/nodes/{nodeId}":{
      "delete":{
        "operationId":"nodesDeleteFabricNode",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"A node id or name.",
            "in":"path",
            "name":"nodeId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "204":{
            "description":"No Content",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Delete a specific node in a fabric.",
        "tags":[
          "Nodes"
        ]
      },
      "get":{
        "operationId":"nodesGetNamedFabricNode",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The node id or name.",
            "in":"path",
            "name":"nodeId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The candidate configuration name. If not set the running configuration values are returned.",
            "in":"query",
            "name":"candidate",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Include object metadata in the response.",
            "in":"query",
            "name":"includeMetadata",
            "schema":{
              "type":"boolean"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configGetFabricNodeResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configNode"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get a specific node configuration information in a fabric.",
        "tags":[
          "Nodes"
        ]
      },
      "put":{
        "operationId":"nodesUpdateFabricNode",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The node id or name.",
            "in":"path",
            "name":"nodeId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "examples":{
                "request":{
                  "$ref":"#/components/examples/UpdateFabricNode..configd.UpdateFabricNodeRequest"
                }
              },
              "schema":{
                "$ref":"#/components/schemas/configNode"
              }
            }
          },
          "description":"Update the definition of a fabric node.",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/UpdateFabricNode..configd.Node"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configNode"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Update a specific node configuration in a fabric.",
        "tags":[
          "Nodes"
        ]
      }
    },
    "/fabrics/{fabricId}/nodes/{nodeId}/devices":{
      "delete":{
        "operationId":"devicesUnbindDevice",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The id of the node from which a device is bound to.",
            "in":"path",
            "name":"nodeId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "204":{
            "description":"No Content",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Unbind a bound device from a specific node in a fabric.",
        "tags":[
          "Devices"
        ]
      }
    },
    "/fabrics/{fabricId}/nodes/{nodeId}/devices/{deviceId}":{
      "put":{
        "operationId":"devicesBindDevice",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The id of the node to bind.",
            "in":"path",
            "name":"nodeId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The id of the device to bind.",
            "in":"path",
            "name":"deviceId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/BindDevice..configd.BindDeviceResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configBindDeviceResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Bind a specific device to a node in a fabric.",
        "tags":[
          "Devices"
        ]
      }
    },
    "/fabrics/{fabricId}/nodes/{nodeId}/managementPorts":{
      "get":{
        "operationId":"nodesGetManagementPorts",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The node id or name.",
            "in":"path",
            "name":"nodeId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The candidate configuration name. If not set the running configuration values are returned.",
            "in":"query",
            "name":"candidate",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Include object metadata in the response.",
            "in":"query",
            "name":"includeMetadata",
            "schema":{
              "type":"boolean"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configGetManagementPortsResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configManagementPortsResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get the list of management ports configuration information for a specific node in a fabric.",
        "tags":[
          "Nodes"
        ]
      },
      "post":{
        "operationId":"nodesAddManagementPorts",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The node id or name.",
            "in":"path",
            "name":"nodeId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "examples":{
                "request":{
                  "$ref":"#/components/examples/configAddManagementPortsRequest"
                }
              },
              "schema":{
                "$ref":"#/components/schemas/configAddManagementPortsRequest"
              }
            }
          },
          "description":"Request Body",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configAddManagementPortsResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configManagementPortsResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Add one or more management ports configuration to a specific node in a fabric.",
        "tags":[
          "Nodes"
        ]
      }
    },
    "/fabrics/{fabricId}/nodes/{nodeId}/managementPorts/{id}":{
      "get":{
        "operationId":"nodesGetManagementPort",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The node id or name.",
            "in":"path",
            "name":"nodeId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The management port name.",
            "in":"path",
            "name":"id",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The candidate configuration name. If not set the running configuration values are returned.",
            "in":"query",
            "name":"candidate",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Include object metadata in the response.",
            "in":"query",
            "name":"includeMetadata",
            "schema":{
              "type":"boolean"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/GetManagementPort..models.ManagementPort"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/modelsManagementPort"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get the management port configuration information for a specific node in a fabric.",
        "tags":[
          "Nodes"
        ]
      },
      "put":{
        "operationId":"nodesUpdateManagementPort",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The node id or name.",
            "in":"path",
            "name":"nodeId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The management port id or name.",
            "in":"path",
            "name":"id",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "examples":{
                "request":{
                  "$ref":"#/components/examples/configUpdateManagementPortRequest"
                }
              },
              "schema":{
                "$ref":"#/components/schemas/modelsManagementPort"
              }
            }
          },
          "description":"Update the configuration of a named management port.",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configUpdateManagementPortResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/modelsManagementPort"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Update a specific management port configuration for a node in a fabric.",
        "tags":[
          "Nodes"
        ]
      }
    },
    "/fabrics/{fabricId}/nodes/{nodeId}/ports":{
      "get":{
        "operationId":"nodesGetPorts",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"A node id or name.",
            "in":"path",
            "name":"nodeId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The candidate configuration name. If not set the running configuration values are returned.",
            "in":"query",
            "name":"candidate",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Include object metadata in the response.",
            "in":"query",
            "name":"includeMetadata",
            "schema":{
              "type":"boolean"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configGetPortsResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configPortsResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get the list of ports configuration information for a specific node in a fabric.",
        "tags":[
          "Nodes"
        ]
      },
      "put":{
        "description":"This is a complete replacement of the ports for a node in a fabric.",
        "operationId":"nodesSetPorts",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"A node id or name.",
            "in":"path",
            "name":"nodeId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "examples":{
                "request":{
                  "$ref":"#/components/examples/configSetPortsRequest"
                }
              },
              "schema":{
                "$ref":"#/components/schemas/configSetPortsRequest"
              }
            }
          },
          "description":"Request Body",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configSetPortsResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configPortsResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Update the list of ports configuration for a specific node in a fabric.",
        "tags":[
          "Nodes"
        ]
      }
    },
    "/fabrics/{fabricId}/nodes/{nodeId}/ports/{portId}":{
      "delete":{
        "description":"Only unused ports can be reset. Labels and annotations are not removed.",
        "operationId":"nodesResetPort",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"A node id or name.",
            "in":"path",
            "name":"nodeId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The port id or name.",
            "in":"path",
            "name":"portId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "204":{
            "description":"No Content",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Reset a specific port configuration for a node in a fabric to its default values.",
        "tags":[
          "Nodes"
        ]
      },
      "get":{
        "operationId":"nodesGetPort",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"A node id or name.",
            "in":"path",
            "name":"nodeId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The port id or name.",
            "in":"path",
            "name":"portId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The candidate configuration name. If not set the running configuration values are returned.",
            "in":"query",
            "name":"candidate",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Include object metadata in the response.",
            "in":"query",
            "name":"includeMetadata",
            "schema":{
              "type":"boolean"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configGetPortResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/modelsNetworkPort"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get a specific port configuration information for a node in a fabric.",
        "tags":[
          "Nodes"
        ]
      },
      "put":{
        "operationId":"nodesUpdatePort",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The node id or name.",
            "in":"path",
            "name":"nodeId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The port name, id or index.",
            "in":"path",
            "name":"portId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "examples":{
                "request":{
                  "$ref":"#/components/examples/configSetPortRequest"
                }
              },
              "schema":{
                "$ref":"#/components/schemas/modelsNetworkPort"
              }
            }
          },
          "description":"Update the configuration of a named port.",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configSetPortResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/modelsNetworkPort"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Update a specific port configuration for a node in a fabric.",
        "tags":[
          "Nodes"
        ]
      }
    },
    "/fabrics/{fabricId}/vnis":{
      "get":{
        "operationId":"vnisGetFabricVnis",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The candidate configuration name. If not set the running configuration values are returned.",
            "in":"query",
            "name":"candidate",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Include object metadata in the response.",
            "in":"query",
            "name":"includeMetadata",
            "schema":{
              "type":"boolean"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configGetFabricVnisResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configFabricVnisResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get the list of VNIs configuration information in a specific fabric.",
        "tags":[
          "Vnis"
        ]
      },
      "post":{
        "operationId":"vnisAddFabricVnis",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "examples":{
                "request":{
                  "$ref":"#/components/examples/configAddFabricVnisRequest"
                }
              },
              "schema":{
                "$ref":"#/components/schemas/configAddFabricVnisRequest"
              }
            }
          },
          "description":"Add one or more VNIs to a fabric.",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configAddFabricVnisResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configFabricVnisResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Add one or more VNIs to a specific fabric.",
        "tags":[
          "Vnis"
        ]
      }
    },
    "/fabrics/{fabricId}/vnis/{vniId}":{
      "delete":{
        "operationId":"vnisDeleteFabricVni",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The vni id or name.",
            "in":"path",
            "name":"vniId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "204":{
            "description":"No Content",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Delete a specific VNI in a fabric.",
        "tags":[
          "Vnis"
        ]
      },
      "get":{
        "operationId":"vnisGetFabricVni",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The vni id or name.",
            "in":"path",
            "name":"vniId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The candidate configuration name. If not set the running configuration values are returned.",
            "in":"query",
            "name":"candidate",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Include object metadata in the response.",
            "in":"query",
            "name":"includeMetadata",
            "schema":{
              "type":"boolean"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configGetFabricVniResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/modelsVni"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get a specific VNI configuration information in a fabric.",
        "tags":[
          "Vnis"
        ]
      },
      "put":{
        "operationId":"vnisUpdateFabricVni",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The vni id or name.",
            "in":"path",
            "name":"vniId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "examples":{
                "request":{
                  "$ref":"#/components/examples/configUpdateFabricVniRequest"
                }
              },
              "schema":{
                "$ref":"#/components/schemas/modelsVni"
              }
            }
          },
          "description":"Update a VNI configuration.",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configUpdateFabricVniResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/modelsVni"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Update a specific VNI configuration in a fabric.",
        "tags":[
          "Vnis"
        ]
      }
    },
    "/fabrics/{fabricId}/vnis/{vniId}/members":{
      "get":{
        "operationId":"vnisGetFabricVniMembers",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The VNI id.",
            "in":"path",
            "name":"vniId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The candidate configuration name. If not set the running configuration values are returned.",
            "in":"query",
            "name":"candidate",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Include object metadata in the response.",
            "in":"query",
            "name":"includeMetadata",
            "schema":{
              "type":"boolean"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/GetFabricVniMembers..configd.FabricVniMembersResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configFabricVniMembersResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get the list of members configuration information of a specific VNI in a fabric.",
        "tags":[
          "Vnis"
        ]
      },
      "post":{
        "operationId":"vnisAddFabricVniMembers",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The VNI id.",
            "in":"path",
            "name":"vniId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "examples":{
                "request":{
                  "$ref":"#/components/examples/AddFabricVniMembers..configd.AddFabricVniMembersRequest"
                }
              },
              "schema":{
                "$ref":"#/components/schemas/modelsVlanMember"
              }
            }
          },
          "description":"Request Body",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/AddFabricVniMembers..configd.FabricVniMembersResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configFabricVniMembersResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Add one or more members to a specific VNI in a fabric.",
        "tags":[
          "Vnis"
        ]
      }
    },
    "/fabrics/{fabricId}/vnis/{vniId}/members/{memberId}":{
      "delete":{
        "operationId":"vnisDeleteFabricVniMember",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The VNI id.",
            "in":"path",
            "name":"vniId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The member id or name.",
            "in":"path",
            "name":"memberId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "204":{
            "description":"No Content",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Delete a specific member of a VNI in a fabric.",
        "tags":[
          "Vnis"
        ]
      },
      "get":{
        "operationId":"vnisGetFabricVniMember",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The VNI id.",
            "in":"path",
            "name":"vniId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The member id or name.",
            "in":"path",
            "name":"memberId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The candidate configuration name. If not set the running configuration values are returned.",
            "in":"query",
            "name":"candidate",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Include object metadata in the response.",
            "in":"query",
            "name":"includeMetadata",
            "schema":{
              "type":"boolean"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/GetFabricVniMember..models.VlanMember"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/modelsVlanMember"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get a specific member configuration information of a VNI in a fabric.",
        "tags":[
          "Vnis"
        ]
      }
    },
    "/fabrics/{fabricId}/vrfs":{
      "get":{
        "operationId":"vrfsGetFabricVrfs",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The candidate configuration name. If not set the running configuration values are returned.",
            "in":"query",
            "name":"candidate",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Include object metadata in the response.",
            "in":"query",
            "name":"includeMetadata",
            "schema":{
              "type":"boolean"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configGetFabricVrfsResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configFabricVrfsResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get the list of VRFs configuration information in a specific fabric.",
        "tags":[
          "Vrfs"
        ]
      },
      "post":{
        "operationId":"vrfsAddFabricVrfs",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "examples":{
                "request":{
                  "$ref":"#/components/examples/configAddFabricVrfsRequest"
                }
              },
              "schema":{
                "$ref":"#/components/schemas/configAddFabricVrfsRequest"
              }
            }
          },
          "description":"Request Body",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/AddFabricVrfs..configd.FabricVrfsResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configFabricVrfsResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Add one or more VRFs to a specific fabric.",
        "tags":[
          "Vrfs"
        ]
      }
    },
    "/fabrics/{fabricId}/vrfs/{vrfId}":{
      "delete":{
        "operationId":"vrfsDeleteFabricVrf",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The vrf id or name.",
            "in":"path",
            "name":"vrfId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "204":{
            "description":"No Content",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Delete a specific VRF in a fabric.",
        "tags":[
          "Vrfs"
        ]
      },
      "get":{
        "operationId":"vrfsGetFabricVrf",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The vrf id or name.",
            "in":"path",
            "name":"vrfId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The candidate configuration name. If not set the running configuration values are returned.",
            "in":"query",
            "name":"candidate",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Include object metadata in the response.",
            "in":"query",
            "name":"includeMetadata",
            "schema":{
              "type":"boolean"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configGetFabricVrfResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/modelsVrf"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get a specific VRF configuration information in a fabric.",
        "tags":[
          "Vrfs"
        ]
      },
      "put":{
        "operationId":"vrfsUpdateFabricVrf",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The vni id or name.",
            "in":"path",
            "name":"vrfId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "examples":{
                "request":{
                  "$ref":"#/components/examples/configUpdateFabricVrfRequest"
                }
              },
              "schema":{
                "$ref":"#/components/schemas/modelsVrf"
              }
            }
          },
          "description":"Update a named VRF on a fabric.",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configUpdateFabricVrfResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/modelsVrf"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Update a specific VRF configuration in a fabric.",
        "tags":[
          "Vrfs"
        ]
      }
    },
    "/fabrics/{fabricId}/vrfs/{vrfId}/staticRoutes":{
      "get":{
        "operationId":"vrfsGetFabricStaticRoutes",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The vrf id.",
            "in":"path",
            "name":"vrfId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The candidate configuration name. If not set the running configuration values are returned.",
            "in":"query",
            "name":"candidate",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Include object metadata in the response.",
            "in":"query",
            "name":"includeMetadata",
            "schema":{
              "type":"boolean"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configGetFabricStaticRoutesResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configFabricStaticRoutesResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get the list of static routes configuration information of a specific VRF in a fabric.",
        "tags":[
          "Vrfs"
        ]
      },
      "post":{
        "operationId":"vrfsAddFabricStaticRoutes",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The vrf id.",
            "in":"path",
            "name":"vrfId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "examples":{
                "request":{
                  "$ref":"#/components/examples/configAddFabricStaticRoutesRequest"
                }
              },
              "schema":{
                "$ref":"#/components/schemas/configAddFabricStaticRoutesRequest"
              }
            }
          },
          "description":"Request Body",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configAddFabricStaticRoutesResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/configFabricStaticRoutesResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Add static routes configuration to a VRF in a fabric.",
        "tags":[
          "Vrfs"
        ]
      }
    },
    "/fabrics/{fabricId}/vrfs/{vrfId}/staticRoutes/{routeId}":{
      "delete":{
        "operationId":"vrfsDeleteFabricStaticRoute",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The vrf id.",
            "in":"path",
            "name":"vrfId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The route id or name.",
            "in":"path",
            "name":"routeId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "204":{
            "description":"No Content",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Delete a specific static route of a VRF in a fabric.",
        "tags":[
          "Vrfs"
        ]
      },
      "get":{
        "operationId":"vrfsGetFabricStaticRoute",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The vrf id.",
            "in":"path",
            "name":"vrfId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The route id or name.",
            "in":"path",
            "name":"routeId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The candidate configuration name. If not set the running configuration values are returned.",
            "in":"query",
            "name":"candidate",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Include object metadata in the response.",
            "in":"query",
            "name":"includeMetadata",
            "schema":{
              "type":"boolean"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configGetFabricStaticRouteResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/modelsStaticRoutes"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get a specific static route configuration information of a VRF in a fabric.",
        "tags":[
          "Vrfs"
        ]
      },
      "put":{
        "operationId":"vrfsUpdateFabricStaticRoute",
        "parameters":[
          {
            "description":"The fabric id or name.",
            "in":"path",
            "name":"fabricId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The vrf id.",
            "in":"path",
            "name":"vrfId",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"The route id or name.",
            "in":"path",
            "name":"routeId",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "examples":{
                "request":{
                  "$ref":"#/components/examples/configUpdateFabricStaticRouteRequest"
                }
              },
              "schema":{
                "$ref":"#/components/schemas/modelsStaticRoutes"
              }
            }
          },
          "description":"Update a named static route on a fabric.",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/configUpdateFabricStaticRouteResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/modelsStaticRoutes"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Update a specific static route configuration of a VRF in a fabric.",
        "tags":[
          "Vrfs"
        ]
      }
    },
    "/users":{
      "get":{
        "operationId":"authGetUsers",
        "parameters":[
          {
            "description":"Only return users with these emails, optional. If set, roles and enabled are ignored.",
            "in":"query",
            "name":"emails",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Only return users that are adminstratively enabled, otherwise include disabled users as well. The tenant and organization to which the users belong must be enabled regardless of the value of enabled.",
            "in":"query",
            "name":"enabled",
            "schema":{
              "type":"boolean"
            }
          },
          {
            "description":"Only return users with specific roles.",
            "in":"query",
            "name":"roles",
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Include object metadata in the response.",
            "in":"query",
            "name":"includeMetadata",
            "schema":{
              "type":"boolean"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/authGetUsersResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/authUsersResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get the list of users configuration information.",
        "tags":[
          "Auth"
        ]
      },
      "post":{
        "operationId":"authSetUsers",
        "requestBody":{
          "content":{
            "application/json":{
              "examples":{
                "request":{
                  "$ref":"#/components/examples/authAddUsersRequest"
                }
              },
              "schema":{
                "$ref":"#/components/schemas/authSetUsersRequest"
              }
            }
          },
          "description":"SetUsersRequest creates or updates the specified users in the context of this tenant.",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/authAddUsersResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/authUsersResponse"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Add one or more users.",
        "tags":[
          "Auth"
        ]
      }
    },
    "/users/{id}":{
      "delete":{
        "operationId":"authDeleteUser",
        "parameters":[
          {
            "description":"The id or email address of user to be deleted.",
            "in":"path",
            "name":"id",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "204":{
            "description":"No Content",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Delete a specific user.",
        "tags":[
          "Auth"
        ]
      },
      "get":{
        "operationId":"authGetUser",
        "parameters":[
          {
            "description":"The id or email address.",
            "in":"path",
            "name":"id",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "description":"Include object metadata in the response.",
            "in":"query",
            "name":"includeMetadata",
            "schema":{
              "type":"boolean"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/authGetUserResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/modelsUser"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Get a specific user configuration information.",
        "tags":[
          "Auth"
        ]
      },
      "put":{
        "operationId":"authUpdateUser",
        "parameters":[
          {
            "description":"The id or email of the user.",
            "in":"path",
            "name":"id",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "examples":{
                "request":{
                  "$ref":"#/components/examples/authUpdateUserRequest"
                }
              },
              "schema":{
                "$ref":"#/components/schemas/authUpdateUser"
              }
            }
          },
          "description":"Update a single user.",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "examples":{
                  "response":{
                    "$ref":"#/components/examples/authUpdateUserResponse"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/modelsUser"
                }
              }
            },
            "description":"OK",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "examples":{
                  "400":{
                    "$ref":"#/components/examples/400"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Bad Request",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "401":{
            "content":{
              "application/json":{
                "examples":{
                  "401":{
                    "$ref":"#/components/examples/401"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Unauthorized",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "403":{
            "content":{
              "application/json":{
                "examples":{
                  "403":{
                    "$ref":"#/components/examples/403"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Forbidden",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "429":{
            "content":{
              "application/json":{
                "examples":{
                  "429":{
                    "$ref":"#/components/examples/429"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Too Many Requests",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          },
          "500":{
            "content":{
              "application/json":{
                "examples":{
                  "500":{
                    "$ref":"#/components/examples/500"
                  }
                },
                "schema":{
                  "$ref":"#/components/schemas/commonRestError"
                }
              }
            },
            "description":"Internal Server Error",
            "headers":{
              "Cache-Control":{
                "$ref":"#/components/headers/cache-control"
              },
              "Content-Encoding":{
                "$ref":"#/components/headers/content-encoding"
              },
              "Content-Type":{
                "$ref":"#/components/headers/content-type"
              },
              "Date":{
                "$ref":"#/components/headers/date"
              },
              "TrackingID":{
                "$ref":"#/components/headers/trackingid"
              }
            }
          }
        },
        "security":[
          {
            "http":[]
          }
        ],
        "summary":"Update a specific user configuration.",
        "tags":[
          "Auth"
        ]
      }
    }
  },
  "security":[
    {
      "http":[]
    }
  ],
  "servers":[
    {
      "description":"V1 Server",
      "url":"https://hyperfabric.cisco.com/api/v1"
    }
  ],
  "tags":[
    {
      "description":"APIs for authorization, account, users and API keys and tokens.",
      "name":"Auth"
    },
    {
      "description":"APIs for devices.",
      "name":"Devices"
    },
    {
      "description":"APIs for fabric configuration.",
      "name":"Fabrics"
    },
    {
      "description":"APIs for historical data such as assertions and port traffic.",
      "name":"History"
    },
    {
      "description":"APIs for node configuration.",
      "name":"Nodes"
    },
    {
      "description":"APIs for the runtime state of the system.",
      "name":"State"
    },
    {
      "description":"APIs for VNIs.",
      "name":"Vnis"
    },
    {
      "description":"APIs for VRFs.",
      "name":"Vrfs"
    }
  ],
  "components":{
    "examples":{
      "400":{
        "description":"Bad Request",
        "summary":"Bad Request",
        "value":{
          "message":"cannot parse value: not a valid value",
          "field":"value",
          "value":"123",
          "status":400,
          "errCode":"ERR_CODE_INVALID_VALUE",
          "trackingId":"TrackingId-68a57581-5a5d-443d-833e-364e5c72146d"
        }
      },
      "401":{
        "description":"Unauthorized",
        "summary":"Unauthorized",
        "value":{
          "message":"authorization failure",
          "status":401,
          "errCode":"ERR_CODE_UNAUTHORIZED",
          "trackingId":"TrackingId-18a71eed-825b-419b-8d25-0d15c569c98a"
        }
      },
      "403":{
        "description":"Forbidden",
        "summary":"Forbidden",
        "value":{
          "message":"insufficient privileges to access resource",
          "status":403,
          "errCode":"ERR_CODE_PERMISSION_DENIED",
          "trackingId":"TrackingId-d13802b6-1dbb-4438-8975-289f14bc6f63"
        }
      },
      "404":{
        "description":"Not Found",
        "summary":"Not Found",
        "value":{
          "message":"user not found",
          "field":"userId",
          "value":"userone@example.com",
          "status":404,
          "errCode":"ERR_CODE_NOT_FOUND",
          "trackingId":"TrackingId-b0c841b8-4a6f-47c6-b8e2-3589a85f3b5a"
        }
      },
      "409":{
        "description":"Conflict",
        "summary":"Conflict",
        "value":{
          "message":"user already exists",
          "field":"userId",
          "value":"hyperfabric-example@cisco.com",
          "status":409,
          "errCode":"ERR_CODE_DATA_CONFLICT",
          "trackingId":"TrackingId-920be556-611d-403d-8c2f-0f4b5c5a8e4d"
        }
      },
      "429":{
        "description":"Too Many Requests",
        "summary":"Too Many Requests",
        "value":{
          "message":"too many requests",
          "status":429,
          "errCode":"ERR_CODE_TOO_MANY_REQUESTS",
          "trackingId":"TrackingId-0b7fc0b3-32f5-4564-9865-588698968018"
        }
      },
      "500":{
        "description":"Internal Server Error",
        "summary":"Internal Server Error",
        "value":{
          "message":"an internal error has occurred",
          "status":500,
          "errCode":"ERR_CODE_INTERNAL",
          "trackingId":"TrackingId-90c33d56-981e-4c96-b013-74feb30e17a2"
        }
      },
      "AddFabricVniMembers..configd.AddFabricVniMembersRequest":{
        "description":"example not available",
        "summary":"example not available",
        "value":{
          "msg":"example not available, coming soon"
        }
      },
      "AddFabricVniMembers..configd.FabricVniMembersResponse":{
        "description":"example not available",
        "summary":"example not available",
        "value":{
          "msg":"example not available, coming soon"
        }
      },
      "AddFabricVrfs..configd.FabricVrfsResponse":{
        "description":"example not available",
        "summary":"example not available",
        "value":{
          "msg":"example not available, coming soon"
        }
      },
      "BindDevice..configd.BindDeviceRequest":{
        "description":"example not available",
        "summary":"example not available",
        "value":{
          "msg":"example not available, coming soon"
        }
      },
      "BindDevice..configd.BindDeviceResponse":{
        "description":"example not available",
        "summary":"example not available",
        "value":{
          "msg":"example not available, coming soon"
        }
      },
      "GetAssertionHistoryCounterReport..reader.AssertCounterReportResponse":{
        "description":"example not available",
        "summary":"example not available",
        "value":{
          "msg":"example not available, coming soon"
        }
      },
      "GetAssertionHistoryRecord..reader.AssertHistoryApiRecordResponse":{
        "description":"example not available",
        "summary":"example not available",
        "value":{
          "msg":"example not available, coming soon"
        }
      },
      "GetDeviceSensors..sextant.SensorsResponse":{
        "description":"example not available",
        "summary":"example not available",
        "value":{
          "msg":"example not available, coming soon"
        }
      },
      "GetFabricConfig..configd.GetFabricConfigResponse":{
        "description":"example not available",
        "summary":"example not available",
        "value":{
          "msg":"example not available, coming soon"
        }
      },
      "GetFabricConnection..models.PortConnection":{
        "description":"example not available",
        "summary":"example not available",
        "value":{
          "msg":"example not available, coming soon"
        }
      },
      "GetFabricVniMember..models.VlanMember":{
        "description":"example not available",
        "summary":"example not available",
        "value":{
          "msg":"example not available, coming soon"
        }
      },
      "GetFabricVniMembers..configd.FabricVniMembersResponse":{
        "description":"example not available",
        "summary":"example not available",
        "value":{
          "msg":"example not available, coming soon"
        }
      },
      "GetManagementPort..models.ManagementPort":{
        "description":"example not available",
        "summary":"example not available",
        "value":{
          "msg":"example not available, coming soon"
        }
      },
      "LatchAssertions..configd.AssertionsResponse":{
        "description":"example not available",
        "summary":"example not available",
        "value":{
          "msg":"example not available, coming soon"
        }
      },
      "LatchAssertions..configd.LatchAssertionsRequest":{
        "description":"example not available",
        "summary":"example not available",
        "value":{
          "msg":"example not available, coming soon"
        }
      },
      "UpdateFabricNode..configd.Node":{
        "description":"example not available",
        "summary":"example not available",
        "value":{
          "msg":"example not available, coming soon"
        }
      },
      "UpdateFabricNode..configd.UpdateFabricNodeRequest":{
        "description":"example not available",
        "summary":"example not available",
        "value":{
          "msg":"example not available, coming soon"
        }
      },
      "authAddUsersRequest":{
        "description":"An example request payload for an API call.",
        "summary":"Example request",
        "value":{
          "users":[
            {
              "email":"mary@example.com",
              "enabled":true,
              "role":"ADMIN"
            },
            {
              "email":"jane@example.com",
              "enabled":true,
              "role":"READ_WRITE"
            },
            {
              "email":"james@example.com",
              "enabled":true,
              "role":"READ_ONLY"
            }
          ]
        }
      },
      "authAddUsersResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "users":[
            {
              "id":"6632487c-f570-467d-83cd-8c628ba5e364",
              "email":"fernanda@example.com",
              "provider":"CISCO",
              "metadata":{
                "revisionId":"1",
                "createdBy":"cisco/hyperfabric-example@cisco.com",
                "createdAt":"2024-09-07T02:36:21.839104Z",
                "modifiedBy":"cisco/hyperfabric-example@cisco.com",
                "modifiedAt":"2024-09-07T02:36:21.839104Z"
              },
              "role":"ADMIN"
            },
            {
              "id":"36195b9d-9ef7-4eef-80ae-95562f38da1b",
              "email":"leo@example.com",
              "provider":"CISCO",
              "metadata":{
                "revisionId":"1",
                "createdBy":"cisco/hyperfabric-example@cisco.com",
                "createdAt":"2024-09-07T02:36:21.839104Z",
                "modifiedBy":"cisco/hyperfabric-example@cisco.com",
                "modifiedAt":"2024-09-07T02:36:21.839104Z"
              },
              "role":"READ_WRITE"
            },
            {
              "id":"b1a4baab-2e2c-45ec-b074-ffd13f73f157",
              "email":"james@example.com",
              "provider":"CISCO",
              "metadata":{
                "revisionId":"1",
                "createdBy":"cisco/hyperfabric-example@cisco.com",
                "createdAt":"2024-09-07T02:36:21.839104Z",
                "modifiedBy":"cisco/hyperfabric-example@cisco.com",
                "modifiedAt":"2024-09-07T02:36:21.839104Z"
              },
              "role":"READ_ONLY"
            }
          ]
        }
      },
      "authCreateBearerTokensRequest":{
        "description":"An example request payload for an API call.",
        "summary":"Example request",
        "value":{
          "tokens":[
            {
              "name":"example-token",
              "description":"This is a description of a new token",
              "scope":"TOKEN_SCOPE_ADMIN",
              "notBefore":"2024-09-06T12:00:00Z",
              "notAfter":"2026-09-06T12:00:00Z"
            }
          ]
        }
      },
      "authCreateBearerTokensResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "tokens":[
            {
              "name":"example-token",
              "description":"This is a description of a new token",
              "scope":"TOKEN_SCOPE_ADMIN",
              "notBefore":"2024-09-06T12:00:00Z",
              "notAfter":"2026-09-06T12:00:00Z",
              "token":"<TOKEN-DATA>",
              "tokenId":"a118c19b-0f77-44eb-8be0-be4103ef9eb1",
              "metadata":{
                "revisionId":"1",
                "createdBy":"cisco/hyperfabric-example@cisco.com",
                "createdAt":"2024-10-28T18:56:32.898339Z",
                "modifiedBy":"cisco/hyperfabric-example@cisco.com",
                "modifiedAt":"2024-10-28T18:56:32.898339Z"
              }
            }
          ]
        }
      },
      "authGetBearerTokenResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "name":"example-token",
          "description":"An example bearer token used for demonstration",
          "scope":"TOKEN_SCOPE_ADMIN",
          "notBefore":"2024-09-07T00:26:24.701821Z",
          "notAfter":"2025-09-07T00:26:24.701821Z",
          "tokenId":"cadf5a4b-9e8d-4339-ba44-5e6d4d9f572c"
        }
      },
      "authGetBearerTokensResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "tokens":[
            {
              "name":"example-token",
              "description":"An example bearer token used for demonstration",
              "scope":"TOKEN_SCOPE_ADMIN",
              "notBefore":"2024-09-07T00:26:24.701821Z",
              "notAfter":"2025-09-07T00:26:24.701821Z",
              "tokenId":"cadf5a4b-9e8d-4339-ba44-5e6d4d9f572c",
              "metadata":{
                "revisionId":"1",
                "createdBy":"cisco/hyperfabric-example@cisco.com",
                "createdAt":"2024-09-07T00:26:24.710128Z",
                "modifiedBy":"cisco/hyperfabric-example@cisco.com",
                "modifiedAt":"2024-09-07T00:26:24.710128Z"
              }
            }
          ]
        }
      },
      "authGetUserResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "id":"8730db3d-f6b9-41fe-989e-59ad9b467542",
          "email":"usertwo@example.com",
          "provider":"CISCO",
          "enabled":true,
          "metadata":{
            "revisionId":"1",
            "createdBy":"*",
            "createdAt":"2024-09-10T22:10:05.355828Z",
            "modifiedBy":"*",
            "modifiedAt":"2024-09-10T22:10:05.355828Z"
          },
          "role":"ADMIN"
        }
      },
      "authGetUsersResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "users":[
            {
              "id":"390e2bd6-7381-405e-98e0-7f33bb2f9b33",
              "email":"hyperfabric-example@cisco.com",
              "provider":"CISCO",
              "enabled":true,
              "role":"ADMIN"
            },
            {
              "id":"d4c0b7c3-cced-4e90-8bc3-33d866fe5d7d",
              "email":"userone@example.com",
              "provider":"CISCO",
              "enabled":true,
              "role":"ADMIN"
            },
            {
              "id":"4de1972c-8079-4b6d-b4ca-5a8f0bbff1e4",
              "email":"usertwo@example.com",
              "provider":"CISCO",
              "enabled":true,
              "role":"ADMIN"
            }
          ]
        }
      },
      "authUpdateUserRequest":{
        "description":"An example request payload for an API call.",
        "summary":"Example request",
        "value":{
          "role":"READ_ONLY"
        }
      },
      "authUpdateUserResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "id":"43f5e74d-e1ee-42c3-b57f-f6d1a37703d1",
          "email":"userone@example.com",
          "provider":"CISCO",
          "metadata":{
            "revisionId":"6",
            "createdBy":"*",
            "createdAt":"2024-09-11T02:35:46.125937Z",
            "modifiedBy":"cisco/hyperfabric-example@cisco.com",
            "modifiedAt":"2024-09-11T20:41:27.117265Z"
          },
          "role":"READ_ONLY"
        }
      },
      "configAddFabricConnectionsRequest":{
        "description":"An example request payload for an API call.",
        "summary":"Example request",
        "value":{
          "connections":[
            {
              "local":{
                "portName":"Ethernet1_19",
                "nodeName":"node-leaf0"
              },
              "remote":{
                "portName":"Ethernet1_19",
                "nodeName":"node-spine0"
              }
            },
            {
              "local":{
                "portName":"Ethernet1_22",
                "nodeName":"node-leaf1"
              },
              "remote":{
                "portName":"Ethernet1_22",
                "nodeName":"node-spine0"
              }
            }
          ]
        }
      },
      "configAddFabricConnectionsResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "connections":[
            {
              "id":"79d9bf63-2101-4a4d-a29a-82df1bb959bf",
              "fabricId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
              "local":{
                "portName":"Ethernet1_19",
                "nodeName":"node-leaf0"
              },
              "remote":{
                "portName":"Ethernet1_19",
                "nodeName":"node-spine0"
              }
            },
            {
              "id":"f78582f1-19e6-4efc-89e7-1e3c54ab46e1",
              "fabricId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
              "local":{
                "portName":"Ethernet1_22",
                "nodeName":"node-leaf1"
              },
              "remote":{
                "portName":"Ethernet1_22",
                "nodeName":"node-spine0"
              }
            }
          ]
        }
      },
      "configAddFabricNodesRequest":{
        "description":"An example request payload for an API call.",
        "summary":"Example request",
        "value":{
          "nodes":[
            {
              "name":"node-leaf0",
              "description":"example fabric node leaf zero",
              "enabled":true,
              "serialNumber":"RESTAA2000",
              "modelName":"HF6100-60L4D",
              "roles":[
                "LEAF"
              ],
              "labels":[
                "TAG_ONE_ZERO"
              ]
            },
            {
              "name":"node-leaf1",
              "description":"example fabric node leaf one",
              "enabled":true,
              "serialNumber":"RESTAA2001",
              "modelName":"HF6100-32D",
              "roles":[
                "LEAF"
              ]
            },
            {
              "name":"node-spine0",
              "description":"example fabric node spine zero",
              "enabled":true,
              "serialNumber":"RESTAA2002",
              "modelName":"HF6100-32D",
              "roles":[
                "SPINE"
              ]
            },
            {
              "name":"node-spine1",
              "description":"example fabric node spine one",
              "enabled":true,
              "serialNumber":"RESTAA1001",
              "modelName":"HF6100-32D",
              "roles":[
                "SPINE"
              ]
            }
          ]
        }
      },
      "configAddFabricNodesResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "nodes":[
            {
              "nodeId":"c3c62e65-97dd-42ce-8e72-c6f96efbe50f",
              "name":"node-leaf0",
              "deviceId":"de-ad-00-00-01-04",
              "description":"example fabric node leaf zero",
              "enabled":true,
              "serialNumber":"RESTAA2000",
              "modelName":"HF6100-60L4D",
              "roles":[
                "LEAF"
              ],
              "labels":[
                "TAG_ONE_ZERO"
              ]
            },
            {
              "nodeId":"35c3900a-ebef-4950-9bdf-59e39ef60107",
              "name":"node-leaf1",
              "deviceId":"de-ad-00-00-01-05",
              "description":"example fabric node leaf one",
              "enabled":true,
              "serialNumber":"RESTAA2001",
              "modelName":"HF6100-32D",
              "roles":[
                "LEAF"
              ]
            },
            {
              "nodeId":"d85f664f-9270-4a0a-833d-9d3f38cd4b32",
              "name":"node-spine0",
              "deviceId":"de-ad-00-00-01-06",
              "description":"example fabric node spine zero",
              "enabled":true,
              "serialNumber":"RESTAA2002",
              "modelName":"HF6100-32D",
              "roles":[
                "SPINE"
              ]
            },
            {
              "nodeId":"37653679-1043-46de-9da0-006458518ee6",
              "name":"node-spine1",
              "deviceId":"de-ad-00-00-01-07",
              "description":"example fabric node spine one",
              "enabled":true,
              "serialNumber":"RESTAA1001",
              "modelName":"HF6100-32D",
              "roles":[
                "SPINE"
              ]
            }
          ]
        }
      },
      "configAddFabricStaticRoutesRequest":{
        "description":"An example request payload for an API call.",
        "summary":"Example request",
        "value":{
          "staticRoutes":[
            {
              "name":"Vrf-exampleOne-SR1",
              "enabled":true,
              "routes":[
                {
                  "prefix":"10.10.10.0/24",
                  "preference":10,
                  "discard":true
                },
                {
                  "prefix":"11.10.10.0/24",
                  "preference":10,
                  "discard":true
                }
              ]
            }
          ]
        }
      },
      "configAddFabricStaticRoutesResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "staticRoutes":[
            {
              "id":"04fd82ef-9480-449a-b9dc-ad988dfb1bca",
              "name":"Vrf-exampleOne-SR1",
              "enabled":true,
              "fabricId":"example-fabric",
              "routes":[
                {
                  "prefix":"10.10.10.0/24",
                  "preference":10,
                  "discard":true
                },
                {
                  "prefix":"11.10.10.0/24",
                  "preference":10,
                  "discard":true
                }
              ],
              "vrfId":"Vrf-exampleOne"
            }
          ]
        }
      },
      "configAddFabricVnisRequest":{
        "description":"An example request payload for an API call.",
        "summary":"Example request",
        "value":{
          "vnis":[
            {
              "name":"example-fabric-vni1",
              "description":"These are some notes on my VNI",
              "labels":[
                "FABRIC_VNI_ONE_1",
                "FABRIC_VNI_ONE_2"
              ],
              "enabled":true,
              "vni":1400000,
              "members":[
                {
                  "port":{
                    "portName":"Ethernet1_5",
                    "nodeName":"node-leaf0"
                  },
                  "untagged":true
                },
                {
                  "port":{
                    "portName":"Ethernet1_5",
                    "nodeName":"node-leaf1"
                  },
                  "untagged":true
                }
              ]
            },
            {
              "name":"example-fabric-vni2",
              "description":"These are some notes on my VNI",
              "labels":[
                "FABRIC_VNI_TWO_1"
              ],
              "enabled":true,
              "vni":1500000,
              "members":[
                {
                  "port":{
                    "portName":"Ethernet1_6",
                    "nodeName":"node-leaf0"
                  },
                  "untagged":true
                },
                {
                  "port":{
                    "portName":"Ethernet1_6",
                    "nodeName":"node-leaf1"
                  },
                  "untagged":true
                }
              ]
            }
          ]
        }
      },
      "configAddFabricVnisResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "vnis":[
            {
              "id":"ee3e6931-5821-4cbe-910f-37da88ddde0e",
              "name":"example-fabric-vni1",
              "description":"These are some notes on my VNI",
              "labels":[
                "FABRIC_VNI_ONE_1",
                "FABRIC_VNI_ONE_2"
              ],
              "enabled":true,
              "fabricId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
              "vni":1400000,
              "members":[
                {
                  "port":{
                    "portName":"Ethernet1_5",
                    "nodeName":"node-leaf0"
                  },
                  "untagged":true
                },
                {
                  "port":{
                    "portName":"Ethernet1_5",
                    "nodeName":"node-leaf1"
                  },
                  "untagged":true
                }
              ]
            },
            {
              "id":"f3f3eed9-2f6d-498c-afdd-3b9316d6f506",
              "name":"example-fabric-vni2",
              "description":"These are some notes on my VNI",
              "labels":[
                "FABRIC_VNI_TWO_1"
              ],
              "enabled":true,
              "fabricId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
              "vni":1500000,
              "members":[
                {
                  "port":{
                    "portName":"Ethernet1_6",
                    "nodeName":"node-leaf0"
                  },
                  "untagged":true
                },
                {
                  "port":{
                    "portName":"Ethernet1_6",
                    "nodeName":"node-leaf1"
                  },
                  "untagged":true
                }
              ]
            }
          ]
        }
      },
      "configAddFabricVrfsRequest":{
        "description":"An example request payload for an API call.",
        "summary":"Example request",
        "value":{
          "vrfs":[
            {
              "name":"Vrf-exampleOne",
              "enabled":true
            },
            {
              "name":"Vrf-exampleTwo",
              "description":"Test Vrf for example-fabric",
              "labels":[
                "VRF_LABEL_ONE",
                "vrf_label_two",
                "vrf label three"
              ],
              "enabled":true
            },
            {
              "name":"Vrf-exampleThree",
              "enabled":true
            }
          ]
        }
      },
      "configAddFabricsRequest":{
        "description":"An example request payload for an API call.",
        "summary":"Example request",
        "value":{
          "fabrics":[
            {
              "name":"example-fabric",
              "description":"An example fabric for demonstration",
              "location":"CA-95134",
              "address":"300 East Tasman Drive",
              "city":"San Jose",
              "country":"US",
              "labels":[
                "TAG_ONE",
                "TAG_TWO"
              ]
            }
          ]
        }
      },
      "configAddFabricsResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "fabrics":[
            {
              "fabricId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
              "name":"example-fabric",
              "description":"An example fabric, for demonstration.",
              "location":"CA-95134",
              "address":"300 East Tasman Drive",
              "city":"San Jose",
              "country":"US",
              "labels":[
                "TAG_ONE",
                "TAG_TWO"
              ]
            }
          ]
        }
      },
      "configAddManagementPortsRequest":{
        "description":"An example request payload for an API call.",
        "summary":"Example request",
        "value":{
          "ports":[
            {
              "name":"eth0",
              "ipv4Address":"10.1.1.250/31",
              "ipv4Gateway":"10.1.1.251",
              "ipv6Address":"2a02:1243:5687:0:9c09:2c7a:7c78:9ffc/64",
              "ipv6Gateway":"2a02:1243:5687:0:8d91:ba6b:b24d:9b41",
              "dnsAddresses":[
                "8.8.8.8",
                "8.8.4.4"
              ],
              "proxyAddress":"https://10.1.1.10:8080",
              "proxyUsername":"admin",
              "proxyPassword":"admin123",
              "enabled":true,
              "ntpAddresses":[
                "9.8.8.8",
                "9.8.4.4"
              ],
              "cloudUrls":[
                "https://a.b.com"
              ],
              "setProxyPassword":true,
              "noProxy":[
                "10.0.0.0/8",
                "68.0.0.0/8",
                "72.0.0.0/8",
                "172.0.0.0/8",
                "172.0.0.0/8",
                "173.0.0.0/8",
                "cisco.com",
                "localhost",
                "127.0.0.1",
                ".local"
              ]
            }
          ]
        }
      },
      "configAddManagementPortsResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "ports":[
            {
              "id":"da141c97-9402-4593-9f99-7b74b7d9964e",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "name":"eth0",
              "description":"Management Ethernet Port Configuration",
              "ipv4Address":"10.1.1.250/31",
              "ipv4Gateway":"10.1.1.251",
              "ipv6Address":"2a02:1243:5687:0:9c09:2c7a:7c78:9ffc/64",
              "ipv6Gateway":"2a02:1243:5687:0:8d91:ba6b:b24d:9b41",
              "dnsAddresses":[
                "8.8.8.8",
                "8.8.4.4"
              ],
              "proxyAddress":"https://10.1.1.10:8080",
              "proxyUsername":"admin",
              "proxyCredentialsId":"7828d0b5-209f-4170-972d-94e3975fde97",
              "proxyPassword":"******",
              "enabled":true,
              "ipv4ConfigType":"CONFIG_TYPE_STATIC",
              "ipv6ConfigType":"CONFIG_TYPE_STATIC",
              "ntpAddresses":[
                "9.8.8.8",
                "9.8.4.4"
              ],
              "cloudUrls":[
                "https://a.b.com"
              ],
              "configOrigin":"CONFIG_ORIGIN_CLOUD",
              "metadata":{
                "revisionId":"1",
                "createdBy":"cisco/hyperfabric-example@cisco.com",
                "createdAt":"2024-09-07T22:16:21.209594Z",
                "modifiedBy":"cisco/hyperfabric-example@cisco.com",
                "modifiedAt":"2024-09-07T22:16:21.209594Z"
              },
              "noProxy":[
                "10.0.0.0/8",
                "68.0.0.0/8",
                "72.0.0.0/8",
                "172.0.0.0/8",
                "172.0.0.0/8",
                "173.0.0.0/8",
                "cisco.com",
                "localhost",
                "127.0.0.1",
                ".local"
              ]
            }
          ]
        }
      },
      "configCommitFabricCandidateRequest":{
        "description":"An example request payload for an API call.",
        "summary":"Example request",
        "value":{
          "comments":"Test commit comment"
        }
      },
      "configCommitFabricCandidateResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "fabricId":"example-fabric",
          "committed":true
        }
      },
      "configGetDevices":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "devices":[
            {
              "deviceId":"02-17-85-3f-01-00",
              "nodeId":"01a45a1b-68a5-4a3c-8ae1-b0d80db4676e",
              "serialNumber":"TFAB18787103",
              "modelName":"HF6100-32D",
              "fabricId":"4c352ffc-0778-40e7-bf9b-f3f2fbd79f74"
            },
            {
              "deviceId":"02-17-05-91-01-01",
              "nodeId":"949f83f0-1fbb-41c2-aa30-80ef7afbd3bb",
              "serialNumber":"TFAB11753883",
              "modelName":"HF6100-32D",
              "fabricId":"4c352ffc-0778-40e7-bf9b-f3f2fbd79f74"
            },
            {
              "deviceId":"02-17-9e-07-01-02",
              "nodeId":"7ba20e6b-728d-4a85-8eb7-cec2d8dbfe3e",
              "serialNumber":"TFAB63240416",
              "modelName":"HF6100-32D",
              "fabricId":"4c352ffc-0778-40e7-bf9b-f3f2fbd79f74"
            },
            {
              "deviceId":"02-17-c0-45-01-03",
              "nodeId":"d08ac8ce-ef96-4ae4-89e8-5862e183600c",
              "serialNumber":"TFAB83764451",
              "modelName":"HF6100-32D",
              "fabricId":"4c352ffc-0778-40e7-bf9b-f3f2fbd79f74"
            },
            {
              "deviceId":"02-17-e4-e1-00-00",
              "nodeId":"660ce414-034c-4b8e-a894-49cbc4763e96",
              "serialNumber":"TFAB30921301",
              "modelName":"HF6100-32D",
              "fabricId":"4c352ffc-0778-40e7-bf9b-f3f2fbd79f74"
            },
            {
              "deviceId":"02-17-83-27-00-01",
              "nodeId":"88883bf1-2f27-4f6e-bc1a-343e53bf6edc",
              "serialNumber":"TFAB57508341",
              "modelName":"HF6100-32D",
              "fabricId":"4c352ffc-0778-40e7-bf9b-f3f2fbd79f74"
            }
          ]
        }
      },
      "configGetFabricCandidateResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "fabricId":"e073685c-d5f9-428e-b1e8-ea00db700243",
          "name":"default",
          "active":true,
          "txnId":"1035",
          "createdBy":"cisco/hyperfabric-example@cisco.com",
          "createdAt":"2024-09-30T23:25:28.325706Z",
          "events":[
            {
              "eventId":"1780",
              "timestamp":"2024-09-30T23:25:28.325706Z",
              "username":"cisco/hyperfabric-example@cisco.com",
              "objectType":"NODE",
              "objectId":"80a81623-0992-4b55-8675-a6c678dbf6f5",
              "objectName":"example-fabric-HF6100-60L4D-leaf2",
              "operation":"CREATE"
            },
            {
              "eventId":"1779",
              "timestamp":"2024-09-30T23:25:28.325706Z",
              "username":"cisco/hyperfabric-example@cisco.com",
              "objectType":"NODE",
              "objectId":"f34afebf-c4f6-4f86-bf08-28edf8ff9daa",
              "objectName":"example-fabric-HF6100-60L4D-leaf1",
              "operation":"CREATE"
            },
            {
              "eventId":"1778",
              "timestamp":"2024-09-30T23:25:28.325706Z",
              "username":"cisco/hyperfabric-example@cisco.com",
              "objectType":"NODE",
              "objectId":"a6ddc7ee-3afc-4467-983f-842271de1ff9",
              "objectName":"example-fabric-HF6100-32D-leaf2",
              "operation":"CREATE"
            },
            {
              "eventId":"1777",
              "timestamp":"2024-09-30T23:25:28.325706Z",
              "username":"cisco/hyperfabric-example@cisco.com",
              "objectType":"NODE",
              "objectId":"87d5fa3f-4340-4cdd-86bd-d99abc4affcf",
              "objectName":"example-fabric-HF6100-32D-leaf1",
              "operation":"CREATE"
            },
            {
              "eventId":"1776",
              "timestamp":"2024-09-30T23:25:28.325706Z",
              "username":"cisco/hyperfabric-example@cisco.com",
              "objectType":"NODE",
              "objectId":"fa62591a-cb38-48fa-acd1-97cf4f30d2f7",
              "objectName":"example-fabric-HF6100-32D-spine1",
              "operation":"CREATE"
            },
            {
              "eventId":"1775",
              "timestamp":"2024-09-30T23:25:28.325706Z",
              "username":"cisco/hyperfabric-example@cisco.com",
              "objectType":"FABRIC_TRANSACTION",
              "objectId":"e073685c-d5f9-428e-b1e8-ea00db700243",
              "objectName":"example-fabric",
              "operation":"CREATE"
            }
          ]
        }
      },
      "configGetFabricCandidatesResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "candidates":[
            {
              "fabricId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
              "name":"default",
              "active":true,
              "txnId":"2261",
              "createdBy":"cisco/hyperfabric-example@cisco.com",
              "createdAt":"2024-09-07T20:42:59.159343Z",
              "events":[
                {
                  "eventId":"11147",
                  "timestamp":"2024-09-07T22:17:19.031727Z",
                  "username":"cisco/hyperfabric-example@cisco.com",
                  "objectType":"MANAGEMENT_PORT",
                  "objectId":"da141c97-9402-4593-9f99-7b74b7d9964e",
                  "objectName":"eth01",
                  "parentId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
                  "operation":"UPDATE"
                },
                {
                  "eventId":"11146",
                  "timestamp":"2024-09-07T22:16:21.208334Z",
                  "username":"cisco/hyperfabric-example@cisco.com",
                  "objectType":"MANAGEMENT_PORT",
                  "objectId":"da141c97-9402-4593-9f99-7b74b7d9964e",
                  "objectName":"eth01",
                  "parentId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
                  "operation":"CREATE"
                },
                {
                  "eventId":"11145",
                  "timestamp":"2024-09-07T21:03:06.010002Z",
                  "username":"cisco/hyperfabric-example@cisco.com",
                  "objectType":"NODE",
                  "objectId":"9a4ef85f-5cd2-4813-a235-953a3d39332b",
                  "objectName":"node-spine1",
                  "operation":"CREATE"
                },
                {
                  "eventId":"11144",
                  "timestamp":"2024-09-07T21:03:06.010002Z",
                  "username":"cisco/hyperfabric-example@cisco.com",
                  "objectType":"NODE",
                  "objectId":"17f37f9d-8659-4b17-8709-9bf0789ded72",
                  "objectName":"node-spine0",
                  "operation":"CREATE"
                },
                {
                  "eventId":"11143",
                  "timestamp":"2024-09-07T21:03:06.010002Z",
                  "username":"cisco/hyperfabric-example@cisco.com",
                  "objectType":"NODE",
                  "objectId":"77a14049-ade1-4da2-8204-00ee7db4b9dc",
                  "objectName":"node-leaf1",
                  "operation":"CREATE"
                },
                {
                  "eventId":"11142",
                  "timestamp":"2024-09-07T21:03:06.010002Z",
                  "username":"cisco/hyperfabric-example@cisco.com",
                  "objectType":"NODE",
                  "objectId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
                  "objectName":"node-leaf0",
                  "operation":"CREATE"
                },
                {
                  "eventId":"11141",
                  "timestamp":"2024-09-07T21:02:10.013382Z",
                  "username":"cisco/hyperfabric-example@cisco.com",
                  "objectType":"FABRIC",
                  "objectId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
                  "objectName":"example-fabric",
                  "operation":"UPDATE"
                },
                {
                  "eventId":"11140",
                  "timestamp":"2024-09-07T20:48:07.481369Z",
                  "username":"cisco/hyperfabric-example@cisco.com",
                  "objectType":"FABRIC",
                  "objectId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
                  "objectName":"example-one",
                  "operation":"UPDATE"
                },
                {
                  "eventId":"11139",
                  "timestamp":"2024-09-07T20:46:05.010508Z",
                  "username":"cisco/hyperfabric-example@cisco.com",
                  "objectType":"FABRIC",
                  "objectId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
                  "objectName":"Example One",
                  "operation":"UPDATE"
                },
                {
                  "eventId":"11137",
                  "timestamp":"2024-09-07T20:42:59.159343Z",
                  "username":"cisco/hyperfabric-example@cisco.com",
                  "objectType":"FABRIC",
                  "objectId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
                  "objectName":"example-fabric",
                  "operation":"CREATE"
                },
                {
                  "eventId":"11136",
                  "timestamp":"2024-09-07T20:42:59.159343Z",
                  "username":"cisco/hyperfabric-example@cisco.com",
                  "objectType":"FABRIC_TRANSACTION",
                  "objectId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
                  "objectName":"example-fabric",
                  "operation":"CREATE"
                }
              ]
            }
          ],
          "pagination":{
            "total":1,
            "cursor":"MTA6MTc6MDAwMDAwMDAwMjI2MSQxNTowMDAwMDAwMDAwMDAx",
            "final":true
          }
        }
      },
      "configGetFabricConnectionsResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "connections":[
            {
              "id":"5e694530-40a0-4b27-a88d-2336e351c4d8",
              "fabricId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
              "local":{
                "portName":"Ethernet1_1",
                "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
                "nodeName":"node-leaf0"
              },
              "remote":{
                "portName":"Ethernet1_1",
                "nodeId":"17f37f9d-8659-4b17-8709-9bf0789ded72",
                "nodeName":"node-spine0"
              },
              "osType":"HYPER_FABRIC"
            },
            {
              "id":"8fcd5ae2-26d8-45ca-8e2e-10442f5b872c",
              "fabricId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
              "local":{
                "portName":"Ethernet1_8",
                "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
                "nodeName":"node-leaf0"
              },
              "remote":{
                "portName":"Ethernet1_1",
                "nodeId":"9a4ef85f-5cd2-4813-a235-953a3d39332b",
                "nodeName":"node-spine1"
              },
              "osType":"HYPER_FABRIC"
            },
            {
              "id":"04094927-c00e-42b7-8e75-fd38404e9158",
              "fabricId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
              "local":{
                "portName":"Ethernet1_1",
                "nodeId":"77a14049-ade1-4da2-8204-00ee7db4b9dc",
                "nodeName":"node-leaf1"
              },
              "remote":{
                "portName":"Ethernet1_8",
                "nodeId":"17f37f9d-8659-4b17-8709-9bf0789ded72",
                "nodeName":"node-spine0"
              },
              "osType":"HYPER_FABRIC"
            },
            {
              "id":"06eff3e6-2630-4cd1-8d0f-36de7622bdc6",
              "fabricId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
              "local":{
                "portName":"Ethernet1_8",
                "nodeId":"77a14049-ade1-4da2-8204-00ee7db4b9dc",
                "nodeName":"node-leaf1"
              },
              "remote":{
                "portName":"Ethernet1_8",
                "nodeId":"9a4ef85f-5cd2-4813-a235-953a3d39332b",
                "nodeName":"node-spine1"
              },
              "osType":"HYPER_FABRIC"
            }
          ]
        }
      },
      "configGetFabricNodeResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
          "name":"node-leaf0",
          "deviceId":"de-ad-00-00-05-83",
          "description":"example fabric node leaf zero",
          "enabled":true,
          "serialNumber":"RESTAA2000",
          "modelName":"8102-64H-O",
          "roles":[
            "LEAF"
          ],
          "labels":[
            "TAG_ONE_ZERO"
          ],
          "annotations":[
            {
              "name":"position",
              "value":"LF001"
            }
          ]
        }
      },
      "configGetFabricNodesResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "nodes":[
            {
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "name":"node-leaf0",
              "deviceId":"de-ad-00-00-05-83",
              "description":"example fabric node leaf zero",
              "enabled":true,
              "serialNumber":"RESTAA2000",
              "modelName":"8102-64H-O",
              "roles":[
                "LEAF"
              ],
              "labels":[
                "TAG_ONE_ZERO"
              ],
              "annotations":[
                {
                  "name":"position",
                  "value":"LF001"
                }
              ]
            },
            {
              "nodeId":"77a14049-ade1-4da2-8204-00ee7db4b9dc",
              "name":"node-leaf1",
              "deviceId":"de-ad-00-00-05-84",
              "description":"example fabric node leaf one",
              "enabled":true,
              "serialNumber":"RESTAA2001",
              "modelName":"8102-64H-O",
              "roles":[
                "LEAF"
              ],
              "annotations":[
                {
                  "name":"position",
                  "value":"LF002"
                }
              ]
            },
            {
              "nodeId":"17f37f9d-8659-4b17-8709-9bf0789ded72",
              "name":"node-spine0",
              "deviceId":"de-ad-00-00-05-85",
              "description":"example fabric node spine zero",
              "enabled":true,
              "serialNumber":"RESTAA2002",
              "modelName":"8102-64H-O",
              "roles":[
                "SPINE"
              ],
              "annotations":[
                {
                  "name":"position",
                  "value":"SP001"
                }
              ]
            },
            {
              "nodeId":"9a4ef85f-5cd2-4813-a235-953a3d39332b",
              "name":"node-spine1",
              "deviceId":"de-ad-00-00-05-86",
              "description":"example fabric node spine one",
              "enabled":true,
              "serialNumber":"RESTAA1001",
              "modelName":"8101-32H-O",
              "roles":[
                "SPINE"
              ],
              "annotations":[
                {
                  "name":"position",
                  "value":"SP002"
                }
              ]
            }
          ]
        }
      },
      "configGetFabricResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "fabricId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
          "name":"example-fabric",
          "description":"Updated description of example-fabric.",
          "location":"DC-1000",
          "address":"725 Alder Drive",
          "city":"Milpitas",
          "country":"US",
          "metadata":{
            "revisionId":"3",
            "createdBy":"cisco/hyperfabric-example@cisco.com",
            "createdAt":"2024-09-07T20:42:59.161229Z",
            "modifiedBy":"cisco/hyperfabric-example@cisco.com",
            "modifiedAt":"2024-09-07T20:48:07.481461Z"
          }
        }
      },
      "configGetFabricStaticRouteResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "id":"25ac3b72-1414-4214-97f1-1586c8ea76de",
          "name":"Vrf-exampleOne",
          "enabled":true,
          "fabricId":"99999089-a2b2-44d2-9e4e-1c1b8f67861c",
          "routes":[
            {
              "prefix":"10.10.10.0/24",
              "preference":10,
              "discard":true
            }
          ],
          "vrfId":"63070717-4135-4680-ab9e-7bc3d0748fa6"
        }
      },
      "configGetFabricStaticRoutesResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "staticRoutes":[
            {
              "id":"25ac3b72-1414-4214-97f1-1586c8ea76de",
              "name":"Vrf-exampleOne",
              "enabled":true,
              "fabricId":"99999089-a2b2-44d2-9e4e-1c1b8f67861c",
              "routes":[
                {
                  "prefix":"10.10.10.0/24",
                  "preference":10,
                  "discard":true
                }
              ],
              "vrfId":"63070717-4135-4680-ab9e-7bc3d0748fa6"
            }
          ]
        }
      },
      "configGetFabricVniResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "id":"f3f3eed9-2f6d-498c-afdd-3b9316d6f506",
          "name":"example-fabric-vni2",
          "description":"These are some notes on my VNI",
          "labels":[
            "FABRIC_VNI_TWO_1"
          ],
          "enabled":true,
          "metadata":{
            "revisionId":"1",
            "createdBy":"cisco/hyperfabric-example@cisco.com",
            "createdAt":"2024-09-07T23:49:54.596634Z",
            "modifiedBy":"cisco/hyperfabric-example@cisco.com",
            "modifiedAt":"2024-09-07T23:49:54.596634Z"
          },
          "fabricId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
          "vni":1500000,
          "members":[
            {
              "vlanId":3602,
              "port":{
                "portName":"Ethernet1_6",
                "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
                "nodeName":"node-leaf0"
              },
              "untagged":true
            },
            {
              "vlanId":3602,
              "port":{
                "portName":"Ethernet1_6",
                "nodeId":"77a14049-ade1-4da2-8204-00ee7db4b9dc",
                "nodeName":"node-leaf1"
              },
              "untagged":true
            }
          ]
        }
      },
      "configGetFabricVnisResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "vnis":[
            {
              "id":"ee3e6931-5821-4cbe-910f-37da88ddde0e",
              "name":"example-fabric-vni1",
              "description":"These are some notes on my VNI",
              "labels":[
                "FABRIC_VNI_ONE_1",
                "FABRIC_VNI_ONE_2"
              ],
              "enabled":true,
              "metadata":{
                "revisionId":"1",
                "createdBy":"cisco/hyperfabric-example@cisco.com",
                "createdAt":"2024-09-07T23:49:54.596634Z",
                "modifiedBy":"cisco/hyperfabric-example@cisco.com",
                "modifiedAt":"2024-09-07T23:49:54.596634Z"
              },
              "fabricId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
              "vni":1400000,
              "members":[
                {
                  "vlanId":3601,
                  "port":{
                    "portName":"Ethernet1_5",
                    "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
                    "nodeName":"node-leaf0"
                  },
                  "untagged":true
                },
                {
                  "vlanId":3601,
                  "port":{
                    "portName":"Ethernet1_5",
                    "nodeId":"77a14049-ade1-4da2-8204-00ee7db4b9dc",
                    "nodeName":"node-leaf1"
                  },
                  "untagged":true
                }
              ]
            },
            {
              "id":"f3f3eed9-2f6d-498c-afdd-3b9316d6f506",
              "name":"example-fabric-vni2",
              "description":"These are some notes on my VNI",
              "labels":[
                "FABRIC_VNI_TWO_1"
              ],
              "enabled":true,
              "metadata":{
                "revisionId":"1",
                "createdBy":"cisco/hyperfabric-example@cisco.com",
                "createdAt":"2024-09-07T23:49:54.596634Z",
                "modifiedBy":"cisco/hyperfabric-example@cisco.com",
                "modifiedAt":"2024-09-07T23:49:54.596634Z"
              },
              "fabricId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
              "vni":1500000,
              "members":[
                {
                  "vlanId":3602,
                  "port":{
                    "portName":"Ethernet1_6",
                    "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
                    "nodeName":"node-leaf0"
                  },
                  "untagged":true
                },
                {
                  "vlanId":3602,
                  "port":{
                    "portName":"Ethernet1_6",
                    "nodeId":"77a14049-ade1-4da2-8204-00ee7db4b9dc",
                    "nodeName":"node-leaf1"
                  },
                  "untagged":true
                }
              ]
            }
          ]
        }
      },
      "configGetFabricVrfResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "id":"bda7fee1-0d1b-482a-b72c-504bafb0254b",
          "name":"Vrf12000000",
          "enabled":true,
          "metadata":{
            "revisionId":"1",
            "createdBy":"cisco/hyperfabric-example@cisco.com",
            "createdAt":"2024-09-07T23:49:54.596634Z",
            "modifiedBy":"cisco/hyperfabric-example@cisco.com",
            "modifiedAt":"2024-09-07T23:49:54.596634Z"
          },
          "fabricId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
          "isDefault":true,
          "vni":12000000
        }
      },
      "configGetFabricVrfsResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "vrfs":[
            {
              "id":"bda7fee1-0d1b-482a-b72c-504bafb0254b",
              "name":"Vrf12000000",
              "enabled":true,
              "metadata":{
                "revisionId":"1",
                "createdBy":"cisco/hyperfabric-example@cisco.com",
                "createdAt":"2024-09-07T23:49:54.596634Z",
                "modifiedBy":"cisco/hyperfabric-example@cisco.com",
                "modifiedAt":"2024-09-07T23:49:54.596634Z"
              },
              "fabricId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
              "isDefault":true,
              "vni":12000000
            }
          ]
        }
      },
      "configGetFabricsResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "fabrics":[
            {
              "fabricId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
              "name":"example-fabric",
              "description":"An example fabric, for demonstration.",
              "location":"CA-95134",
              "address":"300 East Tasman Drive",
              "city":"San Jose",
              "country":"US",
              "labels":[
                "TAG_ONE",
                "TAG_TWO"
              ]
            }
          ]
        }
      },
      "configGetManagementPortsResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "ports":[
            {
              "id":"da141c97-9402-4593-9f99-7b74b7d9964e",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "name":"eth0",
              "description":"Management Ethernet Port Configuration",
              "ipv4Address":"10.10.10.1/24",
              "ipv4Gateway":"10.10.10.254",
              "ipv6Address":"2a02:1243:5687:0:9c09:2c7a:7c78:9ffc/33",
              "ipv6Gateway":"2a02:1243:5687:0:8d91:ba6b:b24d:9b41",
              "dnsAddresses":[
                "9.9.9.9/32",
                "8.8.8.8"
              ],
              "proxyAddress":"https://10.10.1.10:8080",
              "proxyUsername":"adminUser",
              "proxyCredentialsId":"7828d0b5-209f-4170-972d-94e3975fde97",
              "proxyPassword":"******",
              "enabled":true,
              "ipv4ConfigType":"CONFIG_TYPE_STATIC",
              "ipv6ConfigType":"CONFIG_TYPE_DHCP",
              "ntpAddresses":[
                "9.9.9.9",
                "cisco.com",
                "8.8.8.8"
              ],
              "cloudUrls":[
                "https://a.example.com",
                "https://b.example.com"
              ],
              "configOrigin":"CONFIG_ORIGIN_CLOUD",
              "noProxy":[
                "10.0.0.5",
                "2001:db8:3333:4444:5555:6666:7777:8888/8",
                "68.0.0.0/8",
                "72.0.0.0/8",
                "172.0.0.1/8",
                ".cisco.com",
                ".local"
              ]
            }
          ]
        }
      },
      "configGetPortResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "id":"ba9b3d85-c8fb-4163-897a-6f1ef810d5e5",
          "name":"Ethernet1_31",
          "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
          "enabled":true,
          "index":31,
          "linecard":1,
          "roles":[
            "UNUSED_PORT"
          ],
          "mtu":9100,
          "speed":"400G"
        }
      },
      "configGetPortsResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "nodeId":"node-leaf0",
          "ports":[
            {
              "id":"a2e7f059-d8fa-4338-b708-ad88880f53a5",
              "name":"Ethernet1_1",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":1,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"79d85527-deff-411c-b4ce-3e65bf7f26b6",
              "name":"Ethernet1_2",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":2,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"5b0a077c-dfb8-4a7a-9513-ab9885d4cb2d",
              "name":"Ethernet1_3",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":3,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"0f7c23c9-70a7-4bd3-895b-1409284b46fc",
              "name":"Ethernet1_4",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":4,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"02e90e01-baa7-47cb-bafc-e8c1f607b96d",
              "name":"Ethernet1_5",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":5,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"b1836d46-cdcc-47b9-9221-f0cc348ac136",
              "name":"Ethernet1_6",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":6,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"0f44a759-1d34-4bbc-b962-94e86f7d8690",
              "name":"Ethernet1_7",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":7,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"ff1a5a69-87ad-4cd1-a297-657970f3300e",
              "name":"Ethernet1_8",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":8,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"85a57d79-672d-41e6-a11b-3cb720081afa",
              "name":"Ethernet1_9",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":9,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"9d10bcd8-dda2-4b31-8170-200f7be2c509",
              "name":"Ethernet1_10",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":10,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"17f97356-891a-49c8-99d6-1d88560a2e42",
              "name":"Ethernet1_11",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":11,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"1cac326f-e005-4f77-a431-792be1b64514",
              "name":"Ethernet1_12",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":12,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"5d2db947-0442-436a-a9ec-0ec1d4ac5c5b",
              "name":"Ethernet1_13",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":13,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"644814be-847b-493e-bec6-d25393ad2ba0",
              "name":"Ethernet1_14",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":14,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"47de7950-0307-4080-86e9-4e500fd9c3ec",
              "name":"Ethernet1_15",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":15,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"b0774dc7-e533-4bdb-92e7-6e40538ad0b4",
              "name":"Ethernet1_16",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":16,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"d8c1f18e-d6d2-451a-9d16-a7874dec0972",
              "name":"Ethernet1_17",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":17,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"2837e8a8-3a89-4b62-8112-1d56ac1c305d",
              "name":"Ethernet1_18",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":18,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"6ef64b79-be4a-46fd-97de-a4b201cae651",
              "name":"Ethernet1_19",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":19,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"4d5d29d8-c4f8-44fe-b19b-4babc13cd8dd",
              "name":"Ethernet1_20",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":20,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"7b5f34bd-2022-4863-9ea5-1752feabc496",
              "name":"Ethernet1_21",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":21,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"c6b25417-deed-4430-81af-8ec101804875",
              "name":"Ethernet1_22",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":22,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"976bbbea-21bf-4fa6-b875-ec35c5514915",
              "name":"Ethernet1_23",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":23,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"b96ec97b-9863-446e-934b-33bccf1940cd",
              "name":"Ethernet1_24",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":24,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"8cb7e9c4-3862-4de5-8550-26e47e879c37",
              "name":"Ethernet1_25",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":25,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"4627d67e-3917-456e-bec9-368b145153dc",
              "name":"Ethernet1_26",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":26,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"e7c6287d-7e8a-4af1-8804-a6335a521d9c",
              "name":"Ethernet1_27",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":27,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"7dcf338b-5bbe-481e-9d16-9576ba776851",
              "name":"Ethernet1_28",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":28,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"ce3740e0-db58-435f-9dc7-0c88710d558d",
              "name":"Ethernet1_29",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":29,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"61d8c491-ec9c-4526-9c5c-62ff7504f3aa",
              "name":"Ethernet1_30",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":30,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"ba9b3d85-c8fb-4163-897a-6f1ef810d5e5",
              "name":"Ethernet1_31",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":31,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            },
            {
              "id":"d2c9f3f5-362c-4bb1-8451-2c6ae63e1b66",
              "name":"Ethernet1_32",
              "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
              "enabled":true,
              "index":32,
              "linecard":1,
              "roles":[
                "UNUSED_PORT"
              ],
              "mtu":9100,
              "speed":"400G"
            }
          ]
        }
      },
      "configReviewFabricCandidateRequest":{
        "description":"An example request payload for an API call.",
        "summary":"Example request",
        "value":{
          "comments":"Test commit comment"
        }
      },
      "configReviewFabricCandidateResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "fabricId":"example-fabric"
        }
      },
      "configSetFabricConnectionsRequest":{
        "description":"An example request payload for an API call.",
        "summary":"Example request",
        "value":{
          "connections":[
            {
              "local":{
                "portName":"Ethernet1_1",
                "nodeName":"node-leaf0"
              },
              "remote":{
                "portName":"Ethernet1_1",
                "nodeName":"node-spine0"
              }
            },
            {
              "local":{
                "portName":"Ethernet1_1",
                "nodeName":"node-leaf1"
              },
              "remote":{
                "portName":"Ethernet1_8",
                "nodeName":"node-spine0"
              }
            },
            {
              "local":{
                "portName":"Ethernet1_8",
                "nodeName":"node-leaf0"
              },
              "remote":{
                "portName":"Ethernet1_1",
                "nodeName":"node-spine1"
              }
            },
            {
              "local":{
                "portName":"Ethernet1_8",
                "nodeName":"node-leaf1"
              },
              "remote":{
                "portName":"Ethernet1_8",
                "nodeName":"node-spine1"
              }
            }
          ]
        }
      },
      "configSetFabricConnectionsResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "connections":[
            {
              "id":"5e694530-40a0-4b27-a88d-2336e351c4d8",
              "fabricId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
              "local":{
                "portName":"Ethernet1_1",
                "nodeName":"node-leaf0"
              },
              "remote":{
                "portName":"Ethernet1_1",
                "nodeName":"node-spine0"
              }
            },
            {
              "id":"04094927-c00e-42b7-8e75-fd38404e9158",
              "fabricId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
              "local":{
                "portName":"Ethernet1_1",
                "nodeName":"node-leaf1"
              },
              "remote":{
                "portName":"Ethernet1_8",
                "nodeName":"node-spine0"
              }
            },
            {
              "id":"8fcd5ae2-26d8-45ca-8e2e-10442f5b872c",
              "fabricId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
              "local":{
                "portName":"Ethernet1_8",
                "nodeName":"node-leaf0"
              },
              "remote":{
                "portName":"Ethernet1_1",
                "nodeName":"node-spine1"
              }
            },
            {
              "id":"06eff3e6-2630-4cd1-8d0f-36de7622bdc6",
              "fabricId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
              "local":{
                "portName":"Ethernet1_8",
                "nodeName":"node-leaf1"
              },
              "remote":{
                "portName":"Ethernet1_8",
                "nodeName":"node-spine1"
              }
            }
          ]
        }
      },
      "configSetPortRequest":{
        "description":"An example request payload for an API call.",
        "summary":"Example request",
        "value":{
          "name":"Ethernet1_19_1",
          "labels":[
            "PORT_ONE_FIVE"
          ],
          "annotations":[
            {
              "name":"port",
              "value":"unused"
            }
          ],
          "enabled":true,
          "roles":[
            "UNUSED_PORT"
          ]
        }
      },
      "configSetPortResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "id":"c8ae152e-79ca-46cf-8be7-2adb3b80f912",
          "name":"Ethernet1_15",
          "labels":[
            "PORT_ONE_FIVE"
          ],
          "annotations":[
            {
              "name":"port",
              "value":"unused"
            }
          ],
          "enabled":true,
          "roles":[
            "UNUSED_PORT"
          ],
          "mtu":9100
        }
      },
      "configSetPortsRequest":{
        "description":"An example request payload for an API call.",
        "summary":"Example request",
        "value":{
          "ports":[
            {
              "name":"Ethernet1_5",
              "enabled":true,
              "roles":[
                "HOST_PORT"
              ]
            },
            {
              "name":"Ethernet1_6",
              "enabled":true,
              "roles":[
                "HOST_PORT"
              ]
            },
            {
              "name":"Ethernet1_7",
              "enabled":true,
              "roles":[
                "HOST_PORT"
              ]
            },
            {
              "name":"Ethernet1_8",
              "enabled":true,
              "roles":[
                "HOST_PORT"
              ]
            }
          ]
        }
      },
      "configSetPortsResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "nodeId":"node-leaf1",
          "ports":[
            {
              "id":"e952d32e-3e27-439f-9c2a-160acb347625",
              "name":"Ethernet1_5",
              "nodeId":"77a14049-ade1-4da2-8204-00ee7db4b9dc",
              "enabled":true,
              "roles":[
                "HOST_PORT"
              ]
            },
            {
              "id":"a357480b-aae3-4c46-8e4f-8bc07520080e",
              "name":"Ethernet1_6",
              "nodeId":"77a14049-ade1-4da2-8204-00ee7db4b9dc",
              "enabled":true,
              "roles":[
                "HOST_PORT"
              ]
            },
            {
              "id":"de87b0dd-7bdd-41f1-a67b-0b9849d1577d",
              "name":"Ethernet1_7",
              "nodeId":"77a14049-ade1-4da2-8204-00ee7db4b9dc",
              "enabled":true,
              "roles":[
                "HOST_PORT"
              ]
            },
            {
              "id":"b3a585ed-511d-47d2-af20-7ada742538a4",
              "name":"Ethernet1_8",
              "nodeId":"77a14049-ade1-4da2-8204-00ee7db4b9dc",
              "enabled":true,
              "roles":[
                "HOST_PORT"
              ]
            }
          ]
        }
      },
      "configUpdateFabricRequest":{
        "description":"An example request payload for an API call.",
        "summary":"Example request",
        "value":{
          "name":"example-fabric",
          "description":"Updated description of example-fabric.",
          "location":"DC-1000",
          "address":"725 Alder Drive",
          "city":"Milpitas",
          "country":"US"
        }
      },
      "configUpdateFabricResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "fabricId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
          "name":"example-fabric",
          "description":"Updated description of example-fabric.",
          "location":"DC-1000",
          "address":"725 Alder Drive",
          "city":"Milpitas",
          "country":"US"
        }
      },
      "configUpdateFabricStaticRouteRequest":{
        "description":"An example request payload for an API call.",
        "summary":"Example request",
        "value":{
          "name":"Vrf-exampleOne-SR1",
          "enabled":true,
          "routes":[
            {
              "prefix":"10.10.10.0/24",
              "preference":10,
              "discard":true
            },
            {
              "prefix":"11.10.10.0/24",
              "preference":10,
              "discard":true
            },
            {
              "prefix":"12.10.10.0/24",
              "preference":12,
              "discard":true
            }
          ]
        }
      },
      "configUpdateFabricStaticRouteResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "id":"b7603506-0fe9-4c15-b80d-d73d9e2bdd5a",
          "name":"Vrf-exampleOne-SR1",
          "enabled":true,
          "fabricId":"example-fabric",
          "routes":[
            {
              "prefix":"10.10.10.0/24",
              "preference":10,
              "discard":true
            },
            {
              "prefix":"11.10.10.0/24",
              "preference":10,
              "discard":true
            },
            {
              "prefix":"12.10.10.0/24",
              "preference":12,
              "discard":true
            }
          ],
          "vrfId":"Vrf-exampleOne"
        }
      },
      "configUpdateFabricVniRequest":{
        "description":"An example request payload for an API call.",
        "summary":"Example request",
        "value":{
          "name":"example-fabric-vni2",
          "description":"These are some notes on my VNI",
          "labels":[
            "FABRIC_VNI_TWO_1"
          ],
          "enabled":true,
          "vni":1500000,
          "members":[
            {
              "vlanId":3602,
              "port":{
                "portName":"Ethernet1_6",
                "nodeName":"node-leaf0"
              },
              "untagged":true
            },
            {
              "vlanId":3602,
              "port":{
                "portName":"Ethernet1_6",
                "nodeName":"node-leaf1"
              },
              "untagged":true
            }
          ],
          "svis":[
            {
              "vlanId":3602,
              "ipv4Addresses":[
                "172.222.40.1/24"
              ],
              "enabled":true
            }
          ]
        }
      },
      "configUpdateFabricVniResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "id":"f3f3eed9-2f6d-498c-afdd-3b9316d6f506",
          "name":"example-fabric-vni2",
          "description":"These are some notes on my VNI",
          "labels":[
            "FABRIC_VNI_TWO_1"
          ],
          "enabled":true,
          "fabricId":"9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
          "vni":1500000,
          "members":[
            {
              "vlanId":3602,
              "port":{
                "portName":"Ethernet1_6",
                "nodeName":"node-leaf0"
              },
              "untagged":true
            },
            {
              "vlanId":3602,
              "port":{
                "portName":"Ethernet1_6",
                "nodeName":"node-leaf1"
              },
              "untagged":true
            }
          ],
          "svis":[
            {
              "vlanId":3602,
              "ipv4Addresses":[
                "172.222.40.1/24"
              ],
              "enabled":true
            }
          ]
        }
      },
      "configUpdateFabricVrfRequest":{
        "description":"An example request payload for an API call.",
        "summary":"Example request",
        "value":{
          "name":"Vrf-examplevrf1",
          "annotations":[
            {
              "name":"position",
              "value":"1234"
            }
          ],
          "enabled":true,
          "isDefault":true
        }
      },
      "configUpdateFabricVrfResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "id":"18a4001d-a7a1-4734-80a4-6b8ccd9f544b",
          "name":"Vrf-examplevrf1",
          "annotations":[
            {
              "name":"position",
              "value":"1234"
            }
          ],
          "enabled":true,
          "fabricId":"example-fabric",
          "vni":12001003
        }
      },
      "configUpdateManagementPortRequest":{
        "description":"An example request payload for an API call.",
        "summary":"Example request",
        "value":{
          "name":"eth0",
          "description":"Management Ethernet Port Configuration",
          "ipv4Address":"10.10.10.1/24",
          "ipv4Gateway":"10.10.10.254",
          "ipv6Address":"2a02:1243:5687:0:9c09:2c7a:7c78:9ffc/33",
          "ipv6Gateway":"2a02:1243:5687:0:8d91:ba6b:b24d:9b41",
          "dnsAddresses":[
            "9.9.9.9/32",
            "8.8.8.8"
          ],
          "proxyAddress":"https://10.10.1.10:8080",
          "proxyUsername":"adminUser",
          "proxyPassword":"ThisIsMyPassword",
          "enabled":true,
          "ipv4ConfigType":"CONFIG_TYPE_STATIC",
          "ipv6ConfigType":"CONFIG_TYPE_DHCP",
          "ntpAddresses":[
            "9.9.9.9",
            "cisco.com",
            "8.8.8.8"
          ],
          "cloudUrls":[
            "https://a.example.com",
            "https://b.example.com"
          ],
          "configOrigin":"CONFIG_ORIGIN_CLOUD",
          "setProxyPassword":true,
          "noProxy":[
            "10.0.0.5",
            "2001:db8:3333:4444:5555:6666:7777:8888/8",
            "68.0.0.0/8",
            "72.0.0.0/8",
            "172.0.0.1/8",
            ".cisco.com",
            ".local"
          ]
        }
      },
      "configUpdateManagementPortResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "id":"da141c97-9402-4593-9f99-7b74b7d9964e",
          "nodeId":"eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
          "name":"eth0",
          "description":"Management Ethernet Port Configuration",
          "ipv4Address":"10.10.10.1/24",
          "ipv4Gateway":"10.10.10.254",
          "ipv6Address":"2a02:1243:5687:0:9c09:2c7a:7c78:9ffc/33",
          "ipv6Gateway":"2a02:1243:5687:0:8d91:ba6b:b24d:9b41",
          "dnsAddresses":[
            "9.9.9.9/32",
            "8.8.8.8"
          ],
          "proxyAddress":"https://10.10.1.10:8080",
          "proxyUsername":"adminUser",
          "proxyCredentialsId":"7828d0b5-209f-4170-972d-94e3975fde97",
          "proxyPassword":"******",
          "enabled":true,
          "ipv4ConfigType":"CONFIG_TYPE_STATIC",
          "ipv6ConfigType":"CONFIG_TYPE_DHCP",
          "ntpAddresses":[
            "9.9.9.9",
            "cisco.com",
            "8.8.8.8"
          ],
          "cloudUrls":[
            "https://a.example.com",
            "https://b.example.com"
          ],
          "configOrigin":"CONFIG_ORIGIN_CLOUD",
          "metadata":{
            "revisionId":"2",
            "createdBy":"cisco/hyperfabric-example@cisco.com",
            "createdAt":"2024-09-07T22:16:21.209594Z",
            "modifiedBy":"cisco/hyperfabric-example@cisco.com",
            "modifiedAt":"2024-09-07T22:17:19.031961Z"
          },
          "noProxy":[
            "10.0.0.5",
            "2001:db8:3333:4444:5555:6666:7777:8888/8",
            "68.0.0.0/8",
            "72.0.0.0/8",
            "172.0.0.1/8",
            ".cisco.com",
            ".local"
          ]
        }
      },
      "stateGetDeviceAssertions":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "assertions":[
            {
              "assertType":"PORT_LINK_UP",
              "portLinkUp":{
                "id":{
                  "type":"AssertPortLinkUpType",
                  "device":"02-17-83-27-00-01",
                  "lineCard":1,
                  "port":1
                },
                "category":"ASSERT_CATEGORY_FABRIC",
                "assertState":"ASSERT_STATE_TRUE",
                "modifiedAt":"2024-09-10T20:18:24.919761127Z",
                "config":{
                  "latchedAt":"2024-09-10T20:18:24.914432293Z",
                  "port":{
                    "portName":"Ethernet1_1",
                    "portIndex":1,
                    "portRole":"FABRIC_PORT",
                    "adminState":"ENABLED",
                    "mtu":9100,
                    "deviceId":"02-17-83-27-00-01",
                    "targetDeviceId":"02-17-85-3f-01-00",
                    "targetPortName":"Ethernet1_2",
                    "modifiedAt":"2024-09-10T20:13:24.908563668Z"
                  },
                  "orgId":"10000000-0000-0000-0000-000000000001",
                  "fabricId":"4c352ffc-0778-40e7-bf9b-f3f2fbd79f74"
                },
                "readyToLatchAt":"2024-09-10T20:18:24.914432293Z"
              }
            },
            {
              "assertType":"PORT_LINK_UP",
              "portLinkUp":{
                "id":{
                  "type":"AssertPortLinkUpType",
                  "device":"02-17-83-27-00-01",
                  "lineCard":1,
                  "port":2
                },
                "category":"ASSERT_CATEGORY_FABRIC",
                "assertState":"ASSERT_STATE_TRUE",
                "modifiedAt":"2024-09-10T20:18:24.919764210Z",
                "config":{
                  "latchedAt":"2024-09-10T20:18:24.914452918Z",
                  "port":{
                    "portName":"Ethernet1_2",
                    "portIndex":2,
                    "portRole":"FABRIC_PORT",
                    "adminState":"ENABLED",
                    "mtu":9100,
                    "deviceId":"02-17-83-27-00-01",
                    "targetDeviceId":"02-17-05-91-01-01",
                    "targetPortName":"Ethernet1_2",
                    "modifiedAt":"2024-09-10T20:13:24.908564710Z"
                  },
                  "orgId":"10000000-0000-0000-0000-000000000001",
                  "fabricId":"4c352ffc-0778-40e7-bf9b-f3f2fbd79f74"
                },
                "readyToLatchAt":"2024-09-10T20:18:24.914452918Z"
              }
            },
            {
              "assertType":"PORT_LINK_UP",
              "portLinkUp":{
                "id":{
                  "type":"AssertPortLinkUpType",
                  "device":"02-17-83-27-00-01",
                  "lineCard":1,
                  "port":3
                },
                "category":"ASSERT_CATEGORY_FABRIC",
                "assertState":"ASSERT_STATE_TRUE",
                "modifiedAt":"2024-09-10T20:18:24.919766793Z",
                "config":{
                  "latchedAt":"2024-09-10T20:18:24.914455377Z",
                  "port":{
                    "portName":"Ethernet1_3",
                    "portIndex":3,
                    "portRole":"FABRIC_PORT",
                    "adminState":"ENABLED",
                    "mtu":9100,
                    "deviceId":"02-17-83-27-00-01",
                    "targetDeviceId":"02-17-9e-07-01-02",
                    "targetPortName":"Ethernet1_2",
                    "modifiedAt":"2024-09-10T20:13:24.908565668Z"
                  },
                  "orgId":"10000000-0000-0000-0000-000000000001",
                  "fabricId":"4c352ffc-0778-40e7-bf9b-f3f2fbd79f74"
                },
                "readyToLatchAt":"2024-09-10T20:18:24.914455377Z"
              }
            }
          ]
        }
      },
      "stateGetDeviceCounters":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "counters":[
            {
              "port":{
                "id":{
                  "type":"PortCountersType",
                  "device":"02-17-83-27-00-01",
                  "lineCard":1,
                  "port":1,
                  "portCounters":1
                },
                "in-octets":"1180237",
                "in-unicast-pkts":"6778",
                "out-octets":"1174904",
                "out-unicast-pkts":"6704",
                "in-bps":25489.186,
                "out-bps":24741.951,
                "in-unicast-pps":17.2008,
                "out-unicast-pps":16.800781,
                "last-clear":"1970-01-01T00:00:00Z",
                "collected-at":"2024-09-10T20:20:54.025024085Z"
              }
            },
            {
              "port":{
                "id":{
                  "type":"PortCountersType",
                  "device":"02-17-83-27-00-01",
                  "lineCard":1,
                  "port":2,
                  "portCounters":1
                },
                "in-octets":"1580334",
                "in-unicast-pkts":"11547",
                "out-octets":"1573810",
                "out-unicast-pkts":"11453",
                "in-bps":26618.838,
                "out-bps":26847.65,
                "in-unicast-pps":23.401089,
                "out-unicast-pps":23.601099,
                "last-clear":"1970-01-01T00:00:00Z",
                "collected-at":"2024-09-10T20:20:54.025024085Z"
              }
            },
            {
              "port":{
                "id":{
                  "type":"PortCountersType",
                  "device":"02-17-83-27-00-01",
                  "lineCard":1,
                  "port":3,
                  "portCounters":1
                },
                "in-octets":"1442493",
                "in-unicast-pkts":"9924",
                "out-octets":"1442937",
                "out-unicast-pkts":"9919",
                "in-bps":23685.902,
                "out-bps":23957.914,
                "in-unicast-pps":19.400904,
                "out-unicast-pps":19.600912,
                "last-clear":"1970-01-01T00:00:00Z",
                "collected-at":"2024-09-10T20:20:54.025024085Z"
              }
            },
            {
              "port":{
                "id":{
                  "type":"PortCountersType",
                  "device":"02-17-83-27-00-01",
                  "lineCard":1,
                  "port":4,
                  "portCounters":1
                },
                "in-octets":"1506006",
                "in-unicast-pkts":"10438",
                "out-octets":"1501034",
                "out-unicast-pkts":"10399",
                "in-bps":19557.71,
                "out-bps":20053.732,
                "in-unicast-pps":17.000792,
                "out-unicast-pps":17.600819,
                "last-clear":"1970-01-01T00:00:00Z",
                "collected-at":"2024-09-10T20:20:54.025024085Z"
              }
            },
            {
              "port":{
                "id":{
                  "type":"PortCountersType",
                  "device":"02-17-83-27-00-01",
                  "lineCard":1,
                  "port":5,
                  "portCounters":1
                },
                "out-octets":"6217",
                "out-unicast-pkts":"27",
                "last-clear":"1970-01-01T00:00:00Z",
                "collected-at":"2024-09-10T20:20:54.025024085Z"
              }
            },
            {
              "port":{
                "id":{
                  "type":"PortCountersType",
                  "device":"02-17-83-27-00-01",
                  "lineCard":1,
                  "port":6,
                  "portCounters":1
                },
                "out-octets":"6217",
                "out-unicast-pkts":"27",
                "last-clear":"1970-01-01T00:00:00Z",
                "collected-at":"2024-09-10T20:20:54.025024085Z"
              }
            }
          ]
        }
      },
      "stateGetDeviceManagementPortsResponse":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "ports":[
            {
              "name":"eth0",
              "ipv4Address":"10.10.0.0/16",
              "ipv4Gateway":"10.10.10.1",
              "ipv6Address":"2a02:1243:5687:0:9c09:2c7a:7c78:9ffc/33",
              "ipv6Gateway":"10.10.10.1",
              "dnsAddresses":[
                "9.9.9.9",
                "example.com",
                "8.8.8.8"
              ],
              "proxyAddress":"https://localhost:1234",
              "proxyUsername":"hyperfabric-example@cisco.com",
              "ipv4ConfigType":"CONFIG_TYPE_STATIC",
              "ipv6ConfigType":"CONFIG_TYPE_STATIC",
              "ntpAddresses":[
                "9.8.8.8",
                "9.8.4.4"
              ],
              "cloudUrls":[
                "https://localhost:1234",
                "https://localhost:4321"
              ],
              "noProxy":[
                "10.0.0.0/8"
              ]
            }
          ]
        }
      },
      "stateGetDevicePortAssertions":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "assertions":[
            {
              "assertType":"PORT_LINK_DOWN",
              "portLinkDown":{
                "id":{
                  "type":"AssertPortLinkDownType",
                  "device":"02-17-83-27-00-01",
                  "lineCard":1,
                  "port":9
                },
                "category":"ASSERT_CATEGORY_FABRIC",
                "assertState":"ASSERT_STATE_TRUE",
                "modifiedAt":"2024-09-10T20:13:26.511937586Z",
                "config":{
                  "latchedAt":"2024-09-10T20:13:24.908826710Z",
                  "port":{
                    "portName":"Ethernet1_9",
                    "portIndex":9,
                    "portRole":"UNUSED_PORT",
                    "adminState":"ENABLED",
                    "mtu":9100,
                    "deviceId":"02-17-83-27-00-01",
                    "modifiedAt":"2024-09-10T20:13:24.908569960Z"
                  },
                  "implicit":true,
                  "orgId":"10000000-0000-0000-0000-000000000001",
                  "fabricId":"4c352ffc-0778-40e7-bf9b-f3f2fbd79f74"
                },
                "readyToLatchAt":"2024-09-10T20:18:26.515281044Z"
              }
            }
          ]
        }
      },
      "stateGetDevicePortCounters":{
        "description":"An example response to an API call.",
        "summary":"Example response",
        "value":{
          "counters":[
            {
              "port":{
                "id":{
                  "type":"PortCountersType",
                  "device":"02-17-83-27-00-01",
                  "lineCard":1,
                  "port":9,
                  "portCounters":1
                },
                "out-octets":"7662",
                "out-unicast-pkts":"32",
                "last-clear":"1970-01-01T00:00:00Z",
                "collected-at":"2024-09-10T20:23:19.033013805Z"
              }
            }
          ]
        }
      }
    },
    "headers":{
      "cache-control":{
        "description":"Determines client caching behavior",
        "example":"no-cache",
        "schema":{
          "description":"Determines client caching behavior",
          "type":"string"
        }
      },
      "content-encoding":{
        "description":"The encoding the response data",
        "example":"N/A",
        "schema":{
          "description":"The encoding the response data",
          "type":"string"
        }
      },
      "content-type":{
        "description":"The MIME type the response data",
        "example":"application/json",
        "schema":{
          "description":"The MIME type the response data",
          "type":"string"
        }
      },
      "date":{
        "description":"A timestamp when the response was processed",
        "example":"Tue, 10 Sep 2024 17:02:52 GMT",
        "schema":{
          "description":"A timestamp when the response was processed",
          "pattern":"^(((Mon|Tue|Wed|Thu|Fri|Sat|Sun)),\\s[0-9]{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s([0-9]{4})\\s([0-9]{2}):([0-9]{2})(:([0-9]{2}))?\\sGMT$",
          "type":"string"
        }
      },
      "trackingid":{
        "description":"A unique value generated for the response for debugging purposes",
        "example":"b4c08212-0a64-4edd-971a-d78562e1786f",
        "schema":{
          "description":"A unique value generated for the response for debugging purposes",
          "type":"string"
        }
      }
    },
    "schemas":{
      "assertionsAssertType":{
        "default":"DEVICE_CONNECTED_TO_CLOUD",
        "description":"Description not available",
        "enum":[
          "DEVICE_CONNECTED_TO_CLOUD",
          "DEVICE_CONNECTED_TO_FABRIC",
          "MANAGEMENT_PORT_CONFIG_SAME",
          "PORT_CONNECTION_SPEED_MATCH",
          "PORT_EXPECTED_NEIGHBOR",
          "PORT_LINK_DOWN",
          "PORT_LINK_UP",
          "PORT_NOT_CONNECTED_TO_FABRIC",
          "PORT_SPEED_CONSISTENT",
          "STATIC_DEFAULT_ROUTE_EXISTS",
          "VLAN_HAS_TRAFFIC",
          "DEVICE_RESOURCE_USAGE_BELOW_THRESHOLD",
          "BGP_PEER_ESTABLISHED",
          "CONFIG_ADDED_TO_DB"
        ],
        "type":"string"
      },
      "assertionsAssertion":{
        "description":"Description not available",
        "properties":{
          "assertType":{
            "$ref":"#/components/schemas/assertionsAssertType"
          },
          "bgpPeerEstablishedData":{
            "$ref":"#/components/schemas/schemaAssertBgpPeerEstablished"
          },
          "deviceConnectedToCloud":{
            "$ref":"#/components/schemas/schemaAssertDeviceConnectedToCloud"
          },
          "deviceConnectedToFabric":{
            "$ref":"#/components/schemas/schemaAssertDeviceConnectedToFabric"
          },
          "deviceResourceUsageBelowThreshold":{
            "$ref":"#/components/schemas/schemaAssertDeviceResourceUsageBelowThreshold"
          },
          "managementPortConfigSame":{
            "$ref":"#/components/schemas/schemaAssertManagementPortConfigSame"
          },
          "portConnectionSpeedMatch":{
            "$ref":"#/components/schemas/schemaAssertPortConnectionSpeedMatch"
          },
          "portExpectedNeighbor":{
            "$ref":"#/components/schemas/schemaAssertPortExpectedNeighbor"
          },
          "portLinkDown":{
            "$ref":"#/components/schemas/schemaAssertPortLinkDown"
          },
          "portLinkUp":{
            "$ref":"#/components/schemas/schemaAssertPortLinkUp"
          },
          "portNotConnectedToFabric":{
            "$ref":"#/components/schemas/schemaAssertPortNotConnectedToFabric"
          },
          "portSpeedConsistent":{
            "$ref":"#/components/schemas/schemaAssertPortSpeedConsistent"
          },
          "staticDefaultRouteExists":{
            "$ref":"#/components/schemas/schemaAssertStaticDefaultRouteExists"
          },
          "vlanHasTraffic":{
            "$ref":"#/components/schemas/schemaAssertVlanHasTraffic"
          }
        },
        "type":"object"
      },
      "authBearerToken":{
        "description":"Metadata for a bearer token.",
        "properties":{
          "description":{
            "description":"The user provided description for the token.",
            "type":"string"
          },
          "metadata":{
            "$ref":"#/components/schemas/modelsMetadata"
          },
          "name":{
            "description":"The user provided name for the token.",
            "type":"string"
          },
          "notAfter":{
            "description":"The time after which the token cannot be used.",
            "format":"date-time",
            "type":"string"
          },
          "notBefore":{
            "description":"The time at which the token can be used.",
            "format":"date-time",
            "type":"string"
          },
          "scope":{
            "$ref":"#/components/schemas/modelsTokenScope"
          },
          "token":{
            "description":"This is a read-only field. The token, available only when the token is created.",
            "type":"string"
          },
          "tokenId":{
            "description":"This is a read-only field. A unique id for the token.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "authBearerTokensResponse":{
        "description":"Returns a list of bearer tokens.",
        "properties":{
          "tokens":{
            "description":"A list of bearer tokens.",
            "items":{
              "$ref":"#/components/schemas/authBearerToken"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "authCreateBearerTokensRequest":{
        "description":"Create one or more new bearer tokens.",
        "properties":{
          "tokens":{
            "description":"The new tokens to be created.",
            "items":{
              "$ref":"#/components/schemas/authNewBearerToken"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "authCreateBearerTokensResponse":{
        "description":"Create a new bearer token. Currently only a single bearer token can be created at a time.",
        "properties":{
          "tokens":{
            "description":"The newly created tokens.",
            "items":{
              "$ref":"#/components/schemas/authBearerToken"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "authNewBearerToken":{
        "description":"A new bearer token definition.",
        "properties":{
          "description":{
            "description":"A description for the token.",
            "type":"string"
          },
          "name":{
            "description":"The user provided name for the token.",
            "type":"string"
          },
          "notAfter":{
            "description":"Sets the time after which the token cannot be used.",
            "format":"date-time",
            "type":"string"
          },
          "notBefore":{
            "description":"Sets the time at which the token can be used.",
            "format":"date-time",
            "type":"string"
          },
          "scope":{
            "$ref":"#/components/schemas/modelsTokenScope"
          }
        },
        "type":"object"
      },
      "authSetUsersRequest":{
        "description":"SetUsersRequest creates or updates the specified users in the context of this tenant.",
        "properties":{
          "tenantId":{
            "description":"Identify a specific tenant, optional. If not specified, the tenant associated with the current user session making the request is used. Users will be created or updated in the resulting tenant. This parameter allows an admin of the default-tenant to create or update users in a non-default tenant of the organization.",
            "type":"string"
          },
          "users":{
            "description":"A list of users, each one representing a user to be created or updated in the tenant.",
            "items":{
              "$ref":"#/components/schemas/modelsUser"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "authUpdateUser":{
        "description":"Update a specific user configuration.",
        "properties":{
          "enabled":{
            "description":"Enable/disable the user.",
            "type":"boolean"
          },
          "labels":{
            "description":"A set of user-defined labels for searching and locating objects.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "role":{
            "$ref":"#/components/schemas/modelsUserRole"
          }
        },
        "type":"object"
      },
      "authUsersResponse":{
        "description":"Response to requests on list of users.",
        "properties":{
          "users":{
            "description":"A list of users.",
            "items":{
              "$ref":"#/components/schemas/modelsUser"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "commonErrCode":{
        "default":"ERR_CODE_INTERNAL",
        "description":"An error code provides additional information about a failed API request.",
        "enum":[
          "ERR_CODE_INTERNAL",
          "ERR_CODE_INVALID_UUID",
          "ERR_CODE_PERMISSION_DENIED",
          "ERR_CODE_OUT_OF_RANGE",
          "ERR_CODE_INVALID_TYPE",
          "ERR_CODE_INVALID_VALUE",
          "ERR_CODE_UNKNOWN_PARAMETER",
          "ERR_CODE_SERVICE_UNAVAILABLE",
          "ERR_CODE_NOT_FOUND",
          "ERR_CODE_NOT_IMPLEMENTED",
          "ERR_CODE_TOO_MANY_REQUESTS",
          "ERR_CODE_NO_KNOWN_CODE",
          "ERR_CODE_NO_REGISTERED_MARSHALERS",
          "ERR_CODE_UNSUPPORTED_CONTENT_TYPE",
          "ERR_CODE_DATA_CONFLICT",
          "ERR_CODE_UNAUTHORIZED",
          "ERR_CODE_READ_ONLY_FIELD",
          "ERR_CODE_MISSING_REQUIRED_ARG",
          "ERR_CODE_REQUEST_VALIDATION",
          "ERR_CODE_JSON_UNMARSHAL_ERROR",
          "ERR_CODE_JSON_MARSHAL_ERROR",
          "ERR_CODE_JSON_NO_DATA",
          "ERR_CODE_CSV_UNMARSHAL_ERROR",
          "ERR_CODE_CSV_MARSHAL_ERROR",
          "ERR_CODE_CSV_INVALID_DATA",
          "ERR_CODE_CSV_UNKNOWN_HEADER",
          "ERR_CODE_CSV_INVALID_VALUE",
          "ERR_CODE_CSV_NO_DATA",
          "ERR_CODE_YAML_NO_DATA",
          "ERR_CODE_YAML_UNMARSHAL_ERROR",
          "ERR_CODE_YAML_MARSHAL_ERROR",
          "ERR_CODE_PEM_NO_DATA",
          "ERR_CODE_PEM_UNMARSHAL_ERROR",
          "ERR_CODE_PEM_MARSHAL_ERROR",
          "ERR_CODE_PEM_INVALID_KEY_TYPE",
          "ERR_CODE_PEM_INVALID_KEY_DATA",
          "ERR_CODE_NO_FABRICS_DEFINED",
          "ERR_CODE_NO_FABRIC_CONNECTIONS_DEFINED",
          "ERR_CODE_TOO_MANY_FABRICS_DEFINED",
          "ERR_CODE_CHASSIS_ALREADY_ASSIGNED",
          "ERR_CODE_NO_PORTS_FOR_CHASSIS"
        ],
        "type":"string"
      },
      "commonPaginationResponse":{
        "description":"PaginationResponse defines common pagination properties that all GET gRPC responses should have. PaginationResponse is to be embedded in all GET gRPC response messages.",
        "properties":{
          "cursor":{
            "description":"Last used search cursor. Next pagination will start after this.",
            "type":"string"
          },
          "final":{
            "description":"Indicates an end of query results.",
            "type":"boolean"
          },
          "total":{
            "description":"Total number of objects found by query.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          }
        },
        "type":"object"
      },
      "commonRestError":{
        "description":"RestError encapsulates the properties of a REST error.",
        "properties":{
          "causes":{
            "description":"A list of underlying causes.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "critical":{
            "description":"Indicates that the error is a critical error.",
            "type":"boolean"
          },
          "errCode":{
            "$ref":"#/components/schemas/commonErrCode"
          },
          "field":{
            "description":"The name of relevant field.",
            "type":"string"
          },
          "message":{
            "description":"The error message.",
            "type":"string"
          },
          "notes":{
            "description":"Additional information about the error.",
            "type":"string"
          },
          "status":{
            "description":"The http status code.",
            "format":"int32",
            "type":"integer"
          },
          "trackingId":{
            "description":"A unique value for each request, used for tracking purposes.",
            "type":"string"
          },
          "value":{
            "description":"The value of relevant field.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "configActivityEvent":{
        "description":"ActivityEvent encapsulates an activity log event.",
        "properties":{
          "eventId":{
            "description":"The monotonically increasing event identifier.",
            "type":"string"
          },
          "objectId":{
            "description":"The object identifier.",
            "type":"string"
          },
          "objectName":{
            "description":"The object name (maybe empty).",
            "type":"string"
          },
          "objectType":{
            "$ref":"#/components/schemas/modelsObjectType"
          },
          "operation":{
            "$ref":"#/components/schemas/modelsOperation"
          },
          "parentId":{
            "description":"The object identifier of parent object.",
            "type":"string"
          },
          "parentType":{
            "$ref":"#/components/schemas/modelsObjectType"
          },
          "timestamp":{
            "description":"The activity event timestamp.",
            "format":"date-time",
            "type":"string"
          },
          "username":{
            "description":"The user who triggered the activity event.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "configAddFabricConnectionsRequest":{
        "description":"Add one or more connections to a specific fabric.",
        "properties":{
          "connections":{
            "description":"The connections for the fabric.",
            "items":{
              "$ref":"#/components/schemas/modelsPortConnection"
            },
            "type":"array"
          },
          "fabricId":{
            "description":"The fabric id or name.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "configAddFabricNodesRequest":{
        "description":"Description not available",
        "properties":{
          "fabricId":{
            "description":"The fabric id or name.",
            "type":"string"
          },
          "nodes":{
            "description":"One or more node to add to the fabric.",
            "items":{
              "$ref":"#/components/schemas/configNode"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "configAddFabricNodesResponse":{
        "description":"Description not available",
        "properties":{
          "nodes":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/configNode"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "configAddFabricStaticRoutesRequest":{
        "description":"Description not available",
        "properties":{
          "fabricId":{
            "description":"The fabric id or name.",
            "type":"string"
          },
          "staticRoutes":{
            "description":"The static routes to be added.",
            "items":{
              "$ref":"#/components/schemas/modelsStaticRoutes"
            },
            "type":"array"
          },
          "vrfId":{
            "description":"The vrf id.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "configAddFabricVnisRequest":{
        "description":"Add one or more VNIs to a fabric.",
        "properties":{
          "fabricId":{
            "description":"The fabric id or name.",
            "type":"string"
          },
          "vnis":{
            "description":"The new vnis.",
            "items":{
              "$ref":"#/components/schemas/modelsVni"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "configAddFabricVrfsRequest":{
        "description":"Description not available",
        "properties":{
          "fabricId":{
            "description":"The fabric id or name.",
            "type":"string"
          },
          "vrfs":{
            "description":"The new vrfs.",
            "items":{
              "$ref":"#/components/schemas/modelsVrf"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "configAddFabricsRequest":{
        "description":"Add one or more fabrics.",
        "properties":{
          "fabrics":{
            "description":"A list of one or more fabrics to add.",
            "items":{
              "$ref":"#/components/schemas/configFabric"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "configAddFabricsResponse":{
        "description":"Description not available",
        "properties":{
          "fabrics":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/configFabric"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "configAddManagementPortsRequest":{
        "description":"Description not available",
        "properties":{
          "fabricId":{
            "description":"The fabric id or name.",
            "type":"string"
          },
          "nodeId":{
            "description":"The node id or name.",
            "type":"string"
          },
          "ports":{
            "description":"The updated port configuration.",
            "items":{
              "$ref":"#/components/schemas/modelsManagementPort"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "configAssertion":{
        "description":"Description not available",
        "properties":{
          "path":{
            "$ref":"#/components/schemas/schemaPathPathId"
          },
          "state":{
            "$ref":"#/components/schemas/configLatchState"
          }
        },
        "type":"object"
      },
      "configAssertionsResponse":{
        "description":"A response to latching one or more assertions.",
        "properties":{
          "assertions":{
            "description":"The list of assertions which were succesfully latched.",
            "items":{
              "$ref":"#/components/schemas/configAssertion"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "configBindDeviceResponse":{
        "description":"Description not available",
        "properties":{
          "deviceId":{
            "description":"Description not available",
            "type":"string"
          },
          "nodeId":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "configCandidateReview":{
        "description":"CandidateReview represents a candidate review record. CandidateReview records are created when users add review comments.",
        "properties":{
          "comments":{
            "description":"Transaction comments.",
            "type":"string"
          },
          "createdAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "createdBy":{
            "description":"UserId of the user who added the comments.",
            "type":"string"
          },
          "operation":{
            "$ref":"#/components/schemas/modelsOperation"
          }
        },
        "type":"object"
      },
      "configCommitFabricCandidateRequest":{
        "description":"CommitFabricCandidateRequest encapsulates properties to commit a pending fabric candidate. Candidates commit may require special user privileges.",
        "properties":{
          "comments":{
            "description":"The reason for commit.",
            "type":"string"
          },
          "fabricId":{
            "description":"The fabric identifier. Fabric identifier is mandatory.",
            "type":"string"
          },
          "name":{
            "description":"The candidate name.",
            "type":"string"
          },
          "revisionId":{
            "description":"The candidate revision identifier.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "configCommitFabricCandidateResponse":{
        "description":"Description not available",
        "properties":{
          "committed":{
            "description":"Indicates that pending transaction have been committed.",
            "type":"boolean"
          },
          "fabricId":{
            "description":"The fabric identifier.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "configDevice":{
        "description":"Metadata about a device.",
        "properties":{
          "deviceId":{
            "description":"The device id.",
            "type":"string"
          },
          "fabricId":{
            "description":"The fabric id that the device belong to.",
            "type":"string"
          },
          "modelName":{
            "description":"The device model name.",
            "type":"string"
          },
          "name":{
            "description":"The name of the device.",
            "type":"string"
          },
          "nodeId":{
            "description":"The node id to which the device is bound.",
            "type":"string"
          },
          "osType":{
            "$ref":"#/components/schemas/modelsOsType"
          },
          "rackId":{
            "description":"The rack id where the device is installed.",
            "type":"string"
          },
          "roles":{
            "description":"The roles supported by the device.",
            "items":{
              "format":"int32",
              "type":"integer"
            },
            "type":"array"
          },
          "serialNumber":{
            "description":"The device serial number.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "configFabric":{
        "description":"Add a new or update an existing fabric. Note that the fabricId is read-only.",
        "properties":{
          "address":{
            "description":"Physical address line (E.g. 320 My Street)",
            "type":"string"
          },
          "annotations":{
            "description":"One or more annotations for the fabric.",
            "items":{
              "$ref":"#/components/schemas/modelsAnnotation"
            },
            "type":"array"
          },
          "city":{
            "description":"City name (E.g. San Jose)",
            "type":"string"
          },
          "country":{
            "description":"Country code (E.g. US)",
            "type":"string"
          },
          "description":{
            "description":"A description of the fabric.",
            "type":"string"
          },
          "fabricId":{
            "description":"The unique id of the fabric. This is a read-only attribute.",
            "type":"string"
          },
          "labels":{
            "description":"One or more labels for the fabric.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "location":{
            "description":"A user-defined location string (E.g. SJC20).",
            "type":"string"
          },
          "metadata":{
            "$ref":"#/components/schemas/modelsMetadata"
          },
          "name":{
            "description":"The name of the fabric.",
            "type":"string"
          }
        },
        "required":[
          "name"
        ],
        "type":"object"
      },
      "configFabricCandidate":{
        "description":"FabricCandidate represents a single fabric candidate record.",
        "properties":{
          "active":{
            "description":"Indicates that there are pending changes.",
            "type":"boolean"
          },
          "createdAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "createdBy":{
            "description":"The user who created the candidate.",
            "type":"string"
          },
          "events":{
            "description":"Activity events.",
            "items":{
              "$ref":"#/components/schemas/configActivityEvent"
            },
            "type":"array"
          },
          "fabricId":{
            "description":"The fabric identifier.",
            "type":"string"
          },
          "modifiedAt":{
            "description":"The last modification timestamp.",
            "format":"date-time",
            "type":"string"
          },
          "modifiedBy":{
            "description":"The user who modified candidate.",
            "type":"string"
          },
          "name":{
            "description":"The candidate name.",
            "type":"string"
          },
          "reviews":{
            "description":"A set of review logs.",
            "items":{
              "$ref":"#/components/schemas/configCandidateReview"
            },
            "type":"array"
          },
          "revisionId":{
            "description":"The revision identifier of the candidate.",
            "type":"string"
          },
          "txnId":{
            "description":"The transaction sequence number.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "configFabricConfig":{
        "description":"FabricConfig encapsulates entire config of a fabric.",
        "properties":{
          "fabric":{
            "$ref":"#/components/schemas/modelsFabric"
          },
          "perVlanStp":{
            "$ref":"#/components/schemas/modelsPerVlanStp"
          },
          "tenants":{
            "description":"Tenant objects.",
            "items":{
              "$ref":"#/components/schemas/configTenantObjects"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "configFabricConnectionsResponse":{
        "description":"Description not available",
        "properties":{
          "connections":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/modelsPortConnection"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "configFabricStaticRoutesResponse":{
        "description":"Description not available",
        "properties":{
          "staticRoutes":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/modelsStaticRoutes"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "configFabricVniMembersResponse":{
        "description":"Description not available",
        "properties":{
          "members":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/modelsVlanMember"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "configFabricVnisResponse":{
        "description":"Description not available",
        "properties":{
          "vnis":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/modelsVni"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "configFabricVrfsResponse":{
        "description":"Description not available",
        "properties":{
          "vrfs":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/modelsVrf"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "configGetAllFabricsResponse":{
        "description":"Description not available",
        "properties":{
          "fabrics":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/configFabric"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "configGetDevicesResponse":{
        "description":"Description not available",
        "properties":{
          "devices":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/configDevice"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "configGetFabricCandidatesResponse":{
        "description":"GetFabricCandidatesResponse encapsulates query response for fabric candidates.",
        "properties":{
          "candidates":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/configFabricCandidate"
            },
            "type":"array"
          },
          "pagination":{
            "$ref":"#/components/schemas/commonPaginationResponse"
          }
        },
        "type":"object"
      },
      "configGetFabricConfigResponse":{
        "description":"Description not available",
        "properties":{
          "candidate":{
            "description":"The candidate name.",
            "type":"string"
          },
          "config":{
            "$ref":"#/components/schemas/configFabricConfig"
          }
        },
        "type":"object"
      },
      "configGetFabricNodesResponse":{
        "description":"Description not available",
        "properties":{
          "nodes":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/configNode"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "configLatchAssertionsRequest":{
        "description":"Latch one or more assertions.",
        "properties":{
          "assertions":{
            "description":"The list of assertions to be latched.",
            "items":{
              "$ref":"#/components/schemas/configAssertion"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "configLatchState":{
        "default":"LATCH_STATE_LATCH",
        "description":"Specifies the latch state for an assertion.",
        "enum":[
          "LATCH_STATE_LATCH",
          "LATCH_STATE_UNLATCH"
        ],
        "type":"string"
      },
      "configManagementPortsResponse":{
        "description":"Description not available",
        "properties":{
          "ports":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/modelsManagementPort"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "configNode":{
        "description":"Add a new or update an existing Node. Note that the nodeId is read-only.",
        "properties":{
          "annotations":{
            "description":"A list of one or more annotations associated with the Node.",
            "items":{
              "$ref":"#/components/schemas/modelsAnnotation"
            },
            "type":"array"
          },
          "description":{
            "description":"A user-defined description of Node. Description can be up to 2000 characters.",
            "type":"string"
          },
          "deviceId":{
            "description":"The mac address of the switch bound to this node.",
            "type":"string"
          },
          "enabled":{
            "description":"Indicates if Node is enabled or disabled.",
            "type":"boolean"
          },
          "labels":{
            "description":"A list of one or more tags associated with the Node.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "location":{
            "description":"A user-defined location string (E.g. SJC20).",
            "type":"string"
          },
          "metadata":{
            "$ref":"#/components/schemas/modelsMetadata"
          },
          "modelName":{
            "description":"Hardware model name of Node. Model name cannot be nullified.",
            "type":"string"
          },
          "name":{
            "description":"The user-defined name of the Node. Node name is unique, and is case-insensitive.",
            "type":"string"
          },
          "nodeId":{
            "description":"The unique identifier of Node. This is a read-only attribute assigned by the service.",
            "type":"string"
          },
          "roles":{
            "description":"A Node can have multiple roles.",
            "items":{
              "format":"int32",
              "type":"integer"
            },
            "type":"array"
          },
          "serialNumber":{
            "description":"Serial number of Node. Serial number cannot be nullified.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "configPortsResponse":{
        "description":"Description not available",
        "properties":{
          "nodeId":{
            "description":"Description not available",
            "type":"string"
          },
          "ports":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/modelsNetworkPort"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "configReviewFabricCandidateRequest":{
        "description":"ReviewFabricCandidateRequest encapsulates properties to add a comment to an existing candidate.",
        "properties":{
          "comments":{
            "description":"Review comments.",
            "type":"string"
          },
          "fabricId":{
            "description":"The fabric identifier. Fabric identifier is mandatory.",
            "type":"string"
          },
          "name":{
            "description":"The candidate name.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "configReviewFabricCandidateResponse":{
        "description":"Description not available",
        "properties":{
          "fabricId":{
            "description":"The fabric identifier.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "configSetFabricConnectionsRequest":{
        "description":"Set the connections for a single fabric.",
        "properties":{
          "connections":{
            "description":"The connections for the fabric.",
            "items":{
              "$ref":"#/components/schemas/modelsPortConnection"
            },
            "type":"array"
          },
          "fabricId":{
            "description":"The fabric id or name.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "configSetPortsRequest":{
        "description":"Description not available",
        "properties":{
          "fabricId":{
            "description":"The fabric id or name.",
            "type":"string"
          },
          "nodeId":{
            "description":"A node id or name.",
            "type":"string"
          },
          "ports":{
            "description":"The set of ports for the nodes.",
            "items":{
              "$ref":"#/components/schemas/modelsNetworkPort"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "configTenantObjects":{
        "description":"TenantObjects defines an envelope to hold tenant objects.",
        "properties":{
          "bgpPeers":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/modelsBgpPeer"
            },
            "type":"array"
          },
          "bgpPolicies":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/modelsBgpPolicy"
            },
            "type":"array"
          },
          "candidate":{
            "description":"The transaction name.",
            "type":"string"
          },
          "dhcpRelays":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/modelsDhcpRelay"
            },
            "type":"array"
          },
          "enabled":{
            "description":"Description not available",
            "type":"boolean"
          },
          "id":{
            "description":"Description not available",
            "type":"string"
          },
          "loopbacks":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/modelsLoopback"
            },
            "type":"array"
          },
          "name":{
            "description":"Description not available",
            "type":"string"
          },
          "portChannels":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/modelsPortChannel"
            },
            "type":"array"
          },
          "staticRoutes":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/modelsStaticRoutes"
            },
            "type":"array"
          },
          "subInterfaces":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/modelsSubInterface"
            },
            "type":"array"
          },
          "vlans":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/modelsVlan"
            },
            "type":"array"
          },
          "vnis":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/modelsVni"
            },
            "type":"array"
          },
          "vrfs":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/modelsVrf"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "modelsAdminState":{
        "default":"ENABLED",
        "description":"AdminState defines an enumeration for object's administrative states.",
        "enum":[
          "ENABLED",
          "DISABLED",
          "DELETED",
          "PENDING"
        ],
        "type":"string"
      },
      "modelsAnnotation":{
        "description":"Annotation defines a typed name/value pair.",
        "properties":{
          "dataType":{
            "$ref":"#/components/schemas/modelsDataType"
          },
          "name":{
            "description":"Name defines a user-defined name of annotation.",
            "type":"string"
          },
          "value":{
            "description":"Value defines annotation value expressed as string.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "modelsAssertCategoryType":{
        "default":"ASSERT_CATEGORY_FABRIC",
        "description":"AssertCategoryType specifies the various kinds of assertion categories.",
        "enum":[
          "ASSERT_CATEGORY_FABRIC",
          "ASSERT_CATEGORY_UPSTREAM_PEERING",
          "ASSERT_CATEGORY_HOST_ATTACHMENT",
          "ASSERT_CATEGORY_SERVICES",
          "ASSERT_CATEGORY_COMPLIANCE",
          "ASSERT_CATEGORY_SECURITY"
        ],
        "type":"string"
      },
      "modelsAssertStateType":{
        "default":"ASSERT_STATE_UNKNOWN",
        "description":"AssertStateType specifies the various kinds of states of an assertions.",
        "enum":[
          "ASSERT_STATE_UNKNOWN",
          "ASSERT_STATE_TRUE",
          "ASSERT_STATE_FALSE"
        ],
        "type":"string"
      },
      "modelsBgpMatchGroup":{
        "description":"BgpMatchGroup encapsulates \"MATCH\" part of a BgpRule. E.g. match community <COMMUNITY_LIST>. Note that prefixes are mutually exclusive for matching. That means caller must not provide both IPv4 and IPv6 prefixes.",
        "properties":{
          "communities":{
            "description":"A set of communities to match on. May provide up to 10 communities.",
            "items":{
              "$ref":"#/components/schemas/modelsCommunity"
            },
            "type":"array"
          },
          "ipv4PrefixListId":{
            "description":"IPv4 prefix list identifier. May provide either IPv4 list identifier or IPv4 prefixes, but not both.",
            "type":"string"
          },
          "ipv4Prefixes":{
            "description":"A set of IPv4 prefixes to match on. May provide up to 10 prefixes.",
            "items":{
              "$ref":"#/components/schemas/modelsIpPrefix"
            },
            "type":"array"
          },
          "ipv6PrefixListId":{
            "description":"IPv6 prefix list identifier. May provide either IPv6 list identifier or IPv6 prefixes, but not both.",
            "type":"string"
          },
          "ipv6Prefixes":{
            "description":"A set of IPv6 prefixes to match on. May provide up to 10 prefixes.",
            "items":{
              "$ref":"#/components/schemas/modelsIpPrefix"
            },
            "type":"array"
          },
          "tag":{
            "description":"Match on a specific tag. Tag value range is 1-4294967295.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          }
        },
        "type":"object"
      },
      "modelsBgpPeer":{
        "description":"BgpPeer encapsulates properties of BGP peer. Vrf on a border Node must have a BGP or OSPF object to talk to external routers. BgpPeer provides the config to VRF to peer with external router.",
        "properties":{
          "annotations":{
            "description":"A set of annotations to store user-defined data.",
            "items":{
              "$ref":"#/components/schemas/modelsAnnotation"
            },
            "type":"array"
          },
          "description":{
            "description":"A user-defined description of BgpPeer. Description can be up to 2000 characters.",
            "type":"string"
          },
          "enabled":{
            "description":"Indicates if BgpPeer is enabled or disabled.",
            "type":"boolean"
          },
          "exportPolicyId":{
            "description":"BGP export policy identifier.",
            "type":"string"
          },
          "fabricId":{
            "description":"The identifier of Fabric to which this BgpPeer belongs. Fabric identifier is mandatory, and immutable once set.",
            "type":"string"
          },
          "id":{
            "description":"The unique identifier of BgpPeer. Identifier is required to update an existing BgpPeer. If identifier is missing, then set operation defaults to CREATE mode.",
            "type":"string"
          },
          "importPolicyId":{
            "description":"BGP import policy identifier.",
            "type":"string"
          },
          "ipv4Addresses":{
            "description":"IPv4 addresses of external router. Must not set IPv6 addresses when IPv4 addresses are set. User may not provide more than one IPv4 address.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "ipv6Addresses":{
            "description":"IPv6 addresses of external router. Must not set IPv4 addresses when IPv6 addresses are set. User may not provide more than one IPv6 address.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "labels":{
            "description":"A set of user-defined labels for searching and locating objects.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "localAsn":{
            "description":"Local switch/fabric ASN.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "metadata":{
            "$ref":"#/components/schemas/modelsMetadata"
          },
          "name":{
            "description":"The user-defined name of BgpPeer. BgpPeer name is unique, and is case-insensitive.",
            "type":"string"
          },
          "password":{
            "description":"MD5 password or TCP-AO keychain encryption password in clear text.",
            "type":"string"
          },
          "remoteAsn":{
            "description":"Asn of the external router.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "sourceInf":{
            "$ref":"#/components/schemas/modelsNetworkInterface"
          },
          "tcpAo":{
            "description":"Indicates that authentication is TCP-AO based (not Supported for Beta).",
            "type":"boolean"
          },
          "ttl":{
            "description":"Expected number of hops to the external router.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "vrfId":{
            "description":"VRF to which this BgpPeer is attached to. VrfId is mandatory. External router's IP addresses must be reachable in the VRF.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "modelsBgpPolicy":{
        "description":"BgpPolicy encapsulates properties of a BGP peering policy. BgpPolicy objects are attached to BgpPeer object.",
        "properties":{
          "annotations":{
            "description":"A set of annotations to store user-defined data.",
            "items":{
              "$ref":"#/components/schemas/modelsAnnotation"
            },
            "type":"array"
          },
          "description":{
            "description":"A user-defined description of BgpPolicy. Description can be up to 2000 characters.",
            "type":"string"
          },
          "enabled":{
            "description":"Indicates if BgpPolicy is enabled or disabled.",
            "type":"boolean"
          },
          "export":{
            "description":"Indicates if the policy is a route export or import policy.",
            "type":"boolean"
          },
          "fabricId":{
            "description":"The identifier of Fabric to which this BgpPolicy belongs. Fabric identifier is mandatory, and immutable once set.",
            "type":"string"
          },
          "id":{
            "description":"The unique identifier of BgpPolicy. Identifier is required to update an existing BgpPolicy. If identifier is missing, then set operation defaults to CREATE mode.",
            "type":"string"
          },
          "isDefault":{
            "description":"Indicates that policy is a default BGP policy.",
            "type":"boolean"
          },
          "labels":{
            "description":"A set of user-defined labels for searching and locating objects.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "metadata":{
            "$ref":"#/components/schemas/modelsMetadata"
          },
          "name":{
            "description":"The user-defined name of BgpPolicy. BgpPolicy name is unique, and is case-insensitive.",
            "type":"string"
          },
          "rules":{
            "description":"A set of BGP rules. User may specify up to 10 rules.",
            "items":{
              "$ref":"#/components/schemas/modelsBgpRule"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "modelsBgpRule":{
        "description":"BgpRule encapsulates properties of a BGP rule.",
        "properties":{
          "accept":{
            "description":"Accept or reject (permit or deny).",
            "type":"boolean"
          },
          "action":{
            "description":"Extended action (E.g. on-match next or on-match goto <ruleId>",
            "type":"string"
          },
          "description":{
            "description":"The user-defined description of rule.",
            "type":"string"
          },
          "id":{
            "description":"The identifier of the rule. Id is also the sequence number of rule within the rule list. User may set the identifier, Maximum value may not exceed 100.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "matchGroup":{
            "$ref":"#/components/schemas/modelsBgpMatchGroup"
          },
          "setGroup":{
            "$ref":"#/components/schemas/modelsBgpSetGroup"
          }
        },
        "type":"object"
      },
      "modelsBgpSetGroup":{
        "description":"BgpSetGroup encapsulates \"SET\" part of a BgpRule. E.g. set tag 5000",
        "properties":{
          "asPath":{
            "description":"Set as-path for for outbound routes (export).",
            "items":{
              "maximum":4294967295,
              "minimum":0,
              "type":"integer"
            },
            "type":"array"
          },
          "community":{
            "description":"Set community tag for import or export. For export, BGP stamps outbound routes with this community tag. For route import, BGP sets this tag within the fabric.",
            "type":"string"
          },
          "ipv4NextHop":{
            "description":"Set next-hop IPv4 address for outbound routes (export).",
            "type":"string"
          },
          "ipv6NextHop":{
            "description":"Set next-hop IPv6 address for outbound routes (export).",
            "type":"string"
          },
          "origin":{
            "$ref":"#/components/schemas/modelsRouteOriginType"
          },
          "tag":{
            "description":"Set tag of routes for outbound routes (export).",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          }
        },
        "type":"object"
      },
      "modelsCommunity":{
        "description":"Community encapsulates properties of a BGP community.",
        "properties":{
          "accept":{
            "description":"Accept or reject (permit or deny).",
            "type":"boolean"
          },
          "community":{
            "description":"The BGP community tag. Maybe in wildcard format; e.g. *:100 or 1000:*.",
            "type":"string"
          },
          "description":{
            "description":"A short description for the community.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "modelsConfigOrigin":{
        "default":"CONFIG_ORIGIN_CLOUD",
        "description":"ConfigOrigin is used by a ManagementPort to indicate if the configuration was provided by the cloud or the device.",
        "enum":[
          "CONFIG_ORIGIN_CLOUD",
          "CONFIG_ORIGIN_DEVICE"
        ],
        "type":"string"
      },
      "modelsConfigType":{
        "default":"CONFIG_TYPE_STATIC",
        "description":"ConfigType is used by a ManagementPort to indicate if the configuration is static or DHCP.",
        "enum":[
          "CONFIG_TYPE_STATIC",
          "CONFIG_TYPE_DHCP"
        ],
        "type":"string"
      },
      "modelsConnectedState":{
        "default":"CONNECTED_STATE_NOT_CONNECTED",
        "description":"ConnectedState is used by a ManagementPort to indicate if the port has ever successfully connected to the service. It is distinct from the AdminState.",
        "enum":[
          "CONNECTED_STATE_NOT_CONNECTED",
          "CONNECTED_STATE_CONNECTED"
        ],
        "type":"string"
      },
      "modelsDataType":{
        "default":"STRING",
        "description":"Data type enumeration.",
        "enum":[
          "STRING",
          "INT32",
          "UINT32",
          "INT64",
          "UINT64",
          "BOOL",
          "TIME",
          "UUID",
          "DURATION",
          "JSON"
        ],
        "type":"string"
      },
      "modelsDhcpRelay":{
        "description":"DhcpRelay encapsulates properties of a DHCP relay object. DhcpRelay are specific to Vrf objects, and all interfaces in a DhcpRelay must be in the Vrf. A DhcpRelay must have IP addresses of the DHCP server, and a set of VNI objects that need DHCP relay feature.",
        "properties":{
          "annotations":{
            "description":"A set of annotations to store user-defined data.",
            "items":{
              "$ref":"#/components/schemas/modelsAnnotation"
            },
            "type":"array"
          },
          "description":{
            "description":"A user-defined description of DhcpRelay.",
            "type":"string"
          },
          "enabled":{
            "description":"Indicates if DhcpRelay is enabled or disabled.",
            "type":"boolean"
          },
          "fabricId":{
            "description":"The identifier of Fabric to which this DhcpRelay belong. Fabric identifier is mandatory, and immutable once set.",
            "type":"string"
          },
          "id":{
            "description":"The unique identifier of DhcpRelay. Identifier is required to update an existing DhcpRelay. If identifier is missing, then set operation defaults to CREATE mode.",
            "type":"string"
          },
          "ipv4Addresses":{
            "description":"IPv4 addresses of DHCP server. May provided a maximum of 2 IPv4 addresses.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "ipv6Addresses":{
            "description":"IPv6 addresses of DHCP server. May provided a maximum of 2 IPv6 addresses.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "labels":{
            "description":"A set of user-defined labels for searching and locating objects.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "metadata":{
            "$ref":"#/components/schemas/modelsMetadata"
          },
          "name":{
            "description":"The user-defined name of the DhcpRelay. DhcpRelay name is unique, and is case-insensitive.",
            "type":"string"
          },
          "vnis":{
            "description":"DHCP relay specification on a per VNI basis. User may specify a maximum of 30 VNIs.",
            "items":{
              "$ref":"#/components/schemas/modelsVniDhcp"
            },
            "type":"array"
          },
          "vrfId":{
            "description":"The identifier of Vrf to which this DhcpRelay belong. Vrf identifier is mandatory, and immutable once set.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "modelsFabric":{
        "description":"Fabric is a collection of nodes and port interconnections.  - nodes: A set of nodes classified as LEAF, SPINE.  - connections: Physical port interconnections between nodes.",
        "properties":{
          "address":{
            "description":"Physical address line (E.g. 320 My Street)",
            "type":"string"
          },
          "annotations":{
            "description":"A set of annotations to store user-defined data.",
            "items":{
              "$ref":"#/components/schemas/modelsAnnotation"
            },
            "type":"array"
          },
          "city":{
            "description":"City name (E.g. San Jose)",
            "type":"string"
          },
          "connections":{
            "description":"A set of Fabric interconnection objects. Connections are optional during Fabric modification. If provided, Connections set must be a full set.",
            "items":{
              "$ref":"#/components/schemas/modelsPortConnection"
            },
            "type":"array"
          },
          "country":{
            "description":"Country code (E.g. US)",
            "type":"string"
          },
          "description":{
            "description":"A user-defined description of Fabric.",
            "type":"string"
          },
          "enabled":{
            "description":"Indicates if Fabric is enabled or disabled.",
            "type":"boolean"
          },
          "fabricType":{
            "$ref":"#/components/schemas/modelsFabricType"
          },
          "id":{
            "description":"The unique identifier of Fabric. Identifier is required to update an existing Fabric. If identifier is missing, then set operation defaults to CREATE mode.",
            "type":"string"
          },
          "labels":{
            "description":"A set of user-defined labels for searching and locating objects.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "location":{
            "description":"A user-defined location string (E.g. SJC20).",
            "type":"string"
          },
          "metadata":{
            "$ref":"#/components/schemas/modelsMetadata"
          },
          "name":{
            "description":"The user-defined name of Fabric. Fabric name is unique, and is case-insensitive.",
            "type":"string"
          },
          "nodes":{
            "description":"A set of nodes that are part of Fabric. Nodes are optional during Fabric modification. If provided, Nodes set must be a full set.",
            "items":{
              "$ref":"#/components/schemas/modelsNode"
            },
            "type":"array"
          },
          "numCandidates":{
            "description":"Number of active config candidates. NumCandidates is readonly.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "sagMac":{
            "description":"Optional static anycast gateway's MAC address.",
            "type":"string"
          },
          "topology":{
            "$ref":"#/components/schemas/modelsFabricTopology"
          },
          "unrecognized":{
            "description":"A set of nodes that are discovered but not unrecognized by the service. GetFabrics API does not return unrecognized nodes. However, GetFabricInventories API sets Unrecognized nodes when it finds non-service switches.",
            "items":{
              "$ref":"#/components/schemas/modelsNode"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "modelsFabricTopology":{
        "default":"MESH",
        "description":"FabricTopology defines an enumeration of fabric topology.",
        "enum":[
          "MESH",
          "SPINE_LEAF"
        ],
        "type":"string"
      },
      "modelsFabricType":{
        "default":"INVENTORY",
        "description":"FabricType defines an enumeration of fabric types.",
        "enum":[
          "INVENTORY",
          "BLUEPRINT",
          "PARKINGLOT"
        ],
        "type":"string"
      },
      "modelsInterfaceStp":{
        "description":"InterfaceStp encapsulates configurable STP parameters of a single interface. Interface/Port must be a member of a Vlan for the config to be applied.",
        "properties":{
          "bpduGuard":{
            "description":"BPDU Guard feature enables/disables the connected device's ability to initiate or participate in STP on edge ports. When STP BPDUs are received on the port where BPDU guard is enabled the port will be shutdown. User can re-enable the port administratively after ensuring the BPDUs have stopped coming on the port.",
            "type":"boolean"
          },
          "enabled":{
            "description":"Enable/Disable spanning-tree protocol config for the port. Spanning-tree is enabled only when at least one of the properties is also enabled.",
            "type":"boolean"
          },
          "name":{
            "description":"The name of the NetworkPort or PortChannel.",
            "type":"string"
          },
          "portFast":{
            "description":"Port-fast command is enabled by default on all ports, port-fast allows edge ports to move to forwarding state quickly when the connected device is not participating in spanning-tree.",
            "type":"boolean"
          },
          "rootGuard":{
            "description":"Enforce the root bridge placement in the network and allows STP to interoperate with user network bridges while still maintaining the bridged network topology that the administrator requires. When BPDUs are received on a root guard enabled port, the STP state will be moved to \"Root inconsistent\" state to indicate this condition. Once the port stops receiving superior BPDUs, Root Guard will automatically set the port back to a FORWARDING state after the timeout period has expired.",
            "type":"boolean"
          },
          "uplinkFast":{
            "description":"Uplink fast feature enhances STP performance for switches with redundant uplinks. Using the default value for the standard STP forward delay, convergence following a transition from an active link to a redundant link can take 30 seconds; 15 seconds for listening and an additional 15 seconds for learning.",
            "type":"boolean"
          }
        },
        "type":"object"
      },
      "modelsInterfaceType":{
        "default":"NETWORK_PORT_INTERFACE",
        "description":"InterfaceType enumerates various network interface types.",
        "enum":[
          "NETWORK_PORT_INTERFACE",
          "LOOPBACK_INTERFACE",
          "VLAN_INTERFACE",
          "PORT_CHANNEL_INTERFACE",
          "SUB_PORT_INTERFACE"
        ],
        "type":"string"
      },
      "modelsIpPrefix":{
        "description":"IpPrefix encapsulates properties of an IP prefix.",
        "properties":{
          "accept":{
            "description":"Accept or reject (permit or deny).",
            "type":"boolean"
          },
          "description":{
            "description":"A short description for the prefix.",
            "type":"string"
          },
          "match":{
            "$ref":"#/components/schemas/modelsMatchType"
          },
          "prefix":{
            "description":"IPv4 or IPv6 prefix. Must be in CIDR format.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "modelsLacpMode":{
        "default":"LACP_ACTIVE",
        "description":"LacpMode enumerates different LACP modes.",
        "enum":[
          "LACP_ACTIVE",
          "LACP_PASSIVE",
          "LACP_OFF"
        ],
        "type":"string"
      },
      "modelsLoopback":{
        "description":"Loopback represents a loopback device in a tenancy. Loopback encapsulates an IPv4 address, and an optional IPv6 address.",
        "properties":{
          "annotations":{
            "description":"A set of annotations to store user-defined data.",
            "items":{
              "$ref":"#/components/schemas/modelsAnnotation"
            },
            "type":"array"
          },
          "description":{
            "description":"A user-defined description of Loopback.",
            "type":"string"
          },
          "enabled":{
            "description":"Indicates if Loopback is enabled or disabled.",
            "type":"boolean"
          },
          "fabricId":{
            "description":"The fabric identifier to which this loopback belong to.",
            "type":"string"
          },
          "id":{
            "description":"The unique identifier of Loopback. Identifier is required to update an existing Loopback. If identifier is missing, then set operation defaults to CREATE mode.",
            "type":"string"
          },
          "ipv4Address":{
            "description":"IPv4 address of Loopback device. IPv4 address must be a host IPv4 address.",
            "type":"string"
          },
          "ipv6Address":{
            "description":"IPv6 address of Loopback device. IPv6 address must be a host IPv6 address.",
            "type":"string"
          },
          "labels":{
            "description":"A set of user-defined labels for searching and locating objects.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "metadata":{
            "$ref":"#/components/schemas/modelsMetadata"
          },
          "name":{
            "description":"The user-defined name of the Loopback. Loopback name is unique within a node. Loopback name has a fixed prefix of Loopback and an integer suffix (Eg. Loopback10).",
            "type":"string"
          },
          "nodeId":{
            "description":"The node identifier to which this Loopback belong to.",
            "type":"string"
          },
          "vrfId":{
            "description":"Vrf object attached to this Loopback. Vrf identifier is readonly.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "modelsManagementPort":{
        "description":"ManagementPort encapsulates the configuration of a management port on a device.",
        "properties":{
          "cloudUrls":{
            "description":"A list of one or more cloud URLs for the device.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "configOrigin":{
            "$ref":"#/components/schemas/modelsConfigOrigin"
          },
          "connectedState":{
            "$ref":"#/components/schemas/modelsConnectedState"
          },
          "description":{
            "description":"A description of the configuration. This is a read-only attribute.",
            "type":"string"
          },
          "dnsAddresses":{
            "description":"A list of one or more DNS addresses for the port.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "enabled":{
            "description":"The administrative state of the port.",
            "type":"boolean"
          },
          "id":{
            "description":"The unique identifier of the ManagementPort. Identifier is required to update an existing ManagementPort. If not provided, then assume the port is to be created.",
            "type":"string"
          },
          "ipv4Address":{
            "description":"The IPv4 address for the port. IPv4 address must be a host IPv4 address.",
            "type":"string"
          },
          "ipv4ConfigType":{
            "$ref":"#/components/schemas/modelsConfigType"
          },
          "ipv4Gateway":{
            "description":"The IPv4 gateway address for the port.",
            "type":"string"
          },
          "ipv6Address":{
            "description":"The IPv6 address for the port. IPv6 address must be a host IPv6 address.",
            "type":"string"
          },
          "ipv6ConfigType":{
            "$ref":"#/components/schemas/modelsConfigType"
          },
          "ipv6Gateway":{
            "description":"The IPv6 gateway address for the port.",
            "type":"string"
          },
          "metadata":{
            "$ref":"#/components/schemas/modelsMetadata"
          },
          "name":{
            "description":"A name for the port, eth0. This is a read-only attribute.",
            "type":"string"
          },
          "noProxy":{
            "description":"A list of IP addresses or domain names that should not be proxied.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "nodeId":{
            "description":"The identifier of the Node that owns the ManagementPort. NodeId is readonly, and cannot be modified.",
            "type":"string"
          },
          "ntpAddresses":{
            "description":"NTP servers.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "proxyAddress":{
            "description":"A http address for a configured proxy for the port.",
            "type":"string"
          },
          "proxyCredentialsId":{
            "description":"A reference to a set of credentials for the proxy.",
            "type":"string"
          },
          "proxyPassword":{
            "description":"A password to be used to authenticate to the proxy. Once set, this attribute is not returned.",
            "type":"string"
          },
          "proxyUsername":{
            "description":"A user name for the proxy server if provided.",
            "type":"string"
          },
          "setProxyPassword":{
            "description":"An indicator that the password should be cleared. The unencrypted password is not returned to the caller and this is used to differentiate between clearing the password and not changing it.",
            "type":"boolean"
          }
        },
        "type":"object"
      },
      "modelsMatchType":{
        "default":"MATCH_EQ",
        "description":"MatchType enumerates different conditional matching operators.",
        "enum":[
          "MATCH_EQ",
          "MATCH_GE",
          "MATCH_LE"
        ],
        "type":"string"
      },
      "modelsMetadata":{
        "description":"Metadata defines metadata of all objects in the service.",
        "properties":{
          "createdAt":{
            "description":"Object creation timestamp.",
            "format":"date-time",
            "type":"string"
          },
          "createdBy":{
            "description":"UserId of the user who created the object.",
            "type":"string"
          },
          "modifiedAt":{
            "description":"Last object modification timestamp.",
            "format":"date-time",
            "type":"string"
          },
          "modifiedBy":{
            "description":"UserId of the user who modified the object.",
            "type":"string"
          },
          "revisionId":{
            "description":"The revision identifier.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "modelsNetworkInterface":{
        "description":"NetworkInterface encapsulates properties of a network interface attached to a VRF. A NetworkInterface maybe a NetworkPort, Vlan interface (SVI), Loopback, PortChannel or a SubInterface.",
        "properties":{
          "ipv4Addresses":{
            "description":"IPv4 addresses of network interface. IPv4 addresses are readonly, and are set by some APIs (E.g. GetVrfs API when NeedIps is set to true).",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "ipv6Addresses":{
            "description":"IPv6 addresses of network interface. IPv6 addresses are readonly, and are set by some APIs (E.g. GetVrfs API when NeedIps is set to true).",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "name":{
            "description":"The name of the network interface.",
            "type":"string"
          },
          "nodeId":{
            "description":"The node identifier where the interface is located. API users may specify either node name or node identifier.",
            "type":"string"
          },
          "type":{
            "$ref":"#/components/schemas/modelsInterfaceType"
          },
          "vlanId":{
            "description":"Vlan identifier - required only for Vlan interface. Name field is ignored when VlanId is specified.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "vni":{
            "description":"The parent VNI of the Vlan. Valid only for Vlan interface.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          }
        },
        "type":"object"
      },
      "modelsNetworkPort":{
        "description":"NetworkPort encapsulates properties of a physical network port.",
        "properties":{
          "annotations":{
            "description":"A set of annotations to store user-defined data.",
            "items":{
              "$ref":"#/components/schemas/modelsAnnotation"
            },
            "type":"array"
          },
          "breakout":{
            "description":"Indicates that port is in a break-out mode. Breakout flag is readonly.",
            "type":"boolean"
          },
          "breakoutIndex":{
            "description":"Breakout index of the port. Breakout index is not set when port is not in breakout mode. Breakout index is readonly.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "description":{
            "description":"A user-defined description of NetworkPort.",
            "type":"string"
          },
          "enabled":{
            "description":"Indicates if NetworkPort is enabled or disabled.",
            "type":"boolean"
          },
          "fec":{
            "description":"FEC for the network port. Supported modes are \"rs\" and \"none\". FEC must be \"none\" for 100G DR/FR/LR cables.",
            "type":"string"
          },
          "forceCounter":{
            "description":"User may increment ForceCounter attribute to force a config update when there are no real changes. This maybe needed to startup (un-shut) a port when STP triggers port shutdown.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "id":{
            "description":"The unique identifier of NetworkPort. Identifier is required to update an existing NetworkPort. If identifier is missing, then set operation defaults to CREATE mode.",
            "type":"string"
          },
          "index":{
            "description":"Index of the NetworkPort on the linecard. Port index is one based. Index remains same for all NetworkPort objects in break-out mode. Index is readonly.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "ipv4Addresses":{
            "description":"Port's IPv4 addresses. The service supports up to 2 IPv4 addresses, and every address must be a network address. Meaning, address must be in CIDR format with CIDR < 32. IPv4 address is valid only for routed ports.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "ipv6Addresses":{
            "description":"Port's IPv6 addresses. The service supports up to 2 IPv6 addresses, and every address must be a network address. Meaning, address must be in CIDR format with CIDR < 128. IPv6 address is valid only for routed ports.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "labels":{
            "description":"A set of user-defined labels for searching and locating objects.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "linecard":{
            "description":"Linecard index of the port. Linecard is readonly.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "linkDown":{
            "description":"Indicates that port is in link-down state. In this mode, AdminState is UP, however, port may not forward any traffic to external hosts. LinkDown state is not supported for Fabric ports.",
            "type":"boolean"
          },
          "maxSpeed":{
            "description":"Maximum speed of the NetworkPort as reported by system (readonly) (E.g. 10G).",
            "type":"string"
          },
          "metadata":{
            "$ref":"#/components/schemas/modelsMetadata"
          },
          "mtu":{
            "description":"MTU of the NetworkPort. Default value is 9100. MTU value must be between 1500 and 9100.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "name":{
            "description":"The canonical name of NetworkPort. Name must have a prefix of Ethernet (E.g. Ethernet1_1). NetworkPort name cannot be modified.",
            "type":"string"
          },
          "nodeId":{
            "description":"The identifier of th Node that owns the NetworkPort. NodeId is readonly, and cannot be modified.",
            "type":"string"
          },
          "pluggable":{
            "description":"User provided cable model name (PID).",
            "type":"string"
          },
          "roles":{
            "description":"A set of roles of the NetworkPort. Port roles are mandatory, and must have exactly one role in it.",
            "items":{
              "format":"int32",
              "type":"integer"
            },
            "type":"array"
          },
          "speed":{
            "description":"Configurable speed mode of the port, E.g. 1x10G(1). Note that port speed cannot be set for breakout ports.",
            "type":"string"
          },
          "stp":{
            "$ref":"#/components/schemas/modelsInterfaceStp"
          },
          "subInfCount":{
            "description":"Number of SubInterface objects attached to the NetworkPort object. This property is readonly.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "vlanIds":{
            "description":"VlanIds defines the identifiers Vlan in which this port is a member of. VlanIds is readonly. VlanIds is set by GetNodesPorts API.",
            "items":{
              "maximum":4294967295,
              "minimum":0,
              "type":"integer"
            },
            "type":"array"
          },
          "vnis":{
            "description":"Vnis defines the identifiers Vni to which this port is attached to. Vnis is readonly. Vnis is set by GetNodesPorts API.",
            "items":{
              "maximum":4294967295,
              "minimum":0,
              "type":"integer"
            },
            "type":"array"
          },
          "vrfId":{
            "description":"The identifier of VRF to which this port belongs to. VRF identifier is set only for routed ports that are added to a VRF.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "modelsNode":{
        "description":"Node encapsulates properties of a blueprint fabric node. A node has the following properties and child objects.  - roles: A set of roles that defines what the node is for.  - ports: Physical ports of node. If a port is in break-out mode,   then the break-out ports are treated as physical ports of the node.  - routerId: The service allocated router identifier meant for BGP sessions.",
        "properties":{
          "annotations":{
            "description":"A set of annotations to store user-defined data.",
            "items":{
              "$ref":"#/components/schemas/modelsAnnotation"
            },
            "type":"array"
          },
          "breakouts":{
            "description":"Port breakout configs of the node. Breakouts are set only when entire Fabric config is queried.",
            "items":{
              "$ref":"#/components/schemas/modelsPortBreakout"
            },
            "type":"array"
          },
          "connections":{
            "description":"Fabric connection objects of the node. Note that connection list do not have host (endpoint) connections.",
            "items":{
              "$ref":"#/components/schemas/modelsPortConnection"
            },
            "type":"array"
          },
          "description":{
            "description":"A user-defined description of the node.",
            "type":"string"
          },
          "deviceId":{
            "description":"The identifier of bound (attached) physical device. Device identifier is readonly.",
            "type":"string"
          },
          "enabled":{
            "description":"Indicates if node is enabled or disabled.",
            "type":"boolean"
          },
          "fabricId":{
            "description":"The identifier of Fabric to which the node belongs. Fabric identifier is readonly.",
            "type":"string"
          },
          "id":{
            "description":"The unique identifier of the Node. Identifier is required to update an existing node. If identifier is missing, then set operation defaults to CREATE mode.",
            "type":"string"
          },
          "labels":{
            "description":"A set of user-defined labels for searching and locating objects.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "location":{
            "description":"A user-defined location string (E.g. SJC20).",
            "type":"string"
          },
          "managementPorts":{
            "description":"Management ports for the node.",
            "items":{
              "$ref":"#/components/schemas/modelsManagementPort"
            },
            "type":"array"
          },
          "metadata":{
            "$ref":"#/components/schemas/modelsMetadata"
          },
          "modelName":{
            "description":"Hardware model name of the node. Model name cannot be nullified.",
            "type":"string"
          },
          "name":{
            "description":"The user-defined name of the Node. Node name is unique, and must be a FQDN compliant, single label hostname.",
            "type":"string"
          },
          "nodeType":{
            "$ref":"#/components/schemas/modelsNodeType"
          },
          "osType":{
            "$ref":"#/components/schemas/modelsOsType"
          },
          "ports":{
            "description":"NetworkPort objects of the node. Ports are optional for node updates.",
            "items":{
              "$ref":"#/components/schemas/modelsNetworkPort"
            },
            "type":"array"
          },
          "position":{
            "description":"Position of Node in the fabric's node list. Position is readonly.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "roles":{
            "description":"A set of roles of the Node. Node roles are mandatory. A Node can have either LEAF or SPINE role, but not both.",
            "items":{
              "format":"int32",
              "type":"integer"
            },
            "type":"array"
          },
          "serialNumber":{
            "description":"Serial number of the node. Serial number cannot be nullified.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "modelsNodeRole":{
        "default":"LEAF",
        "description":"NodeRole defines an enumeration of node roles.",
        "enum":[
          "LEAF",
          "SPINE"
        ],
        "type":"string"
      },
      "modelsNodeType":{
        "default":"NODE_BLUEPRINT",
        "description":"NodeType defines an enumeration of node types.",
        "enum":[
          "NODE_BLUEPRINT",
          "NODE_SWITCH"
        ],
        "type":"string"
      },
      "modelsObjectType":{
        "default":"USER",
        "description":"Object type enumeration. By convention, ObjectType must have exact same string name (in uppercase) as Go type name. For example, Go type Fabric must have an object type of FABRIC.",
        "enum":[
          "USER",
          "TENANT",
          "FABRIC",
          "NODE",
          "NETWORK_PORT",
          "PORT_CONNECTION",
          "VLAN",
          "SVI",
          "DHCP_RELAY",
          "VRF",
          "STATIC_ROUTES",
          "PORT_CHANNEL",
          "FABRIC_TRANSACTION",
          "ORGANIZATION",
          "BEARER_TOKEN",
          "API_KEY",
          "REST_KEY",
          "VNI",
          "MANAGEMENT_PORT",
          "LOOPBACK",
          "SUB_INTERFACE",
          "PER_VLAN_STP",
          "BGP_PEER",
          "PORT_BREAKOUT",
          "BGP_POLICY",
          "PREFIX_LIST",
          "DEVICE",
          "NOTIFICATION_ENDPOINT",
          "CERTIFICATES"
        ],
        "type":"string"
      },
      "modelsOperation":{
        "default":"CREATE",
        "description":"Operation type enumeration.",
        "enum":[
          "CREATE",
          "UPDATE",
          "DELETE",
          "ENABLE",
          "DISABLE",
          "LOGIN",
          "LOGOUT",
          "COMMIT",
          "REVERT",
          "BIND",
          "UNBIND",
          "COMMENT"
        ],
        "type":"string"
      },
      "modelsOsType":{
        "default":"HYPER_FABRIC",
        "description":"OsType lists various device operating system types.",
        "enum":[
          "HYPER_FABRIC",
          "NEXUS",
          "IOS_XE",
          "IOS_XR",
          "LINUX",
          "WINDOWS"
        ],
        "type":"string"
      },
      "modelsPerVlanStp":{
        "description":"PerVlanStp encapsulates properties of a Per-Vlan spanning tree protocol config object. There can be only one PerVlanStp config for a fabric.",
        "properties":{
          "enabled":{
            "description":"Indicates if PerVlanStp is enabled or disabled.",
            "type":"boolean"
          },
          "fabricId":{
            "description":"The identifier of Fabric to which this PerVlanStp belong. Fabric identifier is mandatory, and immutable once set.",
            "type":"string"
          },
          "forwardDelay":{
            "description":"Packet forward delay time in seconds. Default value is 15s, and range is 4-30s.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "helloInterval":{
            "description":"Hello interval in seconds for transmission of BPDUs. Default values is 2s, and range is 1-10s.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "maxAge":{
            "description":"Maximum time to listen for root bridge in seconds. Default value is 20s, and range is 6-40s.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "metadata":{
            "$ref":"#/components/schemas/modelsMetadata"
          },
          "priority":{
            "description":"Bridge priority value as a multiple of 4096. Default is 32768, and range is 4096-61440.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "rootGuardTimeout":{
            "description":"Switch waits for timeout duration before moving the port to forwarding state when superior BPDUs (Bridge Protocol Data Unit) stop coming to the port. Default value is 30s, and range is 5-600s.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "stpMac":{
            "description":"Bridge MAC address. User is expected to set the lowest MAC address to make this Fabric as the root of spanning tree.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "modelsPortBreakout":{
        "description":"PortBreakout encapsulates network port breakout policy. PortBreakout does not represent a configurable object. It is a policy that gets applied to a switch.",
        "properties":{
          "annotations":{
            "description":"A set of annotations to store user-defined data.",
            "items":{
              "$ref":"#/components/schemas/modelsAnnotation"
            },
            "type":"array"
          },
          "breakouts":{
            "description":"The output of the port breakout operation (readonly).",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "description":{
            "description":"A user-defined description of PortBreakout.",
            "type":"string"
          },
          "enabled":{
            "description":"Indicates if PortBreakout is enabled or disabled.",
            "type":"boolean"
          },
          "fabricId":{
            "description":"The identifier of Fabric to which this PortBreakout belongs to. FabricId is mandatory.",
            "type":"string"
          },
          "id":{
            "description":"The unique identifier of PortBreakout. Identifier is required to update an existing PortBreakout. If identifier is missing, then set operation defaults to CREATE mode.",
            "type":"string"
          },
          "labels":{
            "description":"A set of user-defined labels for searching and locating objects.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "metadata":{
            "$ref":"#/components/schemas/modelsMetadata"
          },
          "mode":{
            "description":"Breakout mode. E.g. 2x200G(2)",
            "type":"string"
          },
          "name":{
            "description":"The user-defined name of the PortBreakout object.",
            "type":"string"
          },
          "nodeId":{
            "description":"The identifier of the node for which the PortBreakout is for. NodeId is mandatory.",
            "type":"string"
          },
          "pluggable":{
            "description":"User-defined cable model name (PID).",
            "type":"string"
          },
          "ports":{
            "description":"The names of base network ports.",
            "items":{
              "type":"string"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "modelsPortChannel":{
        "description":"PortChannel represents a set of physical ports in a PortChannel or LACP config. PortChannel name is unique within a fabric. The service automatically assigns a name if a name is not specified during PortChannel creation. NOTES: - PortChannel object must have HOST_PORT or ROUTED_PORT as role. - PortChannel members cannot be part of Vlans. - PortChannel member ports must have MLAG_PORT as port role.",
        "properties":{
          "annotations":{
            "description":"A set of annotations to store user-defined data.",
            "items":{
              "$ref":"#/components/schemas/modelsAnnotation"
            },
            "type":"array"
          },
          "description":{
            "description":"A user-defined description of PortChannel.",
            "type":"string"
          },
          "enabled":{
            "description":"Indicates if PortChannel is enabled or disabled.",
            "type":"boolean"
          },
          "fabricId":{
            "description":"The identifier of Fabric to which this PortChannel belongs to. FabricId is mandatory.",
            "type":"string"
          },
          "id":{
            "description":"The unique identifier of PortChannel. Identifier is required to update an existing PortChannel. If identifier is missing, then set operation defaults to CREATE mode.",
            "type":"string"
          },
          "ipv4Addresses":{
            "description":"IPv4 addresses of PortChannel. The service supports up to 2 IPv4 addresses, and every address must be a network address. Meaning, address must be in CIDR format with CIDR < 32. IPv4 address is valid only for routed PortChannel.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "ipv6Addresses":{
            "description":"IPv6 addresses of PortChannel. The service supports up to 2 IPv6 addresses, and every address must be a network address. Meaning, address must be in CIDR format with CIDR < 128. IPv6 address is valid only for routed PortChannel.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "labels":{
            "description":"A set of user-defined labels for searching and locating objects.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "lacpMode":{
            "$ref":"#/components/schemas/modelsLacpMode"
          },
          "maxSpeed":{
            "description":"Maximum speed of the PortChannel (readonly) (E.g. 10G).",
            "type":"string"
          },
          "members":{
            "description":"A set of member NetworkPort objects (E.g. Ethernet1_1, Ethernet1_4 etc.). There must be at least two members.",
            "items":{
              "$ref":"#/components/schemas/modelsPortEndpoint"
            },
            "type":"array"
          },
          "metadata":{
            "$ref":"#/components/schemas/modelsMetadata"
          },
          "minLinks":{
            "description":"Minimum number of active links needed for PortChannel to operate.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "mtu":{
            "description":"MTU of the PortChannel. Value must be between 1500 and 9600.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "name":{
            "description":"The name of PortChannel. Name must have a prefix of PortChannel (E.g. PortChannel1).",
            "type":"string"
          },
          "roles":{
            "description":"A set of roles of the PortChannel. Roles must have exactly one entry, and it must be either HOST_PORT or ROUTED_PORT.",
            "items":{
              "format":"int32",
              "type":"integer"
            },
            "type":"array"
          },
          "stp":{
            "$ref":"#/components/schemas/modelsInterfaceStp"
          },
          "sysMac":{
            "description":"MAC address used for EVPN multi-homing.",
            "type":"string"
          },
          "vlanIds":{
            "description":"VlanIds defines the identifiers Vlan in which this PortChannel is a member of. VlanIds is readonly.",
            "items":{
              "maximum":4294967295,
              "minimum":0,
              "type":"integer"
            },
            "type":"array"
          },
          "vnis":{
            "description":"Vnis defines the identifiers Vni in which this PortChannel is a member of. Vnis is readonly.",
            "items":{
              "maximum":4294967295,
              "minimum":0,
              "type":"integer"
            },
            "type":"array"
          },
          "vrfId":{
            "description":"The identifier of VRF to which this PortChannel belongs to. VRF identifier is set only for routed PortChannel that are added to a VRF.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "modelsPortConnection":{
        "description":"PortConnection defines a physical connection connection between two nodes. Network ports in the port connections have a role of FABRIC. A PortConnection is bidirectional, and that means that Local and Remote are interchangeable.",
        "properties":{
          "description":{
            "description":"Connection description.",
            "type":"string"
          },
          "fabricId":{
            "description":"Description not available",
            "type":"string"
          },
          "id":{
            "description":"Description not available",
            "type":"string"
          },
          "local":{
            "$ref":"#/components/schemas/modelsPortEndpoint"
          },
          "osType":{
            "$ref":"#/components/schemas/modelsOsType"
          },
          "pluggable":{
            "description":"Expected port index (QSFP or product identifier)",
            "type":"string"
          },
          "remote":{
            "$ref":"#/components/schemas/modelsPortEndpoint"
          },
          "unrecognized":{
            "description":"Connection is to an unrecognized nodes.",
            "type":"boolean"
          }
        },
        "type":"object"
      },
      "modelsPortEndpoint":{
        "description":"PortEndpoint defines a globally unique port location or endpoint.",
        "properties":{
          "nodeId":{
            "description":"The external identifier of the node.",
            "type":"string"
          },
          "nodeName":{
            "description":"User defined name of the node.",
            "type":"string"
          },
          "portName":{
            "description":"The canonical name of port (E.g. Ethernet1_1).",
            "type":"string"
          }
        },
        "type":"object"
      },
      "modelsPortRole":{
        "default":"UNUSED_PORT",
        "description":"PortType enumerates different physical port types.",
        "enum":[
          "UNUSED_PORT",
          "FABRIC_PORT",
          "HOST_PORT",
          "ROUTED_PORT",
          "LAG_PORT"
        ],
        "type":"string"
      },
      "modelsRouteInfo":{
        "description":"RouteInfo defines a single static route. RouteInfo has a network IPv4 or IPv6 address and a next-hop address. Network and next-hop must be of the same type.",
        "properties":{
          "discard":{
            "description":"Route is a black-hole route.",
            "type":"boolean"
          },
          "interface":{
            "description":"Next-hop interface or network port name.",
            "type":"string"
          },
          "nextHop":{
            "description":"The next-hop IP address. Must be a host IP address.",
            "type":"string"
          },
          "nextVrf":{
            "description":"The name of VRF where the next-hop is present.",
            "type":"string"
          },
          "nodeId":{
            "description":"The node identifier where the route is valid.",
            "type":"string"
          },
          "preference":{
            "description":"Preference order (ascending) Must be between 1 and 10.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "prefix":{
            "description":"IPv4 or IPv6 prefix in CIDR format.",
            "type":"string"
          },
          "tag":{
            "description":"Static route tag.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          }
        },
        "type":"object"
      },
      "modelsRouteOriginType":{
        "default":"ROUTE_ORIGIN_EBGP",
        "description":"RouteOriginType enumerates different BGP route origins.",
        "enum":[
          "ROUTE_ORIGIN_EBGP",
          "ROUTE_ORIGIN_IBGP"
        ],
        "type":"string"
      },
      "modelsStaticRoutes":{
        "description":"StaticRoutes encapsulates a set of StaticRoute objects. StaticRoutes maybe defined at tenancy level, and then applied to multiple Vrf objects.",
        "properties":{
          "annotations":{
            "description":"A set of annotations to store user-defined data.",
            "items":{
              "$ref":"#/components/schemas/modelsAnnotation"
            },
            "type":"array"
          },
          "description":{
            "description":"A user-defined description of StaticRoutes.",
            "type":"string"
          },
          "enabled":{
            "description":"Indicates if StaticRoutes is enabled or disabled.",
            "type":"boolean"
          },
          "fabricId":{
            "description":"The identifier of Fabric to which this StaticRoutes belong. Fabric identifier is mandatory.",
            "type":"string"
          },
          "id":{
            "description":"The unique identifier of StaticRoutes. Identifier is required to update an existing StaticRoutes. If identifier is missing, then set operation defaults to CREATE mode.",
            "type":"string"
          },
          "labels":{
            "description":"A set of user-defined labels for searching and locating objects.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "metadata":{
            "$ref":"#/components/schemas/modelsMetadata"
          },
          "name":{
            "description":"The user-defined name of the StaticRoutes. StaticRoutes name is unique, and is case-insensitive.",
            "type":"string"
          },
          "routes":{
            "description":"A set of StaticRouteInfo specifications.",
            "items":{
              "$ref":"#/components/schemas/modelsRouteInfo"
            },
            "type":"array"
          },
          "vrfId":{
            "description":"The identifier of Vrf to which this StaticRoutes belong. Vrf identifier is immutable once set.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "modelsSubInterface":{
        "description":"SubInterface encapsulates properties of a sub-port or sub-interface. SubInterface provides logical division of a physical interface. SubInterface cannot be added to a NetworkPort or a PortChannel attached to Vlans. SubInterface maybe added a routed port or routed PortChannel.",
        "properties":{
          "annotations":{
            "description":"A set of annotations to store user-defined data.",
            "items":{
              "$ref":"#/components/schemas/modelsAnnotation"
            },
            "type":"array"
          },
          "description":{
            "description":"A user-defined description of SubInterface.",
            "type":"string"
          },
          "enabled":{
            "description":"Indicates if SubInterface is enabled or disabled.",
            "type":"boolean"
          },
          "fabricId":{
            "description":"The identifier of Fabric to which this SubInterface belongs to. FabricId is mandatory.",
            "type":"string"
          },
          "id":{
            "description":"The unique identifier of SubInterface. Identifier is required to update an existing SubInterface. If identifier is missing, then set operation defaults to CREATE mode.",
            "type":"string"
          },
          "ipv4Addresses":{
            "description":"SubInterface's IPv4 addresses. The service supports up to 2 IPv4 addresses, and every address must be a network address. Meaning, address must be in CIDR format with CIDR < 32.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "ipv6Addresses":{
            "description":"SubInterface's IPv6 addresses. The service supports up to 2 IPv6 addresses, and every address must be a network address. Meaning, address must be in CIDR format with CIDR < 128.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "labels":{
            "description":"A set of user-defined labels for searching and locating objects.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "metadata":{
            "$ref":"#/components/schemas/modelsMetadata"
          },
          "name":{
            "description":"The user-defined name of the SubInterface. SubInterface name is unique, and must be in the format (<Ethernet1_4_1|<PortChannel0>)[.]<ID>",
            "type":"string"
          },
          "nodeId":{
            "description":"The identifier of the Node where SubInterface is located. NodeId is mandatory.",
            "type":"string"
          },
          "parent":{
            "description":"The name of parent interface. This property is readonly.",
            "type":"string"
          },
          "vlanId":{
            "description":"Vlan identifier of SubInterface.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "vrfId":{
            "description":"The identifier of VRF to which this SubInterface belongs to.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "modelsSvi":{
        "description":"Svi encapsulates properties of a Switch Virtual Interface (SVI). A Svi is a Layer3 interface for a VLAN on a given switch. NOTES:  * Svi is used to link a Vrf to a Vlan. Svi also acts as a gateway for the   hosts connected to the Vlan.  * Svi can be a static-anycast-gateway. In this mode, Svi is not bound to   a specific node. Instead, it gets mapped to all nodes where Vlan",
        "properties":{
          "enabled":{
            "description":"Indicates if the SVI is in enabled state or not.",
            "type":"boolean"
          },
          "ipv4Addresses":{
            "description":"IPv4 addresses of SVI. The service supports up to 1 IPv4 address, and address must be a network address. Meaning, address must be in CIDR format with CIDR < 32.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "ipv6Addresses":{
            "description":"IPv6 addresses of SVI. The service supports up to 1 IPv6 address, and address must be a network address. Meaning, address must be in CIDR format with CIDR < 128.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "nodeId":{
            "description":"The optional node identifier. Must be empty for static-anycast-gateway.",
            "type":"string"
          },
          "vlanId":{
            "description":"The identifier of Vlan to which this SVI belongs to.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          }
        },
        "type":"object"
      },
      "modelsTokenScope":{
        "default":"TOKEN_SCOPE_ADMIN",
        "description":"Scope defines scope of tokens and keys used for authorization.",
        "enum":[
          "TOKEN_SCOPE_ADMIN",
          "TOKEN_SCOPE_READ_ONLY",
          "TOKEN_SCOPE_READ_WRITE"
        ],
        "type":"string"
      },
      "modelsUser":{
        "description":"User describes a user in a tenant. A user, identified by email, may be long to multiple tenants. Each instance of a user in a tenant is represented by a separate User record. Only user with administrative privileges may modify another user's User record.",
        "properties":{
          "email":{
            "description":"The canonical username of User, must be a valid email address. Caller must an administrator and provide an email of a User in the tenant of the given context in order to update that user.",
            "type":"string"
          },
          "enabled":{
            "description":"Indicates if User is enabled or disabled.",
            "type":"boolean"
          },
          "id":{
            "description":"This is a read-only field. The unique identifier of User. Identifier is required to update an existing User.",
            "type":"string"
          },
          "labels":{
            "description":"A set of user-defined labels for searching and locating objects.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "lastLogin":{
            "description":"This is a read-only field. The last recorded web interface login time of the user.",
            "format":"date-time",
            "type":"string"
          },
          "metadata":{
            "$ref":"#/components/schemas/modelsMetadata"
          },
          "role":{
            "$ref":"#/components/schemas/modelsUserRole"
          }
        },
        "type":"object"
      },
      "modelsUserRole":{
        "default":"ADMIN",
        "description":"UserRole defines user-role enumeration.",
        "enum":[
          "ADMIN",
          "READ_WRITE",
          "READ_ONLY"
        ],
        "type":"string"
      },
      "modelsVlan":{
        "description":"Vlan represents a Vlan in a tenancy. Vlan encapsulates a VLAN identifier, and a set of network ports from leaf node. Vlan is locally significant, meaning a Vlan is meaningful only within the switch. The service allows creating \"global\" Vlan, however it is meaningful only in the context of a switch.\nVLAN-ID   Ports     ---------  ------- Leaf0:      10     [Ethernet1_1, Ethernet1_8]      20     [Ethernet1_4, Ethernet1_12] Leaf1:      10     [Ethernet1_16, Ethernet1_32]      20     [Ethernet1_1, Ethernet1_12]\nNOTES: Vlan always belong to a Vni.",
        "properties":{
          "annotations":{
            "description":"A set of annotations to store user-defined data.",
            "items":{
              "$ref":"#/components/schemas/modelsAnnotation"
            },
            "type":"array"
          },
          "description":{
            "description":"A user-defined description of Vlan.",
            "type":"string"
          },
          "enabled":{
            "description":"Indicates if Vlan is enabled or disabled.",
            "type":"boolean"
          },
          "fabricId":{
            "description":"The identifier of Fabric to which this Vlan belong.",
            "type":"string"
          },
          "id":{
            "description":"The unique identifier of Vlan. Identifier is required to update an existing Vlan. If identifier is missing, then set operation defaults to CREATE mode.",
            "type":"string"
          },
          "labels":{
            "description":"A set of user-defined labels for searching and locating objects.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "members":{
            "description":"A set of NetworkPort objects that are members of this Vlan.",
            "items":{
              "$ref":"#/components/schemas/modelsVlanMember"
            },
            "type":"array"
          },
          "metadata":{
            "$ref":"#/components/schemas/modelsMetadata"
          },
          "name":{
            "description":"The user-defined name of the Vlan. Vlan name is unique, and is case-insensitive.",
            "type":"string"
          },
          "svis":{
            "description":"Vlan's SVI objects. SVI objects are optional for Vlan updates. However, if SVI objects are supplied, then it must be a full set.",
            "items":{
              "$ref":"#/components/schemas/modelsSvi"
            },
            "type":"array"
          },
          "vlanId":{
            "description":"The Vlan identifier. Vlan identifier must be between 2 and 3600. The service reserves Vlan identifier between 3601 and 4096.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "vni":{
            "description":"Vni to which this Vlan is attached to. Vni is readonly.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "vrfId":{
            "description":"Vrf object attached to this Vlan. Vrf identifier is readonly.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "modelsVlanMember":{
        "description":"VlanMember encapsulates properties of a Vlan member port. Every VlanMember can have its own VlanId that is locally visible in the node, but not visible to external entities. Parent Vlan has its own authoritative VlanId that is visible to external entities.\nNOTES: When member's VlanId is different from parent Vlan's VlanId, then the service configures VlanId translation.",
        "properties":{
          "port":{
            "$ref":"#/components/schemas/modelsPortEndpoint"
          },
          "untagged":{
            "description":"Indicates that Vlan member is untagged.",
            "type":"boolean"
          },
          "vlanId":{
            "description":"Vlan identifier that is local to the switch. Vlan identifier must be between 2 and 3600. The service reserves Vlan identifier between 3601 and 4096.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          }
        },
        "type":"object"
      },
      "modelsVni":{
        "description":"Vni encapsulates properties of a L2/L3 logical network (VNI). Vni has two distinct modes - L2VNI and L3VNI. In L3VNI mode, Vni allows bidirectional flow of traffic between a Layer-2 bridged network and a Layer-3 routed network. Whereas, in L2VNI mode, Vni allows traffic between all participating ports through a subnet.",
        "properties":{
          "annotations":{
            "description":"A set of annotations to store user-defined data.",
            "items":{
              "$ref":"#/components/schemas/modelsAnnotation"
            },
            "type":"array"
          },
          "description":{
            "description":"A user-defined description of Vni.",
            "type":"string"
          },
          "enabled":{
            "description":"Indicates if Vni is enabled or disabled.",
            "type":"boolean"
          },
          "fabricId":{
            "description":"The identifier of Fabric to which this Vni belongs to. Fabric identifier or fabric name must be provided.",
            "type":"string"
          },
          "id":{
            "description":"The unique object identifier of Vni. Identifier is required to update an existing Vni. If identifier is missing, then set operation defaults to CREATE mode.",
            "type":"string"
          },
          "isDefault":{
            "description":"Indicates that Vni is a default (aut-created) VNI (readonly).",
            "type":"boolean"
          },
          "isL3":{
            "description":"Indicates that Vni is in L3VNI mode. The service will create A VRF in L3VNI mode. Once set, user may not change mode from L3VNI to L2VNI or vice versa.",
            "type":"boolean"
          },
          "labels":{
            "description":"A set of user-defined labels for searching and locating objects.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "members":{
            "description":"The member network ports of Vni. Must provide member ports during Vni creation.",
            "items":{
              "$ref":"#/components/schemas/modelsVlanMember"
            },
            "type":"array"
          },
          "metadata":{
            "$ref":"#/components/schemas/modelsMetadata"
          },
          "mtu":{
            "description":"Maximum transfer unit of Vni. Value must be between 1500 and 9600. MTU of all member network ports will inherit this MTU.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "name":{
            "description":"The user-defined name of the Vni. Vni name is unique, and is case-insensitive.",
            "type":"string"
          },
          "svis":{
            "description":"The switch virtual interfaces (SVI) of Vni in L3VNI mode or static-anycast-gateway of Vni in L2VNI mode. L2VNI rules:  1) There must be exactly one SAG enabled SVI entry.  2) NodeId attribute of SVI must be empty. L3VNI rules:  1) There must be one SVI per node per Vlan.  2) NodeId attribute of SVI must be set to the node where SVI should be active.",
            "items":{
              "$ref":"#/components/schemas/modelsSvi"
            },
            "type":"array"
          },
          "vni":{
            "description":"The Vxlan network identifier (VNI). The service allocates a VNI if not provided. If VNI is provided, then the value must be between 2 and 6000000. The service reserves VNI values above 6000000 (6M).",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "vrfId":{
            "description":"The Vrf associated with the Vni. L2VNI:  1) Vrf belongs to a separate L3VNI object.  2) User may link SVI of VNI with an existing VRF.  3) If Vrf is present in setVnis request, then the service will link SVI to VRF.  4) The service will not update or delete any other VRF interfaces. L3VNI:  1) Vrf belongs to the L3VNI itself.  2) Vni automatically creates a VRF.  3) All SVIs of L3VNI are automatically added to the VRF.",
            "type":"string"
          }
        },
        "type":"object"
      },
      "modelsVniDhcp":{
        "description":"VniDhcp encapsulates properties of a VNI DHCP relay. VniDhcp is used for setting up inter-VNI DHCP relay.",
        "properties":{
          "ipv4Enabled":{
            "description":"Indicates that IPv4 DHCP relay is enabled for VNI.",
            "type":"boolean"
          },
          "ipv6Enabled":{
            "description":"Indicates that IPv6 DHCP relay is enabled for VNI.",
            "type":"boolean"
          },
          "vni":{
            "description":"The identifier of VNI that needs DHCP relay.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          }
        },
        "type":"object"
      },
      "modelsVrf":{
        "description":"Vrf encapsulates properties of a virtual-routing-and-forwarding object. Vrf allows having more than one routing tables on a single switch. Vrf implements VRF-lite (IP VRF), or VRF without MPLS.\n1) A Vrf is a tenant object, and is inactive until it is attached to a Vni.  2) There is a one-to-one relationship between Vrf and a L3VNI.  3) A Vrf maybe attached to several L2VNI objects.",
        "properties":{
          "annotations":{
            "description":"A set of annotations to store user-defined data.",
            "items":{
              "$ref":"#/components/schemas/modelsAnnotation"
            },
            "type":"array"
          },
          "asn":{
            "description":"Optional ASN of the VRF. ASN, if provided, is used for BGP peering.",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "description":{
            "description":"A user-defined description of Vrf.",
            "type":"string"
          },
          "enabled":{
            "description":"Indicates if Vrf is enabled or disabled.",
            "type":"boolean"
          },
          "fabricId":{
            "description":"The identifier of Fabric to which this Vrf belong. Fabric identifier is mandatory.",
            "type":"string"
          },
          "id":{
            "description":"The unique identifier of Vrf. Identifier is required to update an existing Vrf. If identifier is missing, then set operation defaults to CREATE mode.",
            "type":"string"
          },
          "interfaces":{
            "description":"A set of interfaces that are part of Vrf.",
            "items":{
              "$ref":"#/components/schemas/modelsNetworkInterface"
            },
            "type":"array"
          },
          "ipv4Loopbacks":{
            "description":"IPv4 address range of DHCP relay Loopbacks. Loopbacks are created when DHCP relays are attached to a VRF. Loopbacks may also be created for other purposes. Caller must provide an IP range in CIDR format (E.g. 10.10.2.1/24) or a distinct set of IP addresses (E.g. 10.10.1.1, 10.10.1.5. 10.10.2.3 etc.). IP range should be large enough to create Loopbacks on all switches in the fabric. E.g. 10.10.10.1/24",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "ipv6Loopbacks":{
            "description":"IPv6 address range of DHCP relay Loopbacks. Caller must provide an IP range in CIDR format. CIDR range should be large enough to create Loopbacks on all switches in the fabric. E.g. 3000::1/112",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "isDefault":{
            "description":"Indicates that Vrf is a default (aut-created) VRF (readonly).",
            "type":"boolean"
          },
          "labels":{
            "description":"A set of user-defined labels for searching and locating objects.",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "metadata":{
            "$ref":"#/components/schemas/modelsMetadata"
          },
          "name":{
            "description":"The user-defined name of the Vrf. Vrf name is unique, and is case-insensitive.",
            "type":"string"
          },
          "routeTarget":{
            "description":"Globally unique route-target of VRF. RouteTarget is readonly. FIXME: This field should not be exposed via REST API.",
            "type":"string"
          },
          "vni":{
            "description":"VNI of the parent L3VNI (readonly).",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          }
        },
        "type":"object"
      },
      "readerAssertBgpPeerEstablished":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "device":{
            "description":"Description not available",
            "type":"string"
          },
          "fabric":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "lineCard":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "nodeId":{
            "description":"Description not available",
            "type":"string"
          },
          "peerIp":{
            "description":"Description not available",
            "type":"string"
          },
          "peerRemoteAs":{
            "description":"Description not available",
            "type":"string"
          },
          "remoteNodeId":{
            "description":"Description not available",
            "type":"string"
          },
          "vrf":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "readerAssertConfigAddedToDb":{
        "description":"Description not available",
        "properties":{
          "childId":{
            "description":"Description not available",
            "type":"string"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "objectId":{
            "description":"Description not available",
            "type":"string"
          },
          "objectName":{
            "description":"Description not available",
            "type":"string"
          },
          "objectType":{
            "description":"Description not available",
            "type":"string"
          },
          "operation":{
            "description":"Description not available",
            "type":"string"
          },
          "orgId":{
            "description":"Description not available",
            "type":"string"
          },
          "parentId":{
            "description":"Description not available",
            "type":"string"
          },
          "txnId":{
            "description":"Description not available",
            "type":"string"
          },
          "username":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "readerAssertCounterReport":{
        "description":"AssertCounterReport holds an assertion counter record at particular time instance",
        "properties":{
          "clearedFalseAsserts":{
            "description":"The number of cleared false asserts per time granularity",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "configActivities":{
            "description":"The number of config activities during the time granularity",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "device":{
            "description":"the device name or UUID",
            "type":"string"
          },
          "newFalseAsserts":{
            "description":"The number of new false asserts per time granularity",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "portName":{
            "description":"The port index.",
            "type":"string"
          },
          "timestamp":{
            "description":"The timestamp associated this report",
            "format":"date-time",
            "type":"string"
          },
          "type":{
            "description":"The assert type",
            "type":"string"
          }
        },
        "type":"object"
      },
      "readerAssertCounterReportResponse":{
        "description":"AssertCounterReportResponse holds the AssertCounter time series query result.",
        "properties":{
          "counterReport":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/readerAssertCounterReport"
            },
            "type":"array"
          },
          "pagination":{
            "$ref":"#/components/schemas/commonPaginationResponse"
          }
        },
        "type":"object"
      },
      "readerAssertDeviceConnectedToCloud":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "device":{
            "description":"Description not available",
            "type":"string"
          },
          "fabric":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "nodeId":{
            "description":"Description not available",
            "type":"string"
          },
          "remoteNodeId":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "readerAssertDeviceConnectedToFabric":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "device":{
            "description":"Description not available",
            "type":"string"
          },
          "fabric":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "nodeId":{
            "description":"Description not available",
            "type":"string"
          },
          "remoteNodeId":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "readerAssertDeviceResourceUsageBelowThreshold":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "device":{
            "description":"Description not available",
            "type":"string"
          },
          "fabric":{
            "description":"Description not available",
            "type":"string"
          },
          "highCpuUtil":{
            "description":"Description not available",
            "type":"boolean"
          },
          "highDiskUtil":{
            "description":"Description not available",
            "type":"boolean"
          },
          "highMemUtil":{
            "description":"Description not available",
            "type":"boolean"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "nodeId":{
            "description":"Description not available",
            "type":"string"
          },
          "remoteNodeId":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "readerAssertHistoryApiRecord":{
        "description":"Description not available",
        "properties":{
          "assertType":{
            "description":"Description not available",
            "type":"string"
          },
          "bgpPeerEstablished":{
            "$ref":"#/components/schemas/readerAssertBgpPeerEstablished"
          },
          "configAddedToDb":{
            "$ref":"#/components/schemas/readerAssertConfigAddedToDb"
          },
          "deviceConnectedToCloud":{
            "$ref":"#/components/schemas/readerAssertDeviceConnectedToCloud"
          },
          "deviceConnectedToFabric":{
            "$ref":"#/components/schemas/readerAssertDeviceConnectedToFabric"
          },
          "deviceResourceUsageBelowThreshold":{
            "$ref":"#/components/schemas/readerAssertDeviceResourceUsageBelowThreshold"
          },
          "managementPortConfigSame":{
            "$ref":"#/components/schemas/readerAssertManagementPortConfigSame"
          },
          "portConnectionSpeedMatch":{
            "$ref":"#/components/schemas/readerAssertPortConnectionSpeedMatch"
          },
          "portExpectedNeighbor":{
            "$ref":"#/components/schemas/readerAssertPortExpectedNeighbor"
          },
          "portLinkDown":{
            "$ref":"#/components/schemas/readerAssertPortLinkDown"
          },
          "portLinkUp":{
            "$ref":"#/components/schemas/readerAssertPortLinkUp"
          },
          "portNotConnectedToFabric":{
            "$ref":"#/components/schemas/readerAssertPortNotConnectedToFabric"
          },
          "portSpeedConsistent":{
            "$ref":"#/components/schemas/readerAssertPortSpeedConsistent"
          },
          "staticDefaultRouteExists":{
            "$ref":"#/components/schemas/readerAssertStaticDefaultRouteExists"
          },
          "vlanHasTraffic":{
            "$ref":"#/components/schemas/readerAssertVlanHasTraffic"
          }
        },
        "type":"object"
      },
      "readerAssertHistoryApiRecordResponse":{
        "description":"AssertHistoryRecordResponseSchemaProto holds the Assertion record time series query result in the message format defined in schema.proto.",
        "properties":{
          "assertions":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/readerAssertHistoryApiRecord"
            },
            "type":"array"
          },
          "pagination":{
            "$ref":"#/components/schemas/commonPaginationResponse"
          }
        },
        "type":"object"
      },
      "readerAssertManagementPortConfigSame":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "device":{
            "description":"Description not available",
            "type":"string"
          },
          "fabric":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "lineCard":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "managementState":{
            "description":"Description not available",
            "type":"string"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "nodeId":{
            "description":"Description not available",
            "type":"string"
          },
          "remoteNodeId":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "readerAssertPortConnectionSpeedMatch":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "breakout":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "device":{
            "description":"Description not available",
            "type":"string"
          },
          "fabric":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "lineCard":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "localPortSpeed":{
            "description":"Description not available",
            "type":"string"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "nodeId":{
            "description":"Description not available",
            "type":"string"
          },
          "port":{
            "description":"Description not available",
            "type":"string"
          },
          "portName":{
            "description":"Description not available",
            "type":"string"
          },
          "remoteDevice":{
            "description":"Description not available",
            "type":"string"
          },
          "remoteNodeId":{
            "description":"Description not available",
            "type":"string"
          },
          "remotePortName":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "readerAssertPortExpectedNeighbor":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "breakout":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "device":{
            "description":"Description not available",
            "type":"string"
          },
          "fabric":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "lineCard":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "nodeId":{
            "description":"Description not available",
            "type":"string"
          },
          "numNeighbors":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "port":{
            "description":"Description not available",
            "type":"string"
          },
          "portName":{
            "description":"Description not available",
            "type":"string"
          },
          "remoteDevice":{
            "description":"Description not available",
            "type":"string"
          },
          "remoteNodeId":{
            "description":"Description not available",
            "type":"string"
          },
          "remotePortName":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "readerAssertPortLinkDown":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "breakout":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "device":{
            "description":"Description not available",
            "type":"string"
          },
          "fabric":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "lineCard":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "nodeId":{
            "description":"Description not available",
            "type":"string"
          },
          "port":{
            "description":"Description not available",
            "type":"string"
          },
          "portName":{
            "description":"Description not available",
            "type":"string"
          },
          "remoteDevice":{
            "description":"Description not available",
            "type":"string"
          },
          "remoteNodeId":{
            "description":"Description not available",
            "type":"string"
          },
          "remotePortName":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "readerAssertPortLinkUp":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "breakout":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "device":{
            "description":"Description not available",
            "type":"string"
          },
          "fabric":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "lineCard":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "nodeId":{
            "description":"Description not available",
            "type":"string"
          },
          "port":{
            "description":"Description not available",
            "type":"string"
          },
          "portName":{
            "description":"Description not available",
            "type":"string"
          },
          "remoteNodeId":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "readerAssertPortNotConnectedToFabric":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "breakout":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "device":{
            "description":"Description not available",
            "type":"string"
          },
          "fabric":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "lineCard":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "nodeId":{
            "description":"Description not available",
            "type":"string"
          },
          "port":{
            "description":"Description not available",
            "type":"string"
          },
          "portName":{
            "description":"Description not available",
            "type":"string"
          },
          "remoteDevice":{
            "description":"Description not available",
            "type":"string"
          },
          "remoteNodeId":{
            "description":"Description not available",
            "type":"string"
          },
          "remotePortName":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "readerAssertPortSpeedConsistent":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "breakout":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "device":{
            "description":"Description not available",
            "type":"string"
          },
          "fabric":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "lineCard":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "localPortSpeed":{
            "description":"Description not available",
            "type":"string"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "nodeId":{
            "description":"Description not available",
            "type":"string"
          },
          "port":{
            "description":"Description not available",
            "type":"string"
          },
          "portName":{
            "description":"Description not available",
            "type":"string"
          },
          "remoteNodeId":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "readerAssertStaticDefaultRouteExists":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "device":{
            "description":"Description not available",
            "type":"string"
          },
          "fabric":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "lineCard":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "nodeId":{
            "description":"Description not available",
            "type":"string"
          },
          "remoteNodeId":{
            "description":"Description not available",
            "type":"string"
          },
          "vrf":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "readerAssertVlanHasTraffic":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "device":{
            "description":"Description not available",
            "type":"string"
          },
          "fabric":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "lastTrafficBytes":{
            "description":"Description not available",
            "type":"string"
          },
          "lastTrafficTime":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "lineCard":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "nodeId":{
            "description":"Description not available",
            "type":"string"
          },
          "recentTrafficBytes":{
            "description":"Description not available",
            "type":"string"
          },
          "remoteNodeId":{
            "description":"Description not available",
            "type":"string"
          },
          "vlanState":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          }
        },
        "type":"object"
      },
      "schemaAssertBgpPeerEstablished":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "config":{
            "$ref":"#/components/schemas/schemaAssertConfigBgpPeerEstablishedData"
          },
          "id":{
            "$ref":"#/components/schemas/schemaPathPathId"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByConnectionToCloud":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByPortLinkUp":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "readyToLatchAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          }
        },
        "type":"object"
      },
      "schemaAssertConfigBgpPeerEstablishedData":{
        "description":"Description not available",
        "properties":{
          "fabricId":{
            "description":"Description not available",
            "type":"string"
          },
          "generationId":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "orgId":{
            "description":"Description not available",
            "type":"string"
          },
          "peerIp":{
            "description":"Description not available",
            "type":"string"
          },
          "peerRemoteAs":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "vrfName":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "schemaAssertConfigConnectedPortSpeedsMatchData":{
        "description":"Description not available",
        "properties":{
          "fabricId":{
            "description":"Description not available",
            "type":"string"
          },
          "generationId":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "orgId":{
            "description":"Description not available",
            "type":"string"
          },
          "port":{
            "$ref":"#/components/schemas/schemaPortConfigDetails"
          }
        },
        "type":"object"
      },
      "schemaAssertConfigConnectedToCloudData":{
        "description":"Description not available",
        "properties":{
          "fabricId":{
            "description":"Description not available",
            "type":"string"
          },
          "generationId":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "orgId":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "schemaAssertConfigConnectedToFabricData":{
        "description":"Description not available",
        "properties":{
          "fabricId":{
            "description":"Description not available",
            "type":"string"
          },
          "generationId":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "orgId":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "schemaAssertConfigDeviceResourceUsageBelowThresholdData":{
        "description":"Description not available",
        "properties":{
          "cpuThreshold":{
            "description":"Description not available",
            "format":"float",
            "type":"number"
          },
          "diskThreshold":{
            "description":"Description not available",
            "format":"float",
            "type":"number"
          },
          "fabricId":{
            "description":"Description not available",
            "type":"string"
          },
          "generationId":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "memoryThreshold":{
            "description":"Description not available",
            "format":"float",
            "type":"number"
          },
          "orgId":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "schemaAssertConfigExpectedNeighborData":{
        "description":"Description not available",
        "properties":{
          "fabricId":{
            "description":"Description not available",
            "type":"string"
          },
          "generationId":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "orgId":{
            "description":"Description not available",
            "type":"string"
          },
          "port":{
            "$ref":"#/components/schemas/schemaPortConfigDetails"
          }
        },
        "type":"object"
      },
      "schemaAssertConfigLinkDownData":{
        "description":"Description not available",
        "properties":{
          "fabricId":{
            "description":"Description not available",
            "type":"string"
          },
          "generationId":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "orgId":{
            "description":"Description not available",
            "type":"string"
          },
          "port":{
            "$ref":"#/components/schemas/schemaPortConfigDetails"
          }
        },
        "type":"object"
      },
      "schemaAssertConfigLinkUpData":{
        "description":"Description not available",
        "properties":{
          "fabricId":{
            "description":"Description not available",
            "type":"string"
          },
          "generationId":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "orgId":{
            "description":"Description not available",
            "type":"string"
          },
          "port":{
            "$ref":"#/components/schemas/schemaPortConfigDetails"
          }
        },
        "type":"object"
      },
      "schemaAssertConfigManagementPortConfigData":{
        "description":"Description not available",
        "properties":{
          "fabricId":{
            "description":"Description not available",
            "type":"string"
          },
          "generationId":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "mgmtPortState":{
            "$ref":"#/components/schemas/schemaManagementState"
          },
          "orgId":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "schemaAssertConfigNotConnectedToFabricData":{
        "description":"Description not available",
        "properties":{
          "fabricId":{
            "description":"Description not available",
            "type":"string"
          },
          "generationId":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "orgId":{
            "description":"Description not available",
            "type":"string"
          },
          "port":{
            "$ref":"#/components/schemas/schemaPortConfigDetails"
          }
        },
        "type":"object"
      },
      "schemaAssertConfigPortSpeedConsistentData":{
        "description":"Description not available",
        "properties":{
          "fabricId":{
            "description":"Description not available",
            "type":"string"
          },
          "generationId":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "orgId":{
            "description":"Description not available",
            "type":"string"
          },
          "port":{
            "$ref":"#/components/schemas/schemaPortConfigDetails"
          }
        },
        "type":"object"
      },
      "schemaAssertConfigStaticDefaultRouteExistsData":{
        "description":"Description not available",
        "properties":{
          "fabricId":{
            "description":"Description not available",
            "type":"string"
          },
          "generationId":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "orgId":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "schemaAssertConfigVlanHasTrafficData":{
        "description":"Description not available",
        "properties":{
          "fabricId":{
            "description":"Description not available",
            "type":"string"
          },
          "generationId":{
            "description":"Description not available",
            "type":"string"
          },
          "implicit":{
            "description":"Description not available",
            "type":"boolean"
          },
          "latchTime":{
            "description":"Description not available",
            "type":"string"
          },
          "latchedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "orgId":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "schemaAssertDeviceConnectedToCloud":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "config":{
            "$ref":"#/components/schemas/schemaAssertConfigConnectedToCloudData"
          },
          "id":{
            "$ref":"#/components/schemas/schemaPathPathId"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByConnectionToCloud":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByPortLinkUp":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "readyToLatchAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          }
        },
        "type":"object"
      },
      "schemaAssertDeviceConnectedToFabric":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "config":{
            "$ref":"#/components/schemas/schemaAssertConfigConnectedToFabricData"
          },
          "id":{
            "$ref":"#/components/schemas/schemaPathPathId"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByConnectionToCloud":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByPortLinkUp":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "readyToLatchAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          }
        },
        "type":"object"
      },
      "schemaAssertDeviceResourceUsageBelowThreshold":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "config":{
            "$ref":"#/components/schemas/schemaAssertConfigDeviceResourceUsageBelowThresholdData"
          },
          "currentSystemStats":{
            "$ref":"#/components/schemas/schemaSystemStats"
          },
          "highCpuUtil":{
            "description":"Description not available",
            "type":"boolean"
          },
          "highDiskUtil":{
            "description":"Description not available",
            "type":"boolean"
          },
          "highMemUtil":{
            "description":"Description not available",
            "type":"boolean"
          },
          "id":{
            "$ref":"#/components/schemas/schemaPathPathId"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByConnectionToCloud":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByPortLinkUp":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "readyToLatchAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          }
        },
        "type":"object"
      },
      "schemaAssertManagementPortConfigSame":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "config":{
            "$ref":"#/components/schemas/schemaAssertConfigManagementPortConfigData"
          },
          "id":{
            "$ref":"#/components/schemas/schemaPathPathId"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByConnectionToCloud":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByPortLinkUp":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "operationalMgmtPortState":{
            "$ref":"#/components/schemas/schemaManagementState"
          },
          "readyToLatchAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          }
        },
        "type":"object"
      },
      "schemaAssertPortConnectionSpeedMatch":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "config":{
            "$ref":"#/components/schemas/schemaAssertConfigConnectedPortSpeedsMatchData"
          },
          "id":{
            "$ref":"#/components/schemas/schemaPathPathId"
          },
          "localPortSpeed":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByConnectionToCloud":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByPortLinkUp":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "readyToLatchAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "remoteDeviceId":{
            "description":"Description not available",
            "type":"string"
          },
          "remotePortName":{
            "description":"Description not available",
            "type":"string"
          },
          "remotePortSpeed":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          }
        },
        "type":"object"
      },
      "schemaAssertPortExpectedNeighbor":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "config":{
            "$ref":"#/components/schemas/schemaAssertConfigExpectedNeighborData"
          },
          "id":{
            "$ref":"#/components/schemas/schemaPathPathId"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByConnectionToCloud":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByPortLinkUp":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "numNeighbors":{
            "description":"Description not available",
            "format":"int32",
            "type":"integer"
          },
          "readyToLatchAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "remoteDeviceId":{
            "description":"Description not available",
            "type":"string"
          },
          "remotePortName":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "schemaAssertPortLinkDown":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "config":{
            "$ref":"#/components/schemas/schemaAssertConfigLinkDownData"
          },
          "id":{
            "$ref":"#/components/schemas/schemaPathPathId"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByConnectionToCloud":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByPortLinkUp":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "readyToLatchAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "remoteDeviceId":{
            "description":"Description not available",
            "type":"string"
          },
          "remotePortName":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "schemaAssertPortLinkUp":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "config":{
            "$ref":"#/components/schemas/schemaAssertConfigLinkUpData"
          },
          "id":{
            "$ref":"#/components/schemas/schemaPathPathId"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByConnectionToCloud":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByPortLinkUp":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "readyToLatchAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          }
        },
        "type":"object"
      },
      "schemaAssertPortNotConnectedToFabric":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "config":{
            "$ref":"#/components/schemas/schemaAssertConfigNotConnectedToFabricData"
          },
          "id":{
            "$ref":"#/components/schemas/schemaPathPathId"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByConnectionToCloud":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByPortLinkUp":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "readyToLatchAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "remoteDeviceId":{
            "description":"Description not available",
            "type":"string"
          },
          "remotePortName":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "schemaAssertPortSpeedConsistent":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "config":{
            "$ref":"#/components/schemas/schemaAssertConfigPortSpeedConsistentData"
          },
          "id":{
            "$ref":"#/components/schemas/schemaPathPathId"
          },
          "localPortSpeed":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByConnectionToCloud":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByPortLinkUp":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "readyToLatchAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          }
        },
        "type":"object"
      },
      "schemaAssertStaticDefaultRouteExists":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "config":{
            "$ref":"#/components/schemas/schemaAssertConfigStaticDefaultRouteExistsData"
          },
          "id":{
            "$ref":"#/components/schemas/schemaPathPathId"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByConnectionToCloud":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByPortLinkUp":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "readyToLatchAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          }
        },
        "type":"object"
      },
      "schemaAssertVlanHasTraffic":{
        "description":"Description not available",
        "properties":{
          "assertState":{
            "$ref":"#/components/schemas/modelsAssertStateType"
          },
          "category":{
            "$ref":"#/components/schemas/modelsAssertCategoryType"
          },
          "config":{
            "$ref":"#/components/schemas/schemaAssertConfigVlanHasTrafficData"
          },
          "id":{
            "$ref":"#/components/schemas/schemaPathPathId"
          },
          "lastTrafficBytes":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "lastTrafficTime":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "masked":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByConnectionToCloud":{
            "description":"Description not available",
            "type":"boolean"
          },
          "maskedByPortLinkUp":{
            "description":"Description not available",
            "type":"boolean"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "readyToLatchAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "recentTrafficBytes":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          }
        },
        "type":"object"
      },
      "schemaBasicCounters":{
        "description":"Universal counters for L2/L3 entities",
        "properties":{
          "bytesIn":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "bytesOut":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "errPktsIn":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "errPktsOut":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "pktsIn":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "pktsOut":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          }
        },
        "type":"object"
      },
      "schemaDacCounters":{
        "description":"Description not available",
        "properties":{
          "inOctets":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          }
        },
        "type":"object"
      },
      "schemaDnsConfig":{
        "description":"Description not available",
        "properties":{
          "dnsServers":{
            "description":"Description not available",
            "items":{
              "type":"string"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "schemaDrakeConfig":{
        "description":"Description not available",
        "properties":{
          "cloudBaseUrlList":{
            "description":"Description not available",
            "items":{
              "type":"string"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "schemaEnvLedStatus":{
        "default":"GREEN",
        "description":"Description not available",
        "enum":[
          "GREEN",
          "RED",
          "OFF"
        ],
        "type":"string"
      },
      "schemaEnvStatus":{
        "default":"OK",
        "description":"Description not available",
        "enum":[
          "OK",
          "NOT_OK",
          "WARNING",
          "NOT_PRESENT"
        ],
        "type":"string"
      },
      "schemaFan":{
        "description":"Description not available",
        "properties":{
          "collectedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "deprecatedDirection":{
            "description":"Description not available",
            "type":"string"
          },
          "direction":{
            "$ref":"#/components/schemas/schemaFanDirection"
          },
          "drawer":{
            "description":"Description not available",
            "type":"string"
          },
          "id":{
            "$ref":"#/components/schemas/schemaPathPathId"
          },
          "ledStatus":{
            "$ref":"#/components/schemas/schemaEnvLedStatus"
          },
          "model":{
            "description":"Description not available",
            "type":"string"
          },
          "name":{
            "description":"Description not available",
            "type":"string"
          },
          "serial":{
            "description":"Description not available",
            "type":"string"
          },
          "speed":{
            "description":"Fan speed as a percentage of the maximum rated speed",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "status":{
            "$ref":"#/components/schemas/schemaEnvStatus"
          }
        },
        "type":"object"
      },
      "schemaFanDirection":{
        "default":"INTAKE",
        "description":"Description not available",
        "enum":[
          "INTAKE",
          "EXHAUST"
        ],
        "type":"string"
      },
      "schemaManagementState":{
        "description":"Description not available",
        "properties":{
          "collectedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "configSource":{
            "description":"Description not available",
            "type":"string"
          },
          "dns":{
            "$ref":"#/components/schemas/schemaDnsConfig"
          },
          "drake":{
            "$ref":"#/components/schemas/schemaDrakeConfig"
          },
          "id":{
            "$ref":"#/components/schemas/schemaPathPathId"
          },
          "ipv4Method":{
            "description":"Description not available",
            "type":"string"
          },
          "ipv6Method":{
            "description":"Description not available",
            "type":"string"
          },
          "ntpServers":{
            "description":"Description not available",
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "operationStatus":{
            "$ref":"#/components/schemas/schemaOperationStatus"
          },
          "proxy":{
            "$ref":"#/components/schemas/schemaProxyConfig"
          },
          "sonic":{
            "$ref":"#/components/schemas/schemaSonicConfig"
          }
        },
        "type":"object"
      },
      "schemaOperationStatus":{
        "default":"UP",
        "description":"Description not available",
        "enum":[
          "UP",
          "DOWN"
        ],
        "type":"string"
      },
      "schemaPathPathId":{
        "description":"PathId identifies the specific \"schema coordinates\" identifier of an object in the schema tree.",
        "properties":{
          "aggregatedDeviceClaim":{
            "description":"Description not available",
            "type":"string"
          },
          "apiKey":{
            "description":"Description not available",
            "type":"string"
          },
          "apiPath":{
            "description":"Description not available",
            "type":"string"
          },
          "apiPathMethod":{
            "description":"Description not available",
            "type":"string"
          },
          "apiServiceMapping":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "application":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertBgpPeerEstablished":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertConfigBgpPeerEstablished":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertConfigDeviceConnectedToCloud":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertConfigDeviceConnectedToFabric":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertConfigDeviceEnvFanUsageBelowThreshold":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertConfigDeviceEnvPsuUsageBelowThreshold":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertConfigDeviceEnvTempSensorUsageBelowThreshold":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertConfigDeviceResourceUsageBelowThreshold":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertConfigExpectedPortBreakoutExists":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertConfigIpmLatencyBelowThreshold":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertConfigIpmLossBelowThreshold":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertConfigManagementPortConfigSame":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertConfigPortChannelMemberUp":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertConfigPortConnectionSpeedMatch":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertConfigPortExpectedNeighbor":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertConfigPortLinkDown":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertConfigPortLinkUp":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertConfigPortNotConnectedToFabric":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertConfigPortSpeedConsistent":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertConfigPortVlanStpStateConsistent":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertConfigStaticDefaultRouteExists":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertConfigSubInterfaceDown":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertConfigSubInterfaceUp":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertConfigVlanHasTraffic":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertDeviceConnectedToCloud":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertDeviceConnectedToFabric":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertDeviceEnvFanUsageBelowThreshold":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertDeviceEnvPsuUsageBelowThreshold":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertDeviceEnvTempSensorUsageBelowThreshold":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertDeviceResourceUsageBelowThreshold":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertExpectedPortBreakoutExists":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertIpmLatencyBelowThreshold":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertIpmLossBelowThreshold":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertManagementPortConfigSame":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertPortChannelMemberUp":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertPortConnectionSpeedMatch":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertPortExpectedNeighbor":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertPortLinkDown":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertPortLinkUp":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertPortNotConnectedToFabric":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertPortSpeedConsistent":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertPortVlanStpStateConsistent":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertStaticDefaultRouteExists":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertSubInterfaceDown":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertSubInterfaceUp":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "assertVlanHasTraffic":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "bearerToken":{
            "description":"Description not available",
            "type":"string"
          },
          "bgpNeighborFamily":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "bgpNeighborSummary":{
            "description":"Description not available",
            "type":"string"
          },
          "bmc":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "bmcConfig":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "breakout":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "claimAndBindTask":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "dacQsfp":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "deleted":{
            "description":"Indicates that this object was deleted.",
            "type":"boolean"
          },
          "device":{
            "description":"Description not available",
            "type":"string"
          },
          "deviceClaim":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "deviceConnection":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "esiInfo":{
            "description":"Description not available",
            "type":"string"
          },
          "esiVtepInfo":{
            "description":"Description not available",
            "type":"string"
          },
          "fabric":{
            "description":"Description not available",
            "type":"string"
          },
          "fabricAssignmentStatus":{
            "description":"Description not available",
            "type":"string"
          },
          "fabricConfig":{
            "description":"Description not available",
            "type":"string"
          },
          "fabricConfigEvent":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "fabricConfigNotification":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "fabricConnectionTask":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "fabricDevice":{
            "description":"Description not available",
            "type":"string"
          },
          "fabricMemoryUsage":{
            "description":"Description not available",
            "type":"string"
          },
          "fabricTransaction":{
            "description":"Description not available",
            "type":"string"
          },
          "fabricUuid":{
            "description":"Description not available",
            "type":"string"
          },
          "fan":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "fiberQsfp":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "ipNextHop":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "ipPrefix":{
            "description":"Description not available",
            "type":"string"
          },
          "ipRouteTable":{
            "description":"Description not available",
            "type":"string"
          },
          "ipmLivenessCounters":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "ipmProcLatencyCounters":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "ipmProcLossCounters":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "ipmRawLatencyCounters":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "ipmSessionId":{
            "description":"Description not available",
            "type":"string"
          },
          "kubernetesServiceInstance":{
            "description":"Description not available",
            "type":"string"
          },
          "l2Fdb":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "l2Mac":{
            "description":"Description not available",
            "type":"string"
          },
          "l3Table":{
            "description":"Description not available",
            "type":"string"
          },
          "lineCard":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "mac":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "managementConfig":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "managementState":{
            "description":"Description not available",
            "type":"string"
          },
          "manifestPartitionFileCacheStatus":{
            "description":"Description not available",
            "type":"string"
          },
          "manifestRunningImageStatus":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "negativeConnectionTask":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "node":{
            "description":"Description not available",
            "type":"string"
          },
          "nodeBreakout":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "nodeConfig":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "nodeLineCard":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "nodePort":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "orgServiceProto":{
            "description":"Description not available",
            "type":"string"
          },
          "orgServiceRoute":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "orgServiceSvc":{
            "description":"Description not available",
            "type":"string"
          },
          "orgToCellPairMapping":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "orgUuid":{
            "description":"Description not available",
            "type":"string"
          },
          "pathString":{
            "description":"Optional string representation of the schema path. Only populated on request.",
            "type":"string"
          },
          "plannedConfig":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "port":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "portChannelMemberState":{
            "description":"Description not available",
            "type":"string"
          },
          "portChannelState":{
            "description":"Description not available",
            "type":"string"
          },
          "portConfig":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "portCounters":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "portNeighbor":{
            "description":"Description not available",
            "type":"string"
          },
          "portSetupTask":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "portVlan":{
            "description":"Description not available",
            "type":"string"
          },
          "procTable":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "proxyConnectionState":{
            "description":"Description not available",
            "type":"string"
          },
          "proxyConnectionStats":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "proxyStats":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "psu":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "qsfpDomSensor":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "qsfpDomThreshold":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "qsfpInfo":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "rackAndPowerOnTask":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "remedyAction":{
            "description":"Description not available",
            "type":"string"
          },
          "remoteVtep":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "resourceAssignment":{
            "description":"Description not available",
            "type":"string"
          },
          "routedInterfaceCounters":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "serverTemperatureSensor":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "serverVoltageSensor":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "serviceInstanceHealth":{
            "description":"Description not available",
            "type":"string"
          },
          "sextantFabricAssignment":{
            "description":"Description not available",
            "type":"string"
          },
          "smartNicDpu":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "spyglassBrokerEntry":{
            "description":"Description not available",
            "type":"string"
          },
          "spyglassDevice":{
            "description":"Description not available",
            "type":"string"
          },
          "spyglassGingerEntry":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "spyglassSshSessionEntry":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "spyglassTcpListener":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "spyglassTcpSession":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "stpPortState":{
            "description":"Description not available",
            "type":"string"
          },
          "stpVlanPortState":{
            "description":"Description not available",
            "type":"string"
          },
          "stpVlanState":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "subInterface":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "systemStats":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "tempSensor":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "tenantMetadata":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "tenantUuid":{
            "description":"Description not available",
            "type":"string"
          },
          "testIpAddress":{
            "description":"Description not available",
            "type":"string"
          },
          "testIpPrefix":{
            "description":"Description not available",
            "type":"string"
          },
          "testLeafOne":{
            "description":"Description not available",
            "type":"string"
          },
          "testMacAddress":{
            "description":"Description not available",
            "type":"string"
          },
          "testMidOne":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "testPlaceHolder1Secret":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "testRootOne":{
            "description":"Description not available",
            "type":"string"
          },
          "testRootTwo":{
            "description":"Description not available",
            "type":"string"
          },
          "type":{
            "$ref":"#/components/schemas/schemaPathSchemaType"
          },
          "typeMemoryUsage":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "underlayInfo":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "unknownVlan":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "unknownVlanPort":{
            "description":"Description not available",
            "type":"string"
          },
          "unpackAndAssembleTask":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "userEmail":{
            "description":"Description not available",
            "type":"string"
          },
          "vlanCounters":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "vlanState":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "vlanVniMap":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "vniPort":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "vrf":{
            "description":"Description not available",
            "type":"string"
          },
          "vtep":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          }
        },
        "type":"object"
      },
      "schemaPathSchemaType":{
        "default":"SyncCursorType",
        "description":"Description not available",
        "enum":[
          "SyncCursorType",
          "AsyncCursorType",
          "DeleteCursorType",
          "FabricType",
          "DeviceType",
          "FanType",
          "PsuType",
          "TempSensorType",
          "LineCardType",
          "PortType",
          "DacQsfpType",
          "FiberQsfpType",
          "BreakoutType",
          "PortNeighborType",
          "VtepType",
          "VniPortType",
          "MacType",
          "ProcTableType",
          "PortVlanType",
          "VlanStateType",
          "QsfpDomSensorType",
          "PortConfigType",
          "NodeConfigType",
          "FabricConfigType",
          "FabricConfigEventType",
          "L2FdbType",
          "PortCountersType",
          "RemedyActionType",
          "QsfpInfoType",
          "FabricDeviceType",
          "AssertConfigPortLinkUpType",
          "AssertPortLinkUpType",
          "AssertConfigDeviceConnectedToCloudType",
          "AssertDeviceConnectedToCloudType",
          "AssertConfigPortExpectedNeighborType",
          "AssertPortExpectedNeighborType",
          "AssertConfigPortNotConnectedToFabricType",
          "AssertPortNotConnectedToFabricType",
          "AssertConfigDeviceConnectedToFabricType",
          "AssertDeviceConnectedToFabricType",
          "AssertConfigPortLinkDownType",
          "AssertPortLinkDownType",
          "AssertConfigPortConnectionSpeedMatchType",
          "AssertPortConnectionSpeedMatchType",
          "AssertConfigPortSpeedConsistentType",
          "AssertPortSpeedConsistentType",
          "AllAssertTypes",
          "UnderlayInfoType",
          "ProxyStatsType",
          "VlanCountersType",
          "TestPlaceHolder1SecretType",
          "AssertConfigVlanHasTrafficType",
          "AssertVlanHasTrafficType",
          "RemoteVtepType",
          "QsfpDomThresholdType",
          "SextantFabricAssignmentType",
          "L3TableType",
          "VlanVniMapType",
          "ProxyConnectionStateType",
          "ProxyConnectionStatsType",
          "L2MacType",
          "BmcType",
          "SmartNicDpuType",
          "ServerVoltageSensorType",
          "ServerTemperatureSensorType",
          "IpRouteTableType",
          "VrfType",
          "IpNextHopType",
          "IpPrefixType",
          "SubInterfaceType",
          "AssertConfigStaticDefaultRouteExistsType",
          "AssertStaticDefaultRouteExistsType",
          "SpyglassBrokerEntryType",
          "ManagementStateType",
          "AllDeviceAssertTypes",
          "AllPortAssertTypes",
          "AssertConfigManagementPortConfigSameType",
          "AssertManagementPortConfigSameType",
          "FabricConfigNotificationType",
          "SpyglassGingerEntryType",
          "PlannedConfigType",
          "RoutedInterfaceCountersType",
          "IpmRawLatencyCountersType",
          "IpmProcLatencyCountersType",
          "IpmProcLossCountersType",
          "IpmLivenessCountersType",
          "IpmSessionIdType",
          "SystemStatsType",
          "TestRootOneType",
          "TestRootTwoType",
          "TestMidOneType",
          "TestMidTwoType",
          "TestLeafOneType",
          "TestLeafTwoType",
          "TestIpAddressType",
          "TestIpPrefixType",
          "TestMacAddressType",
          "AssertConfigDeviceResourceUsageBelowThresholdType",
          "AssertDeviceResourceUsageBelowThresholdType",
          "FabricTransactionType",
          "BgpNeighborSummaryType",
          "BmcConfigType",
          "DeviceConnectionType",
          "BgpNeighborFamilyType",
          "AssertConfigBgpPeerEstablishedType",
          "AssertBgpPeerEstablishedType",
          "SpyglassSshSessionEntryType",
          "PortChannelMemberStateType",
          "PortChannelStateType",
          "AssertConfigIpmLatencyBelowThresholdType",
          "AssertIpmLatencyBelowThresholdType",
          "AssertConfigIpmLossBelowThresholdType",
          "AssertIpmLossBelowThresholdType",
          "SpyglassDeviceType",
          "SpyglassTcpListenerType",
          "SpyglassTcpSessionType",
          "UnknownVlanType",
          "UnknownVlanPortType",
          "AssertConfigExpectedPortBreakoutExistsType",
          "AssertExpectedPortBreakoutExistsType",
          "AssertConfigSubInterfaceUpType",
          "AssertSubInterfaceUpType",
          "AssertSubInterfaceDownType",
          "AssertConfigSubInterfaceDownType",
          "AllSubInterfaceAssertTypes",
          "DeviceClaimType",
          "AggregatedDeviceClaimType",
          "AssertPortChannelMemberUpType",
          "AssertConfigPortChannelMemberUpType",
          "EsiInfoType",
          "EsiVtepInfoType",
          "AssertPortVlanStpStateConsistentType",
          "AssertConfigPortVlanStpStateConsistentType",
          "OrgUuidType",
          "FabricUuidType",
          "OrgServiceProtoType",
          "OrgServiceSvcType",
          "OrgServiceRouteType",
          "ApiPathType",
          "ApiPathMethodType",
          "ApiServiceMappingType",
          "OrgToCellPairMappingType",
          "TenantUuidType",
          "UserEmailType",
          "ManagementConfigType",
          "ServiceInstanceHealthType",
          "FabricAssignmentStatusType",
          "KubernetesServiceInstanceType",
          "BearerTokenType",
          "ApiKeyType",
          "FabricMemoryUsageType",
          "TypeMemoryUsageType",
          "ManifestRunningImageStatusType",
          "ManifestPartitionFileCacheStatusType",
          "StpPortStateType",
          "StpVlanStateType",
          "StpVlanPortStateType",
          "AssertDeviceEnvPsuUsageBelowThresholdType",
          "AssertDeviceEnvFanUsageBelowThresholdType",
          "AssertDeviceEnvTempSensorUsageBelowThresholdType",
          "AssertConfigDeviceEnvPsuUsageBelowThresholdType",
          "AssertConfigDeviceEnvFanUsageBelowThresholdType",
          "AssertConfigDeviceEnvTempSensorUsageBelowThresholdType",
          "AllSmartHandsTypes",
          "UnpackAndAssembleTaskType",
          "RackAndPowerOnTaskType",
          "ClaimAndBindTaskType",
          "PortSetupTaskType",
          "FabricConnectionTaskType",
          "NegativeConnectionTaskType",
          "ApplicationType",
          "ResourceAssignmentType",
          "NodeType",
          "NodeLineCardType",
          "NodePortType",
          "NodeBreakoutType",
          "TenantMetadataType"
        ],
        "type":"string"
      },
      "schemaPortConfigDetails":{
        "description":"Description not available",
        "properties":{
          "adminState":{
            "$ref":"#/components/schemas/modelsAdminState"
          },
          "breakOut":{
            "description":"Description not available",
            "type":"boolean"
          },
          "deviceId":{
            "description":"Description not available",
            "type":"string"
          },
          "modifiedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "mtu":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "portIndex":{
            "description":"Description not available",
            "format":"int32",
            "type":"integer"
          },
          "portName":{
            "description":"Description not available",
            "type":"string"
          },
          "portRole":{
            "$ref":"#/components/schemas/modelsPortRole"
          },
          "targetDeviceId":{
            "description":"Description not available",
            "type":"string"
          },
          "targetPortName":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "schemaPortCounters":{
        "description":"Description not available",
        "properties":{
          "carrierTransitions":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "collectedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "id":{
            "$ref":"#/components/schemas/schemaPathPathId"
          },
          "inBitsps":{
            "description":"bytes per second",
            "format":"float",
            "type":"number"
          },
          "inBroadcastPkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "inDiscards":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "inErrors":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "inFcsErrors":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "inMulticastPkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "inOctets":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "inPfc0Pkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "inPfc1Pkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "inPfc2Pkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "inPfc3Pkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "inPfc4Pkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "inPfc5Pkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "inPfc6Pkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "inPfc7Pkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "inPfcPps":{
            "description":"Aggregate packets per second over all PFC counters",
            "format":"float",
            "type":"number"
          },
          "inPkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "inPps":{
            "description":"packets per second",
            "format":"float",
            "type":"number"
          },
          "inUnicastPkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "inUnicastPps":{
            "description":"unicast packets per second",
            "format":"float",
            "type":"number"
          },
          "inUnknownProtos":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "lastClear":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "outBitsps":{
            "description":"Description not available",
            "format":"float",
            "type":"number"
          },
          "outBroadcastPkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "outDiscards":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "outErrors":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "outMulticastPkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "outOctets":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "outPfc0Pkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "outPfc1Pkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "outPfc2Pkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "outPfc3Pkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "outPfc4Pkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "outPfc5Pkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "outPfc6Pkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "outPfc7Pkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "outPfcPps":{
            "description":"Description not available",
            "format":"float",
            "type":"number"
          },
          "outPkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "outPps":{
            "description":"Description not available",
            "format":"float",
            "type":"number"
          },
          "outUnicastPkts":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "outUnicastPps":{
            "description":"Description not available",
            "format":"float",
            "type":"number"
          }
        },
        "type":"object"
      },
      "schemaProxyConfig":{
        "description":"Description not available",
        "properties":{
          "httpProxy":{
            "description":"Description not available",
            "type":"string"
          },
          "httpsProxy":{
            "description":"Description not available",
            "type":"string"
          },
          "noProxy":{
            "description":"Description not available",
            "type":"string"
          },
          "pass":{
            "description":"Description not available",
            "type":"string"
          },
          "user":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "schemaPsu":{
        "description":"Description not available",
        "properties":{
          "current":{
            "description":"Description not available",
            "format":"float",
            "type":"number"
          },
          "fanSpeed":{
            "description":"Fan speed as a percentage of the maximum rated speed",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "id":{
            "$ref":"#/components/schemas/schemaPathPathId"
          },
          "ledStatus":{
            "$ref":"#/components/schemas/schemaEnvLedStatus"
          },
          "model":{
            "description":"Description not available",
            "type":"string"
          },
          "name":{
            "description":"Description not available",
            "type":"string"
          },
          "serial":{
            "description":"Description not available",
            "type":"string"
          },
          "status":{
            "$ref":"#/components/schemas/schemaEnvStatus"
          },
          "voltage":{
            "description":"Description not available",
            "format":"float",
            "type":"number"
          },
          "watts":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          }
        },
        "type":"object"
      },
      "schemaSonicConfig":{
        "description":"Description not available",
        "properties":{
          "hostname":{
            "description":"Description not available",
            "type":"string"
          },
          "ipv4Addr":{
            "description":"Description not available",
            "type":"string"
          },
          "ipv4Gateway":{
            "description":"Description not available",
            "type":"string"
          },
          "ipv6Addr":{
            "description":"Description not available",
            "type":"string"
          },
          "ipv6Gateway":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "schemaSystemStats":{
        "description":"Description not available",
        "properties":{
          "collectedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "cpuIdle":{
            "description":"Description not available",
            "format":"float",
            "type":"number"
          },
          "cpuUsed":{
            "description":"Description not available",
            "format":"float",
            "type":"number"
          },
          "diskFree":{
            "description":"Description not available",
            "type":"string"
          },
          "diskTotal":{
            "description":"Description not available",
            "type":"string"
          },
          "diskUsed":{
            "description":"Description not available",
            "type":"string"
          },
          "id":{
            "$ref":"#/components/schemas/schemaPathPathId"
          },
          "memFree":{
            "description":"Description not available",
            "type":"string"
          },
          "memTotal":{
            "description":"Description not available",
            "type":"string"
          },
          "memUsed":{
            "description":"Description not available",
            "type":"string"
          }
        },
        "type":"object"
      },
      "schemaTempSensor":{
        "description":"Description not available",
        "properties":{
          "degC":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "degCelsius":{
            "description":"Description not available",
            "format":"int32",
            "type":"integer"
          },
          "highThreshold":{
            "description":"Description not available",
            "maximum":4294967295,
            "minimum":0,
            "type":"integer"
          },
          "id":{
            "$ref":"#/components/schemas/schemaPathPathId"
          },
          "lowThreshold":{
            "description":"Description not available",
            "format":"int32",
            "type":"integer"
          }
        },
        "type":"object"
      },
      "schemaVlanCounters":{
        "description":"Description not available",
        "properties":{
          "bytesIn":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "bytesOut":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "collectedAt":{
            "description":"Description not available",
            "format":"date-time",
            "type":"string"
          },
          "errIn":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "errOut":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "errPktsIn":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "errPktsOut":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "id":{
            "$ref":"#/components/schemas/schemaPathPathId"
          },
          "pktsIn":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          },
          "pktsOut":{
            "description":"Description not available",
            "maximum":18446744073709552000,
            "minimum":0,
            "type":"integer"
          }
        },
        "type":"object"
      },
      "stateAssertionsResponse":{
        "description":"Description not available",
        "properties":{
          "assertions":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/assertionsAssertion"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "stateCounter":{
        "description":"Description not available",
        "properties":{
          "basic":{
            "$ref":"#/components/schemas/schemaBasicCounters"
          },
          "dac":{
            "$ref":"#/components/schemas/schemaDacCounters"
          },
          "port":{
            "$ref":"#/components/schemas/schemaPortCounters"
          },
          "vlans":{
            "$ref":"#/components/schemas/schemaVlanCounters"
          }
        },
        "type":"object"
      },
      "stateCountersResponse":{
        "description":"Description not available",
        "properties":{
          "counters":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/stateCounter"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "stateDeviceManagementPortsResponse":{
        "description":"Description not available",
        "properties":{
          "ports":{
            "description":"The management port configurations reported by a device.",
            "items":{
              "$ref":"#/components/schemas/modelsManagementPort"
            },
            "type":"array"
          }
        },
        "type":"object"
      },
      "stateSensor":{
        "description":"Description not available",
        "properties":{
          "fan":{
            "$ref":"#/components/schemas/schemaFan"
          },
          "power":{
            "$ref":"#/components/schemas/schemaPsu"
          },
          "temperature":{
            "$ref":"#/components/schemas/schemaTempSensor"
          }
        },
        "type":"object"
      },
      "stateSensorsResponse":{
        "description":"Description not available",
        "properties":{
          "sensors":{
            "description":"Description not available",
            "items":{
              "$ref":"#/components/schemas/stateSensor"
            },
            "type":"array"
          }
        },
        "type":"object"
      }
    },
    "securitySchemes":{
      "http":{
        "bearerFormat":"JWT",
        "description":"A bearer token issued by the service",
        "scheme":"bearer",
        "type":"http"
      }
    }
  }
}