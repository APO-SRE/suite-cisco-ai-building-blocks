{
  "getSecureXAccessToken": {
    "path": "/accesstoken/{regionBaseUri}/{clientId}",
    "method": "GET",
    "description": "Get Access Token for SecureX Ribbon",
    "sdk_endpoint": "accesstoken",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAaaConfig": {
    "path": "/admin/aaa",
    "method": "GET",
    "description": "Get aaa configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view.",
    "sdk_endpoint": "admin",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateAaaConfig": {
    "path": "/admin/aaa",
    "method": "PUT",
    "description": "Update aaa configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view.",
    "sdk_endpoint": "admin",
    "sdk_method": "update",
    "use_rest": false
  },
  "createAaaConfig": {
    "path": "/admin/aaa",
    "method": "POST",
    "description": "Create aaa configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view.",
    "sdk_endpoint": "admin",
    "sdk_method": "create",
    "use_rest": false
  },
  "deleteAaaConfig": {
    "path": "/admin/aaa",
    "method": "DELETE",
    "description": "Delete aaa configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view.",
    "sdk_endpoint": "admin",
    "sdk_method": "delete",
    "use_rest": false
  },
  "listenAuthEvents": {
    "path": "/admin/events/{sseSessionId}",
    "method": "GET",
    "description": "",
    "sdk_endpoint": "admin",
    "sdk_method": "get",
    "use_rest": false
  },
  "getRadiusConfig": {
    "path": "/admin/radius",
    "method": "GET",
    "description": "Get radius configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view.",
    "sdk_endpoint": "admin",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateRadiusConfig": {
    "path": "/admin/radius",
    "method": "PUT",
    "description": "Update radius configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view.",
    "sdk_endpoint": "admin",
    "sdk_method": "update",
    "use_rest": false
  },
  "createRadiusConfig": {
    "path": "/admin/radius",
    "method": "POST",
    "description": "Create radius configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view.",
    "sdk_endpoint": "admin",
    "sdk_method": "create",
    "use_rest": false
  },
  "deleteRadiusConfig": {
    "path": "/admin/radius",
    "method": "DELETE",
    "description": "Delete radius configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view.",
    "sdk_endpoint": "admin",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getTacacsConfig": {
    "path": "/admin/tacacs",
    "method": "GET",
    "description": "Get tacacs configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view.",
    "sdk_endpoint": "admin",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateTacacsConfig": {
    "path": "/admin/tacacs",
    "method": "PUT",
    "description": "Update tacacs configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view.",
    "sdk_endpoint": "admin",
    "sdk_method": "update",
    "use_rest": false
  },
  "createTacacsConfig": {
    "path": "/admin/tacacs",
    "method": "POST",
    "description": "Create tacacs configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view.",
    "sdk_endpoint": "admin",
    "sdk_method": "create",
    "use_rest": false
  },
  "deleteTacacsConfig": {
    "path": "/admin/tacacs",
    "method": "DELETE",
    "description": "Delete tacacs configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view.",
    "sdk_endpoint": "admin",
    "sdk_method": "delete",
    "use_rest": false
  },
  "findusers1": {
    "path": "/admin/user",
    "method": "GET",
    "description": "Get all users",
    "sdk_endpoint": "admin",
    "sdk_method": "get",
    "use_rest": false
  },
  "createuser1": {
    "path": "/admin/user",
    "method": "POST",
    "description": "Create a user",
    "sdk_endpoint": "admin",
    "sdk_method": "create",
    "use_rest": false
  },
  "getactivesessions1": {
    "path": "/admin/user/activeSessions",
    "method": "GET",
    "description": "Get active sessions",
    "sdk_endpoint": "admin",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateadminpassword1": {
    "path": "/admin/user/admin/password",
    "method": "POST",
    "description": "Update admin default password",
    "sdk_endpoint": "admin",
    "sdk_method": "create",
    "use_rest": false
  },
  "lockUser": {
    "path": "/admin/user/lockUser/{userName}",
    "method": "PUT",
    "description": "Lock a user account",
    "sdk_endpoint": "admin",
    "sdk_method": "update",
    "use_rest": false
  },
  "validatepassword1": {
    "path": "/admin/user/password/validate",
    "method": "POST",
    "description": "Validate user password",
    "sdk_endpoint": "admin",
    "sdk_method": "create",
    "use_rest": false
  },
  "updatepassword1": {
    "path": "/admin/user/password/{userName}",
    "method": "PUT",
    "description": "Update user password",
    "sdk_endpoint": "admin",
    "sdk_method": "update",
    "use_rest": false
  },
  "updateprofilelocale1": {
    "path": "/admin/user/profile/locale",
    "method": "PUT",
    "description": "Update profile locale",
    "sdk_endpoint": "admin",
    "sdk_method": "update",
    "use_rest": false
  },
  "updateprofilepassword1": {
    "path": "/admin/user/profile/password",
    "method": "PUT",
    "description": "Update profile password",
    "sdk_endpoint": "admin",
    "sdk_method": "update",
    "use_rest": false
  },
  "removesessions1": {
    "path": "/admin/user/removeSessions",
    "method": "DELETE",
    "description": "Remove sessions",
    "sdk_endpoint": "admin",
    "sdk_method": "delete",
    "use_rest": false
  },
  "resetuser1": {
    "path": "/admin/user/reset",
    "method": "POST",
    "description": "Unlock a user",
    "sdk_endpoint": "admin",
    "sdk_method": "create",
    "use_rest": false
  },
  "finduserrole1": {
    "path": "/admin/user/role",
    "method": "GET",
    "description": "Check whether a user has admin role",
    "sdk_endpoint": "admin",
    "sdk_method": "get",
    "use_rest": false
  },
  "finduserauthtype1": {
    "path": "/admin/user/userAuthType",
    "method": "GET",
    "description": "Find user authentication type, whether it is SAML enabled",
    "sdk_endpoint": "admin",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateuser1": {
    "path": "/admin/user/{userName}",
    "method": "PUT",
    "description": "Update user",
    "sdk_endpoint": "admin",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteuser1": {
    "path": "/admin/user/{userName}",
    "method": "DELETE",
    "description": "Delete user",
    "sdk_endpoint": "admin",
    "sdk_method": "delete",
    "use_rest": false
  },
  "findUserGroups": {
    "path": "/admin/usergroup",
    "method": "GET",
    "description": "Get all user groups",
    "sdk_endpoint": "admin_tech.session.endpoints.administration_user_and_group",
    "sdk_method": "find_user_groups",
    "use_rest": false
  },
  "createUserGroup": {
    "path": "/admin/usergroup",
    "method": "POST",
    "description": "Create user group",
    "sdk_endpoint": "admin_tech.session.endpoints.administration_user_and_group",
    "sdk_method": "create_user_group",
    "use_rest": false
  },
  "createGroupGridColumns": {
    "path": "/admin/usergroup/definition",
    "method": "GET",
    "description": "Get user groups in a grid table",
    "sdk_endpoint": "admin_tech.session.endpoints.administration_user_and_group",
    "sdk_method": "create_group_grid_columns",
    "use_rest": false
  },
  "findUserGroupsAsKeyValue": {
    "path": "/admin/usergroup/keyvalue",
    "method": "GET",
    "description": "Get user groups as key value map",
    "sdk_endpoint": "admin_tech.session.endpoints.administration_user_and_group",
    "sdk_method": "find_user_groups_as_key_value",
    "use_rest": false
  },
  "updateUserGroup": {
    "path": "/admin/usergroup/{userGroupId}",
    "method": "PUT",
    "description": "Update user group",
    "sdk_endpoint": "admin_tech.session.endpoints.administration_user_and_group",
    "sdk_method": "update_user_group",
    "use_rest": false
  },
  "deleteUserGroup": {
    "path": "/admin/usergroup/{userGroupId}",
    "method": "DELETE",
    "description": "Delete user group",
    "sdk_endpoint": "admin_tech.session.endpoints.administration_user_and_group",
    "sdk_method": "delete_user_group",
    "use_rest": false
  },
  "getVpnGroups": {
    "path": "/admin/vpngroup",
    "method": "GET",
    "description": "Get VPN groups",
    "sdk_endpoint": "admin_tech.session.endpoints.administration_user_and_group",
    "sdk_method": "get_vpn_groups",
    "use_rest": false
  },
  "createVpnGroup": {
    "path": "/admin/vpngroup",
    "method": "POST",
    "description": "Add VPN group",
    "sdk_endpoint": "admin_tech.session.endpoints.administration_user_and_group",
    "sdk_method": "create_vpn_group",
    "use_rest": false
  },
  "editVpnGroup": {
    "path": "/admin/vpngroup/{id}",
    "method": "PUT",
    "description": "Update VPN group",
    "sdk_endpoint": "admin_tech.session.endpoints.administration_user_and_group",
    "sdk_method": "edit_vpn_group",
    "use_rest": false
  },
  "deleteVpnGroup": {
    "path": "/admin/vpngroup/{id}",
    "method": "DELETE",
    "description": "Delete VPN group",
    "sdk_endpoint": "admin_tech.session.endpoints.administration_user_and_group",
    "sdk_method": "delete_vpn_group",
    "use_rest": false
  },
  "getRawAlarmData": {
    "path": "/alarms",
    "method": "GET",
    "description": "Get alarms for given query. If query is empty then last 30 mins data will be returned.",
    "sdk_endpoint": "alarms",
    "sdk_method": "get",
    "use_rest": false
  },
  "postRawAlarmData": {
    "path": "/alarms",
    "method": "POST",
    "description": "Get alarms for given query.",
    "sdk_endpoint": "alarms",
    "sdk_method": "create",
    "use_rest": false
  },
  "getAggregationData": {
    "path": "/alarms/aggregation",
    "method": "GET",
    "description": "Get aggregated count of alarms based on given query.",
    "sdk_endpoint": "alarms",
    "sdk_method": "get",
    "use_rest": false
  },
  "postAggregationData": {
    "path": "/alarms/aggregation",
    "method": "POST",
    "description": "Get aggregated count of alarms based on given query.",
    "sdk_endpoint": "alarms",
    "sdk_method": "create",
    "use_rest": false
  },
  "clearStaleAlarm": {
    "path": "/alarms/clear",
    "method": "POST",
    "description": "Clear the alarm for a specific UUID.",
    "sdk_endpoint": "alarms",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNonViewedActiveAlarmsCount": {
    "path": "/alarms/count",
    "method": "GET",
    "description": "Get the count of alarms which are active and not acknowledged by user.",
    "sdk_endpoint": "alarms",
    "sdk_method": "get",
    "use_rest": false
  },
  "postCount": {
    "path": "/alarms/count",
    "method": "POST",
    "description": "Get the count of alarms as per the query passed.",
    "sdk_endpoint": "alarms",
    "sdk_method": "create",
    "use_rest": false
  },
  "listDisabledAlarm": {
    "path": "/alarms/disabled",
    "method": "GET",
    "description": "List all disabled alarms",
    "sdk_endpoint": "alarms",
    "sdk_method": "get",
    "use_rest": false
  },
  "disableEnableAlarm": {
    "path": "/alarms/disabled",
    "method": "POST",
    "description": "Enable/Disable alarms by event name",
    "sdk_endpoint": "alarms",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDocCount": {
    "path": "/alarms/doccount",
    "method": "GET",
    "description": "Get the count of alarms as per the query passed.",
    "sdk_endpoint": "alarms",
    "sdk_method": "get",
    "use_rest": false
  },
  "postDocCount": {
    "path": "/alarms/doccount",
    "method": "POST",
    "description": "Get the count of alarms as per the query passed.",
    "sdk_endpoint": "alarms",
    "sdk_method": "create",
    "use_rest": false
  },
  "dumpCorrelationEngineData": {
    "path": "/alarms/dump",
    "method": "POST",
    "description": "Dump correlation engine server cache in log file",
    "sdk_endpoint": "alarms",
    "sdk_method": "create",
    "use_rest": false
  },
  "getAlarmDataFields": {
    "path": "/alarms/fields",
    "method": "GET",
    "description": "Get fields and types",
    "sdk_endpoint": "alarms",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLinkStateAlarmConfig": {
    "path": "/alarms/link-state-alarm",
    "method": "GET",
    "description": "Get configuration for link-state alarm",
    "sdk_endpoint": "alarms",
    "sdk_method": "get",
    "use_rest": false
  },
  "enableDisableLinkStateAlarm": {
    "path": "/alarms/link-state-alarm",
    "method": "POST",
    "description": "Enable/Disable a specific link-state alarm",
    "sdk_endpoint": "alarms",
    "sdk_method": "create",
    "use_rest": false
  },
  "markAllAlarmsAsViewed": {
    "path": "/alarms/markallasviewed",
    "method": "POST",
    "description": "Mark all alarms as acknowledged by the user",
    "sdk_endpoint": "alarms",
    "sdk_method": "create",
    "use_rest": false
  },
  "markAlarmsAsViewed": {
    "path": "/alarms/markviewed",
    "method": "POST",
    "description": "Mark alarms as acknowledged based on list of UUIDs.",
    "sdk_endpoint": "alarms",
    "sdk_method": "create",
    "use_rest": false
  },
  "getMasterManagerState": {
    "path": "/alarms/master",
    "method": "GET",
    "description": "Get topic details.",
    "sdk_endpoint": "alarms",
    "sdk_method": "get",
    "use_rest": false
  },
  "getNonViewedAlarms": {
    "path": "/alarms/notviewed",
    "method": "GET",
    "description": "Get alarms which are not acknowledged by the user.",
    "sdk_endpoint": "alarms",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPage": {
    "path": "/alarms/page",
    "method": "GET",
    "description": "Get paginated alarms",
    "sdk_endpoint": "alarms",
    "sdk_method": "get",
    "use_rest": false
  },
  "postPage": {
    "path": "/alarms/page",
    "method": "POST",
    "description": "Get paginated alarm raw data",
    "sdk_endpoint": "alarms",
    "sdk_method": "create",
    "use_rest": false
  },
  "setPeriodicPurgeTimer": {
    "path": "/alarms/purgefrequency",
    "method": "GET",
    "description": "Set alarm purge timer",
    "sdk_endpoint": "alarms",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAlarmQueryFields": {
    "path": "/alarms/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "alarms",
    "sdk_method": "get",
    "use_rest": false
  },
  "getFieldDetails": {
    "path": "/alarms/query/input",
    "method": "GET",
    "description": "Get alarm field details",
    "sdk_endpoint": "alarms",
    "sdk_method": "get",
    "use_rest": false
  },
  "reset": {
    "path": "/alarms/reset",
    "method": "GET",
    "description": "Reset correlation engine.",
    "sdk_endpoint": "users",
    "sdk_method": "reset",
    "use_rest": false
  },
  "restartCorrelationEngine": {
    "path": "/alarms/restart",
    "method": "GET",
    "description": "Restart correlation engine.",
    "sdk_endpoint": "alarms",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAlarmTypesAsKeyValue": {
    "path": "/alarms/rulenamedisplay/keyvalue",
    "method": "GET",
    "description": "Get alarm types.",
    "sdk_endpoint": "alarms",
    "sdk_method": "get",
    "use_rest": false
  },
  "getBySeverity": {
    "path": "/alarms/severity",
    "method": "GET",
    "description": "Get alarms by severity",
    "sdk_endpoint": "alarms",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAlarmSeverityCustomHistogram": {
    "path": "/alarms/severity/summary",
    "method": "GET",
    "description": "Get alarm severity histogram",
    "sdk_endpoint": "alarms",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAlarmSeverityMappings": {
    "path": "/alarms/severitymappings",
    "method": "GET",
    "description": "Gets alarm severity mappings",
    "sdk_endpoint": "alarms",
    "sdk_method": "get",
    "use_rest": false
  },
  "startTracking": {
    "path": "/alarms/starttracking/{testName}",
    "method": "POST",
    "description": "Start tracking events",
    "sdk_endpoint": "alarms",
    "sdk_method": "create",
    "use_rest": false
  },
  "getStats": {
    "path": "/alarms/stats",
    "method": "GET",
    "description": "Get alarm statistics",
    "sdk_endpoint": "alarms",
    "sdk_method": "get",
    "use_rest": false
  },
  "stopTracking": {
    "path": "/alarms/stoptracking/{testName}",
    "method": "POST",
    "description": "Stop tracking events",
    "sdk_endpoint": "alarms",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDeviceTopic": {
    "path": "/alarms/topic",
    "method": "GET",
    "description": "Get topic on which alarms for given device are publishing.",
    "sdk_endpoint": "alarms",
    "sdk_method": "get",
    "use_rest": false
  },
  "getTopN": {
    "path": "/alarms/topn",
    "method": "POST",
    "description": "Returns top-n alarm count based on given query",
    "sdk_endpoint": "alarms",
    "sdk_method": "create",
    "use_rest": false
  },
  "getAlarmDetails": {
    "path": "/alarms/uuid/{alarm_uuid}",
    "method": "GET",
    "description": "Get alarm details for given UUID",
    "sdk_endpoint": "alarms",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAllAppList": {
    "path": "/app-registry/app",
    "method": "GET",
    "description": "Get All the App for the given conditions",
    "sdk_endpoint": "app-registry",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppListCategory": {
    "path": "/app-registry/app/category",
    "method": "GET",
    "description": "Get the stats of all type of apps",
    "sdk_endpoint": "app-registry",
    "sdk_method": "get",
    "use_rest": false
  },
  "getNetworkDiscoveredApps": {
    "path": "/app-registry/app/discoveredapps",
    "method": "GET",
    "description": "Get All network discovered apps",
    "sdk_endpoint": "app-registry",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAttributeMappingForApps": {
    "path": "/app-registry/app/filtermap",
    "method": "GET",
    "description": "Get all available filters for applist",
    "sdk_endpoint": "app-registry",
    "sdk_method": "get",
    "use_rest": false
  },
  "getKubernetesServices": {
    "path": "/app-registry/app/kubernetesapps",
    "method": "GET",
    "description": "Obtain all services associated with clusters",
    "sdk_endpoint": "app-registry",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppByUuid": {
    "path": "/app-registry/application/{app-uuid}",
    "method": "GET",
    "description": "Get  app detail for particular App uuid",
    "sdk_endpoint": "app-registry",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppList": {
    "path": "/app-registry/applications",
    "method": "GET",
    "description": "Get All the App for the given conditions",
    "sdk_endpoint": "app-registry",
    "sdk_method": "get",
    "use_rest": false
  },
  "editAppDetails": {
    "path": "/app-registry/applications",
    "method": "PUT",
    "description": "Edit App Details",
    "sdk_endpoint": "app-registry",
    "sdk_method": "update",
    "use_rest": false
  },
  "editAppDetailsWithUUID": {
    "path": "/app-registry/applications/{appId}",
    "method": "PUT",
    "description": "Edit App Details",
    "sdk_endpoint": "app-registry",
    "sdk_method": "update",
    "use_rest": false
  },
  "getKubernetesCluster": {
    "path": "/app-registry/clusters",
    "method": "GET",
    "description": "Obtain all clusters with associated cloud accounts",
    "sdk_endpoint": "app-registry",
    "sdk_method": "get",
    "use_rest": false
  },
  "postCluster": {
    "path": "/app-registry/clusters",
    "method": "POST",
    "description": "Manually upload kubeConfig",
    "sdk_endpoint": "app-registry",
    "sdk_method": "create",
    "use_rest": false
  },
  "editKubernetesCluster": {
    "path": "/app-registry/clusters/{id}",
    "method": "PUT",
    "description": "Edit the discovery status of a cluster",
    "sdk_endpoint": "app-registry",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteKubernetesCluster": {
    "path": "/app-registry/clusters/{id}",
    "method": "DELETE",
    "description": "Delete manually uploaded cluster",
    "sdk_endpoint": "app-registry",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getActiveSaasFeeds": {
    "path": "/app-registry/saasfeed",
    "method": "GET",
    "description": "Get All Saas feed details",
    "sdk_endpoint": "app-registry",
    "sdk_method": "get",
    "use_rest": false
  },
  "disableorEnableSaasFeedForSelectedApp": {
    "path": "/app-registry/saasfeed/app/configure",
    "method": "PUT",
    "description": "Get All the App for the given conditions",
    "sdk_endpoint": "app-registry",
    "sdk_method": "update",
    "use_rest": false
  },
  "getAllSaasFeedForSelectedApp": {
    "path": "/app-registry/saasfeed/app/{feedId}",
    "method": "GET",
    "description": "Get All Saas feed details of a particular application",
    "sdk_endpoint": "app-registry",
    "sdk_method": "get",
    "use_rest": false
  },
  "getStatDataRawAuditLogData": {
    "path": "/auditlog",
    "method": "GET",
    "description": "Get stat raw data",
    "sdk_endpoint": "auditlog",
    "sdk_method": "get",
    "use_rest": false
  },
  "getRawPropertyData": {
    "path": "/auditlog",
    "method": "POST",
    "description": "Get raw property data with post action",
    "sdk_endpoint": "auditlog",
    "sdk_method": "create",
    "use_rest": false
  },
  "getPropertyAggregationData": {
    "path": "/auditlog/aggregation",
    "method": "GET",
    "description": "Get raw property data aggregated",
    "sdk_endpoint": "auditlog",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPostPropertyAggregationData": {
    "path": "/auditlog/aggregation",
    "method": "POST",
    "description": "Get raw property data aggregated with post action",
    "sdk_endpoint": "auditlog",
    "sdk_method": "create",
    "use_rest": false
  },
  "getCount": {
    "path": "/auditlog/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "auditlog",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCountPost": {
    "path": "/auditlog/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "auditlog",
    "sdk_method": "create",
    "use_rest": false
  },
  "getStatDataFields": {
    "path": "/auditlog/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "auditlog",
    "sdk_method": "get",
    "use_rest": false
  },
  "getStatBulkRawPropertyData": {
    "path": "/auditlog/page",
    "method": "GET",
    "description": "Get raw property data in bulk",
    "sdk_endpoint": "auditlog",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPostStatBulkRawPropertyData": {
    "path": "/auditlog/page",
    "method": "POST",
    "description": "Get raw property data in bulk with post action",
    "sdk_endpoint": "auditlog",
    "sdk_method": "create",
    "use_rest": false
  },
  "getStatQueryFields": {
    "path": "/auditlog/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "auditlog",
    "sdk_method": "get",
    "use_rest": false
  },
  "generateAuditLog": {
    "path": "/auditlog/severity",
    "method": "GET",
    "description": "Get audit logs for last 3 hours",
    "sdk_endpoint": "auditlog",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAuditSeverityCustomHistogram": {
    "path": "/auditlog/severity/summary",
    "method": "GET",
    "description": "Get audit log severity histogram",
    "sdk_endpoint": "auditlog",
    "sdk_method": "get",
    "use_rest": false
  },
  "deleteSchduledBackup": {
    "path": "/backup/backupinfo",
    "method": "DELETE",
    "description": "Delete all or a specific backup file stored in vManage",
    "sdk_endpoint": "backup",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getLocalBackupInfo": {
    "path": "/backup/backupinfo/{localBackupInfoId}",
    "method": "GET",
    "description": "Get details of database backup task for given localBackupInfo object",
    "sdk_endpoint": "backup",
    "sdk_method": "get",
    "use_rest": false
  },
  "downloadBackupFile": {
    "path": "/backup/download/{path}",
    "method": "GET",
    "description": "Download a Backup File that is already stored in vManage",
    "sdk_endpoint": "backup",
    "sdk_method": "get",
    "use_rest": false
  },
  "exportBackup": {
    "path": "/backup/export",
    "method": "POST",
    "description": "Trigger a backup of configuration database and statstics database and store it in vManage",
    "sdk_endpoint": "backup",
    "sdk_method": "create",
    "use_rest": false
  },
  "listBackup": {
    "path": "/backup/list",
    "method": "GET",
    "description": "List all backup files of a tenant stored in vManage",
    "sdk_endpoint": "backup",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCdnaSenseService": {
    "path": "/cdna/sense/{tag}",
    "method": "GET",
    "description": "Get Sense Service",
    "sdk_endpoint": "cdna",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCdnaServer": {
    "path": "/cdna/server",
    "method": "GET",
    "description": "Get CDNA Server Details",
    "sdk_endpoint": "cdna",
    "sdk_method": "get",
    "use_rest": false
  },
  "enrollCdnaServer": {
    "path": "/cdna/server",
    "method": "PUT",
    "description": "Enroll CDNA Server with OTP",
    "sdk_endpoint": "cdna",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteCdnaServer": {
    "path": "/cdna/server",
    "method": "DELETE",
    "description": "Delete CDNA Server Details",
    "sdk_endpoint": "cdna",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getCertDetails": {
    "path": "/certificate/certdetails",
    "method": "POST",
    "description": "get certificaate details",
    "sdk_endpoint": "certificate",
    "sdk_method": "create",
    "use_rest": false
  },
  "generateCSRforAllController": {
    "path": "/certificate/controller/bulkcsr",
    "method": "POST",
    "description": "Generate CSR for all controller",
    "sdk_endpoint": "certificate",
    "sdk_method": "create",
    "use_rest": false
  },
  "getControllerCertStatus": {
    "path": "/certificate/controller/certstatus",
    "method": "GET",
    "description": "invalidate the device",
    "sdk_endpoint": "certificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCSRViewRightMenus": {
    "path": "/certificate/csr/details",
    "method": "GET",
    "description": "Get CSR detail view",
    "sdk_endpoint": "certificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceViewRightMenus": {
    "path": "/certificate/device/details",
    "method": "GET",
    "description": "Get device detail view",
    "sdk_endpoint": "certificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "invalidateDevice": {
    "path": "/certificate/device/invalidate",
    "method": "POST",
    "description": "invalidate the device",
    "sdk_endpoint": "certificate",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDevicesList": {
    "path": "/certificate/device/list",
    "method": "GET",
    "description": "get device list",
    "sdk_endpoint": "certificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "stageDevice": {
    "path": "/certificate/device/stage",
    "method": "POST",
    "description": "Stop data traffic to device",
    "sdk_endpoint": "certificate",
    "sdk_method": "create",
    "use_rest": false
  },
  "forceSyncRootCert": {
    "path": "/certificate/forcesync/rootCert",
    "method": "POST",
    "description": "force Sync RootCert to all devices",
    "sdk_endpoint": "certificate",
    "sdk_method": "create",
    "use_rest": false
  },
  "generateCSR": {
    "path": "/certificate/generate/csr",
    "method": "POST",
    "description": "get certificaate details",
    "sdk_endpoint": "certificate",
    "sdk_method": "create",
    "use_rest": false
  },
  "generateEnterpriseCSR": {
    "path": "/certificate/generate/enterprise/csr/vedge",
    "method": "POST",
    "description": "generate CSR on hardware WAN edge device",
    "sdk_endpoint": "certificate",
    "sdk_method": "create",
    "use_rest": false
  },
  "generateEdgeDeviceCSR": {
    "path": "/certificate/generate/wanedge/csr",
    "method": "POST",
    "description": "generate CSR on WAN edge device",
    "sdk_endpoint": "certificate",
    "sdk_method": "create",
    "use_rest": false
  },
  "installCertificate": {
    "path": "/certificate/install/signedCert",
    "method": "POST",
    "description": "install Certificate",
    "sdk_endpoint": "certificate",
    "sdk_method": "create",
    "use_rest": false
  },
  "updateJks": {
    "path": "/certificate/jks",
    "method": "PUT",
    "description": "update JKS",
    "sdk_endpoint": "certificate",
    "sdk_method": "update",
    "use_rest": false
  },
  "getListStatus": {
    "path": "/certificate/list/status",
    "method": "GET",
    "description": "get certificate data",
    "sdk_endpoint": "certificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "setvSmartMtHubList": {
    "path": "/certificate/mthub/list",
    "method": "GET",
    "description": "vSmart Mthub list",
    "sdk_endpoint": "certificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "getQuarantineBanner": {
    "path": "/certificate/quarantine/banner",
    "method": "GET",
    "description": "get quarantine banner data",
    "sdk_endpoint": "certificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCertificateData": {
    "path": "/certificate/record",
    "method": "GET",
    "description": "get device certificate data",
    "sdk_endpoint": "certificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "resetRSA": {
    "path": "/certificate/reset/rsa",
    "method": "POST",
    "description": "resetRSA for controllers",
    "sdk_endpoint": "certificate",
    "sdk_method": "create",
    "use_rest": false
  },
  "decommissionEnterpriseCSRForVedge": {
    "path": "/certificate/revoke/enterprise/certificate",
    "method": "POST",
    "description": "Revoking enterprise CSR for hardware vEdge",
    "sdk_endpoint": "certificate",
    "sdk_method": "create",
    "use_rest": false
  },
  "getRootCertChains": {
    "path": "/certificate/rootcertchains",
    "method": "GET",
    "description": "get root cert chain in the system",
    "sdk_endpoint": "certificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "saveRootCertChain": {
    "path": "/certificate/rootcertchains",
    "method": "PUT",
    "description": "save root cert chain in the system",
    "sdk_endpoint": "certificate",
    "sdk_method": "update",
    "use_rest": false
  },
  "getRootCertificate": {
    "path": "/certificate/rootcertificate",
    "method": "GET",
    "description": "Get device root certificate detail view",
    "sdk_endpoint": "certificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "rsaKeyLength2048ForAllDevices": {
    "path": "/certificate/rsakeylengthdefault",
    "method": "GET",
    "description": "Check if all devices in network use 2048-b RSA Key length for their device certs.",
    "sdk_endpoint": "certificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "saveVEdgeList": {
    "path": "/certificate/save/vedge/list",
    "method": "POST",
    "description": "change VedgeList Validity",
    "sdk_endpoint": "certificate",
    "sdk_method": "create",
    "use_rest": false
  },
  "getCertificateDetail": {
    "path": "/certificate/stats/detail",
    "method": "GET",
    "description": "Get certificate details",
    "sdk_endpoint": "certificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCertificateStats": {
    "path": "/certificate/stats/summary",
    "method": "GET",
    "description": "Get certificate expiration status",
    "sdk_endpoint": "certificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "syncvBond": {
    "path": "/certificate/syncvbond",
    "method": "GET",
    "description": "sync vManage UUID to all vBond",
    "sdk_endpoint": "certificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "getTokenList": {
    "path": "/certificate/tokengeneratedlist",
    "method": "GET",
    "description": "get token generated list",
    "sdk_endpoint": "certificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "getInstalledCert": {
    "path": "/certificate/vedge",
    "method": "GET",
    "description": "get device installed cert",
    "sdk_endpoint": "certificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "getvEdgeCSR": {
    "path": "/certificate/vedge/csr",
    "method": "GET",
    "description": "get device CSR",
    "sdk_endpoint": "certificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "getvEdgeList": {
    "path": "/certificate/vedge/list",
    "method": "GET",
    "description": "get vEdge list",
    "sdk_endpoint": "certificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "setvEdgeList": {
    "path": "/certificate/vedge/list",
    "method": "POST",
    "description": "Save vEdge list (send to controller)",
    "sdk_endpoint": "certificate",
    "sdk_method": "create",
    "use_rest": false
  },
  "getView": {
    "path": "/certificate/view",
    "method": "GET",
    "description": "Get certificate UI view",
    "sdk_endpoint": "certificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSelfSignedCert": {
    "path": "/certificate/vmanage/selfsignedcert",
    "method": "GET",
    "description": "get vManage self signed cert",
    "sdk_endpoint": "certificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "getvSmartList": {
    "path": "/certificate/vsmart/list",
    "method": "GET",
    "description": "get vSmart list",
    "sdk_endpoint": "certificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "setvSmartList": {
    "path": "/certificate/vsmart/list",
    "method": "POST",
    "description": "save vSmart List(handleSendToVbond)",
    "sdk_endpoint": "certificate",
    "sdk_method": "create",
    "use_rest": false
  },
  "deleteConfiguration": {
    "path": "/certificate/{uuid}",
    "method": "DELETE",
    "description": "invalid device",
    "sdk_endpoint": "admin_tech.session.endpoints.certificate_management_device",
    "sdk_method": "delete_configuration",
    "use_rest": false
  },
  "createServerInfo": {
    "path": "/client/server",
    "method": "GET",
    "description": "Get vManage server information",
    "sdk_endpoint": "client",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCsrfToken": {
    "path": "/client/token",
    "method": "GET",
    "description": "Get CSRF token",
    "sdk_endpoint": "client",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAccessTokenforDevice": {
    "path": "/cloudservices/accesstoken",
    "method": "GET",
    "description": "",
    "sdk_endpoint": "cloudservices",
    "sdk_method": "get",
    "use_rest": false
  },
  "enablewebex1": {
    "path": "/cloudservices/app/webex",
    "method": "PUT",
    "description": "Day N- Update Webex App",
    "sdk_endpoint": "cloudservices",
    "sdk_method": "update",
    "use_rest": false
  },
  "enableWebex": {
    "path": "/cloudservices/app/webex",
    "method": "POST",
    "description": "Add Webex App",
    "sdk_endpoint": "cloudservices",
    "sdk_method": "create",
    "use_rest": false
  },
  "deleteWebexPrefixLists": {
    "path": "/cloudservices/app/webex",
    "method": "DELETE",
    "description": "deleteWebexPrefixLists",
    "sdk_endpoint": "cloudservices",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getAzureToken": {
    "path": "/cloudservices/authtoken",
    "method": "POST",
    "description": "Get Azure token",
    "sdk_endpoint": "cloudservices",
    "sdk_method": "create",
    "use_rest": false
  },
  "connect": {
    "path": "/cloudservices/connect",
    "method": "GET",
    "description": "Telemetry Opt In",
    "sdk_endpoint": "cloudservices",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCloudCredentials": {
    "path": "/cloudservices/credentials",
    "method": "GET",
    "description": "Get cloud service credentials",
    "sdk_endpoint": "cloudservices",
    "sdk_method": "get",
    "use_rest": false
  },
  "addCloudCredentials": {
    "path": "/cloudservices/credentials",
    "method": "POST",
    "description": "Add cloud service credentials",
    "sdk_endpoint": "cloudservices",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDeviceCode": {
    "path": "/cloudservices/devicecode",
    "method": "POST",
    "description": "Get Azure device code",
    "sdk_endpoint": "cloudservices",
    "sdk_method": "create",
    "use_rest": false
  },
  "getO365PreferredPathFromVAnalytics": {
    "path": "/cloudservices/m365/preferredpath",
    "method": "POST",
    "description": "Get vAnalytics Preferred Path for Office365 over time. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "cloudservices",
    "sdk_method": "create",
    "use_rest": false
  },
  "isStaging": {
    "path": "/cloudservices/staging",
    "method": "GET",
    "description": "Check if testbed or production",
    "sdk_endpoint": "cloudservices",
    "sdk_method": "get",
    "use_rest": false
  },
  "getTelemetryState": {
    "path": "/cloudservices/telemetry",
    "method": "GET",
    "description": "Get Telemetry state",
    "sdk_endpoint": "cloudservices",
    "sdk_method": "get",
    "use_rest": false
  },
  "optIn": {
    "path": "/cloudservices/telemetry/optin",
    "method": "PUT",
    "description": "Telemetry Opt In",
    "sdk_endpoint": "cloudservices",
    "sdk_method": "update",
    "use_rest": false
  },
  "optOut": {
    "path": "/cloudservices/telemetry/optout",
    "method": "DELETE",
    "description": "Telemetry Opt Out",
    "sdk_endpoint": "cloudservices",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getvAnalyticsDashboardList": {
    "path": "/cloudservices/vanalytics/dashboardlist",
    "method": "GET",
    "description": "Get vAnalytics Dashboard List",
    "sdk_endpoint": "cloudservices",
    "sdk_method": "get",
    "use_rest": false
  },
  "checkIfClusterLocked": {
    "path": "/clusterManagement/clusterLocked",
    "method": "GET",
    "description": "Check whether cluster is locked<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.cluster_management",
    "sdk_method": "check_if_cluster_locked",
    "use_rest": false
  },
  "getClusterWorkflowVersion": {
    "path": "/clusterManagement/clusterworkflow/version",
    "method": "GET",
    "description": "List vManages in the cluster<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.cluster_management",
    "sdk_method": "get_cluster_workflow_version",
    "use_rest": false
  },
  "configureVmanage": {
    "path": "/clusterManagement/configure",
    "method": "POST",
    "description": "Configure vManage<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.cluster_management",
    "sdk_method": "configure_vmanage",
    "use_rest": false
  },
  "getConnectedDevices": {
    "path": "/clusterManagement/connectedDevices/{vmanageIP}",
    "method": "GET",
    "description": "Get connected device for vManage<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.cluster_management",
    "sdk_method": "get_connected_devices",
    "use_rest": false
  },
  "healthDetails": {
    "path": "/clusterManagement/health/details",
    "method": "GET",
    "description": "Get cluster health check details<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.cluster_management",
    "sdk_method": "health_details",
    "use_rest": false
  },
  "healthStatusInfo": {
    "path": "/clusterManagement/health/status",
    "method": "GET",
    "description": "Get cluster health check details<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.cluster_management",
    "sdk_method": "health_status_info",
    "use_rest": false
  },
  "healthSummary": {
    "path": "/clusterManagement/health/summary",
    "method": "GET",
    "description": "Get cluster health check summary<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.cluster_management",
    "sdk_method": "health_summary",
    "use_rest": false
  },
  "hostHealthStatus": {
    "path": "/clusterManagement/host/health/status",
    "method": "GET",
    "description": "Get vManage cluster health check details<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "clusterManagement",
    "sdk_method": "get",
    "use_rest": false
  },
  "getConfiguredIPList": {
    "path": "/clusterManagement/iplist/{vmanageID}",
    "method": "GET",
    "description": "Get configured IP addresses<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "clusterManagement",
    "sdk_method": "get",
    "use_rest": false
  },
  "isClusterReady": {
    "path": "/clusterManagement/isready",
    "method": "GET",
    "description": "Is cluster ready<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.cluster_management",
    "sdk_method": "is_cluster_ready",
    "use_rest": false
  },
  "listVmanages": {
    "path": "/clusterManagement/list",
    "method": "GET",
    "description": "List vManages in the cluster<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.cluster_management",
    "sdk_method": "list_vmanages",
    "use_rest": false
  },
  "nodeProperties": {
    "path": "/clusterManagement/nodeProperties",
    "method": "GET",
    "description": "Get properties of vManage being added to  cluster<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.cluster_management",
    "sdk_method": "node_properties",
    "use_rest": false
  },
  "removeVmanage": {
    "path": "/clusterManagement/remove",
    "method": "POST",
    "description": "Remove vManage from cluster<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.cluster_management",
    "sdk_method": "remove_vmanage",
    "use_rest": false
  },
  "performReplicationAndRebalanceOfKafkaPartitions": {
    "path": "/clusterManagement/replicateAndRebalance",
    "method": "PUT",
    "description": "Initiate replication and rebalance of kafka topics<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.cluster_management",
    "sdk_method": "perform_replication_and_rebalance_of_kafka_partitions",
    "use_rest": false
  },
  "editVmanage": {
    "path": "/clusterManagement/setup",
    "method": "PUT",
    "description": "Update vManage cluster info<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.cluster_management",
    "sdk_method": "edit_vmanage",
    "use_rest": false
  },
  "addVmanage": {
    "path": "/clusterManagement/setup",
    "method": "POST",
    "description": "Add vManage to cluster",
    "sdk_endpoint": "admin_tech.session.endpoints.cluster_management",
    "sdk_method": "add_vmanage",
    "use_rest": false
  },
  "getTenancyMode": {
    "path": "/clusterManagement/tenancy/mode",
    "method": "GET",
    "description": "Get vManage tenancy mode<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.cluster_management",
    "sdk_method": "get_tenancy_mode",
    "use_rest": false
  },
  "setTenancyMode": {
    "path": "/clusterManagement/tenancy/mode",
    "method": "POST",
    "description": "Update vManage tenancy mode",
    "sdk_endpoint": "admin_tech.session.endpoints.cluster_management",
    "sdk_method": "set_tenancy_mode",
    "use_rest": false
  },
  "getTenantsList": {
    "path": "/clusterManagement/tenantList",
    "method": "GET",
    "description": "Get tenant list<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.cluster_management",
    "sdk_method": "get_tenants_list",
    "use_rest": false
  },
  "addOrUpdateUserCredentials": {
    "path": "/clusterManagement/userCreds",
    "method": "POST",
    "description": "Add or update user credentials for cluster operations<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.cluster_management",
    "sdk_method": "add_or_update_user_credentials",
    "use_rest": false
  },
  "getVManageDetails": {
    "path": "/clusterManagement/vManage/details/{vmanageIP}",
    "method": "GET",
    "description": "Get vManage detail<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "clusterManagement",
    "sdk_method": "get",
    "use_rest": false
  },
  "getConnectedDevicesPerTenant": {
    "path": "/clusterManagement/{tenantId}/connectedDevices/{vmanageIP}",
    "method": "GET",
    "description": "Get connected device for vManage for a tenant<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.cluster_management",
    "sdk_method": "get_connected_devices_per_tenant",
    "use_rest": false
  },
  "getvnfByDeviceId": {
    "path": "/colocation/monitor/device/vnf",
    "method": "GET",
    "description": "List all VNF attached with Device",
    "sdk_endpoint": "colocation",
    "sdk_method": "get",
    "use_rest": false
  },
  "vnfActions": {
    "path": "/colocation/monitor/vnf/action",
    "method": "POST",
    "description": "To do VNF actions such as start, stop and restart",
    "sdk_endpoint": "colocation",
    "sdk_method": "create",
    "use_rest": false
  },
  "getVNFEventsCountDetail": {
    "path": "/colocation/monitor/vnf/alarms",
    "method": "GET",
    "description": "Get event detail of VNF",
    "sdk_endpoint": "colocation",
    "sdk_method": "get",
    "use_rest": false
  },
  "getVNFAlarmCount": {
    "path": "/colocation/monitor/vnf/alarms/count",
    "method": "GET",
    "description": "Get alarm count of VNF",
    "sdk_endpoint": "colocation",
    "sdk_method": "get",
    "use_rest": false
  },
  "getVNFEventsDetail": {
    "path": "/colocation/monitor/vnf/events",
    "method": "GET",
    "description": "Get event detail of VNF",
    "sdk_endpoint": "colocation",
    "sdk_method": "get",
    "use_rest": false
  },
  "getVNFInterfaceDetail": {
    "path": "/colocation/monitor/vnf/interface",
    "method": "GET",
    "description": "Get interface detail of VNF",
    "sdk_endpoint": "colocation",
    "sdk_method": "get",
    "use_rest": false
  },
  "activateContainerOnRemoteHost": {
    "path": "/container-manager/activate/{containerName}",
    "method": "POST",
    "description": "Activate container on remote host",
    "sdk_endpoint": "container-manager",
    "sdk_method": "create",
    "use_rest": false
  },
  "deActivateContainer": {
    "path": "/container-manager/deactivate/{containerName}",
    "method": "POST",
    "description": "Deactivate container on remote host",
    "sdk_endpoint": "container-manager",
    "sdk_method": "create",
    "use_rest": false
  },
  "doesValidImageExist": {
    "path": "/container-manager/doesValidImageExist/{containerName}",
    "method": "GET",
    "description": "Get container image checksum",
    "sdk_endpoint": "container-manager",
    "sdk_method": "get",
    "use_rest": false
  },
  "getContainerInspectData": {
    "path": "/container-manager/inspect/{containerName}",
    "method": "GET",
    "description": "Get container inspect data",
    "sdk_endpoint": "container-manager",
    "sdk_method": "get",
    "use_rest": false
  },
  "getContainerSettings": {
    "path": "/container-manager/settings/{containerName}",
    "method": "GET",
    "description": "Get container settings",
    "sdk_endpoint": "container-manager",
    "sdk_method": "get",
    "use_rest": false
  },
  "generateDeviceStateData": {
    "path": "/data/device/state/{state_data_type}",
    "method": "GET",
    "description": "Get device state data",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "generate_device_state_data",
    "use_rest": false
  },
  "generateDeviceStateDataFields": {
    "path": "/data/device/state/{state_data_type}/fields",
    "method": "GET",
    "description": "Get device state data fileds",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "generate_device_state_data_fields",
    "use_rest": false
  },
  "generateDeviceStateDataWithQueryString": {
    "path": "/data/device/state/{state_data_type}/query",
    "method": "GET",
    "description": "Get device state data fileds",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "generate_device_state_data_with_query_string",
    "use_rest": false
  },
  "getStatisticsType": {
    "path": "/data/device/statistics",
    "method": "GET",
    "description": "Get statistics types",
    "sdk_endpoint": "data",
    "sdk_method": "get",
    "use_rest": false
  },
  "getActiveAlarms": {
    "path": "/data/device/statistics/alarm/active",
    "method": "GET",
    "description": "Get active alarms",
    "sdk_endpoint": "data",
    "sdk_method": "get",
    "use_rest": false
  },
  "generateDeviceStatisticsData": {
    "path": "/data/device/statistics/{state_data_type}",
    "method": "GET",
    "description": "Get device statistics data",
    "sdk_endpoint": "data",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCountWithStateDataType": {
    "path": "/data/device/statistics/{state_data_type}/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "data",
    "sdk_method": "get",
    "use_rest": false
  },
  "getStatDataFieldsByStateDataType": {
    "path": "/data/device/statistics/{state_data_type}/fields",
    "method": "GET",
    "description": "Get statistics fields and types",
    "sdk_endpoint": "data",
    "sdk_method": "get",
    "use_rest": false
  },
  "createStats": {
    "path": "/dca/analytics",
    "method": "PUT",
    "description": "Update collection time of DCARest stat for vAnalytics",
    "sdk_endpoint": "dca",
    "sdk_method": "update",
    "use_rest": false
  },
  "getAllStatsDataDCA": {
    "path": "/dca/analytics/all",
    "method": "POST",
    "description": "Get all statistics setting data",
    "sdk_endpoint": "dca",
    "sdk_method": "create",
    "use_rest": false
  },
  "getCloudSettings": {
    "path": "/dca/cloudservices",
    "method": "GET",
    "description": "Get cloud service settings",
    "sdk_endpoint": "dca",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAccessToken": {
    "path": "/dca/cloudservices/accesstoken",
    "method": "GET",
    "description": "Get DCA access token",
    "sdk_endpoint": "dca",
    "sdk_method": "get",
    "use_rest": false
  },
  "storeAccessToken": {
    "path": "/dca/cloudservices/accesstoken",
    "method": "POST",
    "description": "Set DCA access token",
    "sdk_endpoint": "dca",
    "sdk_method": "create",
    "use_rest": false
  },
  "generateAlarm": {
    "path": "/dca/cloudservices/alarm",
    "method": "POST",
    "description": "Generate DCA alarms",
    "sdk_endpoint": "dca",
    "sdk_method": "create",
    "use_rest": false
  },
  "getIdToken": {
    "path": "/dca/cloudservices/idtoken",
    "method": "GET",
    "description": "Get DCA Id token",
    "sdk_endpoint": "dca",
    "sdk_method": "get",
    "use_rest": false
  },
  "storeIdToken": {
    "path": "/dca/cloudservices/idtoken",
    "method": "POST",
    "description": "Set DCA Id token",
    "sdk_endpoint": "dca",
    "sdk_method": "create",
    "use_rest": false
  },
  "getOTP": {
    "path": "/dca/cloudservices/otp",
    "method": "GET",
    "description": "Get cloud service OTP value",
    "sdk_endpoint": "dca",
    "sdk_method": "get",
    "use_rest": false
  },
  "updatetOTP": {
    "path": "/dca/cloudservices/otp",
    "method": "PUT",
    "description": "Update cloud service OTP value",
    "sdk_endpoint": "dca",
    "sdk_method": "update",
    "use_rest": false
  },
  "getTelemetrySettings": {
    "path": "/dca/cloudservices/telemetry",
    "method": "GET",
    "description": "Get DCA telemetry settings",
    "sdk_endpoint": "dca",
    "sdk_method": "get",
    "use_rest": false
  },
  "getvAnalytics": {
    "path": "/dca/cloudservices/vanalytics",
    "method": "POST",
    "description": "Get session from DCS for vAnalytics",
    "sdk_endpoint": "dca",
    "sdk_method": "create",
    "use_rest": false
  },
  "generateDCADeviceStateData": {
    "path": "/dca/data/device/state/{state_data_type}",
    "method": "POST",
    "description": "Get device state data",
    "sdk_endpoint": "dca",
    "sdk_method": "create",
    "use_rest": false
  },
  "generateDCADeviceStatisticsData": {
    "path": "/dca/data/device/statistics/{stats_data_type}",
    "method": "POST",
    "description": "Get device statistics data",
    "sdk_endpoint": "dca",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDCATenantOwners": {
    "path": "/dca/dcatenantowners",
    "method": "GET",
    "description": "Get DCA tenant owners",
    "sdk_endpoint": "dca",
    "sdk_method": "get",
    "use_rest": false
  },
  "listAllDevicesDCA": {
    "path": "/dca/device",
    "method": "POST",
    "description": "Get all devices",
    "sdk_endpoint": "dca",
    "sdk_method": "create",
    "use_rest": false
  },
  "getCrashLogs": {
    "path": "/dca/device/crashlog/details",
    "method": "POST",
    "description": "Get crash log",
    "sdk_endpoint": "dca",
    "sdk_method": "create",
    "use_rest": false
  },
  "getCrashLogsSynced": {
    "path": "/dca/device/crashlog/synced",
    "method": "GET",
    "description": "Get device crash log",
    "sdk_endpoint": "dca",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCloudServicesConfigurationDCA": {
    "path": "/dca/settings/configuration/cloudservices/dca",
    "method": "GET",
    "description": "Get DCA cloud service configuration",
    "sdk_endpoint": "dca",
    "sdk_method": "get",
    "use_rest": false
  },
  "createDCAAnalyticsDataFile": {
    "path": "/dca/settings/configuration/{type}/dca",
    "method": "POST",
    "description": "Create analytics config data",
    "sdk_endpoint": "dca",
    "sdk_method": "create",
    "use_rest": false
  },
  "getStatsDBIndexStatus": {
    "path": "/dca/statistics/settings/status",
    "method": "POST",
    "description": "Get statistics setting status",
    "sdk_endpoint": "dca",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDevicesDetailsDCA": {
    "path": "/dca/system/device",
    "method": "POST",
    "description": "Get device details",
    "sdk_endpoint": "dca",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDCAAttachedConfigToDevice": {
    "path": "/dca/template/device/config/attachedconfig",
    "method": "POST",
    "description": "Get attached config to device",
    "sdk_endpoint": "dca",
    "sdk_method": "create",
    "use_rest": false
  },
  "getTemplatePolicyDefinitionsDCA": {
    "path": "/dca/template/policy/definition/approute",
    "method": "POST",
    "description": "Get template policy definitions",
    "sdk_endpoint": "dca",
    "sdk_method": "create",
    "use_rest": false
  },
  "getVPNListsDCA": {
    "path": "/dca/template/policy/list/vpn",
    "method": "POST",
    "description": "Get VPN details",
    "sdk_endpoint": "dca",
    "sdk_method": "create",
    "use_rest": false
  },
  "getVedgeTemplateListDCA": {
    "path": "/dca/template/policy/vedge",
    "method": "POST",
    "description": "Get vEdge template list",
    "sdk_endpoint": "dca",
    "sdk_method": "create",
    "use_rest": false
  },
  "getVsmartTemplateListDCA": {
    "path": "/dca/template/policy/vsmart",
    "method": "POST",
    "description": "Get vSmart template list",
    "sdk_endpoint": "dca",
    "sdk_method": "create",
    "use_rest": false
  },
  "listAllDevices": {
    "path": "/device",
    "method": "GET",
    "description": "List all devices",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "list_all_devices",
    "use_rest": false
  },
  "getAAAservers": {
    "path": "/device/aaa/servers",
    "method": "GET",
    "description": "Get AAA servers from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAAAUsers": {
    "path": "/device/aaa/users",
    "method": "GET",
    "description": "Get AAA users from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getACLMatchCounterUsers": {
    "path": "/device/acl/matchcounter",
    "method": "GET",
    "description": "Get ACL match counters from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "processCancelTask": {
    "path": "/device/action/cancel",
    "method": "POST",
    "description": "Cancel tasks",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "process_cancel_task",
    "use_rest": false
  },
  "generateChangePartitionInfo": {
    "path": "/device/action/changepartition",
    "method": "GET",
    "description": "Get change partition information",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "generate_change_partition_info",
    "use_rest": false
  },
  "processChangePartition": {
    "path": "/device/action/changepartition",
    "method": "POST",
    "description": "Process change partition operation",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "generateDeactivateInfo": {
    "path": "/device/action/deactivate",
    "method": "GET",
    "description": "Get deactivate partition information",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "generate_deactivate_info",
    "use_rest": false
  },
  "processDeactivateSmu": {
    "path": "/device/action/deactivate",
    "method": "POST",
    "description": "Process deactivate operation for smu image",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "process_deactivate_smu",
    "use_rest": false
  },
  "processDefaultPartition": {
    "path": "/device/action/defaultpartition",
    "method": "POST",
    "description": "Process marking default partition operation",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "createFilterVPNList": {
    "path": "/device/action/filter/vpn",
    "method": "GET",
    "description": "Get filter VPN list",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getFirmwareImages": {
    "path": "/device/action/firmware",
    "method": "GET",
    "description": "Get list of firmware images in the repository",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "processFirmwareImage": {
    "path": "/device/action/firmware",
    "method": "POST",
    "description": "Upload firmware image package",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "remoteFirmwareImageUpgrade": {
    "path": "/device/action/firmware-upgrade",
    "method": "POST",
    "description": "Eemote firmware on device",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "getFirmwareDevices": {
    "path": "/device/action/firmware-upgrade/devices",
    "method": "GET",
    "description": "firmware supported devices",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getFirmwareRemoteImage": {
    "path": "/device/action/firmware-upgrade/remote",
    "method": "GET",
    "description": "firmware remote image package",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "processFirmwareRemoteImage": {
    "path": "/device/action/firmware-upgrade/remote",
    "method": "POST",
    "description": "firmware remote image package",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "editFirmwareUpgardeRemoteImage": {
    "path": "/device/action/firmware-upgrade/remote/{versionId}",
    "method": "PUT",
    "description": "Download software package file",
    "sdk_endpoint": "device",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteFirmwareUpgardeRemoteImage": {
    "path": "/device/action/firmware-upgrade/{versionId}",
    "method": "DELETE",
    "description": "Download software package file",
    "sdk_endpoint": "device",
    "sdk_method": "delete",
    "use_rest": false
  },
  "activateFirmwareImage": {
    "path": "/device/action/firmware/activate",
    "method": "POST",
    "description": "Activate firmware on device",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDevicesFWUpgrade": {
    "path": "/device/action/firmware/devices",
    "method": "GET",
    "description": "Get list of devices that support firmware upgrade",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "installFirmwareImage": {
    "path": "/device/action/firmware/install",
    "method": "POST",
    "description": "Install firmware on device",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "removeFirmwareImage": {
    "path": "/device/action/firmware/remove",
    "method": "POST",
    "description": "Remove firmware on device",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "getFirmwareImageDetails": {
    "path": "/device/action/firmware/{versionId}",
    "method": "GET",
    "description": "Get firmware image details for a given version",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "deleteFirmwareImage": {
    "path": "/device/action/firmware/{versionId}",
    "method": "DELETE",
    "description": "Delete firmware image package",
    "sdk_endpoint": "device",
    "sdk_method": "delete",
    "use_rest": false
  },
  "initiateImageDownload": {
    "path": "/device/action/image-download",
    "method": "POST",
    "description": "Intitate image download on the given device.",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "initiate_image_download",
    "use_rest": false
  },
  "processRemoveSoftwareImage": {
    "path": "/device/action/image-remove",
    "method": "POST",
    "description": "Process remove software image operation",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "process_remove_software_image",
    "use_rest": false
  },
  "generateInstallInfo": {
    "path": "/device/action/install",
    "method": "GET",
    "description": "Generate install info",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "generate_install_info",
    "use_rest": false
  },
  "processInstall": {
    "path": "/device/action/install",
    "method": "POST",
    "description": "Process an installation operation",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "generateDeviceList": {
    "path": "/device/action/install/devices/{deviceType}",
    "method": "GET",
    "description": "Get list of installed devices",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "generateDeviceActionList": {
    "path": "/device/action/list",
    "method": "GET",
    "description": "Get device action list",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "generate_device_action_list",
    "use_rest": false
  },
  "processLxcActivate": {
    "path": "/device/action/lxcactivate",
    "method": "POST",
    "description": "Process an activation operation",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "process_lxc_activate",
    "use_rest": false
  },
  "processLxcDelete": {
    "path": "/device/action/lxcdelete",
    "method": "POST",
    "description": "Process a delete operation",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "process_lxc_delete",
    "use_rest": false
  },
  "processLxcInstall": {
    "path": "/device/action/lxcinstall",
    "method": "POST",
    "description": "Process an installation operation",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "process_lxc_install",
    "use_rest": false
  },
  "processLxcReload": {
    "path": "/device/action/lxcreload",
    "method": "POST",
    "description": "Process a reload operation",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "process_lxc_reload",
    "use_rest": false
  },
  "processLxcReset": {
    "path": "/device/action/lxcreset",
    "method": "POST",
    "description": "Process a reset operation",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "process_lxc_reset",
    "use_rest": false
  },
  "processLxcUpgrade": {
    "path": "/device/action/lxcupgrade",
    "method": "POST",
    "description": "Process an upgrade operation",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "process_lxc_upgrade",
    "use_rest": false
  },
  "generateRebootInfo": {
    "path": "/device/action/reboot",
    "method": "GET",
    "description": "Get device reboot information",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "generate_reboot_info",
    "use_rest": false
  },
  "processReboot": {
    "path": "/device/action/reboot",
    "method": "POST",
    "description": "Process a reboot operation",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "process_reboot",
    "use_rest": false
  },
  "generateRebootDeviceList": {
    "path": "/device/action/reboot/devices/{deviceType}",
    "method": "GET",
    "description": "Get list of rebooted devices",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "generate_reboot_device_list",
    "use_rest": false
  },
  "generateRediscoverInfo": {
    "path": "/device/action/rediscover",
    "method": "GET",
    "description": "Get rediscover operation information",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "generate_rediscover_info",
    "use_rest": false
  },
  "reDiscoverDevices": {
    "path": "/device/action/rediscover",
    "method": "POST",
    "description": "Rediscover device",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "re_discover_devices",
    "use_rest": false
  },
  "reDiscoverAllDevice": {
    "path": "/device/action/rediscoverall",
    "method": "POST",
    "description": "Rediscover all devices",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "re_discover_all_device",
    "use_rest": false
  },
  "getRemoteServerList": {
    "path": "/device/action/remote-server",
    "method": "GET",
    "description": "Get list of remote servers",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "addRemoteServer": {
    "path": "/device/action/remote-server",
    "method": "POST",
    "description": "Add a new remote server entry.",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "getRemoteServerById": {
    "path": "/device/action/remote-server/{id}",
    "method": "GET",
    "description": "Get remote server for the specified ID",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateRemoteServer": {
    "path": "/device/action/remote-server/{id}",
    "method": "PUT",
    "description": "Update remote server for the specified ID",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_software_actions",
    "sdk_method": "update_remote_server",
    "use_rest": false
  },
  "deleteRemoteServer": {
    "path": "/device/action/remote-server/{id}",
    "method": "DELETE",
    "description": "Delete remote server for the specified ID",
    "sdk_endpoint": "device",
    "sdk_method": "delete",
    "use_rest": false
  },
  "generateRemovePartitionInfo": {
    "path": "/device/action/removepartition",
    "method": "GET",
    "description": "Get remove partition information",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "generate_remove_partition_info",
    "use_rest": false
  },
  "processRemovePartition": {
    "path": "/device/action/removepartition",
    "method": "POST",
    "description": "Process remove partition operation",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "process_remove_partition",
    "use_rest": false
  },
  "processDeleteAmpApiKey": {
    "path": "/device/action/security/amp/apikey/{uuid}",
    "method": "DELETE",
    "description": "Process amp api key deletion operation",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "process_delete_amp_api_key",
    "use_rest": false
  },
  "processAmpApiReKey": {
    "path": "/device/action/security/amp/rekey",
    "method": "POST",
    "description": "Process amp api re-key operation",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "process_amp_api_re_key",
    "use_rest": false
  },
  "testApiKey": {
    "path": "/device/action/security/apikey/{uuid}",
    "method": "GET",
    "description": "Get API key from device",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "test_api_key",
    "use_rest": false
  },
  "generateSecurityDevicesList": {
    "path": "/device/action/security/devices/{policyType}",
    "method": "GET",
    "description": "Get list of devices by security policy type",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "generate_security_devices_list",
    "use_rest": false
  },
  "findSoftwareImages": {
    "path": "/device/action/software",
    "method": "GET",
    "description": "Get software images",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createImageURL": {
    "path": "/device/action/software",
    "method": "POST",
    "description": "Create software image URL",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "getImageProperties": {
    "path": "/device/action/software/imageProperties/{versionId}",
    "method": "GET",
    "description": "Get Image Properties",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "findSoftwareImagesWithFilters": {
    "path": "/device/action/software/images",
    "method": "GET",
    "description": "Get software images",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "installPkg": {
    "path": "/device/action/software/package",
    "method": "POST",
    "description": "Install software package",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "getUploadImagesCount": {
    "path": "/device/action/software/package/imageCount",
    "method": "GET",
    "description": "Number of software image presented in vManage repository",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_software_update",
    "sdk_method": "get_upload_images_count",
    "use_rest": false
  },
  "generateUtdImageData": {
    "path": "/device/action/software/package/signature/{utdsignature}",
    "method": "GET",
    "description": "Get list of Utd images",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "addUtdRemoteImage": {
    "path": "/device/action/software/package/utdsignature/{type}/mode/auto",
    "method": "POST",
    "description": "add Utd remote image",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "uploadUtdImage": {
    "path": "/device/action/software/package/utdsignature/{type}/mode/manual",
    "method": "POST",
    "description": "upload Utd image",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "downloadPackageFile": {
    "path": "/device/action/software/package/{fileName}",
    "method": "GET",
    "description": "Download software package file",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_software_update",
    "sdk_method": "download_package_file",
    "use_rest": false
  },
  "processSoftwareImage": {
    "path": "/device/action/software/package/{imageType}",
    "method": "POST",
    "description": "Install software image package",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_software_update",
    "sdk_method": "process_software_image",
    "use_rest": false
  },
  "getImageMetadata": {
    "path": "/device/action/software/package/{versionId}/metadata",
    "method": "GET",
    "description": "Update Package Metadata",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_software_update",
    "sdk_method": "get_image_metadata",
    "use_rest": false
  },
  "editImageMetadata": {
    "path": "/device/action/software/package/{versionId}/metadata",
    "method": "PUT",
    "description": "Update Package Metadata",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_software_update",
    "sdk_method": "edit_image_metadata",
    "use_rest": false
  },
  "getImageRemoteServer": {
    "path": "/device/action/software/remoteserver/{versionId}",
    "method": "GET",
    "description": "Get Image Remote Server Details",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "editImageRemoteServer": {
    "path": "/device/action/software/remoteserver/{versionId}",
    "method": "PUT",
    "description": "Update Image Remote Server Details",
    "sdk_endpoint": "device",
    "sdk_method": "update",
    "use_rest": false
  },
  "findVEdgeSoftwareVersion": {
    "path": "/device/action/software/vedge/version",
    "method": "GET",
    "description": "Get vEdge software version",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "findSoftwareVersion": {
    "path": "/device/action/software/version",
    "method": "GET",
    "description": "Get software version",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getVnfProperties": {
    "path": "/device/action/software/vnfproperties/{versionId}",
    "method": "GET",
    "description": "Get VNF Properties",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "findZtpSoftwareVersion": {
    "path": "/device/action/software/ztp/version",
    "method": "GET",
    "description": "Get ZTP software version",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateImageURL": {
    "path": "/device/action/software/{versionId}",
    "method": "PUT",
    "description": "Update software image URL",
    "sdk_endpoint": "device",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteImageURL": {
    "path": "/device/action/software/{versionId}",
    "method": "DELETE",
    "description": "Delete software image URL",
    "sdk_endpoint": "device",
    "sdk_method": "delete",
    "use_rest": false
  },
  "triggerPendingTasksMonitoring": {
    "path": "/device/action/startmonitor",
    "method": "GET",
    "description": "Triggers global monitoring thread",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "trigger_pending_tasks_monitoring",
    "use_rest": false
  },
  "cancelPendingTasks": {
    "path": "/device/action/status/cancel/{processId}",
    "method": "POST",
    "description": "Bulk cancel task status",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "cleanStatus": {
    "path": "/device/action/status/clean",
    "method": "GET",
    "description": "Delete task and status vertex",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "deleteStatus": {
    "path": "/device/action/status/clear",
    "method": "DELETE",
    "description": "Delete status of action",
    "sdk_endpoint": "device",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getMaintenanceWindowFlag": {
    "path": "/device/action/status/mw",
    "method": "GET",
    "description": "Get status of maintenance window for vManage upgrade flag",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateMaintenanceWindowFlag": {
    "path": "/device/action/status/mw",
    "method": "POST",
    "description": "Update maintenance window flag",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "findRunningTasks": {
    "path": "/device/action/status/tasks",
    "method": "GET",
    "description": "Find running tasks",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_dashboard_status",
    "sdk_method": "find_running_tasks",
    "use_rest": false
  },
  "getActiveTaskCount": {
    "path": "/device/action/status/tasks/activeCount",
    "method": "GET",
    "description": "Get active task count",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCleanStatus": {
    "path": "/device/action/status/tasks/clean",
    "method": "GET",
    "description": "Delete task and status vertex",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "findStatus": {
    "path": "/device/action/status/{processId}",
    "method": "GET",
    "description": "Find status of action",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_dashboard_status",
    "sdk_method": "find_status",
    "use_rest": false
  },
  "testIoxConfig": {
    "path": "/device/action/test/ioxconfig/{deviceIP}",
    "method": "GET",
    "description": "testIoxConfig",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "test_iox_config",
    "use_rest": false
  },
  "createUniqueVPNList": {
    "path": "/device/action/uniquevpnlist",
    "method": "POST",
    "description": "Create unique VPN list",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "processVnfInstall": {
    "path": "/device/action/vnfinstall",
    "method": "POST",
    "description": "Process an installation operation",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_actions",
    "sdk_method": "process_vnf_install",
    "use_rest": false
  },
  "createVPNList": {
    "path": "/device/action/vpn",
    "method": "GET",
    "description": "Create VPN list",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getZTPUpgradeConfig": {
    "path": "/device/action/ztp/upgrade",
    "method": "GET",
    "description": "Get ZTP upgrade configuration",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "postprocessZTPUpgradeConfigSetting": {
    "path": "/device/action/ztp/upgrade",
    "method": "POST",
    "description": "Process ZTP upgrade configuration setting",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "getZTPUpgradeConfigSetting": {
    "path": "/device/action/ztp/upgrade/setting",
    "method": "GET",
    "description": "Get ZTP upgrade configuration setting",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "processZTPUpgradeConfigSetting": {
    "path": "/device/action/ztp/upgrade/setting",
    "method": "POST",
    "description": "Process ZTP upgrade configuration setting",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "getAppHostingAttachedDevices": {
    "path": "/device/app-hosting/attached-devices",
    "method": "GET",
    "description": "Get App hosting attached device from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppHostingDetails": {
    "path": "/device/app-hosting/details",
    "method": "GET",
    "description": "Get App hosting details from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppHostingGuestRoutes": {
    "path": "/device/app-hosting/guest-routes",
    "method": "GET",
    "description": "Get App hosting guest routes from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppHostingNetworkDevices": {
    "path": "/device/app-hosting/network-interfaces",
    "method": "GET",
    "description": "Get App hosting network interface from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppHostingNetworkUtils": {
    "path": "/device/app-hosting/network-utilization",
    "method": "GET",
    "description": "Get App hosting network utilization from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppHostingProcesses": {
    "path": "/device/app-hosting/processes",
    "method": "GET",
    "description": "Get App hosting processes from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppHostingStorageUtils": {
    "path": "/device/app-hosting/storage-utilization",
    "method": "GET",
    "description": "Get App hosting storage utilization from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppHostingUtilization": {
    "path": "/device/app-hosting/utilization",
    "method": "GET",
    "description": "Get App hosting utilization from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createAppRouteSlaClassList": {
    "path": "/device/app-route/sla-class",
    "method": "GET",
    "description": "Get SLA class list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createAppRouteStatisticsList": {
    "path": "/device/app-route/statistics",
    "method": "GET",
    "description": "Get application-aware routing statistics from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppLogFlowCount": {
    "path": "/device/app/log/flow-count",
    "method": "GET",
    "description": "Get App log flows count from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppLogFlows": {
    "path": "/device/app/log/flows",
    "method": "GET",
    "description": "Get App log flows from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createAppqoeActiveFlowIdDetails": {
    "path": "/device/appqoe/active-flow-id",
    "method": "GET",
    "description": "Get Appqoe Active flow Id details from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppqoeHputStats": {
    "path": "/device/appqoe/appqoe-hput-stats",
    "method": "GET",
    "description": "Get Appqoe Hput Statistics from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppqoeNatStats": {
    "path": "/device/appqoe/appqoe-nat-stats",
    "method": "GET",
    "description": "Get Appqoe Nat Statistics from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppqoeRmResources": {
    "path": "/device/appqoe/appqoe-rm-resource",
    "method": "GET",
    "description": "Get Appqoe Resource Manager resources from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppqoeRMStats": {
    "path": "/device/appqoe/appqoe-rm-stats",
    "method": "GET",
    "description": "Get Appqoe RM Statistics from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppqoeServicesStatus": {
    "path": "/device/appqoe/appqoe-services-status",
    "method": "GET",
    "description": "Get Appqoe Services Status from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppqoeSppiPipeStats": {
    "path": "/device/appqoe/appqoe-sppi-pipe-resource",
    "method": "GET",
    "description": "Get Appqoe Sppi Pipe Stats from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppqoeSppiQueueStats": {
    "path": "/device/appqoe/appqoe-sppi-queue-resource",
    "method": "GET",
    "description": "Get Appqoe Sppi Queue Stats from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppqoeClusterSummary": {
    "path": "/device/appqoe/cluster-summary",
    "method": "GET",
    "description": "Get Appqoe Cluster Summary from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppqoeErrorRecent": {
    "path": "/device/appqoe/error-recent",
    "method": "GET",
    "description": "Get Appqoe error recent from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createAppqoeFlowIdExpiredDetails": {
    "path": "/device/appqoe/expired-flow-id",
    "method": "GET",
    "description": "Get Appqoe Expired flow Id details from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppqoeFlowClosedError": {
    "path": "/device/appqoe/flow-closed-error",
    "method": "GET",
    "description": "Get Appqoe flow closed error from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppqoeExpired": {
    "path": "/device/appqoe/flow-expired",
    "method": "GET",
    "description": "Get Appqoe expired from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppqoeServiceControllers": {
    "path": "/device/appqoe/service-controllers",
    "method": "GET",
    "description": "Get Appqoe service controllers from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppqoeStatus": {
    "path": "/device/appqoe/status",
    "method": "GET",
    "description": "Get Appqoe status from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createAppqoeVpnIdList": {
    "path": "/device/appqoe/vpn-id",
    "method": "GET",
    "description": "Get Appqoe Active vpn Id details from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getARPInterface": {
    "path": "/device/arp",
    "method": "GET",
    "description": "Get ARP interfaces from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAutonomousSoftwareVersion": {
    "path": "/device/autonomousversion",
    "method": "GET",
    "description": "Get Software version from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createBFDHistoryList": {
    "path": "/device/bfd/history",
    "method": "GET",
    "description": "Get BFD session history from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createBFDLinkList": {
    "path": "/device/bfd/links",
    "method": "GET",
    "description": "Get list of BFD connections",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createBFDSessions": {
    "path": "/device/bfd/sessions",
    "method": "GET",
    "description": "Get list of BFD sessions from vManage (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getBFDSiteStateDetail": {
    "path": "/device/bfd/sites/detail",
    "method": "GET",
    "description": "Get detailed BFD site details",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getBFDSitesSummary": {
    "path": "/device/bfd/sites/summary",
    "method": "GET",
    "description": "Get BFD site summary",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceBFDStateSummary": {
    "path": "/device/bfd/state/device",
    "method": "GET",
    "description": "Get device BFD state summary",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceBFDStateSummaryTloc": {
    "path": "/device/bfd/state/device/tloc",
    "method": "GET",
    "description": "Get device BFD state summary with tloc color",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceTlocToIntfList": {
    "path": "/device/bfd/state/device/tlocInterfaceMap",
    "method": "GET",
    "description": "Get device tloc color to Intf Mapping Relationship",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceBFDStatus": {
    "path": "/device/bfd/status",
    "method": "GET",
    "description": "Get device BFD status",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createBFDSummary": {
    "path": "/device/bfd/summary",
    "method": "GET",
    "description": "Get BFD summary from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceBFDStatusSummary": {
    "path": "/device/bfd/summary/device",
    "method": "GET",
    "description": "Get device BFD status summary",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSyncedBFDSession": {
    "path": "/device/bfd/synced/sessions",
    "method": "GET",
    "description": "Get list of BFD sessions from vManage synchronously",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createTLOCSummary": {
    "path": "/device/bfd/tloc",
    "method": "GET",
    "description": "Get TLOC summary from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getBFDTlocStateDetail": {
    "path": "/device/bfd/tloc/detail",
    "method": "GET",
    "description": "Get detailed BFD tloc details",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createBGPNeighborsList": {
    "path": "/device/bgp/neighbors",
    "method": "GET",
    "description": "Get BGP neighbors list (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createBGPRoutesList": {
    "path": "/device/bgp/routes",
    "method": "GET",
    "description": "Get BGP routes list (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createBGPSummary": {
    "path": "/device/bgp/summary",
    "method": "GET",
    "description": "Get BGP summary (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "setBlockSync": {
    "path": "/device/blockSync",
    "method": "POST",
    "description": "Set collection manager block set flag",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "set_block_sync",
    "use_rest": false
  },
  "getBridgeInterfaceList": {
    "path": "/device/bridge/interface",
    "method": "GET",
    "description": "Get device bridge interface list (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getBridgeInterfaceMac": {
    "path": "/device/bridge/mac",
    "method": "GET",
    "description": "Get device bridge interface MAC (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getBridgeInterfaceTable": {
    "path": "/device/bridge/table",
    "method": "GET",
    "description": "Get device bridge interface table (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getTenantsDevicesAndSites": {
    "path": "/device/bytenants",
    "method": "GET",
    "description": "Gets devices and sites for all tenants",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createAppFwdCflowdFlowsList": {
    "path": "/device/cedgecflowd/app-fwd-cflowd-flows",
    "method": "GET",
    "description": "Get list of app fwd cflowd flows from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createAppFwdCflowdV6FlowsList": {
    "path": "/device/cedgecflowd/app-fwd-cflowd-v6-flows",
    "method": "GET",
    "description": "Get list of app fwd cflowd v6 flows from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createCellularConnectionList": {
    "path": "/device/cellular/connection",
    "method": "GET",
    "description": "Get cellular connection list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "cellularCountDashlet": {
    "path": "/device/cellular/counter",
    "method": "GET",
    "description": "Cellular count dashlet",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "dataUsage": {
    "path": "/device/cellular/dataUsage",
    "method": "GET",
    "description": "Cellular DataUsage Dashlet",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "cellularCountDashletDetails": {
    "path": "/device/cellular/details",
    "method": "GET",
    "description": "Cellular count dashlet details",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createHardwareList": {
    "path": "/device/cellular/hardware",
    "method": "GET",
    "description": "Get cellular hardware list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "cellularHealthDashlet": {
    "path": "/device/cellular/health",
    "method": "GET",
    "description": "Cellular Health Dashlet",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createModemList": {
    "path": "/device/cellular/modem",
    "method": "GET",
    "description": "Get cellular modem list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createNetworkList": {
    "path": "/device/cellular/network",
    "method": "GET",
    "description": "Get cellular network list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createProfileList": {
    "path": "/device/cellular/profiles",
    "method": "GET",
    "description": "Get cellular profile list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createRadioList": {
    "path": "/device/cellular/radio",
    "method": "GET",
    "description": "Get cellular radio list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSessionsList": {
    "path": "/device/cellular/sessions",
    "method": "GET",
    "description": "Get cellular session list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCellularStatusList": {
    "path": "/device/cellular/status",
    "method": "GET",
    "description": "Get cellular status list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEiolteConnectionInfo": {
    "path": "/device/cellularEiolte/connections",
    "method": "GET",
    "description": "Get cellular connection info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEiolteHardwareInfo": {
    "path": "/device/cellularEiolte/hardware",
    "method": "GET",
    "description": "Get cellular hardware info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAONIpsecInterfaceCountersInfo": {
    "path": "/device/cellularEiolte/ipsec/interface/counters",
    "method": "GET",
    "description": "Get cellular ipsec interface info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAONIpsecInterfaceSessionnfo": {
    "path": "/device/cellularEiolte/ipsec/interface/session",
    "method": "GET",
    "description": "Get cellular ipsec interface info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEiolteNetworkInfo": {
    "path": "/device/cellularEiolte/network",
    "method": "GET",
    "description": "Get cellular network  info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEiolteRadioInfo": {
    "path": "/device/cellularEiolte/radio",
    "method": "GET",
    "description": "Get cellular radio info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEiolteSimInfo": {
    "path": "/device/cellularEiolte/sim",
    "method": "GET",
    "description": "Get cellular sim info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCflowdDPIDeviceFieldJSON": {
    "path": "/device/cflowd/application/fields",
    "method": "GET",
    "description": "Get Cflowd DPI query field JSON",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createCflowdCollectorList": {
    "path": "/device/cflowd/collector",
    "method": "GET",
    "description": "Get cflowd collector list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCflowdDPIFieldJSON": {
    "path": "/device/cflowd/device/fields",
    "method": "GET",
    "description": "Get CflowdvDPI query field JSON",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createCflowCollectorList": {
    "path": "/device/cflowd/flows",
    "method": "GET",
    "description": "Get list of cflowd flows from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createCflowdFlowsCountList": {
    "path": "/device/cflowd/flows-count",
    "method": "GET",
    "description": "Get cflowd flow count from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getFnFCacheStats": {
    "path": "/device/cflowd/fnf/cache-stats",
    "method": "GET",
    "description": "Get FnF cache stats from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getFnFExportClientStats": {
    "path": "/device/cflowd/fnf/export-client-stats",
    "method": "GET",
    "description": "Get FnF export client stats from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getFnFExportStats": {
    "path": "/device/cflowd/fnf/export-stats",
    "method": "GET",
    "description": "Get FnF export stats from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getFnf": {
    "path": "/device/cflowd/fnf/flow-monitor",
    "method": "GET",
    "description": "Get FnF from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getFnFMonitorStats": {
    "path": "/device/cflowd/fnf/monitor-stats",
    "method": "GET",
    "description": "Get FnF monitor stats from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createCflowdStatistics": {
    "path": "/device/cflowd/statistics",
    "method": "GET",
    "description": "Get cflowd statistics from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createCflowdTemplate": {
    "path": "/device/cflowd/template",
    "method": "GET",
    "description": "Get cflowd template from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getMpDatabase": {
    "path": "/device/cfm/mp/database",
    "method": "GET",
    "description": "Get mp database from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getMpLocalMep": {
    "path": "/device/cfm/mp/local/mep",
    "method": "GET",
    "description": "Get mp local mep from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getMpLocalMip": {
    "path": "/device/cfm/mp/local/mip",
    "method": "GET",
    "description": "Get mp local mip from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getMpRemoteMep": {
    "path": "/device/cfm/mp/remotemep",
    "method": "GET",
    "description": "Get mp remote mep from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createApplicationsDetailList": {
    "path": "/device/cloudx/application/detail",
    "method": "GET",
    "description": "Get list of cloudexpress applications from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createApplicationsList": {
    "path": "/device/cloudx/applications",
    "method": "GET",
    "description": "Get list of cloudexpress applications from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createGatewayExitsList": {
    "path": "/device/cloudx/gatewayexits",
    "method": "GET",
    "description": "Get list of cloudexpress gateway exits from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createLbApplicationsList": {
    "path": "/device/cloudx/loadbalance",
    "method": "GET",
    "description": "Get list of cloudexpress load balance applications from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createLocalExitsList": {
    "path": "/device/cloudx/localexits",
    "method": "GET",
    "description": "Get list of cloudexpress local exits from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getComplianceDetails": {
    "path": "/device/compliance",
    "method": "GET",
    "description": "Get compliance information for devices",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getComplianceSummary": {
    "path": "/device/compliance/summary",
    "method": "GET",
    "description": "Get compliance summary for devices",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceRunningConfig": {
    "path": "/device/config",
    "method": "GET",
    "description": "Get device running configuration",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "get_device_running_config",
    "use_rest": false
  },
  "getDeviceRunningConfigHTML": {
    "path": "/device/config/html",
    "method": "GET",
    "description": "Get device running configuration in HTML format",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceConfigurationCommitList": {
    "path": "/device/configuration/commit-list",
    "method": "GET",
    "description": "Get device commit list",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAffinityConfig": {
    "path": "/device/control/affinity/config",
    "method": "GET",
    "description": "Get affinity config from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAffinityStatus": {
    "path": "/device/control/affinity/status",
    "method": "GET",
    "description": "Get affinity status from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createRealTimeConnectionList": {
    "path": "/device/control/connections",
    "method": "GET",
    "description": "Get connections list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createConnectionHistoryListRealTime": {
    "path": "/device/control/connectionshistory",
    "method": "GET",
    "description": "Get connections history list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createrealtimeconnectionlist1": {
    "path": "/device/control/connectionsinfo",
    "method": "GET",
    "description": "Get connections list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getTotalCountForDeviceStates": {
    "path": "/device/control/count",
    "method": "GET",
    "description": "Get number of vedges and vsmart device in different control states",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createLinkList": {
    "path": "/device/control/links",
    "method": "GET",
    "description": "Get connections list",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createLocalPropertiesListListRealTIme": {
    "path": "/device/control/localproperties",
    "method": "GET",
    "description": "Get local properties list (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "networkSummary": {
    "path": "/device/control/networksummary",
    "method": "GET",
    "description": "Get list of unreachable devices",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createRealTimeRegionConnectionList": {
    "path": "/device/control/regionconnections",
    "method": "GET",
    "description": "Get connections list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getConnectionStatistics": {
    "path": "/device/control/statistics",
    "method": "GET",
    "description": "Get connection statistics from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLocalDeviceStatus": {
    "path": "/device/control/status",
    "method": "GET",
    "description": "Get local device status",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createConnectionsSummary": {
    "path": "/device/control/summary",
    "method": "GET",
    "description": "Get connections summary from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceControlStatusSummary": {
    "path": "/device/control/summary/device",
    "method": "GET",
    "description": "Get device control status summary",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSyncedConnectionList": {
    "path": "/device/control/synced/connections",
    "method": "GET",
    "description": "Get connections list from vManage",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createLocalPropertiesSyncedList": {
    "path": "/device/control/synced/localproperties",
    "method": "GET",
    "description": "Get local properties list",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createWanInterfaceSyncedList": {
    "path": "/device/control/synced/waninterface",
    "method": "GET",
    "description": "Get WAN interface list",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createValidDevicesListRealTime": {
    "path": "/device/control/validdevices",
    "method": "GET",
    "description": "Get vmanage valid device list (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getValidVManageIdRealTime": {
    "path": "/device/control/validvmanageid",
    "method": "GET",
    "description": "Get valid vManage from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createValidVSmartsListRealTime": {
    "path": "/device/control/validvsmarts",
    "method": "GET",
    "description": "Get valid vSmart list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createWanInterfaceListList": {
    "path": "/device/control/waninterface",
    "method": "GET",
    "description": "Get WAN interface list (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPortHopColor": {
    "path": "/device/control/waninterface/color",
    "method": "GET",
    "description": "Get port hop colors",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceCounters": {
    "path": "/device/counters",
    "method": "GET",
    "description": "Get device counters",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "get_device_counters",
    "use_rest": false
  },
  "getDeviceCrashLogs": {
    "path": "/device/crashlog",
    "method": "GET",
    "description": "Get device crash logs from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAllDeviceCrashLogs": {
    "path": "/device/crashlog/details",
    "method": "GET",
    "description": "Get device crash logs for all device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceCrashInformation": {
    "path": "/device/crashlog/log",
    "method": "GET",
    "description": "Get device crash info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceCrashLogsSynced": {
    "path": "/device/crashlog/synced",
    "method": "GET",
    "description": "Get device crash logs synchronously from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createDeviceContainersInfo": {
    "path": "/device/csp/containers/container",
    "method": "GET",
    "description": "Get device container from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPnicStats": {
    "path": "/device/csp/pnic",
    "method": "GET",
    "description": "Get pnic interfaces from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPNICStatsFromDevice": {
    "path": "/device/csp/pnic/synced",
    "method": "GET",
    "description": "Get pnic stats from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getRBACInterface": {
    "path": "/device/csp/rbac",
    "method": "GET",
    "description": "Get RBAC interfaces from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAllocationInfo": {
    "path": "/device/csp/resources/cpu-info/allocation",
    "method": "GET",
    "description": "Get NetworkHub CPU allocation info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCPUInfo": {
    "path": "/device/csp/resources/cpu-info/cpus",
    "method": "GET",
    "description": "Get NetworkHub CPU info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getVNFInfo": {
    "path": "/device/csp/resources/cpu-info/vnfs",
    "method": "GET",
    "description": "Get NetworkHub CPU VNF info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createDeviceSystemSettingNativeInfo": {
    "path": "/device/csp/system/native",
    "method": "GET",
    "description": "Get device system native settings from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createDeviceSystemProcessList": {
    "path": "/device/csp/system/processlist",
    "method": "GET",
    "description": "Get device system process list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createDeviceSystemSetting": {
    "path": "/device/csp/system/settings",
    "method": "GET",
    "description": "Get device system settings from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createDeviceSystemStatus": {
    "path": "/device/csp/system/status",
    "method": "GET",
    "description": "Get device system status from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCtsPac": {
    "path": "/device/ctsPac",
    "method": "GET",
    "description": "get Cisco TrustSec PAC information from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceOnlyStatus": {
    "path": "/device/devicestatus",
    "method": "GET",
    "description": "Get devices status per type",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "get_device_only_status",
    "use_rest": false
  },
  "getDHCPClient": {
    "path": "/device/dhcp/client",
    "method": "GET",
    "description": "Get DHCP client from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDHCPInterface": {
    "path": "/device/dhcp/interface",
    "method": "GET",
    "description": "Get DHCP interfaces from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDHCPServer": {
    "path": "/device/dhcp/server",
    "method": "GET",
    "description": "Get DHCP server from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDHCPv6Interface": {
    "path": "/device/dhcpv6/interface",
    "method": "GET",
    "description": "Get DHCPv6 interfaces from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWLANDOT1xClients": {
    "path": "/device/dot1x/clients",
    "method": "GET",
    "description": "Get DOT1x client from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWLANDOT1xInterfaces": {
    "path": "/device/dot1x/interfaces",
    "method": "GET",
    "description": "Get DOT1x interface from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDOT1xRadius": {
    "path": "/device/dot1x/radius",
    "method": "GET",
    "description": "Get DOT1x Radius from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSoftwareList": {
    "path": "/device/downloadedImages",
    "method": "GET",
    "description": "Get images list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSupportedApplicationList": {
    "path": "/device/dpi/application-mapping",
    "method": "GET",
    "description": "Get DPI supported application list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDPIDeviceFieldJSON": {
    "path": "/device/dpi/application/fields",
    "method": "GET",
    "description": "Get DPI query field from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createDPICollectorList": {
    "path": "/device/dpi/applications",
    "method": "GET",
    "description": "Get DPI applications from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCommonApplicationList": {
    "path": "/device/dpi/common/applications",
    "method": "GET",
    "description": "Get DPI common application list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDPIFieldJSON": {
    "path": "/device/dpi/device/fields",
    "method": "GET",
    "description": "Get DPI field from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDPIDeviceDetailsFieldJSON": {
    "path": "/device/dpi/devicedetails/fields",
    "method": "GET",
    "description": "Get DPI detailed field from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createDPIFlowsList": {
    "path": "/device/dpi/flows",
    "method": "GET",
    "description": "Get DPI flow list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getQosmosStaticApplicationList": {
    "path": "/device/dpi/qosmos-static/applications",
    "method": "GET",
    "description": "Get DPI QoSMos static application list",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getQosmosApplicationList": {
    "path": "/device/dpi/qosmos/applications",
    "method": "GET",
    "description": "Get DPI QoSMos application list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createDPISummaryRealTime": {
    "path": "/device/dpi/summary",
    "method": "GET",
    "description": "Get DPI summary from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createDPIStatistics": {
    "path": "/device/dpi/supported-applications",
    "method": "GET",
    "description": "Get supported applications from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDreAutoBypassStats": {
    "path": "/device/dre/auto-bypass-stats",
    "method": "GET",
    "description": "Get DRE auto-bypass statistics",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDreStats": {
    "path": "/device/dre/dre-stats",
    "method": "GET",
    "description": "Get DRE statistics",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDreStatus": {
    "path": "/device/dre/dre-status",
    "method": "GET",
    "description": "Get DRE status",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDrePeerStats": {
    "path": "/device/dre/peer-stats",
    "method": "GET",
    "description": "Get DRE peer statistics",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDualStaticRouteTrackerInfo": {
    "path": "/device/dualStaticRouteTracker",
    "method": "GET",
    "description": "Get dual static route tracker info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createEIGRPInterface": {
    "path": "/device/eigrp/interface",
    "method": "GET",
    "description": "Get EIGRP interface list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createEIGRPRoute": {
    "path": "/device/eigrp/route",
    "method": "GET",
    "description": "Get EIGRP route from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createEIGRPTopology": {
    "path": "/device/eigrp/topology",
    "method": "GET",
    "description": "Get EIGRP topology info from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "enableSDAVCOnDevice": {
    "path": "/device/enableSDAVC/{deviceIP}/{enable}",
    "method": "POST",
    "description": "Enable/Disable SDAVC on device",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "getEndpointTrackerInfo": {
    "path": "/device/endpointTracker",
    "method": "GET",
    "description": "Get endpoint tracker info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEndpointTrackerGroupInfo": {
    "path": "/device/endpointTrackerGroup",
    "method": "GET",
    "description": "Get endpoint tracker group info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEnvironmentData": {
    "path": "/device/environmentData",
    "method": "GET",
    "description": "get Cisco TrustSec Environment Data information from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getRadiusServer": {
    "path": "/device/environmentData/radiusServer",
    "method": "GET",
    "description": "get Cisco TrustSec Environment Data Radius Server list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getFeatureList": {
    "path": "/device/featurelist",
    "method": "GET",
    "description": "Get feature lists from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSyncedFeatureList": {
    "path": "/device/featurelist/synced",
    "method": "GET",
    "description": "Get feature lists synchronously from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDataCollectionStatusForDevice": {
    "path": "/device/file-based/data-collection/all-statuses/{deviceUUID}",
    "method": "GET",
    "description": "Get Data Collection status for given Device UUID",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "downloadGeneratedFile": {
    "path": "/device/file-based/data-collection/download/{requestUUID}",
    "method": "GET",
    "description": "Download generated file",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "handleFileGenerationStatusResponseFromDevice": {
    "path": "/device/file-based/data-collection/file-generation-status",
    "method": "POST",
    "description": "Device notify when file is ready and vManage has to download them",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "initiateFileGenerationRequestToDevice": {
    "path": "/device/file-based/data-collection/initiate-file-generation",
    "method": "POST",
    "description": "Request device to prepare realtime collection data in required file format",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDataCollectionStatusForUUID": {
    "path": "/device/file-based/data-collection/status/{requestUUID}",
    "method": "GET",
    "description": "Get Data Collection status for given Request UUID",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSupportedCommandsList": {
    "path": "/device/file-based/data-collection/supported-commands/{deviceUUID}",
    "method": "GET",
    "description": "Get Supported Command list for given Device UUID",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getGeofenceStatus": {
    "path": "/device/geofence/status",
    "method": "GET",
    "description": "Get Geo-fencing Status from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createAlarmList": {
    "path": "/device/hardware/alarms",
    "method": "GET",
    "description": "Get hardware alarm list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createEnvironmentList": {
    "path": "/device/hardware/environment",
    "method": "GET",
    "description": "Get hardware environment list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createErrorAlarmList": {
    "path": "/device/hardware/errors",
    "method": "GET",
    "description": "Get hardware error list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createInventoryList": {
    "path": "/device/hardware/inventory",
    "method": "GET",
    "description": "Get hardware inventory list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createStatusSummary": {
    "path": "/device/hardware/status/summary",
    "method": "GET",
    "description": "Get hardware status summary from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSyncedAlarmList": {
    "path": "/device/hardware/synced/alarms",
    "method": "GET",
    "description": "Get hardware alarm list synchronously from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSyncedEnvironmentList": {
    "path": "/device/hardware/synced/environment",
    "method": "GET",
    "description": "Get hardware environment list synchronously from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSyncedInventoryList": {
    "path": "/device/hardware/synced/inventory",
    "method": "GET",
    "description": "Get hardware inventory list synchronously from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSystemList": {
    "path": "/device/hardware/system",
    "method": "GET",
    "description": "Get hardware system data list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createTempThresholdList": {
    "path": "/device/hardware/threshold",
    "method": "GET",
    "description": "Get hardware temperature list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getHardwareHealthDetails": {
    "path": "/device/hardwarehealth/detail",
    "method": "GET",
    "description": "Get hardware health details for device",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "get_hardware_health_details",
    "use_rest": false
  },
  "getHardwareHealthSummary": {
    "path": "/device/hardwarehealth/summary",
    "method": "GET",
    "description": "Get hardware health summary for device",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "get_hardware_health_summary",
    "use_rest": false
  },
  "getstatdatarawdata21": {
    "path": "/device/history",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata22": {
    "path": "/device/history",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery23": {
    "path": "/device/history/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery25": {
    "path": "/device/history/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "getLastThousandConfigList": {
    "path": "/device/history/config",
    "method": "GET",
    "description": "Get device config history",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getConfigDiff": {
    "path": "/device/history/config/diff/list",
    "method": "GET",
    "description": "Get diff of two configs",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceConfig": {
    "path": "/device/history/config/{config_id}",
    "method": "GET",
    "description": "Get device config",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdataascsv21": {
    "path": "/device/history/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount20": {
    "path": "/device/history/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost21": {
    "path": "/device/history/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields22": {
    "path": "/device/history/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata19": {
    "path": "/device/history/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata19": {
    "path": "/device/history/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields23": {
    "path": "/device/history/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createIGMPGroupsList": {
    "path": "/device/igmp/groups",
    "method": "GET",
    "description": "Get IGMP neighbor list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createIGMPInterfaceList": {
    "path": "/device/igmp/interface",
    "method": "GET",
    "description": "Get IGMP interface list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createIGMPStatisticsList": {
    "path": "/device/igmp/statistics",
    "method": "GET",
    "description": "Get IGMP statistics list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createIGMPSummary": {
    "path": "/device/igmp/summary",
    "method": "GET",
    "description": "Get IGMP summary from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceInterface": {
    "path": "/device/interface",
    "method": "GET",
    "description": "Get device interfaces",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceInterfaceARPStats": {
    "path": "/device/interface/arp_stats",
    "method": "GET",
    "description": "Get interface ARP statistics",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceInterfaceErrorStats": {
    "path": "/device/interface/error_stats",
    "method": "GET",
    "description": "Get interface error stats",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceInterfaceIpv6Stats": {
    "path": "/device/interface/ipv6Stats",
    "method": "GET",
    "description": "Get interface IPv6 stats",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceInterfacePktSizes": {
    "path": "/device/interface/pkt_size",
    "method": "GET",
    "description": "Get interface packet size",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceInterfacePortStats": {
    "path": "/device/interface/port_stats",
    "method": "GET",
    "description": "Get interface port stats",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceInterfaceQosStats": {
    "path": "/device/interface/qosStats",
    "method": "GET",
    "description": "Get interface QOS stats",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceInterfaceQueueStats": {
    "path": "/device/interface/queue_stats",
    "method": "GET",
    "description": "Get interface queue stats",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceSerialInterface": {
    "path": "/device/interface/serial",
    "method": "GET",
    "description": "Get serial interface",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceInterfaceStats": {
    "path": "/device/interface/stats",
    "method": "GET",
    "description": "Get interface stats",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSyncedDeviceInterface": {
    "path": "/device/interface/synced",
    "method": "GET",
    "description": "Get device interfaces synchronously",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "trustsec": {
    "path": "/device/interface/trustsec",
    "method": "GET",
    "description": "Get policy filter memory usage from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "generateDeviceInterfaceVPN": {
    "path": "/device/interface/vpn",
    "method": "GET",
    "description": "Get device interfaces per VPN",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createFibList": {
    "path": "/device/ip/fib",
    "method": "GET",
    "description": "Get FIB list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createIetfRoutingList": {
    "path": "/device/ip/ipRoutes",
    "method": "GET",
    "description": "Get ietf routing list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createIPMfibOilList": {
    "path": "/device/ip/mfiboil",
    "method": "GET",
    "description": "Get IP MFIB OIL list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createIPMfibStatsList": {
    "path": "/device/ip/mfibstats",
    "method": "GET",
    "description": "Get IP MFIB statistics list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createIPMfibSummaryList": {
    "path": "/device/ip/mfibsummary",
    "method": "GET",
    "description": "Get IP MFIB summary list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createNatFilterList": {
    "path": "/device/ip/nat/filter",
    "method": "GET",
    "description": "Get NAT filter list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createNatInterfaceList": {
    "path": "/device/ip/nat/interface",
    "method": "GET",
    "description": "Get NAT interface list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createNatInterfaceStatisticsList": {
    "path": "/device/ip/nat/interfacestatistics",
    "method": "GET",
    "description": "Get NAT interface statistics list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createNatTranslationList": {
    "path": "/device/ip/nat/translation",
    "method": "GET",
    "description": "Get NAT translation list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createNat64TranslationList": {
    "path": "/device/ip/nat64/translation",
    "method": "GET",
    "description": "Get NAT64 interface list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createRouteTableList": {
    "path": "/device/ip/routetable",
    "method": "GET",
    "description": "Get route table list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createIPv4FibList": {
    "path": "/device/ip/v4fib",
    "method": "GET",
    "description": "Get IPv4 FIB list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createIPv6FibList": {
    "path": "/device/ip/v6fib",
    "method": "GET",
    "description": "Get IPv6 FIB list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createCryptoIpsecIdentity": {
    "path": "/device/ipsec/identity",
    "method": "GET",
    "description": "Get Crypto IPSEC identity entry from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createIkeInboundList": {
    "path": "/device/ipsec/ike/inbound",
    "method": "GET",
    "description": "Get IPsec IKE inbound connection list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createIkeOutboundList": {
    "path": "/device/ipsec/ike/outbound",
    "method": "GET",
    "description": "Get IPsec IKE outbound connection list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createIkeSessions": {
    "path": "/device/ipsec/ike/sessions",
    "method": "GET",
    "description": "Get IPsec IKE sessions from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createCryptov1LocalSAList": {
    "path": "/device/ipsec/ikev1",
    "method": "GET",
    "description": "Get Crypto IKEv1 SA entry from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createCryptov2LocalSAList": {
    "path": "/device/ipsec/ikev2",
    "method": "GET",
    "description": "Get Crypto IKEv2 SA entry from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createInBoundList": {
    "path": "/device/ipsec/inbound",
    "method": "GET",
    "description": "Get IPsec inbound connection list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createLocalSAList": {
    "path": "/device/ipsec/localsa",
    "method": "GET",
    "description": "Get IPsec local SA list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createOutBoundList": {
    "path": "/device/ipsec/outbound",
    "method": "GET",
    "description": "Get IPsec outbound connection list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createIPsecPWKInboundConnections": {
    "path": "/device/ipsec/pwk/inbound",
    "method": "GET",
    "description": "Get IPSEC pairwise key inbound entry from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createIPsecPWKLocalSA": {
    "path": "/device/ipsec/pwk/localsa",
    "method": "GET",
    "description": "Get IPSEC pairwise key local SA entry from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createIPsecPWKOutboundConnections": {
    "path": "/device/ipsec/pwk/outbound",
    "method": "GET",
    "description": "Get IPSEC pairwise key outbound entry from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getIpv6Data": {
    "path": "/device/ipv6/nd6",
    "method": "GET",
    "description": "Get ipv6 data from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceListAsKeyValue": {
    "path": "/device/keyvalue",
    "method": "GET",
    "description": "Get vEdge inventory as key value (key as systemIp value as hostName)",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "get_device_list_as_key_value",
    "use_rest": false
  },
  "getLacpInterfaceList": {
    "path": "/device/lacp/info",
    "method": "GET",
    "description": "Get device lacp port channel info list (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLacpMembers": {
    "path": "/device/lacp/members",
    "method": "GET",
    "description": "Get device lacp port channel interface table (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLicenseEvalInfo": {
    "path": "/device/license/evaluation",
    "method": "GET",
    "description": "Get license evaluation info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLicensePAKInfo": {
    "path": "/device/license/pak",
    "method": "GET",
    "description": "Get license pak info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLicensePrivacyInfo": {
    "path": "/device/license/privacy",
    "method": "GET",
    "description": "Get license privacy info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLicenseRegInfo": {
    "path": "/device/license/registration",
    "method": "GET",
    "description": "Get license registration info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLicenseUDIInfo": {
    "path": "/device/license/udi",
    "method": "GET",
    "description": "Get license UDI info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLicenseUsageInfo": {
    "path": "/device/license/usage",
    "method": "GET",
    "description": "Get license usage info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLoggingFromDevice": {
    "path": "/device/logging",
    "method": "GET",
    "description": "Get logging from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "listAllDeviceModels": {
    "path": "/device/models",
    "method": "GET",
    "description": "Get all device models supported by the vManage",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "list_all_device_models",
    "use_rest": false
  },
  "getDeviceModels": {
    "path": "/device/models/{uuid}",
    "method": "GET",
    "description": "Get device model for the device",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "get_device_models",
    "use_rest": false
  },
  "listAllMonitorDetailsDevices": {
    "path": "/device/monitor",
    "method": "GET",
    "description": "Get all monitoring details of the devices",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "list_all_monitor_details_devices",
    "use_rest": false
  },
  "createReplicatorList": {
    "path": "/device/multicast/replicator",
    "method": "GET",
    "description": "Get replicator list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createRpfList": {
    "path": "/device/multicast/rpf",
    "method": "GET",
    "description": "Get RPF list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createTopologyList": {
    "path": "/device/multicast/topology",
    "method": "GET",
    "description": "Get topology list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPimTunnelList": {
    "path": "/device/multicast/tunnel",
    "method": "GET",
    "description": "Get PIM tunnel from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getIpv6Interface": {
    "path": "/device/ndv6",
    "method": "GET",
    "description": "Get IPv6 Neighbors from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getRunning": {
    "path": "/device/nms/running",
    "method": "GET",
    "description": "Get nms running state from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createAssociationsList": {
    "path": "/device/ntp/associations",
    "method": "GET",
    "description": "Get NTP peer associations list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPeerList": {
    "path": "/device/ntp/peer",
    "method": "GET",
    "description": "Get NTP peer list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createNTPStatusList": {
    "path": "/device/ntp/status",
    "method": "GET",
    "description": "Get NTP status list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createOMPCloudXRecv": {
    "path": "/device/omp/cloudx",
    "method": "GET",
    "description": "Get CloudExpress routes received list",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createOMPLinkList": {
    "path": "/device/omp/links",
    "method": "GET",
    "description": "Get OMP connection list",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createOMPMcastAutoDiscoverAdvt": {
    "path": "/device/omp/mcastautodiscoveradvt",
    "method": "GET",
    "description": "Get OMP multicast autodiscover advertised list",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createOMPMcastAutoDiscoverRecv": {
    "path": "/device/omp/mcastautodiscoverrecv",
    "method": "GET",
    "description": "Get OMP multicast autodiscover received list",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createOMPMcastRoutesAdvt": {
    "path": "/device/omp/mcastroutesadvt",
    "method": "GET",
    "description": "Get OMP multicast routes advertised list",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createOMPMcastRoutesRecv": {
    "path": "/device/omp/mcastroutesrecv",
    "method": "GET",
    "description": "Get OMP multicast routes received list",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createOMPSessionList": {
    "path": "/device/omp/peers",
    "method": "GET",
    "description": "Get OMP session list (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createAdvertisedRoutesList": {
    "path": "/device/omp/routes/advertised",
    "method": "GET",
    "description": "Get OMP advertised routes list (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createAdvertisedRoutesListIpv6": {
    "path": "/device/omp/routes/advertised/ompIpv6",
    "method": "GET",
    "description": "Get OMP advertised routes list (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createReceivedRoutesList": {
    "path": "/device/omp/routes/received",
    "method": "GET",
    "description": "Get OMP received routes list (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createReceivedRoutesListIpv6": {
    "path": "/device/omp/routes/received/ompIpv6",
    "method": "GET",
    "description": "Get OMP received routes list (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createOMPServices": {
    "path": "/device/omp/services",
    "method": "GET",
    "description": "Get OMP services list",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceOMPStatus": {
    "path": "/device/omp/status",
    "method": "GET",
    "description": "Get device OMP status",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createOMPSummary": {
    "path": "/device/omp/summary",
    "method": "GET",
    "description": "Get OMP summary",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSyncedOMPSessionList": {
    "path": "/device/omp/synced/peers",
    "method": "GET",
    "description": "Get OP session list",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createAdvertisedTlocsList": {
    "path": "/device/omp/tlocs/advertised",
    "method": "GET",
    "description": "Get advertised TLOCs list (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createReceivedTlocsList": {
    "path": "/device/omp/tlocs/received",
    "method": "GET",
    "description": "Get received TLOCs list (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getOnDemandLocal": {
    "path": "/device/ondemand/local",
    "method": "GET",
    "description": "Get on-demand local (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getOnDemandRemote": {
    "path": "/device/ondemand/remote",
    "method": "GET",
    "description": "Get on-demand remote (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createConnectionListFromDevice": {
    "path": "/device/orchestrator/connections",
    "method": "GET",
    "description": "Get connection list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createConnectionHistoryList": {
    "path": "/device/orchestrator/connectionshistory",
    "method": "GET",
    "description": "Get connection history list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createLocalPropertiesListList": {
    "path": "/device/orchestrator/localproperties",
    "method": "GET",
    "description": "Get local properties list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createReverseProxyMappingList": {
    "path": "/device/orchestrator/proxymapping",
    "method": "GET",
    "description": "Get reverse proxy mapping from vbond",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getStatistics": {
    "path": "/device/orchestrator/statistics",
    "method": "GET",
    "description": "Get statistics from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createConnectionSummary": {
    "path": "/device/orchestrator/summary",
    "method": "GET",
    "description": "Get connection summary from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createValidDevicesList": {
    "path": "/device/orchestrator/validvedges",
    "method": "GET",
    "description": "Get valid device list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getValidVManageId": {
    "path": "/device/orchestrator/validvmanageid",
    "method": "GET",
    "description": "Get valid vManage Id from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createValidVSmartsList": {
    "path": "/device/orchestrator/validvsmarts",
    "method": "GET",
    "description": "Get valid vSmart list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createOSPFDatabaseList": {
    "path": "/device/ospf/database",
    "method": "GET",
    "description": "Get OSPF database list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createOSPFDatabaseExternal": {
    "path": "/device/ospf/databaseexternal",
    "method": "GET",
    "description": "Get OSPF external database list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createOSPFDatabaseSummaryList": {
    "path": "/device/ospf/databasesummary",
    "method": "GET",
    "description": "Get OSPF database summary list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createOSPFInterface": {
    "path": "/device/ospf/interface",
    "method": "GET",
    "description": "Get OSPF interface list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createOSPFNeighbors": {
    "path": "/device/ospf/neighbor",
    "method": "GET",
    "description": "Get OSPF neighbor list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createOSPFProcess": {
    "path": "/device/ospf/process",
    "method": "GET",
    "description": "Get OSPF process list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createOSPFRoutesList": {
    "path": "/device/ospf/routes",
    "method": "GET",
    "description": "Get OSPF route list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createOSPFv3Interface": {
    "path": "/device/ospf/v3interface",
    "method": "GET",
    "description": "Get OSPF v3 interface list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createOSPFv3Neighbors": {
    "path": "/device/ospf/v3neighbor",
    "method": "GET",
    "description": "Get OSPF v3 neighbor list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPIMInterfaceList": {
    "path": "/device/pim/interface",
    "method": "GET",
    "description": "Get PIM interface list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPIMNeighborList": {
    "path": "/device/pim/neighbor",
    "method": "GET",
    "description": "Get PIM neighbor list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPIMRpMappingList": {
    "path": "/device/pim/rp-mapping",
    "method": "GET",
    "description": "Get PIM Rp-mapping list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPIMStatisticsList": {
    "path": "/device/pim/statistics",
    "method": "GET",
    "description": "Get PIM statistics list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDevicePkiTrustpoint": {
    "path": "/device/pki/trustpoint",
    "method": "GET",
    "description": "Get device pki trustpoint",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPolicedInterface": {
    "path": "/device/policer",
    "method": "GET",
    "description": "Get policed interface list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPolicyAccessListAssociations": {
    "path": "/device/policy/accesslistassociations",
    "method": "GET",
    "description": "Get access list associations from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPolicyAccessListCounters": {
    "path": "/device/policy/accesslistcounters",
    "method": "GET",
    "description": "Get access list counter from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPolicyAccessListNames": {
    "path": "/device/policy/accesslistnames",
    "method": "GET",
    "description": "Get access list names from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPolicyAccessListPolicers": {
    "path": "/device/policy/accesslistpolicers",
    "method": "GET",
    "description": "Get access list policers from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPolicyAppRoutePolicyFilter": {
    "path": "/device/policy/approutepolicyfilter",
    "method": "GET",
    "description": "Get approute policy filter from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPolicDataPolicyFilter": {
    "path": "/device/policy/datapolicyfilter",
    "method": "GET",
    "description": "Get data policy filters from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPolicyFilterMemoryUsage": {
    "path": "/device/policy/filtermemoryusage",
    "method": "GET",
    "description": "Get data policy filter memory usage from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "showVsmartIptoSgtBinding": {
    "path": "/device/policy/iptosgtbindings",
    "method": "GET",
    "description": "show ip to sgt binding from Vsmart",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "showVsmartIptoUserBinding": {
    "path": "/device/policy/iptouserbindings",
    "method": "GET",
    "description": "show ip to user binding from Vsmart",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPolicyAccessListAssociationsIpv6": {
    "path": "/device/policy/ipv6/accesslistassociations",
    "method": "GET",
    "description": "Get access list associations from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPolicyAccessListCountersIpv6": {
    "path": "/device/policy/ipv6/accesslistcounters",
    "method": "GET",
    "description": "Get access list counters from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPolicyAccessListNamesIpv6": {
    "path": "/device/policy/ipv6/accesslistnames",
    "method": "GET",
    "description": "Get access list names from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPolicyAccessListPolicersIpv6": {
    "path": "/device/policy/ipv6/accesslistpolicers",
    "method": "GET",
    "description": "Get access list policers from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "showVsmartPxGridStatus": {
    "path": "/device/policy/pxgridstatus",
    "method": "GET",
    "description": "show Pxgrid status From Vsmart",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "showVsmartPxGridUserSessions": {
    "path": "/device/policy/pxgridusersessions",
    "method": "GET",
    "description": "show Pxgrid sessions From Vsmart",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPolicQosMapInfo": {
    "path": "/device/policy/qosmapinfo",
    "method": "GET",
    "description": "Get QoS map information from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPolicQosSchedulerInfo": {
    "path": "/device/policy/qosschedulerinfo",
    "method": "GET",
    "description": "Get QoS scheduler information from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPolicyRewriteAssociationsInfo": {
    "path": "/device/policy/rewriteassociations",
    "method": "GET",
    "description": "Get rewrite associations information from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "showVsmartUserUsergroupBindings": {
    "path": "/device/policy/userusergroupbindings",
    "method": "GET",
    "description": "Show User-Usergroup bindings from Vsmart",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "showSdwanPolicyFromVsmart": {
    "path": "/device/policy/vsmart",
    "method": "GET",
    "description": "show Sdwan Policy From Vsmart",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getZoneDropStatistics": {
    "path": "/device/policy/zbfwdropstatistics",
    "method": "GET",
    "description": "Get zone drop statistics from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getZbfwStatistics": {
    "path": "/device/policy/zbfwstatistics",
    "method": "GET",
    "description": "Get zone based firewall statistics from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getZonePairSessions": {
    "path": "/device/policy/zonepairsessions",
    "method": "GET",
    "description": "Get zone pair sessions from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getZonePairs": {
    "path": "/device/policy/zonepairstatistics",
    "method": "GET",
    "description": "Get zone pair statistics from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getZonePolicyFilters": {
    "path": "/device/policy/zonepolicyfilter",
    "method": "GET",
    "description": "Get zone policy filter from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPowerConsumption": {
    "path": "/device/powerconsumption",
    "method": "GET",
    "description": "Get Power Consumption Information",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPPPInterfaceList": {
    "path": "/device/ppp/interface",
    "method": "GET",
    "description": "Get PPP interface list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPPPoEInterfaceList": {
    "path": "/device/pppoe/session",
    "method": "GET",
    "description": "Get PPPoE session list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPPPoENeighborList": {
    "path": "/device/pppoe/statistic",
    "method": "GET",
    "description": "Get PPPoE statistics from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "cpustat": {
    "path": "/device/qfp/cpustat",
    "method": "GET",
    "description": "Get QFP cpu status",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "memstat": {
    "path": "/device/qfp/memstat",
    "method": "GET",
    "description": "Get QFP memory status",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSyncQueues": {
    "path": "/device/queues",
    "method": "GET",
    "description": "Get synchronized queue information, returns information about syncing, queued and stuck devices",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "get_sync_queues",
    "use_rest": false
  },
  "listReachableDevices": {
    "path": "/device/reachable",
    "method": "GET",
    "description": "Get list of reachable devices",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "list_reachable_devices",
    "use_rest": false
  },
  "createRebootHistoryList": {
    "path": "/device/reboothistory",
    "method": "GET",
    "description": "Get device reboot history",
    "sdk_endpoint": "admin_tech.session.endpoints.real_time_monitoring.reboot_history",
    "sdk_method": "create_reboot_history_list",
    "use_rest": false
  },
  "getRebootHistoryDetails": {
    "path": "/device/reboothistory/details",
    "method": "GET",
    "description": "Get detailed reboot history list",
    "sdk_endpoint": "admin_tech.session.endpoints.real_time_monitoring.reboot_history",
    "sdk_method": "get_reboot_history_details",
    "use_rest": false
  },
  "createSyncedRebootHistoryList": {
    "path": "/device/reboothistory/synced",
    "method": "GET",
    "description": "Get device reboot history synchronously",
    "sdk_endpoint": "admin_tech.session.endpoints.real_time_monitoring.reboot_history",
    "sdk_method": "create_synced_reboot_history_list",
    "use_rest": false
  },
  "getRedundancyGroupAppGroup": {
    "path": "/device/redundancy-group/app-group",
    "method": "GET",
    "description": "Get Redundancy Group Information",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getRoleBasedCounters": {
    "path": "/device/roleBasedCounters",
    "method": "GET",
    "description": "get Cisco TrustSec Role Based Counters information from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getRoleBasedIpv6Counters": {
    "path": "/device/roleBasedIpv6Counters",
    "method": "GET",
    "description": "get Cisco TrustSec Role Based Ipv6 Counters information from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getRoleBasedIpv6Permissions": {
    "path": "/device/roleBasedIpv6Permissions",
    "method": "GET",
    "description": "get Cisco TrustSec Role Based ipv6 Permissions information from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getRoleBasedPermissions": {
    "path": "/device/roleBasedPermissions",
    "method": "GET",
    "description": "get Cisco TrustSec Role Based Permissions information from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getRoleBasedSgtMap": {
    "path": "/device/roleBasedSgtMap",
    "method": "GET",
    "description": "get Cisco TrustSec Role Based SGT Map information from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSDWanGlobalDropStatistics": {
    "path": "/device/sdwan-global-drop-statistics",
    "method": "GET",
    "description": "Get SD-WAN global drop statistics detail from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSDWanStats": {
    "path": "/device/sdwan-stats",
    "method": "GET",
    "description": "Get SD-WAN statistics detail from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSessionList": {
    "path": "/device/security/information",
    "method": "GET",
    "description": "Get security information from devices",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDetail": {
    "path": "/device/sfp/detail",
    "method": "GET",
    "description": "Get SFP detail",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDiagnostic": {
    "path": "/device/sfp/diagnostic",
    "method": "GET",
    "description": "Get SFP diagnostic",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDiagnosticMeasurementAlarm": {
    "path": "/device/sfp/diagnosticMeasurementAlarm",
    "method": "GET",
    "description": "Get SFP diagnostic measurement alarm",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDiagnosticMeasurementValue": {
    "path": "/device/sfp/diagnosticMeasurementValue",
    "method": "GET",
    "description": "Get SFP diagnostic measurement value",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSigTunnelList": {
    "path": "/device/sig/getSigTunnelList",
    "method": "GET",
    "description": "get Sig TunnelList",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSigTunnelTotal": {
    "path": "/device/sig/getSigTunnelTotal",
    "method": "GET",
    "description": "get Sig Tunnel Total coount",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "tunnelDashboard": {
    "path": "/device/sig/tunnelDashboard",
    "method": "GET",
    "description": "Get SIG Zscaler tunnels from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSigUmbrellaTunnels": {
    "path": "/device/sig/umbrella/tunnels",
    "method": "GET",
    "description": "Get SIG Umbrella tunnels from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSigZscalerTunnels": {
    "path": "/device/sig/zscaler/tunnels",
    "method": "GET",
    "description": "Get SIG Zscaler tunnels from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSmuList": {
    "path": "/device/smu",
    "method": "GET",
    "description": "Get software list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSyncedSmuList": {
    "path": "/device/smu/synced",
    "method": "GET",
    "description": "Get software list from device synchronously",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAAAUcreateSoftwareListsers": {
    "path": "/device/software",
    "method": "GET",
    "description": "Get software list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSyncedSoftwareList": {
    "path": "/device/software/synced",
    "method": "GET",
    "description": "Get software list from device synchronously",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSSETunnel": {
    "path": "/device/sse/tunnels",
    "method": "GET",
    "description": "Get SSE  tunnels from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSslProxyStatistics": {
    "path": "/device/sslproxy/statistics",
    "method": "GET",
    "description": "Get ssl proxy statistics from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSslProxyStatus": {
    "path": "/device/sslproxy/status",
    "method": "GET",
    "description": "Get ssl proxy status from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getStaticRouteTrackerInfo": {
    "path": "/device/staticRouteTracker",
    "method": "GET",
    "description": "Get single static route tracker info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getStatsQueues": {
    "path": "/device/stats",
    "method": "GET",
    "description": "Get stats queue information",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "get_stats_queues",
    "use_rest": false
  },
  "getAllDeviceStatus": {
    "path": "/device/status",
    "method": "GET",
    "description": "Get devices status for vSmart,vBond,vEdge, and cEdge",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "get_all_device_status",
    "use_rest": false
  },
  "getSxpConnections": {
    "path": "/device/sxpConnections",
    "method": "GET",
    "description": "get Cisco TrustSec SXP Connections information from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "listCurrentlySyncingDevices": {
    "path": "/device/sync_status",
    "method": "GET",
    "description": "Get list of currently syncing devices",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "list_currently_syncing_devices",
    "use_rest": false
  },
  "syncAllDevicesMemDB": {
    "path": "/device/syncall/memorydb",
    "method": "POST",
    "description": "Synchronize memory database for all devices",
    "sdk_endpoint": "device",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDeviceSystemClock": {
    "path": "/device/system/clock",
    "method": "GET",
    "description": "Get device system clock",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createDeviceInfoList": {
    "path": "/device/system/info",
    "method": "GET",
    "description": "Get device information list",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createDeviceSystemStatsList": {
    "path": "/device/system/statistics",
    "method": "GET",
    "description": "Get device system stats list (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createDeviceSystemStatusList": {
    "path": "/device/system/status",
    "method": "GET",
    "description": "Get device system status list (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSyncedDeviceSystemStatusList": {
    "path": "/device/system/synced/status",
    "method": "GET",
    "description": "Get device system stats list synchronously",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getActiveTCPFlows": {
    "path": "/device/tcpopt/activeflows",
    "method": "GET",
    "description": "Get TCP optimized active flows from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getExpiredTCPFlows": {
    "path": "/device/tcpopt/expiredflows",
    "method": "GET",
    "description": "Get TCP optimized expired flows from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getTCPSummary": {
    "path": "/device/tcpopt/summary",
    "method": "GET",
    "description": "Get TCP optimization summary from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getTcpProxyStatistics": {
    "path": "/device/tcpproxy/statistics",
    "method": "GET",
    "description": "Get tcp proxy statistics from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getTcpProxyStatus": {
    "path": "/device/tcpproxy/status",
    "method": "GET",
    "description": "Get tcp proxy status from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getTiers": {
    "path": "/device/tier",
    "method": "GET",
    "description": "getTiers",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "get_tiers",
    "use_rest": false
  },
  "addTier": {
    "path": "/device/tier",
    "method": "POST",
    "description": "add tier",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "add_tier",
    "use_rest": false
  },
  "deleteTier": {
    "path": "/device/tier/{tierName}",
    "method": "DELETE",
    "description": "deleteTier",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "delete_tier",
    "use_rest": false
  },
  "getDeviceTlocStatus": {
    "path": "/device/tloc",
    "method": "GET",
    "description": "Get TLOC status list",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "get_device_tloc_status",
    "use_rest": false
  },
  "getDeviceTlocUtil": {
    "path": "/device/tlocutil",
    "method": "GET",
    "description": "Get TLOC list",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "get_device_tloc_util",
    "use_rest": false
  },
  "getDeviceTlocUtilDetails": {
    "path": "/device/tlocutil/detail",
    "method": "GET",
    "description": "Get detailed TLOC list",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "get_device_tloc_util_details",
    "use_rest": false
  },
  "createAdminTech": {
    "path": "/device/tools/admintech",
    "method": "POST",
    "description": "Generate admin tech logs",
    "sdk_endpoint": "admin_tech.session.endpoints.troubleshooting_tools.device_connectivity",
    "sdk_method": "create_admin_tech",
    "use_rest": false
  },
  "copyAdminTechOnDevice": {
    "path": "/device/tools/admintech/copy",
    "method": "POST",
    "description": "copy admin tech logs",
    "sdk_endpoint": "admin_tech.session.endpoints.troubleshooting_tools.device_connectivity",
    "sdk_method": "copy_admin_tech_on_device",
    "use_rest": false
  },
  "deleteAdminTechOnDevice": {
    "path": "/device/tools/admintech/delete",
    "method": "DELETE",
    "description": "delete admin tech logs",
    "sdk_endpoint": "admin_tech.session.endpoints.troubleshooting_tools.device_connectivity",
    "sdk_method": "delete_admin_tech_on_device",
    "use_rest": false
  },
  "downloadAdminTechFile": {
    "path": "/device/tools/admintech/download/{filename}",
    "method": "GET",
    "description": "Download admin tech logs",
    "sdk_endpoint": "admin_tech.session.endpoints.troubleshooting_tools.device_connectivity",
    "sdk_method": "download_admin_tech_file",
    "use_rest": false
  },
  "getSupportedAdminTechFeatures": {
    "path": "/device/tools/admintech/supportedfeatures/{deviceModel}/{deviceIP}/{personality}",
    "method": "GET",
    "description": "Get supported admin tech features",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "deleteAdminTechFile": {
    "path": "/device/tools/admintech/{requestID}",
    "method": "DELETE",
    "description": "Delete admin tech logs",
    "sdk_endpoint": "admin_tech.session.endpoints.troubleshooting_tools.device_connectivity",
    "sdk_method": "delete_admin_tech_file",
    "use_rest": false
  },
  "listAdminTechsOnDevice": {
    "path": "/device/tools/admintechlist",
    "method": "POST",
    "description": "List admin tech logs",
    "sdk_endpoint": "admin_tech.session.endpoints.troubleshooting_tools.device_connectivity",
    "sdk_method": "list_admin_techs_on_device",
    "use_rest": false
  },
  "listAdminTechs": {
    "path": "/device/tools/admintechs",
    "method": "GET",
    "description": "Get device admin-tech information",
    "sdk_endpoint": "admin_tech.session.endpoints.troubleshooting_tools.device_connectivity",
    "sdk_method": "list_admin_techs",
    "use_rest": false
  },
  "getInProgressCount": {
    "path": "/device/tools/admintechs/inprogress",
    "method": "GET",
    "description": "Get device admin-tech InProgressCount",
    "sdk_endpoint": "admin_tech.session.endpoints.troubleshooting_tools.device_connectivity",
    "sdk_method": "get_in_progress_count",
    "use_rest": false
  },
  "uploadAdminTech": {
    "path": "/device/tools/admintechs/upload",
    "method": "POST",
    "description": "upload admin tech to SR",
    "sdk_endpoint": "admin_tech.session.endpoints.troubleshooting_tools.device_connectivity",
    "sdk_method": "upload_admin_tech",
    "use_rest": false
  },
  "factoryReset": {
    "path": "/device/tools/factoryreset",
    "method": "POST",
    "description": "Device factory reset",
    "sdk_endpoint": "admin_tech.session.endpoints.troubleshooting_tools.device_connectivity",
    "sdk_method": "factory_reset",
    "use_rest": false
  },
  "getDeviceToolsNetstat": {
    "path": "/device/tools/netstat",
    "method": "GET",
    "description": "Get device tool net stat",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "npingDevice": {
    "path": "/device/tools/nping/{deviceIP}",
    "method": "POST",
    "description": "NPing device",
    "sdk_endpoint": "admin_tech.session.endpoints.troubleshooting_tools.device_connectivity",
    "sdk_method": "nping_device",
    "use_rest": false
  },
  "getDeviceToolsNSlookup": {
    "path": "/device/tools/nslookup",
    "method": "GET",
    "description": "Get device tool nslookup",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "pingDevice": {
    "path": "/device/tools/ping/{deviceIP}",
    "method": "POST",
    "description": "Ping device",
    "sdk_endpoint": "admin_tech.session.endpoints.troubleshooting_tools.device_connectivity",
    "sdk_method": "ping_device",
    "use_rest": false
  },
  "processPortHopColor": {
    "path": "/device/tools/porthopcolor/{deviceIP}",
    "method": "POST",
    "description": "Request port hop color",
    "sdk_endpoint": "admin_tech.session.endpoints.troubleshooting_tools.device_connectivity",
    "sdk_method": "process_port_hop_color",
    "use_rest": false
  },
  "getRealTimeinfo": {
    "path": "/device/tools/realtimeinfo",
    "method": "GET",
    "description": "Get hardware real time info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "processInterfaceReset": {
    "path": "/device/tools/reset/interface/{deviceIP}",
    "method": "POST",
    "description": "Reset device interface",
    "sdk_endpoint": "admin_tech.session.endpoints.troubleshooting_tools.device_connectivity",
    "sdk_method": "process_interface_reset",
    "use_rest": false
  },
  "processResetUser": {
    "path": "/device/tools/resetuser/{deviceIP}",
    "method": "POST",
    "description": "Request reset user",
    "sdk_endpoint": "admin_tech.session.endpoints.troubleshooting_tools.device_connectivity",
    "sdk_method": "process_reset_user",
    "use_rest": false
  },
  "servicePath": {
    "path": "/device/tools/servicepath/{deviceIP}",
    "method": "POST",
    "description": "Service path",
    "sdk_endpoint": "admin_tech.session.endpoints.troubleshooting_tools.device_connectivity",
    "sdk_method": "service_path",
    "use_rest": false
  },
  "getDeviceToolsSS": {
    "path": "/device/tools/ss",
    "method": "GET",
    "description": "Get device tool ss",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSystemNetfilter": {
    "path": "/device/tools/system-netfilter",
    "method": "GET",
    "description": "Get system netfilter info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "tracerouteDevice": {
    "path": "/device/tools/traceroute/{deviceIP}",
    "method": "POST",
    "description": "Traceroute",
    "sdk_endpoint": "admin_tech.session.endpoints.troubleshooting_tools.device_connectivity",
    "sdk_method": "traceroute_device",
    "use_rest": false
  },
  "tunnelPath": {
    "path": "/device/tools/tunnelpath/{deviceIP}",
    "method": "POST",
    "description": "TunnelPath",
    "sdk_endpoint": "admin_tech.session.endpoints.troubleshooting_tools.device_connectivity",
    "sdk_method": "tunnel_path",
    "use_rest": false
  },
  "createTransportConnectionList": {
    "path": "/device/transport/connection",
    "method": "GET",
    "description": "Get transport connection list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createBfdStatisticsList": {
    "path": "/device/tunnel/bfd_statistics",
    "method": "GET",
    "description": "Get tunnel BFD statistics all devices",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createFecStatistics": {
    "path": "/device/tunnel/fec_statistics",
    "method": "GET",
    "description": "Get tunnel fec statistics",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createGreKeepalivesList": {
    "path": "/device/tunnel/gre-keepalives",
    "method": "GET",
    "description": "Get GRE keep alive information",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createIpsecStatisticsList": {
    "path": "/device/tunnel/ipsec_statistics",
    "method": "GET",
    "description": "Get tunnel IPSec statistics all devices",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPacketDuplicateStatistics": {
    "path": "/device/tunnel/packet-duplicate",
    "method": "GET",
    "description": "Get tunnel statistics packet duplication statistics",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createStatisticsList": {
    "path": "/device/tunnel/statistics",
    "method": "GET",
    "description": "Get tunnel statistics all devices",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createUcseStats": {
    "path": "/device/ucse/stats",
    "method": "GET",
    "description": "Get  UCSE stats entry from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getUmbrellaDevReg": {
    "path": "/device/umbrella/device-registration",
    "method": "GET",
    "description": "Get Umbrella device registration from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getUmbrellaDNSCrypt": {
    "path": "/device/umbrella/dnscrypt",
    "method": "GET",
    "description": "Get Umbrella DNScrypt information from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getUmbrellaDpStats": {
    "path": "/device/umbrella/dp-stats",
    "method": "GET",
    "description": "Get Umbrella dp-stats from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getUmbrellaOverview": {
    "path": "/device/umbrella/overview",
    "method": "GET",
    "description": "Get Umbrella overview from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getUmbrellaConfig": {
    "path": "/device/umbrella/umbrella-config",
    "method": "GET",
    "description": "Get Umbrella configuration from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getUnclaimedVedges": {
    "path": "/device/unclaimed/vedges",
    "method": "GET",
    "description": "Get unclaimed vEdges from vbond",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getUnconfigured": {
    "path": "/device/unconfigured",
    "method": "GET",
    "description": "Get wan edge devices not configured by vManage (that is, those in CLI mode)",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "get_unconfigured",
    "use_rest": false
  },
  "listUnreachableDevices": {
    "path": "/device/unreachable",
    "method": "GET",
    "description": "Get list of unreachable devices",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "list_unreachable_devices",
    "use_rest": false
  },
  "removeUnreachableDevice": {
    "path": "/device/unreachable/{deviceIP}",
    "method": "DELETE",
    "description": "Delete unreachable device",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "remove_unreachable_device",
    "use_rest": false
  },
  "getUsersFromDevice": {
    "path": "/device/users",
    "method": "GET",
    "description": "Get users from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAllDeviceUsers": {
    "path": "/device/users/list",
    "method": "GET",
    "description": "Get all users from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getUTDDataplaneConfig": {
    "path": "/device/utd/dataplane-config",
    "method": "GET",
    "description": "Get data plane config from Device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getUTDDataplaneGlobal": {
    "path": "/device/utd/dataplane-global",
    "method": "GET",
    "description": "Get data plane global from Device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getUTDDataplaneStats": {
    "path": "/device/utd/dataplane-stats",
    "method": "GET",
    "description": "Get data plane stats from Device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getUTDDataplaneStatsSummary": {
    "path": "/device/utd/dataplane-stats-summary",
    "method": "GET",
    "description": "Get data plane stats summary",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getUTDEngineInstanceStatus": {
    "path": "/device/utd/engine-instance-status",
    "method": "GET",
    "description": "Get UTD engine instance status from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getUTDEngineStatus": {
    "path": "/device/utd/engine-status",
    "method": "GET",
    "description": "Get UTD engine status from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getUTDFileAnalysisStatus": {
    "path": "/device/utd/file-analysis-status",
    "method": "GET",
    "description": "Get UTD file analysis status from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getUTDFileReputationStatus": {
    "path": "/device/utd/file-reputation-status",
    "method": "GET",
    "description": "Get UTD file reputation status from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getUTDIpsUpdateStatus": {
    "path": "/device/utd/ips-update-status",
    "method": "GET",
    "description": "Get UTD IPS update status from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSignatureVersionInfo": {
    "path": "/device/utd/signature/version/details",
    "method": "GET",
    "description": "Get UTD Signature version information from Device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getUTDUrlfConnectionStatus": {
    "path": "/device/utd/urlf-con-status",
    "method": "GET",
    "description": "Get UTD URLF Connection status from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getUTDUrlfUpdateStatus": {
    "path": "/device/utd/urlf-update-status",
    "method": "GET",
    "description": "Get UTD URLF update status from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getUTDVersionStatus": {
    "path": "/device/utd/version-status",
    "method": "GET",
    "description": "Get UTD version status from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCoLineSpecificStats": {
    "path": "/device/vdslService/coLineSpecificStats",
    "method": "GET",
    "description": "Get VDSL service line bonding stats from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCoStats": {
    "path": "/device/vdslService/coStats",
    "method": "GET",
    "description": "Get CO stats from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCpeLineSpecificStats": {
    "path": "/device/vdslService/cpeLineSpecificStats",
    "method": "GET",
    "description": "Get VDSL service CPE line specific stats from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCpeStats": {
    "path": "/device/vdslService/cpeStats",
    "method": "GET",
    "description": "Get CPE stats from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLineBondingStats": {
    "path": "/device/vdslService/lineBondingStats",
    "method": "GET",
    "description": "Get VDSL service line bonding stats from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLineSpecificStats": {
    "path": "/device/vdslService/lineSpecificStats",
    "method": "GET",
    "description": "Get VDSL service line specific stats from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getVdslInfo": {
    "path": "/device/vdslService/vdslInfo",
    "method": "GET",
    "description": "Get VDSL info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getVedgeInventory": {
    "path": "/device/vedgeinventory/detail",
    "method": "GET",
    "description": "Get detailed vEdge inventory",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "get_vedge_inventory",
    "use_rest": false
  },
  "getVedgeInventorySummary": {
    "path": "/device/vedgeinventory/summary",
    "method": "GET",
    "description": "Get vEdge inventory",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_device_details",
    "sdk_method": "get_vedge_inventory_summary",
    "use_rest": false
  },
  "createTeList": {
    "path": "/device/virtualApplication/te",
    "method": "GET",
    "description": "Get ThousandEyes app list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createUtdList": {
    "path": "/device/virtualApplication/utd",
    "method": "GET",
    "description": "Get Utd apps list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "createWaasList": {
    "path": "/device/virtualApplication/waas",
    "method": "GET",
    "description": "Get Waas apps list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getVbranchVMLifecycleNics": {
    "path": "/device/vm/nics",
    "method": "GET",
    "description": "Get vbranch vm lifecycle state (NIC)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCloudDockVMLifecycleNics": {
    "path": "/device/vm/notifications",
    "method": "GET",
    "description": "Get CloudDock vm lifecycle state",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getVbranchVMLifecycle": {
    "path": "/device/vm/oper/state",
    "method": "GET",
    "description": "Get vbranch vm lifecycle state",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getVMLifeCycleState": {
    "path": "/device/vm/state",
    "method": "GET",
    "description": "Get vm lifecycle state",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getVManageSystemIP": {
    "path": "/device/vmanage",
    "method": "GET",
    "description": "Get vManage system IP",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDspActive": {
    "path": "/device/voice/dspActive",
    "method": "GET",
    "description": "Get DSPFarm Active DSP info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPhoneInfo": {
    "path": "/device/voice/phoneInfo",
    "method": "GET",
    "description": "Get phone registration info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDSPFarmProfiles": {
    "path": "/device/voice/profiles",
    "method": "GET",
    "description": "Get DSPFarm Profiles info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSccpCcmGroups": {
    "path": "/device/voice/sccpCcmGroups",
    "method": "GET",
    "description": "Get DSPFarm SCCP CCM Groups info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSccpConnections": {
    "path": "/device/voice/sccpConnections",
    "method": "GET",
    "description": "Get DSPFarm SCCP Connections info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getVoiceCalls": {
    "path": "/device/voice/voiceCalls",
    "method": "GET",
    "description": "Get voice call info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getVoipCalls": {
    "path": "/device/voice/voipCalls",
    "method": "GET",
    "description": "Get VOIP call info from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getT1e1IsdnStatus": {
    "path": "/device/voiceisdninfo/isdnstatus",
    "method": "GET",
    "description": "Retrieve Voice ISDN Status from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getControllerT1e1InfoCurrent15MinStats": {
    "path": "/device/voicet1e1controllerinfo/current15minstats",
    "method": "GET",
    "description": "Retrieve T1E1 controller last 15 min stats from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getControllerT1e1InfoTotalStats": {
    "path": "/device/voicet1e1controllerinfo/totalstats",
    "method": "GET",
    "description": "Retrieve T1E1 controller total stats from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getVPNInstances": {
    "path": "/device/vpn",
    "method": "GET",
    "description": "Get VPN instance list from device (Real Time)",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getVRRPInterface": {
    "path": "/device/vrrp",
    "method": "GET",
    "description": "Get VRRP interface list from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWirelessClients": {
    "path": "/device/wireless/client",
    "method": "GET",
    "description": "Get wireless clients from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWirelessRadios": {
    "path": "/device/wireless/radio",
    "method": "GET",
    "description": "Get wireless Radios from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWirelessSsid": {
    "path": "/device/wireless/ssid",
    "method": "GET",
    "description": "Get wireless SSID from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWLANClients": {
    "path": "/device/wlan/clients",
    "method": "GET",
    "description": "Get WLAN client from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWLANInterfaces": {
    "path": "/device/wlan/interfaces",
    "method": "GET",
    "description": "Get WLAN interface from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWLANRadios": {
    "path": "/device/wlan/radios",
    "method": "GET",
    "description": "Get WLAN Radios from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWLANRadius": {
    "path": "/device/wlan/radius",
    "method": "GET",
    "description": "Get WLAN RADIUS authentication from device",
    "sdk_endpoint": "device",
    "sdk_method": "get",
    "use_rest": false
  },
  "deviceAuthorization": {
    "path": "/device_authorization/{regionBaseUri}/{clientId}",
    "method": "POST",
    "description": "User authorization for Cisco vManage SecureX integration",
    "sdk_endpoint": "device_authorization",
    "sdk_method": "create",
    "use_rest": false
  },
  "activate": {
    "path": "/disasterrecovery/activate",
    "method": "POST",
    "description": "Activate cluster to start working as primary",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_disaster_recovery",
    "sdk_method": "activate",
    "use_rest": false
  },
  "getClusterInfo": {
    "path": "/disasterrecovery/clusterInfo",
    "method": "GET",
    "description": "Get disaster recovery cluster info",
    "sdk_endpoint": "disasterrecovery",
    "sdk_method": "get",
    "use_rest": false
  },
  "getConfigDBRestoreStatus": {
    "path": "/disasterrecovery/dbrestorestatus",
    "method": "GET",
    "description": "Config-db restore status",
    "sdk_endpoint": "disasterrecovery",
    "sdk_method": "get",
    "use_rest": false
  },
  "deleteLocalDC": {
    "path": "/disasterrecovery/deleteLocalDataCenter",
    "method": "POST",
    "description": "Delete local data center",
    "sdk_endpoint": "disasterrecovery",
    "sdk_method": "create",
    "use_rest": false
  },
  "deleteDC": {
    "path": "/disasterrecovery/deleteRemoteDataCenter",
    "method": "POST",
    "description": "Delete data center",
    "sdk_endpoint": "disasterrecovery",
    "sdk_method": "create",
    "use_rest": false
  },
  "delete": {
    "path": "/disasterrecovery/deregister",
    "method": "POST",
    "description": "Delete disaster recovery",
    "sdk_endpoint": "admin_tech",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getDetails": {
    "path": "/disasterrecovery/details",
    "method": "GET",
    "description": "Get disaster recovery details",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_disaster_recovery",
    "sdk_method": "get_details",
    "use_rest": false
  },
  "getDisasterRecoveryStatus": {
    "path": "/disasterrecovery/drstatus",
    "method": "GET",
    "description": "Disaster recovery status",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_disaster_recovery",
    "sdk_method": "get_disaster_recovery_status",
    "use_rest": false
  },
  "getHistory": {
    "path": "/disasterrecovery/history",
    "method": "GET",
    "description": "Get disaster recovery switchover history",
    "sdk_endpoint": "disasterrecovery",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLocalHistory": {
    "path": "/disasterrecovery/localLatestHistory",
    "method": "GET",
    "description": "Get disaster recovery local switchover history",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_disaster_recovery",
    "sdk_method": "get_local_history",
    "use_rest": false
  },
  "getLocalDataCenterState": {
    "path": "/disasterrecovery/localdc",
    "method": "GET",
    "description": "Get local data center details",
    "sdk_endpoint": "disasterrecovery",
    "sdk_method": "get",
    "use_rest": false
  },
  "update": {
    "path": "/disasterrecovery/password",
    "method": "POST",
    "description": "Update data centers and vBonds passwords for disaster recovery",
    "sdk_endpoint": "admin_tech.session.adapters",
    "sdk_method": "update",
    "use_rest": false
  },
  "pauseDR": {
    "path": "/disasterrecovery/pause",
    "method": "POST",
    "description": "Pause DR",
    "sdk_endpoint": "disasterrecovery",
    "sdk_method": "create",
    "use_rest": false
  },
  "pauseLocalArbitrator": {
    "path": "/disasterrecovery/pauseLocalArbitrator",
    "method": "POST",
    "description": "Pause DR for Local Arbitrator",
    "sdk_endpoint": "disasterrecovery",
    "sdk_method": "create",
    "use_rest": false
  },
  "pauseLocalDCForDR": {
    "path": "/disasterrecovery/pauseLocalDC",
    "method": "POST",
    "description": "Pause DR for Local datacenter",
    "sdk_endpoint": "disasterrecovery",
    "sdk_method": "create",
    "use_rest": false
  },
  "pauseLocalDCReplication": {
    "path": "/disasterrecovery/pauseLocalReplication",
    "method": "POST",
    "description": "Pause DR replication for Local datacenter",
    "sdk_endpoint": "disasterrecovery",
    "sdk_method": "create",
    "use_rest": false
  },
  "disasterRecoveryPauseReplication": {
    "path": "/disasterrecovery/pausereplication",
    "method": "POST",
    "description": "Pause DR data replication",
    "sdk_endpoint": "disasterrecovery",
    "sdk_method": "create",
    "use_rest": false
  },
  "update1": {
    "path": "/disasterrecovery/register",
    "method": "PUT",
    "description": "Update data centers for disaster recovery",
    "sdk_endpoint": "disasterrecovery",
    "sdk_method": "update",
    "use_rest": false
  },
  "register": {
    "path": "/disasterrecovery/register",
    "method": "POST",
    "description": "Register data centers for disaster recovery",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_disaster_recovery",
    "sdk_method": "register",
    "use_rest": false
  },
  "getRemoteDCMembersState": {
    "path": "/disasterrecovery/remoteDcState",
    "method": "GET",
    "description": "Gets remote data center member state",
    "sdk_endpoint": "disasterrecovery",
    "sdk_method": "get",
    "use_rest": false
  },
  "getRemoteDataCenterState": {
    "path": "/disasterrecovery/remotedc",
    "method": "GET",
    "description": "Get remote data center details",
    "sdk_endpoint": "disasterrecovery",
    "sdk_method": "get",
    "use_rest": false
  },
  "getRemoteDataCenterVersion": {
    "path": "/disasterrecovery/remotedc/swversion",
    "method": "GET",
    "description": "Get remote data center vManage version",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_disaster_recovery",
    "sdk_method": "get_remote_data_center_version",
    "use_rest": false
  },
  "getDisasterRecoveryLocalReplicationSchedule": {
    "path": "/disasterrecovery/schedule",
    "method": "GET",
    "description": "Get disaster recovery local replication schedule",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_disaster_recovery",
    "sdk_method": "get_disaster_recovery_local_replication_schedule",
    "use_rest": false
  },
  "getdrStatus": {
    "path": "/disasterrecovery/status",
    "method": "GET",
    "description": "Get disaster recovery status",
    "sdk_endpoint": "disasterrecovery",
    "sdk_method": "get",
    "use_rest": false
  },
  "unpauseDR": {
    "path": "/disasterrecovery/unpause",
    "method": "POST",
    "description": "Unpause DR",
    "sdk_endpoint": "disasterrecovery",
    "sdk_method": "create",
    "use_rest": false
  },
  "unpauseLocalArbitrator": {
    "path": "/disasterrecovery/unpauseLocalArbitrator",
    "method": "POST",
    "description": "Unpause DR for Local Arbitrator",
    "sdk_endpoint": "disasterrecovery",
    "sdk_method": "create",
    "use_rest": false
  },
  "unpauseLocalDCForDR": {
    "path": "/disasterrecovery/unpauseLocalDC",
    "method": "POST",
    "description": "Unpause DR for Local datacenter",
    "sdk_endpoint": "disasterrecovery",
    "sdk_method": "create",
    "use_rest": false
  },
  "unpauseLocalDCReplication": {
    "path": "/disasterrecovery/unpauseLocalReplication",
    "method": "POST",
    "description": "Unpause DR replication for local datacenter",
    "sdk_endpoint": "disasterrecovery",
    "sdk_method": "create",
    "use_rest": false
  },
  "disasterRecoveryUnPauseReplication": {
    "path": "/disasterrecovery/unpausereplication",
    "method": "POST",
    "description": "Un-Pause DR data replication",
    "sdk_endpoint": "disasterrecovery",
    "sdk_method": "create",
    "use_rest": false
  },
  "updateDrState": {
    "path": "/disasterrecovery/updateDRConfigOnArbitrator",
    "method": "POST",
    "description": "Update arbitrator with primary and secondary states cluster",
    "sdk_endpoint": "disasterrecovery",
    "sdk_method": "create",
    "use_rest": false
  },
  "get": {
    "path": "/v1/feature-profile/sd-routing/cli/features",
    "method": "GET",
    "description": "GetSdroutingFeatureProfilesByFamilyAndType",
    "sdk_endpoint": "admin_tech",
    "sdk_method": "get",
    "use_rest": false
  },
  "listEntityOwnershipInfo": {
    "path": "/entityownership/list",
    "method": "GET",
    "description": "List all entity ownership info",
    "sdk_endpoint": "entityownership",
    "sdk_method": "get",
    "use_rest": false
  },
  "entityOwnershipInfo": {
    "path": "/entityownership/tree",
    "method": "GET",
    "description": "Entity ownership info grouped by buckets",
    "sdk_endpoint": "entityownership",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEvents": {
    "path": "/event",
    "method": "GET",
    "description": "Get events for given query. If query is empty then last 30 mins data will be returned.",
    "sdk_endpoint": "event",
    "sdk_method": "get",
    "use_rest": false
  },
  "postEvents": {
    "path": "/event",
    "method": "POST",
    "description": "Get events for given query.",
    "sdk_endpoint": "event",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdata1": {
    "path": "/event/aggregation",
    "method": "GET",
    "description": "Get aggregated count of events based on given query.",
    "sdk_endpoint": "event",
    "sdk_method": "get",
    "use_rest": false
  },
  "postaggregationdata1": {
    "path": "/event/aggregation",
    "method": "POST",
    "description": "Get aggregated count of events based on given query.",
    "sdk_endpoint": "event",
    "sdk_method": "create",
    "use_rest": false
  },
  "getByUuids": {
    "path": "/event/byuuids",
    "method": "POST",
    "description": "Get Events for given uuids",
    "sdk_endpoint": "event",
    "sdk_method": "create",
    "use_rest": false
  },
  "getComponentsAsKeyValue": {
    "path": "/event/component/keyvalue",
    "method": "GET",
    "description": "Get event component types.",
    "sdk_endpoint": "event",
    "sdk_method": "get",
    "use_rest": false
  },
  "getdoccount2": {
    "path": "/event/doccount",
    "method": "GET",
    "description": "Get the count of events as per the query passed.",
    "sdk_endpoint": "event",
    "sdk_method": "get",
    "use_rest": false
  },
  "postdoccount1": {
    "path": "/event/doccount",
    "method": "POST",
    "description": "Get the count of events as per the query passed.",
    "sdk_endpoint": "event",
    "sdk_method": "create",
    "use_rest": false
  },
  "enableEventsFromFile": {
    "path": "/event/enable/fileprocess",
    "method": "GET",
    "description": "Enable events from file.",
    "sdk_endpoint": "event",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEventNamesByComponent": {
    "path": "/event/getEventsByComponent",
    "method": "GET",
    "description": "Get event names by component.",
    "sdk_endpoint": "event",
    "sdk_method": "get",
    "use_rest": false
  },
  "getListenersInfo": {
    "path": "/event/listeners",
    "method": "GET",
    "description": "Retrieve listener information",
    "sdk_endpoint": "event",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpage1": {
    "path": "/event/page",
    "method": "GET",
    "description": "Get paginated events",
    "sdk_endpoint": "event",
    "sdk_method": "get",
    "use_rest": false
  },
  "postpage1": {
    "path": "/event/page",
    "method": "POST",
    "description": "Get paginated events",
    "sdk_endpoint": "event",
    "sdk_method": "create",
    "use_rest": false
  },
  "getQueryFields": {
    "path": "/event/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "event",
    "sdk_method": "get",
    "use_rest": false
  },
  "createEventsQueryConfig": {
    "path": "/event/query/input",
    "method": "GET",
    "description": "Get event field details",
    "sdk_endpoint": "event",
    "sdk_method": "get",
    "use_rest": false
  },
  "getBySeverities": {
    "path": "/event/severity",
    "method": "GET",
    "description": "Get alarms by severity",
    "sdk_endpoint": "event",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSeverityHistogram": {
    "path": "/event/severity/summary",
    "method": "GET",
    "description": "Get event severity histogram",
    "sdk_endpoint": "event",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEventTypesAsKeyValue": {
    "path": "/event/types/keyvalue",
    "method": "GET",
    "description": "Get event types.",
    "sdk_endpoint": "event",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceCertificate": {
    "path": "/featurecertificate/certificate",
    "method": "GET",
    "description": "Get feature cert from cEdge device<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view.",
    "sdk_endpoint": "featurecertificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "installFeatureCertificate": {
    "path": "/featurecertificate/certificate",
    "method": "PUT",
    "description": "Upload feature cert for cEdge device<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view.",
    "sdk_endpoint": "featurecertificate",
    "sdk_method": "update",
    "use_rest": false
  },
  "getDeviceCsr": {
    "path": "/featurecertificate/devicecsr",
    "method": "GET",
    "description": "Get CSR from cEdge device<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view.",
    "sdk_endpoint": "featurecertificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "genDeviceCsr": {
    "path": "/featurecertificate/devicecsr",
    "method": "PUT",
    "description": "Create CSR for cEdge device<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view.",
    "sdk_endpoint": "featurecertificate",
    "sdk_method": "update",
    "use_rest": false
  },
  "revokeFeatureCertificate": {
    "path": "/featurecertificate/revoke",
    "method": "PUT",
    "description": "Revoke feature cert from cEdge device<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view.",
    "sdk_endpoint": "featurecertificate",
    "sdk_method": "update",
    "use_rest": false
  },
  "getFeatureCaState": {
    "path": "/featurecertificate/syslogconfig",
    "method": "GET",
    "description": "Get Feature CA state<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view.",
    "sdk_endpoint": "featurecertificate",
    "sdk_method": "get",
    "use_rest": false
  },
  "requesDNSSecActions": {
    "path": "/fedramp/dnssec/actions",
    "method": "GET",
    "description": "Request DNS-Sec actions",
    "sdk_endpoint": "fedramp",
    "sdk_method": "get",
    "use_rest": false
  },
  "configureDNSSec": {
    "path": "/fedramp/dnssec/config",
    "method": "POST",
    "description": "Configure DNS-Sec",
    "sdk_endpoint": "fedramp",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDNSSecStatus": {
    "path": "/fedramp/dnssec/status",
    "method": "GET",
    "description": "Get DNS-Sec status",
    "sdk_endpoint": "fedramp",
    "sdk_method": "get",
    "use_rest": false
  },
  "configFedrampMode": {
    "path": "/fedramp/status",
    "method": "POST",
    "description": "Set network deployment mode",
    "sdk_endpoint": "fedramp",
    "sdk_method": "create",
    "use_rest": false
  },
  "requestWazuhActions": {
    "path": "/fedramp/wazuh/actions",
    "method": "GET",
    "description": "Wazuh agent action",
    "sdk_endpoint": "fedramp",
    "sdk_method": "get",
    "use_rest": false
  },
  "configureWazuhClient": {
    "path": "/fedramp/wazuh/config",
    "method": "POST",
    "description": "Configure Wazuh agent",
    "sdk_endpoint": "fedramp",
    "sdk_method": "create",
    "use_rest": false
  },
  "getWazuhAgentStatus": {
    "path": "/fedramp/wazuh/status",
    "method": "GET",
    "description": "Get Wazuh agent status",
    "sdk_endpoint": "fedramp",
    "sdk_method": "get",
    "use_rest": false
  },
  "listDeviceGroupList": {
    "path": "/group",
    "method": "GET",
    "description": "Retrieve device group list",
    "sdk_endpoint": "group",
    "sdk_method": "get",
    "use_rest": false
  },
  "listDeviceGroups": {
    "path": "/group/device",
    "method": "GET",
    "description": "Retrieve device groups",
    "sdk_endpoint": "group",
    "sdk_method": "get",
    "use_rest": false
  },
  "listGroupDevices": {
    "path": "/group/devices",
    "method": "GET",
    "description": "Retrieve devices in group",
    "sdk_endpoint": "group",
    "sdk_method": "get",
    "use_rest": false
  },
  "listGroupDevicesForMap": {
    "path": "/group/map/devices",
    "method": "GET",
    "description": "Retrieve group devices for map",
    "sdk_endpoint": "group",
    "sdk_method": "get",
    "use_rest": false
  },
  "listGroupLinksForMap": {
    "path": "/group/map/devices/links",
    "method": "GET",
    "description": "Retrieve devices in group for map",
    "sdk_endpoint": "group",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDevicesHealth": {
    "path": "/health/devices",
    "method": "GET",
    "description": "get the devices health properties",
    "sdk_endpoint": "dashboard",
    "sdk_method": "get_devices_health",
    "use_rest": false
  },
  "getDevicesHealthOverview": {
    "path": "/health/devices/overview",
    "method": "GET",
    "description": "gets devices health overview",
    "sdk_endpoint": "dashboard",
    "sdk_method": "get_devices_health_overview",
    "use_rest": false
  },
  "fetchDeviceDetails": {
    "path": "/hsec/devices",
    "method": "GET",
    "description": "Retrieve list of devices which are valid for fetch of HSEC license",
    "sdk_endpoint": "hsec",
    "sdk_method": "get",
    "use_rest": false
  },
  "installDeviceDetails": {
    "path": "/hsec/devices/install",
    "method": "GET",
    "description": "Retrieve list of devices which has HSEC fetched",
    "sdk_endpoint": "hsec",
    "sdk_method": "get",
    "use_rest": false
  },
  "downloadSlacRequestFile": {
    "path": "/hsec/download",
    "method": "POST",
    "description": "Download SLAC Request file for CSSM",
    "sdk_endpoint": "hsec",
    "sdk_method": "create",
    "use_rest": false
  },
  "fetchSAVAAccounts": {
    "path": "/hsec/fetchaccounts",
    "method": "GET",
    "description": "Authenticate User and Sync Licenses",
    "sdk_endpoint": "hsec",
    "sdk_method": "get",
    "use_rest": false
  },
  "fetchaccounts1": {
    "path": "/hsec/fetchaccounts",
    "method": "POST",
    "description": "Authenticate User and Sync Licenses",
    "sdk_endpoint": "hsec",
    "sdk_method": "create",
    "use_rest": false
  },
  "testbedMode": {
    "path": "/hsec/testbedMode",
    "method": "GET",
    "description": "Return testbed mode information staging or production",
    "sdk_endpoint": "hsec",
    "sdk_method": "get",
    "use_rest": false
  },
  "connect1": {
    "path": "/ise/connect",
    "method": "GET",
    "description": "Check if the configured ISE server is reachable",
    "sdk_endpoint": "ise",
    "sdk_method": "get",
    "use_rest": false
  },
  "getIseServerCredentials": {
    "path": "/ise/credentials",
    "method": "GET",
    "description": "Get Ise server credentials",
    "sdk_endpoint": "ise",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateIseServerCredentials": {
    "path": "/ise/credentials",
    "method": "PUT",
    "description": "update Ise server credentials",
    "sdk_endpoint": "ise",
    "sdk_method": "update",
    "use_rest": false
  },
  "addIseServerCredentials": {
    "path": "/ise/credentials",
    "method": "POST",
    "description": "Add Ise server credentials",
    "sdk_endpoint": "ise",
    "sdk_method": "create",
    "use_rest": false
  },
  "deleteIseAndPxGridAccount": {
    "path": "/ise/credentials/iseandpxgrid",
    "method": "DELETE",
    "description": "Delete PxGrid and Ise information on vManage. Also Deletes PxGrid Client on ISE",
    "sdk_endpoint": "ise",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getPxGridAccount": {
    "path": "/ise/credentials/pxgrid",
    "method": "GET",
    "description": "Get PxGrid account",
    "sdk_endpoint": "ise",
    "sdk_method": "get",
    "use_rest": false
  },
  "deletePxGrid": {
    "path": "/ise/credentials/pxgrid",
    "method": "DELETE",
    "description": "Delete PxGrid account information",
    "sdk_endpoint": "ise",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getPxgridCert": {
    "path": "/ise/credentials/pxgrid/cert",
    "method": "GET",
    "description": "Retrieves Pxgrid Certificate",
    "sdk_endpoint": "ise",
    "sdk_method": "get",
    "use_rest": false
  },
  "syncVsmart": {
    "path": "/ise/credentials/vsmart/sync",
    "method": "POST",
    "description": "Send pxGrid and ISE server configuration to vSmarts",
    "sdk_endpoint": "ise",
    "sdk_method": "create",
    "use_rest": false
  },
  "accountActivate": {
    "path": "/ise/pxgrid/activate",
    "method": "POST",
    "description": "Activate pxGrid account",
    "sdk_endpoint": "ise",
    "sdk_method": "create",
    "use_rest": false
  },
  "approve": {
    "path": "/ise/pxgrid/approve",
    "method": "PUT",
    "description": "Approve pxGrid account",
    "sdk_endpoint": "ise",
    "sdk_method": "update",
    "use_rest": false
  },
  "accountCreate": {
    "path": "/ise/pxgrid/create",
    "method": "POST",
    "description": "Create pxGrid account",
    "sdk_endpoint": "ise",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSupportedLocales": {
    "path": "/localization/supportedLocales",
    "method": "GET",
    "description": "Get Supported locales",
    "sdk_endpoint": "localization",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCategory": {
    "path": "/management/category",
    "method": "GET",
    "description": "Get vManage resource category",
    "sdk_endpoint": "management",
    "sdk_method": "get",
    "use_rest": false
  },
  "getvManageResourceUtilization": {
    "path": "/management/vManageResourceUtilization",
    "method": "GET",
    "description": "Get vManage resource utilization",
    "sdk_endpoint": "management",
    "sdk_method": "get",
    "use_rest": false
  },
  "retrieveMDPAttachedDevices": {
    "path": "/mdp/attachDevices/{nmsId}",
    "method": "GET",
    "description": "Retrieve MDP attached devices",
    "sdk_endpoint": "mdp",
    "sdk_method": "get",
    "use_rest": false
  },
  "editAttachedDevices": {
    "path": "/mdp/attachDevices/{nmsId}",
    "method": "PUT",
    "description": "Edit attached devices",
    "sdk_endpoint": "mdp",
    "sdk_method": "update",
    "use_rest": false
  },
  "attachDevices": {
    "path": "/mdp/attachDevices/{nmsId}",
    "method": "POST",
    "description": "Share devices with MDP",
    "sdk_endpoint": "mdp",
    "sdk_method": "create",
    "use_rest": false
  },
  "detachDevices": {
    "path": "/mdp/detachDevices/{nmsId}",
    "method": "POST",
    "description": "Disconnect devices from mpd controller",
    "sdk_endpoint": "mdp",
    "sdk_method": "create",
    "use_rest": false
  },
  "retrieveMDPSupportedDevices": {
    "path": "/mdp/devices/{nmsId}",
    "method": "GET",
    "description": "Retrieve MDP supported devices",
    "sdk_endpoint": "mdp",
    "sdk_method": "get",
    "use_rest": false
  },
  "disconnectFromMDP": {
    "path": "/mdp/disconnect/{nmsId}",
    "method": "GET",
    "description": "disconnect from mpd controller",
    "sdk_endpoint": "mdp",
    "sdk_method": "get",
    "use_rest": false
  },
  "onboardMDP": {
    "path": "/mdp/onboard",
    "method": "POST",
    "description": "Start MDP onboarding operation",
    "sdk_endpoint": "mdp",
    "sdk_method": "create",
    "use_rest": false
  },
  "getMDPOnboardingStatus": {
    "path": "/mdp/onboard/status",
    "method": "GET",
    "description": "Get MDP onboarding status",
    "sdk_endpoint": "mdp",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateOnboardingPayload": {
    "path": "/mdp/onboard/{nmsId}",
    "method": "PUT",
    "description": "update MDP onboarding document",
    "sdk_endpoint": "mdp",
    "sdk_method": "update",
    "use_rest": false
  },
  "offboard": {
    "path": "/mdp/onboard/{nmsId}",
    "method": "DELETE",
    "description": "offboard the mdp application",
    "sdk_endpoint": "mdp",
    "sdk_method": "delete",
    "use_rest": false
  },
  "addInternalPolicy": {
    "path": "/mdp/policies/mdpconfig",
    "method": "PUT",
    "description": "Add internal policy from vmanage",
    "sdk_endpoint": "mdp",
    "sdk_method": "update",
    "use_rest": false
  },
  "retrieveMDPConfigObject": {
    "path": "/mdp/policies/mdpconfig/{deviceId}",
    "method": "GET",
    "description": "Retrieve MDP ConfigObject",
    "sdk_endpoint": "mdp",
    "sdk_method": "get",
    "use_rest": false
  },
  "retrieveMDPPolicies": {
    "path": "/mdp/policies/{nmsId}",
    "method": "GET",
    "description": "Retrieve MDP policies",
    "sdk_endpoint": "mdp",
    "sdk_method": "get",
    "use_rest": false
  },
  "updatePolicyStatus": {
    "path": "/mdp/policies/{nmsId}",
    "method": "PUT",
    "description": "update policy status",
    "sdk_endpoint": "mdp",
    "sdk_method": "update",
    "use_rest": false
  },
  "createDeviceVmanageConnectionList": {
    "path": "/messaging/device/vmanage",
    "method": "GET",
    "description": "Create device vManage connection list",
    "sdk_endpoint": "messaging",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCloudConnectorDomainAppRules": {
    "path": "/monitor/sdavccloudconnector/domain",
    "method": "GET",
    "description": "Get SD AVC App Rules based on Domain for O365",
    "sdk_endpoint": "monitor",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCloudConnectorIpAddressAppRules": {
    "path": "/monitor/sdavccloudconnector/ipaddress",
    "method": "GET",
    "description": "Get SD AVC App Rules based on IP Address for O365",
    "sdk_endpoint": "monitor",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWebexAppData": {
    "path": "/monitor/sdavccloudconnector/webex",
    "method": "GET",
    "description": "Get SD AVC App Rules for Webex",
    "sdk_endpoint": "monitor",
    "sdk_method": "get",
    "use_rest": false
  },
  "assignMslaLicensesToDevices": {
    "path": "/msla/assignLicenses",
    "method": "POST",
    "description": "Assign msla licenses to devices",
    "sdk_endpoint": "msla",
    "sdk_method": "create",
    "use_rest": false
  },
  "getmsladevices1": {
    "path": "/msla/devices",
    "method": "GET",
    "description": "Retrieve list of devices and their subscription information",
    "sdk_endpoint": "msla",
    "sdk_method": "get",
    "use_rest": false
  },
  "releaselicenses1": {
    "path": "/msla/devices",
    "method": "PUT",
    "description": "Release licenses assigned to the devices",
    "sdk_endpoint": "msla",
    "sdk_method": "update",
    "use_rest": false
  },
  "getlicensebyuuid1": {
    "path": "/msla/devices/{uuid}",
    "method": "GET",
    "description": "Get licenses associated to device",
    "sdk_endpoint": "msla",
    "sdk_method": "get",
    "use_rest": false
  },
  "getMslaLicenses": {
    "path": "/msla/licenses",
    "method": "GET",
    "description": "Get all the licenses",
    "sdk_endpoint": "msla",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLicensesCompliance": {
    "path": "/msla/licenses/compliance",
    "method": "GET",
    "description": "Retrieve list of devices and their subscription information",
    "sdk_endpoint": "msla",
    "sdk_method": "get",
    "use_rest": false
  },
  "synclicenses1": {
    "path": "/msla/licenses/sync",
    "method": "POST",
    "description": "Retrieve MSLA subscription/licenses",
    "sdk_endpoint": "msla",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDeviceDetailsForDashboard": {
    "path": "/msla/monitoring/licensedDeviceCount",
    "method": "GET",
    "description": "Get licenses associated to device",
    "sdk_endpoint": "msla",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLicenseDistributionDetails": {
    "path": "/msla/monitoring/licensedDistributionDetails",
    "method": "GET",
    "description": "Get all license distribution",
    "sdk_endpoint": "msla",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPackagingDistributionDetails": {
    "path": "/msla/monitoring/packagingDistributionDetails",
    "method": "GET",
    "description": "Get all license distribution",
    "sdk_endpoint": "msla",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAllTemplate": {
    "path": "/msla/template",
    "method": "GET",
    "description": "Retrieve all MSLA template",
    "sdk_endpoint": "msla",
    "sdk_method": "get",
    "use_rest": false
  },
  "getsubscriptions1": {
    "path": "/msla/template/licenses",
    "method": "POST",
    "description": "Retrieve MSLA subscription/licenses",
    "sdk_endpoint": "msla",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSubscriptions": {
    "path": "/msla/va/License",
    "method": "GET",
    "description": "Retrieve MSLA subscription/licenses",
    "sdk_endpoint": "msla",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAllCloudAccounts": {
    "path": "/multicloud/accounts",
    "method": "GET",
    "description": "Obtain all accounts for all clouds",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "validateAccountAdd": {
    "path": "/multicloud/accounts",
    "method": "POST",
    "description": "Add Cloud Account",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "getEdgeAccounts": {
    "path": "/multicloud/accounts/edge",
    "method": "GET",
    "description": "Get all Multicloud edge accounts",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "validateEdgeAccountAdd": {
    "path": "/multicloud/accounts/edge",
    "method": "POST",
    "description": "Authenticate edge account credentials",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "getEdgeAccountDetails": {
    "path": "/multicloud/accounts/edge/{accountId}",
    "method": "GET",
    "description": "Get edge account by account Id",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateEdgeAccount": {
    "path": "/multicloud/accounts/edge/{accountId}",
    "method": "PUT",
    "description": "Update Multicloud edge account",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteEdgeAccount": {
    "path": "/multicloud/accounts/edge/{accountId}",
    "method": "DELETE",
    "description": "Delete edge account",
    "sdk_endpoint": "multicloud",
    "sdk_method": "delete",
    "use_rest": false
  },
  "validateEdgeAccountUpdateCredentials": {
    "path": "/multicloud/accounts/edge/{accountId}/credentials",
    "method": "PUT",
    "description": "Update Multicloud edge account credential",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "getCloudAccountDetails": {
    "path": "/multicloud/accounts/{accountId}",
    "method": "GET",
    "description": "Obtain all accounts for all clouds",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateAccount": {
    "path": "/multicloud/accounts/{accountId}",
    "method": "PUT",
    "description": "Obtain all accounts for all clouds",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteAccount": {
    "path": "/multicloud/accounts/{accountId}",
    "method": "DELETE",
    "description": "Obtain all accounts for all clouds",
    "sdk_endpoint": "multicloud",
    "sdk_method": "delete",
    "use_rest": false
  },
  "validateAccountUpdateCredentials": {
    "path": "/multicloud/accounts/{accountId}/credentials",
    "method": "PUT",
    "description": "Update Cloud Account Credentials",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "auditDryRun": {
    "path": "/multicloud/audit",
    "method": "GET",
    "description": "Call an audit with dry run",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "audit": {
    "path": "/multicloud/audit",
    "method": "POST",
    "description": "Call an audit",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "getEdgeBillingAccounts": {
    "path": "/multicloud/billingaccounts/edge/{edgeType}/{edgeAccountId}",
    "method": "GET",
    "description": "Get Edge Billing Accounts",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCloudRoutersAndAttachments": {
    "path": "/multicloud/cloudRoutersAndAttachments",
    "method": "GET",
    "description": "Get all Cloud Routers and their Attachments",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCgws": {
    "path": "/multicloud/cloudgateway",
    "method": "GET",
    "description": "Get cloud gateways",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "createCgw": {
    "path": "/multicloud/cloudgateway",
    "method": "POST",
    "description": "Create cloud gateway",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "createCloudGatewayConfigGroup": {
    "path": "/multicloud/cloudgateway/config-group",
    "method": "POST",
    "description": "API to initiate a config group creation for a cloud gateway.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNvaSecurityRules": {
    "path": "/multicloud/cloudgateway/nvaSecurityRules/{cloudGatewayName}",
    "method": "GET",
    "description": "Get NVA Security Rules",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateNvaSecurityRules": {
    "path": "/multicloud/cloudgateway/nvaSecurityRules/{cloudGatewayName}",
    "method": "PUT",
    "description": "Update NVA Security Rules",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "getAzureNetworkVirtualAppliances": {
    "path": "/multicloud/cloudgateway/nvas",
    "method": "GET",
    "description": "Discover Azure Network Virtual Appliances",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAzureNvaSkuResources": {
    "path": "/multicloud/cloudgateway/nvasku",
    "method": "GET",
    "description": "Get Azure NVA SKUs",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCgwOrgResources": {
    "path": "/multicloud/cloudgateway/resource",
    "method": "GET",
    "description": "Discover Resource of CGW",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAzureResourceGroups": {
    "path": "/multicloud/cloudgateway/resourceGroups",
    "method": "GET",
    "description": "Discover Azure Resource Groups",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAzureVirtualHubs": {
    "path": "/multicloud/cloudgateway/vhubs",
    "method": "GET",
    "description": "Discover Azure Virtual HUBs",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAzureVirtualVnetsAttached": {
    "path": "/multicloud/cloudgateway/vnetsNoofAttached",
    "method": "GET",
    "description": "Discover Azure Virtual HUBs",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAzureVpnGateways": {
    "path": "/multicloud/cloudgateway/vpn-gateways",
    "method": "GET",
    "description": "Discover Azure Vpn Gateways",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAzureVirtualWans": {
    "path": "/multicloud/cloudgateway/vwans",
    "method": "GET",
    "description": "Discover Azure Virtual WANS",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCgwDetails": {
    "path": "/multicloud/cloudgateway/{cloudGatewayName}",
    "method": "GET",
    "description": "Get cloud gateway by name",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateCgw": {
    "path": "/multicloud/cloudgateway/{cloudGatewayName}",
    "method": "PUT",
    "description": "Update cloud gateway",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteCgw": {
    "path": "/multicloud/cloudgateway/{cloudGatewayName}",
    "method": "DELETE",
    "description": "Delete cloud gateway",
    "sdk_endpoint": "multicloud",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getCgwAttachedSites": {
    "path": "/multicloud/cloudgateway/{cloudGatewayName}/site",
    "method": "GET",
    "description": "Get sites attached to CGW",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "tunnelScaling": {
    "path": "/multicloud/cloudgateway/{cloudGatewayName}/site",
    "method": "PUT",
    "description": "Update tunnel scaling and accelerated vpn parameter for a branch endpoint",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "attachSites": {
    "path": "/multicloud/cloudgateway/{cloudGatewayName}/site",
    "method": "POST",
    "description": "Attach sites to Cloud Gateway",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "detachsites1": {
    "path": "/multicloud/cloudgateway/{cloudGatewayName}/site",
    "method": "DELETE",
    "description": "Detach sites from cloud gateway",
    "sdk_endpoint": "multicloud",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getAvailableDevicesOrByCGId": {
    "path": "/multicloud/cloudgateway/{cloudType}/gateways/device-chassis-numbers",
    "method": "GET",
    "description": "API to retrieve available devices or devices associated to a config group.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCloudGateways": {
    "path": "/multicloud/cloudgateways/{cloudType}",
    "method": "GET",
    "description": "Get sites with connectivity to the cloud by cloud type",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCgwCustomSettingDetails": {
    "path": "/multicloud/cloudgatewaysetting/{cloudGatewayName}",
    "method": "GET",
    "description": "Get cloud gateway custom setting by cloud gateway name",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCgwTypes": {
    "path": "/multicloud/cloudgatewaytype",
    "method": "GET",
    "description": "Get cloud gateway types for specified cloudType",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcloudconnectedsites1": {
    "path": "/multicloud/connected-sites/edge/{edgeType}",
    "method": "GET",
    "description": "Get sites with connectivity to the interconnect gateways by edge type",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCloudConnectedSites": {
    "path": "/multicloud/connected-sites/{cloudType}",
    "method": "GET",
    "description": "Get sites with connectivity to the cloud by cloud type",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEdgeConnectivityDetails": {
    "path": "/multicloud/connectivity/edge",
    "method": "GET",
    "description": "Get Interconnect Connectivity details",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateEdgeConnectivity": {
    "path": "/multicloud/connectivity/edge",
    "method": "PUT",
    "description": "Update Interconnect connectivity",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "createEdgeConnectivity": {
    "path": "/multicloud/connectivity/edge",
    "method": "POST",
    "description": "Create Interconnect connectivity",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "deleteEdgeConnectivity": {
    "path": "/multicloud/connectivity/edge/{connectionName}",
    "method": "DELETE",
    "description": "Delete Interconnect connectivity",
    "sdk_endpoint": "multicloud",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getEdgeConnectivityDetailByName": {
    "path": "/multicloud/connectivity/edge/{connectivityName}",
    "method": "GET",
    "description": "Get Interconnect Connectivity by name",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getConnectivityGateways": {
    "path": "/multicloud/connectivitygateway",
    "method": "GET",
    "description": "Get all Connectivity Gateways",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "createConnectivityGateway": {
    "path": "/multicloud/connectivitygateway",
    "method": "POST",
    "description": "Create Connectivity gateway",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "cleanUpAllConnectivityGatewaysInLocalDB": {
    "path": "/multicloud/connectivitygateway",
    "method": "DELETE",
    "description": "Delete all Connectivity Gateways in local DB",
    "sdk_endpoint": "multicloud",
    "sdk_method": "delete",
    "use_rest": false
  },
  "deleteConnectivityGateway": {
    "path": "/multicloud/connectivitygateway/{cloudProvider}/{connectivityGatewayName}",
    "method": "DELETE",
    "description": "Delete Connectivity Gateway",
    "sdk_endpoint": "multicloud",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getConnectivityGatewayCreationOptions": {
    "path": "/multicloud/connectivitygatewaycreationoptions",
    "method": "GET",
    "description": "Get connectivity gateway creation options",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCwanCoreNetworkPolicy": {
    "path": "/multicloud/corenetworkpolicy",
    "method": "GET",
    "description": "Get AWS Cloudwan core network policy",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDashboardEdgeInfo": {
    "path": "/multicloud/dashboard/edge",
    "method": "GET",
    "description": "Get interconnect edge gateway dashboard info",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWanDevices": {
    "path": "/multicloud/device",
    "method": "GET",
    "description": "Get available WAN edge devices",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceLinks": {
    "path": "/multicloud/devicelink/edge",
    "method": "GET",
    "description": "Get Device Links",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateDeviceLink": {
    "path": "/multicloud/devicelink/edge",
    "method": "PUT",
    "description": "Update Device Link",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "createDeviceLink": {
    "path": "/multicloud/devicelink/edge",
    "method": "POST",
    "description": "Create Device Link",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDlPortSpeed": {
    "path": "/multicloud/devicelink/edge/portspeed/{edgeType}",
    "method": "GET",
    "description": "Get supported port speed for Device Link",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "deleteDeviceLink": {
    "path": "/multicloud/devicelink/edge/{deviceLinkName}",
    "method": "DELETE",
    "description": "Delete Device Link",
    "sdk_endpoint": "multicloud",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getDeviceLinkMetroSpeed": {
    "path": "/multicloud/devicelink/metroSpeed/edge",
    "method": "POST",
    "description": "Get Device Link Metro Speed based on device link config",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "getclouddevices1": {
    "path": "/multicloud/devices/edge/{edgeType}",
    "method": "GET",
    "description": "Get cloud devices by cloud type",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCloudDevices": {
    "path": "/multicloud/devices/{cloudType}",
    "method": "GET",
    "description": "Get cloud devices by cloud type",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEdgeWanDevices": {
    "path": "/multicloud/edge/{edgeType}/device",
    "method": "GET",
    "description": "Get available WAN edge devices",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getIcgws": {
    "path": "/multicloud/gateway/edge",
    "method": "GET",
    "description": "Get Interconnect Gateways",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "createIcgw": {
    "path": "/multicloud/gateway/edge",
    "method": "POST",
    "description": "Create Interconnect Gateway",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "getIcgwCustomSettingDetails": {
    "path": "/multicloud/gateway/edge/setting/{edgeGatewayName}",
    "method": "GET",
    "description": "Get Interconnect Gateway custom setting by Interconnect Gateway name",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getIcgwTypes": {
    "path": "/multicloud/gateway/edge/types",
    "method": "GET",
    "description": "Get Interconnect Gateway type for specified Edge Provider",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getIcgwDetails": {
    "path": "/multicloud/gateway/edge/{edgeGatewayName}",
    "method": "GET",
    "description": "Get Interconnect Gateway by name",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateIcgw": {
    "path": "/multicloud/gateway/edge/{edgeGatewayName}",
    "method": "PUT",
    "description": "Update Interconnect Gateway",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteIcgw": {
    "path": "/multicloud/gateway/edge/{edgeGatewayName}",
    "method": "DELETE",
    "description": "Delete Interconnect Gateway",
    "sdk_endpoint": "multicloud",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getEdgeGateways": {
    "path": "/multicloud/gateways/edge/{edgeType}",
    "method": "GET",
    "description": "Get sites with connectivity to the interconnect gateways by edge type",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getHostVpcs": {
    "path": "/multicloud/hostvpc",
    "method": "GET",
    "description": "Get all Host VPCs",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getVpcTags": {
    "path": "/multicloud/hostvpc/tags",
    "method": "GET",
    "description": "Get VPC Tags",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "editTag": {
    "path": "/multicloud/hostvpc/tags",
    "method": "PUT",
    "description": "Edit VPCs for a Tag",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "hostVpcTagging": {
    "path": "/multicloud/hostvpc/tags",
    "method": "POST",
    "description": "Tag a VPC",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "rebalanceVnets": {
    "path": "/multicloud/hostvpc/tags/rebalanceVnets",
    "method": "POST",
    "description": "Tag a VPC",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "unTag": {
    "path": "/multicloud/hostvpc/tags/{tagName}",
    "method": "DELETE",
    "description": "Delete a Tag",
    "sdk_endpoint": "multicloud",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSupportedEdgeImageNames": {
    "path": "/multicloud/imagename/edge",
    "method": "GET",
    "description": "Get Edge provider supported images",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSupportedInstanceSize": {
    "path": "/multicloud/instancesize",
    "method": "GET",
    "description": "Get Transit VPC supported size",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSupportedEdgeInstanceSize": {
    "path": "/multicloud/instancesize/edge",
    "method": "GET",
    "description": "Get Edge provider supported size",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getInterconnectAccounts": {
    "path": "/multicloud/interconnect/accounts",
    "method": "GET",
    "description": "API to retrieve Interconnect provider accounts.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "addInterconnectAccount": {
    "path": "/multicloud/interconnect/accounts",
    "method": "POST",
    "description": "API to associate an Interconnect provider account to vManage.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "getInterconnectAccount": {
    "path": "/multicloud/interconnect/accounts/{interconnect-account-id}",
    "method": "GET",
    "description": "API to retrieve associated Interconnect provider account details by id.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateInterconnectAccount": {
    "path": "/multicloud/interconnect/accounts/{interconnect-account-id}",
    "method": "PUT",
    "description": "API to edit associated Interconnect provider account name and description.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteInterconnectAccount": {
    "path": "/multicloud/interconnect/accounts/{interconnect-account-id}",
    "method": "DELETE",
    "description": "API to disassociate Interconnect provider account from vManage.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "delete",
    "use_rest": false
  },
  "updateInterconnectAccountCredentials": {
    "path": "/multicloud/interconnect/accounts/{interconnect-account-id}/credentials",
    "method": "PUT",
    "description": "API to edit associated Interconnect provider account credentials.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "getAuditReport": {
    "path": "/multicloud/interconnect/audit",
    "method": "GET",
    "description": "API to generate audit report for resources.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getGoogleCloudRouterAndAttachments": {
    "path": "/multicloud/interconnect/cloud/{cloud-type}/accounts/{cloud-account-id}/gcr-and-attachments",
    "method": "GET",
    "description": "API to get Google Cloud Router and Attachments.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAwsTransitGateways": {
    "path": "/multicloud/interconnect/cloud/{cloud-type}/accounts/{cloud-account-id}/transit-gateways",
    "method": "GET",
    "description": "API to retrieve AWS Transit Gateways.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAzVirtualHubs": {
    "path": "/multicloud/interconnect/cloud/{cloud-type}/accounts/{cloud-account-id}/vhubs",
    "method": "GET",
    "description": "API to retrieve Azure Virtual Hubs.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAzVirtualWans": {
    "path": "/multicloud/interconnect/cloud/{cloud-type}/accounts/{cloud-account-id}/vwans",
    "method": "GET",
    "description": "API to retrieve Azure Virtual Wans.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "createAzVirtualWan": {
    "path": "/multicloud/interconnect/cloud/{cloud-type}/accounts/{cloud-account-id}/vwans",
    "method": "POST",
    "description": "API to create an Azure Virtual Wan..",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "deleteAzVirtualWan": {
    "path": "/multicloud/interconnect/cloud/{cloud-type}/accounts/{cloud-account-id}/vwans/{vwan-name}",
    "method": "DELETE",
    "description": "API to delete an Azure Virtual Wan.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getCloudConnectivityGateways": {
    "path": "/multicloud/interconnect/cloud/{cloud-type}/cloud-connectivity-gateways",
    "method": "GET",
    "description": "API to retrieve all Cloud Connectivity Gateways.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "addCloudConnectivityGateway": {
    "path": "/multicloud/interconnect/cloud/{cloud-type}/cloud-connectivity-gateways",
    "method": "POST",
    "description": "API to create a Cloud Connectivity Gateway such as Direct Connect Gateway, Express Route Circuit or Google Cloud routers.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "deleteCloudConnectivityGateways": {
    "path": "/multicloud/interconnect/cloud/{cloud-type}/cloud-connectivity-gateways",
    "method": "DELETE",
    "description": "API to delete Cloud Connectivity Gateways by type.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getCloudConnectivityGatewayCreateOptions": {
    "path": "/multicloud/interconnect/cloud/{cloud-type}/cloud-connectivity-gateways/create-options",
    "method": "GET",
    "description": "API to retrieve Cloud Connectivity Gateway create options.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "deleteCloudConnectivityGateway": {
    "path": "/multicloud/interconnect/cloud/{cloud-type}/cloud-connectivity-gateways/{connectivity-gateway-name}",
    "method": "DELETE",
    "description": "API to delete a Cloud Connectivity Gateway.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getInterconnectColors": {
    "path": "/multicloud/interconnect/colors/{tunnel-type}",
    "method": "GET",
    "description": "API to retrieve supported Colors for Interconnect tunnel type.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getInterconnectOnRampGatewayConnections": {
    "path": "/multicloud/interconnect/connectivity/cloud-onramp-gateway-connections",
    "method": "GET",
    "description": "API to retrieve all Interconnect OnRamp gateway connection.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "createInterconnectOnRampGatewayConnection": {
    "path": "/multicloud/interconnect/connectivity/cloud-onramp-gateway-connections",
    "method": "POST",
    "description": "API to create an Interconnect OnRamp gateway connection.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "getInterconnectOnRampGatewayConnection": {
    "path": "/multicloud/interconnect/connectivity/cloud-onramp-gateway-connections/{connection-name}",
    "method": "GET",
    "description": "API to retrieve a specific Interconnect OnRamp gateway connection.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateInterconnectOnRampGatewayConnection": {
    "path": "/multicloud/interconnect/connectivity/cloud-onramp-gateway-connections/{connection-name}",
    "method": "PUT",
    "description": "API to update an Interconnect OnRamp gateway connection.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteInterconnectOnRampGatewayConnection": {
    "path": "/multicloud/interconnect/connectivity/cloud-onramp-gateway-connections/{connection-name}",
    "method": "DELETE",
    "description": "API to delete an Interconnect OnRamp gateway connection.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getInterconnectMappingTags": {
    "path": "/multicloud/interconnect/connectivity/connections/tags",
    "method": "GET",
    "description": "API to retrieve configured Interconnect host VPC/VNET mapping tags.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getInterconnectDeviceLinks": {
    "path": "/multicloud/interconnect/connectivity/device-links",
    "method": "GET",
    "description": "API to retrieve Interconnect provider Device-Link.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "addInterconnectDeviceLink": {
    "path": "/multicloud/interconnect/connectivity/device-links",
    "method": "POST",
    "description": "API to create a Device-Link in vManage.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "getInterconnectDeviceLink": {
    "path": "/multicloud/interconnect/connectivity/device-links/{device-link-name}",
    "method": "GET",
    "description": "API to retrieve Interconnect provider Device-Link.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateInterconnectDeviceLink": {
    "path": "/multicloud/interconnect/connectivity/device-links/{device-link-name}",
    "method": "PUT",
    "description": "API to update a Device-Link in vManage.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteInterconnectDeviceLink": {
    "path": "/multicloud/interconnect/connectivity/device-links/{device-link-name}",
    "method": "DELETE",
    "description": "API to Delete Interconnect provider Device-Link.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getInterconnectCrossConnections": {
    "path": "/multicloud/interconnect/connectivity/virtual-cross-connections",
    "method": "GET",
    "description": "API to retrieve all exisiting Interconnect virtual cross connections.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "createInterconnectCrossConnection": {
    "path": "/multicloud/interconnect/connectivity/virtual-cross-connections",
    "method": "POST",
    "description": "API to create an Interconnect virtual cross connection on an Interconnect Gateway at an Interconnect Provider.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "getInterconnectCrossConnection": {
    "path": "/multicloud/interconnect/connectivity/virtual-cross-connections/{connection-name}",
    "method": "GET",
    "description": "API to retrieve an exisiting Interconnect virtual cross connection.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateInterconnectCrossConnection": {
    "path": "/multicloud/interconnect/connectivity/virtual-cross-connections/{connection-name}",
    "method": "PUT",
    "description": "API to update a virtual cross connection connection on an Interconnect Gateway at an Interconnect Provider.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteInterconnectCrossConnection": {
    "path": "/multicloud/interconnect/connectivity/virtual-cross-connections/{connection-name}",
    "method": "DELETE",
    "description": "API to delete an Interconnect virtual cross connection at an Interconnect provider.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getInterconnectVirtualNetworkConnections": {
    "path": "/multicloud/interconnect/connectivity/virtual-network-connections",
    "method": "GET",
    "description": "API to retrieve all exisiting Interconnect virtual network connections.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "createInterconenctVirtualNetworkConnection": {
    "path": "/multicloud/interconnect/connectivity/virtual-network-connections",
    "method": "POST",
    "description": "API to create a Interconnect virtual network connection between virtual network Tags and OnRamp gateway connection.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "getInterconnectVirtualNetworkConnection": {
    "path": "/multicloud/interconnect/connectivity/virtual-network-connections/{connection-name}",
    "method": "GET",
    "description": "API to retrieve an exisiting Interconnect Interconnect virtual network connection.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateInterconnectVirtualNetworkConnection": {
    "path": "/multicloud/interconnect/connectivity/virtual-network-connections/{connection-name}",
    "method": "PUT",
    "description": "API to update a virtual network connection between virtual network Tags and onRamp gateway connection.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteInterconnectVirtualNetworkConnection": {
    "path": "/multicloud/interconnect/connectivity/virtual-network-connections/{connection-name}",
    "method": "DELETE",
    "description": "API to delete an Interconnect virtual network connection.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getInterconnectDashboard": {
    "path": "/multicloud/interconnect/dashboard",
    "method": "GET",
    "description": "API to retrieve Multicloud Interconnect dashboard view.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getInterconnectLicenses": {
    "path": "/multicloud/interconnect/entitlement/licenses",
    "method": "GET",
    "description": "API to retrieve Interconnect licences",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getInterconnectGateways": {
    "path": "/multicloud/interconnect/gateways",
    "method": "GET",
    "description": "API to retrieve all Interconnect Gateways from vManage.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "createInterconnectGateway": {
    "path": "/multicloud/interconnect/gateways",
    "method": "POST",
    "description": "API to create an Intercoonect gateway in an Interconnect provider.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "createInterconnectGatewayConfigGroup": {
    "path": "/multicloud/interconnect/gateways/config-group",
    "method": "POST",
    "description": "API to initiate a config group creation for an Interconnect gateway.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "getInterconnectGatewayImageNames": {
    "path": "/multicloud/interconnect/gateways/image-names",
    "method": "GET",
    "description": "API to retrieve Interconnect Gateway software image versions supported by an Interconnect Provider.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getInterconnectGatewayInstanceSizes": {
    "path": "/multicloud/interconnect/gateways/instance-sizes",
    "method": "GET",
    "description": "API to retrieve Interconnect Gateway instance sizes supported by an  Interconnect provider.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "pushInterconnectGatewayConfig": {
    "path": "/multicloud/interconnect/gateways/push-config",
    "method": "POST",
    "description": "API to initiate a configuration push for an Interconnect gateway.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "getInterconnetGatewayTypes": {
    "path": "/multicloud/interconnect/gateways/types",
    "method": "GET",
    "description": "API to retrieve the supported Interconnect Gateway solution types.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getInterconnectGateway": {
    "path": "/multicloud/interconnect/gateways/{interconnect-gateway-name}",
    "method": "GET",
    "description": "API to retrieve the Interconnect Gateway Information from vManage.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateInterconnectGateway": {
    "path": "/multicloud/interconnect/gateways/{interconnect-gateway-name}",
    "method": "PUT",
    "description": "API to update the Interconnect Gateway Information in vManage.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteInterconnectGateway": {
    "path": "/multicloud/interconnect/gateways/{interconnect-gateway-name}",
    "method": "DELETE",
    "description": "API to delete an Interconnect Gateway from an Interconnect provider.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getInterconnectGatewayCustomSettings": {
    "path": "/multicloud/interconnect/gateways/{interconnect-gateway-name}/settings",
    "method": "GET",
    "description": "API to retrieve the custom settings specified for an Interconnect Gateway",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getInterconnectIpTransit": {
    "path": "/multicloud/interconnect/ip-transit",
    "method": "GET",
    "description": "API to retrieve Interconnect ip transit in MB supported by an  Interconnect provider.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getInterconnectServiceSwPkg": {
    "path": "/multicloud/interconnect/service-sw-package",
    "method": "GET",
    "description": "API to retrieve the Interconnect Services Sw Package Types Information from vManage.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getInterconnectServices": {
    "path": "/multicloud/interconnect/services",
    "method": "GET",
    "description": "API to retrieve the Interconnect Services Information from vManage.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getInterconnectGlobalSettings": {
    "path": "/multicloud/interconnect/settings/global",
    "method": "GET",
    "description": "API to retrieve global settings for an Interconnect provider type.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateInterconnectGlobalSettings": {
    "path": "/multicloud/interconnect/settings/global",
    "method": "PUT",
    "description": "API to update global settings for an Interconnect provider.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "addInterconnectGlobalSettings": {
    "path": "/multicloud/interconnect/settings/global",
    "method": "POST",
    "description": "API to add global settings for an Interconnect provider.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "getInterconnectSshKeys": {
    "path": "/multicloud/interconnect/sshkeys",
    "method": "GET",
    "description": "Get ssh keys for Interconnect provider.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getInterconnectTypes": {
    "path": "/multicloud/interconnect/types",
    "method": "GET",
    "description": "API to retrieve list of supported Interconnect provider Types.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAllInterconnectWidgets": {
    "path": "/multicloud/interconnect/widget",
    "method": "GET",
    "description": "API to retrieve all Interconnect widgets.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getInterconnectBillingAccounts": {
    "path": "/multicloud/interconnect/{interconnect-type}/accounts/{interconnect-account-id}/billing-accounts",
    "method": "GET",
    "description": "API to retrieve billing accounts for an Interconnect provider type and account.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getInterconnectPartnerPorts": {
    "path": "/multicloud/interconnect/{interconnect-type}/accounts/{interconnect-account-id}/cloud/{cloud-type}/connectivity/connections/partner-ports",
    "method": "GET",
    "description": "API to retrieve supported partner regions for an Interconnect provider.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getInterconnectPortSpeeds": {
    "path": "/multicloud/interconnect/{interconnect-type}/accounts/{interconnect-account-id}/connectivity/connections/{connection-type}/port-speeds",
    "method": "GET",
    "description": "API to retrieve supported port speeds for an Interconnect connectivity.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getInterconnectLocationInfo": {
    "path": "/multicloud/interconnect/{interconnect-type}/accounts/{interconnect-account-id}/locations",
    "method": "GET",
    "description": "API to retrieve list of available regions for an Interconnect provider and account.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateInterconnectLocationInfo": {
    "path": "/multicloud/interconnect/{interconnect-type}/accounts/{interconnect-account-id}/locations",
    "method": "PUT",
    "description": "API to retrieve and update the available regions for an Interconnect provider and account.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteInterconnectLocationInfo": {
    "path": "/multicloud/interconnect/{interconnect-type}/accounts/{interconnect-account-id}/locations",
    "method": "DELETE",
    "description": "API to delete the stored regions for an Interconnect provider and account from vManage.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getInterconnectConfigGroupTopology": {
    "path": "/multicloud/interconnect/{interconnect-type}/config-group/{config-group-id}/topology",
    "method": "GET",
    "description": "API to retrieve current Multicloud Interconnect topology for the Config Group.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateInterconnectConfigGroupTopology": {
    "path": "/multicloud/interconnect/{interconnect-type}/config-group/{config-group-id}/topology",
    "method": "PUT",
    "description": "API to update current Multicloud Interconnect topology for the Config Group.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "getInterconnectDeviceLinkMetroSpeed": {
    "path": "/multicloud/interconnect/{interconnect-type}/connectivity/device-links/metro-speed",
    "method": "POST",
    "description": "API to get metro speed for Device-Link by Device-Link Configuration.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "getInterconnectDeviceLinkPortSpeeds": {
    "path": "/multicloud/interconnect/{interconnect-type}/connectivity/device-links/port-speeds",
    "method": "GET",
    "description": "API to get supported port speeds for Device-Link by Interconnect provider.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getavailabledevicesorbycgid1": {
    "path": "/multicloud/interconnect/{interconnect-type}/gateways/device-chassis-numbers",
    "method": "GET",
    "description": "API to retrieve available devices or devices associated to a config group.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getInterconnectGatewayDevices": {
    "path": "/multicloud/interconnect/{interconnect-type}/gateways/devices",
    "method": "GET",
    "description": "API to retrieve available Interconnect Gateway devices.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "deleteAllInterconnectLocationInfo": {
    "path": "/multicloud/interconnect/{interconnect-type}/locations",
    "method": "DELETE",
    "description": "API to delete the stored regions for an Interconnect provider type from vManage.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getMonitoringInterconnectConnectedSites": {
    "path": "/multicloud/interconnect/{interconnect-type}/monitoring/connected-sites",
    "method": "GET",
    "description": "API to retrieve Interconnect devices by Interconnect type for monitoring.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getMonitoringInterconnectDevices": {
    "path": "/multicloud/interconnect/{interconnect-type}/monitoring/devices",
    "method": "GET",
    "description": "API to retrieve Interconnect devices by Interconnect type for monitoring.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getMonitoringInterconnectGateways": {
    "path": "/multicloud/interconnect/{interconnect-type}/monitoring/gateways",
    "method": "GET",
    "description": "API to retrieve Interconnect gateways by Interconnect type for monitoring.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getInterconnectWidget": {
    "path": "/multicloud/interconnect/{interconnect-type}/widget",
    "method": "GET",
    "description": "API to retrieve an Interconnect widget for an Interconnect type.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWanInterfaceColors": {
    "path": "/multicloud/interfacecolor",
    "method": "GET",
    "description": "Get WAN interface colors",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLicenses": {
    "path": "/multicloud/license/edge",
    "method": "GET",
    "description": "Get License Info for Edge Gateways/Connections",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEdgeLocationsInfo": {
    "path": "/multicloud/locations/edge/{edgeType}",
    "method": "GET",
    "description": "Get Edge Locations",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "deleteedgeaccount1": {
    "path": "/multicloud/locations/edge/{edgeType}",
    "method": "DELETE",
    "description": "Delete edge account",
    "sdk_endpoint": "multicloud",
    "sdk_method": "delete",
    "use_rest": false
  },
  "updateEdgeLocationsInfo": {
    "path": "/multicloud/locations/edge/{edgeType}/accountId/{accountId}",
    "method": "PUT",
    "description": "Update Edge Locations",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "getSupportedLoopbackCgwColors": {
    "path": "/multicloud/loopbackCGWColor/edge",
    "method": "GET",
    "description": "Get Edge Loopback CGW supported colors",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSupportedLoopbackTransportColors": {
    "path": "/multicloud/loopbacktransportcolor/edge",
    "method": "GET",
    "description": "Get Edge Loopback Tunnel supported colors",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getMappingMatrix": {
    "path": "/multicloud/map",
    "method": "GET",
    "description": "Get Mapping details for cloudType",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "processMapping": {
    "path": "/multicloud/map",
    "method": "POST",
    "description": "Enable Mapping for cloudType",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDefaultMappingValues": {
    "path": "/multicloud/map/defaults",
    "method": "GET",
    "description": "Get default mapping values",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getMappingStatus": {
    "path": "/multicloud/map/status",
    "method": "GET",
    "description": "Get mapping status",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getMappingSummary": {
    "path": "/multicloud/map/summary",
    "method": "GET",
    "description": "Get mapping summary",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getMappingTags": {
    "path": "/multicloud/map/tags",
    "method": "GET",
    "description": "Get cloud gateway types for specified cloudType",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEdgeMappingTags": {
    "path": "/multicloud/map/tags/edge",
    "method": "GET",
    "description": "Get default Interconnect mapping tag values",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getMappingVpns": {
    "path": "/multicloud/map/vpns",
    "method": "GET",
    "description": "Get default mapping values",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCgwAssociatedMappings": {
    "path": "/multicloud/mapping/{cloudType}",
    "method": "GET",
    "description": "Get associated mappings to the CGW",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPartnerPorts": {
    "path": "/multicloud/partnerports/edge",
    "method": "GET",
    "description": "Get partner ports",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPortSpeed": {
    "path": "/multicloud/portSpeed/edge/{edgeType}/{edgeAccountId}/{connectivityType}",
    "method": "GET",
    "description": "Get supported port speed",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "pushCgwCfg": {
    "path": "/multicloud/pushCgwConfig",
    "method": "POST",
    "description": "Push configuration to devices of CGW",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "getCloudRegions": {
    "path": "/multicloud/regions",
    "method": "GET",
    "description": "Obtain all supported Cloud Service Provider (CSP) types",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEdgeGlobalSettings": {
    "path": "/multicloud/settings/edge/global",
    "method": "GET",
    "description": "Get edge global settings",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateEdgeGlobalSettings": {
    "path": "/multicloud/settings/edge/global",
    "method": "PUT",
    "description": "Update edge global settings for Edge provider",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "addEdgeGlobalSettings": {
    "path": "/multicloud/settings/edge/global",
    "method": "POST",
    "description": "Add global settings for Edge provider",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "getGlobalSettings": {
    "path": "/multicloud/settings/global",
    "method": "GET",
    "description": "Get global settings",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateGlobalSettings": {
    "path": "/multicloud/settings/global",
    "method": "PUT",
    "description": "Update global settings",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "addGlobalSettings": {
    "path": "/multicloud/settings/global",
    "method": "POST",
    "description": "Add global settings",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSites": {
    "path": "/multicloud/site",
    "method": "GET",
    "description": "Get available sites",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSshKeyList": {
    "path": "/multicloud/sshkeys",
    "method": "GET",
    "description": "Get ssh keyList for cloud type",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery30": {
    "path": "/multicloud/statistics/interface/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filter. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSupportedSoftwareImageList": {
    "path": "/multicloud/swimages",
    "method": "GET",
    "description": "Get software image list",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "telemetry": {
    "path": "/multicloud/telemetry",
    "method": "POST",
    "description": "Reports telemetry data",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "getTunnelNames": {
    "path": "/multicloud/tunnels/{cloudType}",
    "method": "GET",
    "description": "Get the tunnels for cloudType",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCloudTypes": {
    "path": "/multicloud/types",
    "method": "GET",
    "description": "Obtain all supported Cloud Service Provider (CSP) types",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEdgeTypes": {
    "path": "/multicloud/types/edge",
    "method": "GET",
    "description": "Get edge types",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getVHubs": {
    "path": "/multicloud/vhubs",
    "method": "GET",
    "description": "Get Virtual Hubs",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "createVirtualWan": {
    "path": "/multicloud/vwan",
    "method": "POST",
    "description": "Create Virtual WAN",
    "sdk_endpoint": "multicloud",
    "sdk_method": "create",
    "use_rest": false
  },
  "deleteVirtualWan": {
    "path": "/multicloud/vwan/{cloudProvider}/{vWanName}",
    "method": "DELETE",
    "description": "Delete Virtual Wan",
    "sdk_endpoint": "multicloud",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getVWans": {
    "path": "/multicloud/vwans",
    "method": "GET",
    "description": "Get Virtual Wans",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAllCloudWidgets": {
    "path": "/multicloud/widget",
    "method": "GET",
    "description": "Get All cloud widgets",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAllEdgeWidgets": {
    "path": "/multicloud/widget/edge",
    "method": "GET",
    "description": "Get All Interconnect Edge widgets",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEdgeWidget": {
    "path": "/multicloud/widget/edge/{edgeType}",
    "method": "GET",
    "description": "Get Interconnect Edge widget by edge type",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCloudWidget": {
    "path": "/multicloud/widget/{cloudType}",
    "method": "GET",
    "description": "Get cloud widget by cloud type",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "getMultiCloudConfigGroupTopology": {
    "path": "/multicloud/{cloudType}/config-group/{config-group-id}/topology",
    "method": "GET",
    "description": "API to retrieve current Multicloud MultiCloud topology for the Config Group.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateMultiCloudConfigGroupTopology": {
    "path": "/multicloud/{cloudType}/config-group/{config-group-id}/topology",
    "method": "PUT",
    "description": "API to update current MultiCloud topology for the Config Group.",
    "sdk_endpoint": "multicloud",
    "sdk_method": "update",
    "use_rest": false
  },
  "getVmanageControlStatus": {
    "path": "/network/connectionssummary",
    "method": "GET",
    "description": "Retrieve vManage control status",
    "sdk_endpoint": "network",
    "sdk_method": "get",
    "use_rest": false
  },
  "getRebootCount": {
    "path": "/network/issues/rebootcount",
    "method": "GET",
    "description": "Retrieve reboot count",
    "sdk_endpoint": "network",
    "sdk_method": "get",
    "use_rest": false
  },
  "getNetworkIssuesSummary": {
    "path": "/network/issues/summary",
    "method": "GET",
    "description": "Retrieve network issues summary",
    "sdk_endpoint": "network",
    "sdk_method": "get",
    "use_rest": false
  },
  "getNetworkStatusSummary": {
    "path": "/network/status",
    "method": "GET",
    "description": "Retrieve network status summary",
    "sdk_endpoint": "network",
    "sdk_method": "get",
    "use_rest": false
  },
  "getNetworkDesign": {
    "path": "/networkdesign",
    "method": "GET",
    "description": "Get existing network design",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "get",
    "use_rest": false
  },
  "editNetworkDesign": {
    "path": "/networkdesign",
    "method": "PUT",
    "description": "Edit network segment",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "update",
    "use_rest": false
  },
  "createNetworkDesign": {
    "path": "/networkdesign",
    "method": "POST",
    "description": "Create network design",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "create",
    "use_rest": false
  },
  "pushNetworkDesign": {
    "path": "/networkdesign/attachment",
    "method": "POST",
    "description": "Attach network design",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "create",
    "use_rest": false
  },
  "getCircuits": {
    "path": "/networkdesign/circuit",
    "method": "GET",
    "description": "Get network circuits",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "get",
    "use_rest": false
  },
  "createCircuit": {
    "path": "/networkdesign/circuit",
    "method": "POST",
    "description": "Create network circuits",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "create",
    "use_rest": false
  },
  "deleteCircuit": {
    "path": "/networkdesign/circuit/{id}",
    "method": "DELETE",
    "description": "Delete network circuits",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getGlobalParameters": {
    "path": "/networkdesign/global/parameters",
    "method": "GET",
    "description": "Get global parameter templates",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "get",
    "use_rest": false
  },
  "getGlobalTemplate": {
    "path": "/networkdesign/global/template/{templateId}",
    "method": "GET",
    "description": "Get global template",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "get",
    "use_rest": false
  },
  "editGlobalTemplate": {
    "path": "/networkdesign/global/template/{templateId}",
    "method": "PUT",
    "description": "Edit global template",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "update",
    "use_rest": false
  },
  "acquireEditLock": {
    "path": "/networkdesign/lock/edit",
    "method": "POST",
    "description": "Acquire edit lock",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "create",
    "use_rest": false
  },
  "runMyTest": {
    "path": "/networkdesign/mytest/{name}",
    "method": "GET",
    "description": "Get all device templates for this feature template",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "get",
    "use_rest": false
  },
  "pushDeviceProfileTemplate": {
    "path": "/networkdesign/profile/attachment/{profileId}",
    "method": "POST",
    "description": "Attach to device profile",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDeviceProfileFeatureTemplateList": {
    "path": "/networkdesign/profile/feature",
    "method": "GET",
    "description": "Generate device profile template list",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "get",
    "use_rest": false
  },
  "acquireAttachLock": {
    "path": "/networkdesign/profile/lock/{profileId}",
    "method": "POST",
    "description": "Get the service profile config for a given device profile id",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDeviceProfileConfigStatus": {
    "path": "/networkdesign/profile/status",
    "method": "GET",
    "description": "Get device profile configuration status",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceProfileConfigStatusByProfileId": {
    "path": "/networkdesign/profile/status/{profileId}",
    "method": "GET",
    "description": "Get device profile configuration status by profile Id",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceProfileTaskCount": {
    "path": "/networkdesign/profile/task/count",
    "method": "GET",
    "description": "Get device profile configuration task count",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceProfileTaskStatus": {
    "path": "/networkdesign/profile/task/status",
    "method": "GET",
    "description": "Get device profile configuration task status",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceProfileTaskStatusByProfileId": {
    "path": "/networkdesign/profile/task/status/{profileId}",
    "method": "GET",
    "description": "Get device profile configuration status by profile Id",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "get",
    "use_rest": false
  },
  "generateProfileTemplateList": {
    "path": "/networkdesign/profile/template",
    "method": "GET",
    "description": "Generate profile template list",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceProfileTemplate": {
    "path": "/networkdesign/profile/template/{templateId}",
    "method": "GET",
    "description": "Get device profile template",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "get",
    "use_rest": false
  },
  "editDeviceProfileTemplate": {
    "path": "/networkdesign/profile/template/{templateId}",
    "method": "PUT",
    "description": "Edit device profile template",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "update",
    "use_rest": false
  },
  "getServiceProfileConfig": {
    "path": "/networkdesign/serviceProfileConfig/{profileId}",
    "method": "GET",
    "description": "Get the service profile config for a given device profile id",
    "sdk_endpoint": "networkdesign",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateNotificationRule": {
    "path": "/notifications/rule",
    "method": "PUT",
    "description": "Update notification rule",
    "sdk_endpoint": "notifications",
    "sdk_method": "update",
    "use_rest": false
  },
  "createNotificationRule": {
    "path": "/notifications/rule",
    "method": "POST",
    "description": "Add notification rule",
    "sdk_endpoint": "notifications",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNotificationRule": {
    "path": "/notifications/rules",
    "method": "GET",
    "description": "Get all rules or specific notification rule by its Id",
    "sdk_endpoint": "notifications",
    "sdk_method": "get",
    "use_rest": false
  },
  "deleteNotificationRule": {
    "path": "/notifications/rules",
    "method": "DELETE",
    "description": "Delete notification rule",
    "sdk_endpoint": "notifications",
    "sdk_method": "delete",
    "use_rest": false
  },
  "deleteDevices": {
    "path": "/onboard/delete-devices",
    "method": "POST",
    "description": "Delete Manual Onboard Device details",
    "sdk_endpoint": "onboard",
    "sdk_method": "create",
    "use_rest": false
  },
  "addDevices": {
    "path": "/onboard/details",
    "method": "POST",
    "description": "Add Manual Onboard Device details",
    "sdk_endpoint": "onboard",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDevices": {
    "path": "/onboard/devices",
    "method": "GET",
    "description": "GET Manual Onboard Device details",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_settings",
    "sdk_method": "get_devices",
    "use_rest": false
  },
  "manualOnboardDevices": {
    "path": "/onboard/devices",
    "method": "POST",
    "description": "Manual Onboard added Device details",
    "sdk_endpoint": "onboard",
    "sdk_method": "create",
    "use_rest": false
  },
  "oauthAccess": {
    "path": "/opentaccase/authcode",
    "method": "GET",
    "description": "Gets Access Token for SSO Logjn",
    "sdk_endpoint": "opentaccase",
    "sdk_method": "get",
    "use_rest": false
  },
  "getClientID": {
    "path": "/opentaccase/getClientID",
    "method": "GET",
    "description": "Gets vManage Client ID",
    "sdk_endpoint": "opentaccase",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCall": {
    "path": "/opentaccase/scmwidget/{var}",
    "method": "GET",
    "description": "Proxy API for SCM Widget",
    "sdk_endpoint": "opentaccase",
    "sdk_method": "get",
    "use_rest": false
  },
  "postCall": {
    "path": "/opentaccase/scmwidget/{var}",
    "method": "POST",
    "description": "Prxoy API for SCM Widget",
    "sdk_endpoint": "opentaccase",
    "sdk_method": "create",
    "use_rest": false
  },
  "deleteCall": {
    "path": "/opentaccase/scmwidget/{var}",
    "method": "DELETE",
    "description": "Proxy API for SCM Widget",
    "sdk_endpoint": "opentaccase",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getPartners": {
    "path": "/partner",
    "method": "GET",
    "description": "Get all NMS partners",
    "sdk_endpoint": "partner",
    "sdk_method": "get",
    "use_rest": false
  },
  "getACIDefinitions": {
    "path": "/partner/aci/policy",
    "method": "GET",
    "description": "Get ACI definitions",
    "sdk_endpoint": "partner",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDscpMappings": {
    "path": "/partner/aci/policy/dscpmapping/{partnerId}",
    "method": "GET",
    "description": "Get DSCP policy",
    "sdk_endpoint": "partner",
    "sdk_method": "get",
    "use_rest": false
  },
  "createDscpMappings": {
    "path": "/partner/aci/policy/dscpmapping/{partnerId}",
    "method": "POST",
    "description": "Create an ACI definition entry",
    "sdk_endpoint": "partner",
    "sdk_method": "create",
    "use_rest": false
  },
  "deleteDscpMappings": {
    "path": "/partner/aci/policy/dscpmapping/{partnerId}",
    "method": "DELETE",
    "description": "Delete DSCP mapping",
    "sdk_endpoint": "partner",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getevents1": {
    "path": "/partner/aci/policy/events/{partnerId}",
    "method": "GET",
    "description": "Get ACI events",
    "sdk_endpoint": "partner",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDataPrefixMappings": {
    "path": "/partner/aci/policy/prefixmapping/{partnerId}",
    "method": "GET",
    "description": "Get prefix mapping",
    "sdk_endpoint": "partner",
    "sdk_method": "get",
    "use_rest": false
  },
  "setDataPrefixMappings": {
    "path": "/partner/aci/policy/prefixmapping/{partnerId}",
    "method": "POST",
    "description": "Create data prefix mapping",
    "sdk_endpoint": "partner",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDataPrefixSequences": {
    "path": "/partner/aci/policy/sequences",
    "method": "GET",
    "description": "Get data prefix sequence",
    "sdk_endpoint": "partner",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSDAConfig": {
    "path": "/partner/dnac/sda/config/{partnerId}",
    "method": "POST",
    "description": "Create SDA enabled device",
    "sdk_endpoint": "partner",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSDAEnabledDevices": {
    "path": "/partner/dnac/sda/device/{partnerId}",
    "method": "GET",
    "description": "Get SDA enabled devices",
    "sdk_endpoint": "partner",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceDetails": {
    "path": "/partner/dnac/sda/device/{partnerId}/{uuid}",
    "method": "GET",
    "description": "Get SDA enabled devices detail",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_inventory",
    "sdk_method": "get_device_details",
    "use_rest": false
  },
  "createSDAConfigFromNetconf": {
    "path": "/partner/dnac/sda/netconfconfig/{partnerId}",
    "method": "POST",
    "description": "Create SDA enabled device from Netconf",
    "sdk_endpoint": "partner",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSitesForPartner": {
    "path": "/partner/dnac/sda/site/{partnerId}",
    "method": "GET",
    "description": "Get SDA Sites for Partner",
    "sdk_endpoint": "partner",
    "sdk_method": "get",
    "use_rest": false
  },
  "getOverlayVPNList": {
    "path": "/partner/dnac/sda/vpn",
    "method": "GET",
    "description": "Get Overlay VPN list",
    "sdk_endpoint": "partner",
    "sdk_method": "get",
    "use_rest": false
  },
  "getVPNList": {
    "path": "/partner/vpn",
    "method": "GET",
    "description": "Get all VPNs",
    "sdk_endpoint": "partner",
    "sdk_method": "get",
    "use_rest": false
  },
  "pushNetconfConfigs": {
    "path": "/partner/wcm/netconf/{nmsId}",
    "method": "POST",
    "description": "Push device configs",
    "sdk_endpoint": "partner",
    "sdk_method": "create",
    "use_rest": false
  },
  "getPartnersByPartnerType": {
    "path": "/partner/{partnerType}",
    "method": "GET",
    "description": "Get NMS partners by partner type",
    "sdk_endpoint": "partner",
    "sdk_method": "get",
    "use_rest": false
  },
  "registerPartner": {
    "path": "/partner/{partnerType}",
    "method": "POST",
    "description": "Register NMS partner",
    "sdk_endpoint": "partner",
    "sdk_method": "create",
    "use_rest": false
  },
  "getPartnerDevices": {
    "path": "/partner/{partnerType}/map/{nmsId}",
    "method": "GET",
    "description": "List mapped devices for the partner",
    "sdk_endpoint": "partner",
    "sdk_method": "get",
    "use_rest": false
  },
  "mapDevices": {
    "path": "/partner/{partnerType}/map/{nmsId}",
    "method": "POST",
    "description": "Map devices for the partner",
    "sdk_endpoint": "partner",
    "sdk_method": "create",
    "use_rest": false
  },
  "unmapDevices": {
    "path": "/partner/{partnerType}/map/{nmsId}",
    "method": "DELETE",
    "description": "Unmap all devices for the partner",
    "sdk_endpoint": "partner",
    "sdk_method": "delete",
    "use_rest": false
  },
  "deleteDeviceMapping": {
    "path": "/partner/{partnerType}/unmap/{nmsId}",
    "method": "POST",
    "description": "Unmap a set of devices for the partner",
    "sdk_endpoint": "partner",
    "sdk_method": "create",
    "use_rest": false
  },
  "getPartner": {
    "path": "/partner/{partnerType}/{nmsId}",
    "method": "GET",
    "description": "Get NMS partners by partner type and Id",
    "sdk_endpoint": "partner",
    "sdk_method": "get",
    "use_rest": false
  },
  "updatePartner": {
    "path": "/partner/{partnerType}/{nmsId}",
    "method": "PUT",
    "description": "Update NMS partner details",
    "sdk_endpoint": "partner",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletePartner": {
    "path": "/partner/{partnerType}/{nmsId}",
    "method": "DELETE",
    "description": "Delete NMS partner",
    "sdk_endpoint": "partner",
    "sdk_method": "delete",
    "use_rest": false
  },
  "applyWaniRecommendation": {
    "path": "/policy/wani/recommendation/process",
    "method": "POST",
    "description": "Applies recommendations to a centralized policy",
    "sdk_endpoint": "policy",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSecureXRefreshToken": {
    "path": "/refreshtoken/{regionBaseUri}/{clientId}",
    "method": "GET",
    "description": "Get Access Token for SecureX Ribbon",
    "sdk_endpoint": "refreshtoken",
    "sdk_method": "get",
    "use_rest": false
  },
  "getResources": {
    "path": "/resourcepool/resource/vpn",
    "method": "GET",
    "description": "Get tenant device vpn resource",
    "sdk_endpoint": "resourcepool",
    "sdk_method": "get",
    "use_rest": false
  },
  "createResources": {
    "path": "/resourcepool/resource/vpn",
    "method": "PUT",
    "description": "Create Vpn resource pool and return tenant device vpn",
    "sdk_endpoint": "resourcepool",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteResources": {
    "path": "/resourcepool/resource/vpn",
    "method": "DELETE",
    "description": "Delete tenant device vpn and release the resource",
    "sdk_endpoint": "resourcepool",
    "sdk_method": "delete",
    "use_rest": false
  },
  "importScheduledBackup": {
    "path": "/restore/import",
    "method": "POST",
    "description": "Submit a previously backed up file and import the data and apply it to the configuraion database",
    "sdk_endpoint": "restore",
    "sdk_method": "create",
    "use_rest": false
  },
  "remoteImportBackup": {
    "path": "/restore/remoteimport",
    "method": "POST",
    "description": "Remote import backup from a remote URL and import the data and apply it to the configuraion database",
    "sdk_endpoint": "restore",
    "sdk_method": "create",
    "use_rest": false
  },
  "scheduleBackup": {
    "path": "/schedule/create",
    "method": "POST",
    "description": "create  backup scheduler config-db and statstics database with startDateTime and persist to config-db",
    "sdk_endpoint": "schedule",
    "sdk_method": "create",
    "use_rest": false
  },
  "listSchedules": {
    "path": "/schedule/list",
    "method": "GET",
    "description": "Get a schedule record for backup by scheduler id",
    "sdk_endpoint": "schedule",
    "sdk_method": "get",
    "use_rest": false
  },
  "getScheduleRecordForBackup": {
    "path": "/schedule/{schedulerId}",
    "method": "GET",
    "description": "Get a schedule record for backup by scheduler id",
    "sdk_endpoint": "schedule",
    "sdk_method": "get",
    "use_rest": false
  },
  "deleteSchedule": {
    "path": "/schedule/{schedulerId}",
    "method": "DELETE",
    "description": "Delete a schedule record for backup in vManage by scheduler id",
    "sdk_endpoint": "schedule",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getExtendedApplications": {
    "path": "/sdavc/cloud-sourced",
    "method": "GET",
    "description": "returns all cloud sourced application",
    "sdk_endpoint": "sdavc",
    "sdk_method": "get",
    "use_rest": false
  },
  "saveExtendedApplications": {
    "path": "/sdavc/cloud-sourced",
    "method": "POST",
    "description": "",
    "sdk_endpoint": "sdavc",
    "sdk_method": "create",
    "use_rest": false
  },
  "approveExtendedApplications": {
    "path": "/sdavc/cloud-sourced/approve",
    "method": "POST",
    "description": "",
    "sdk_endpoint": "sdavc",
    "sdk_method": "create",
    "use_rest": false
  },
  "complianceWithExtendedApplications": {
    "path": "/sdavc/cloud-sourced/compliance",
    "method": "POST",
    "description": "",
    "sdk_endpoint": "sdavc",
    "sdk_method": "create",
    "use_rest": false
  },
  "applicationComplianceWithExtendedApplications": {
    "path": "/sdavc/cloud-sourced/compliance/application",
    "method": "POST",
    "description": "",
    "sdk_endpoint": "sdavc",
    "sdk_method": "create",
    "use_rest": false
  },
  "getCloudConnector": {
    "path": "/sdavc/cloudconnector",
    "method": "GET",
    "description": "Get SD_AVC Cloud Connector Config",
    "sdk_endpoint": "admin_tech.session.endpoints.sdavc_cloud_connector",
    "sdk_method": "get_cloud_connector",
    "use_rest": false
  },
  "disableCloudConnector": {
    "path": "/sdavc/cloudconnector",
    "method": "PUT",
    "description": "Disable SD_AVC Cloud Connector",
    "sdk_endpoint": "admin_tech.session.endpoints.sdavc_cloud_connector",
    "sdk_method": "disable_cloud_connector",
    "use_rest": false
  },
  "enableCloudConnector": {
    "path": "/sdavc/cloudconnector",
    "method": "POST",
    "description": "Enable SD_AVC Cloud Connector",
    "sdk_endpoint": "admin_tech.session.endpoints.sdavc_cloud_connector",
    "sdk_method": "enable_cloud_connector",
    "use_rest": false
  },
  "getCloudConnectorStatus": {
    "path": "/sdavc/cloudconnector/status",
    "method": "GET",
    "description": "Get SD_AVC Cloud Connector Status",
    "sdk_endpoint": "admin_tech.session.endpoints.sdavc_cloud_connector",
    "sdk_method": "get_cloud_connector_status",
    "use_rest": false
  },
  "getCustomApp": {
    "path": "/sdavc/customapps",
    "method": "GET",
    "description": "Displays the user-defined applications",
    "sdk_endpoint": "sdavc",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAllProtocolPacks": {
    "path": "/sdavc/protocol-pack",
    "method": "GET",
    "description": "Get all protocol packs details",
    "sdk_endpoint": "sdavc",
    "sdk_method": "get",
    "use_rest": false
  },
  "getBaseSystemPack": {
    "path": "/sdavc/protocol-pack/base",
    "method": "GET",
    "description": "Get all base protocol pack details",
    "sdk_endpoint": "sdavc",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAllSDAVCDevice": {
    "path": "/sdavc/protocol-pack/compliance/all-devices",
    "method": "GET",
    "description": "Get all device compliance details",
    "sdk_endpoint": "sdavc",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDefaultApplicationComplianceDetails": {
    "path": "/sdavc/protocol-pack/compliance/application",
    "method": "GET",
    "description": "Get default application name compliance details",
    "sdk_endpoint": "sdavc",
    "sdk_method": "get",
    "use_rest": false
  },
  "initiateApplicationComplianceCheck": {
    "path": "/sdavc/protocol-pack/compliance/application/initiate-compliance",
    "method": "POST",
    "description": "Initiate application name compliance task",
    "sdk_endpoint": "sdavc",
    "sdk_method": "create",
    "use_rest": false
  },
  "isApplicationComplianceDetected": {
    "path": "/sdavc/protocol-pack/compliance/application/is-compliance-detected",
    "method": "GET",
    "description": "Check if there is any Application Compliance detected in the system",
    "sdk_endpoint": "sdavc",
    "sdk_method": "get",
    "use_rest": false
  },
  "getApplicationComplianceStatus": {
    "path": "/sdavc/protocol-pack/compliance/application/status/{uuid}",
    "method": "GET",
    "description": "Get application name compliance task status",
    "sdk_endpoint": "sdavc",
    "sdk_method": "get",
    "use_rest": false
  },
  "getApplicationComplianceDetails": {
    "path": "/sdavc/protocol-pack/compliance/application/{uuid}",
    "method": "GET",
    "description": "Get application name compliance details for given task uuid",
    "sdk_endpoint": "sdavc",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCustomApplicationList": {
    "path": "/sdavc/protocol-pack/compliance/custom-application",
    "method": "GET",
    "description": "Get All Custom Applications",
    "sdk_endpoint": "sdavc",
    "sdk_method": "get",
    "use_rest": false
  },
  "getnoncompliantdevicesforprotocolpack1": {
    "path": "/sdavc/protocol-pack/compliance/device/noncompliant",
    "method": "POST",
    "description": "Get all non compliant devices for given protocol pack and selected device or entire network",
    "sdk_endpoint": "sdavc",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNonCompliantDevicesForProtocolPack": {
    "path": "/sdavc/protocol-pack/compliance/device/noncompliant/{protocolPackName}",
    "method": "GET",
    "description": "Get all non compliant devices for given protocol pack",
    "sdk_endpoint": "sdavc",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceComplianceStatus": {
    "path": "/sdavc/protocol-pack/compliance/device/status/{uuid}",
    "method": "GET",
    "description": "Get device compliance task status",
    "sdk_endpoint": "sdavc",
    "sdk_method": "get",
    "use_rest": false
  },
  "initiateDeviceCompliance": {
    "path": "/sdavc/protocol-pack/compliance/initiate-device-compliance",
    "method": "POST",
    "description": "Initiate device compliance task",
    "sdk_endpoint": "sdavc",
    "sdk_method": "create",
    "use_rest": false
  },
  "initiatePolicyCompliance": {
    "path": "/sdavc/protocol-pack/compliance/initiate-policy-compliance",
    "method": "POST",
    "description": "Initiate policy compliance task",
    "sdk_endpoint": "sdavc",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNewApplicationList": {
    "path": "/sdavc/protocol-pack/compliance/new-application/{deviceUUID}",
    "method": "GET",
    "description": "Get New Application List for given Device UUID",
    "sdk_endpoint": "sdavc",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCompliancePolicy": {
    "path": "/sdavc/protocol-pack/compliance/policy",
    "method": "GET",
    "description": "Get all policy compliance details",
    "sdk_endpoint": "sdavc",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPolicyComplianceStatus": {
    "path": "/sdavc/protocol-pack/compliance/policy/status/{uuid}",
    "method": "GET",
    "description": "Get policy compliance status",
    "sdk_endpoint": "sdavc",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDefaultSystemPack": {
    "path": "/sdavc/protocol-pack/default",
    "method": "GET",
    "description": "Get all default protocol pack details",
    "sdk_endpoint": "sdavc",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLatestSystemPack": {
    "path": "/sdavc/protocol-pack/latest",
    "method": "GET",
    "description": "Get current latest protocol pack details",
    "sdk_endpoint": "sdavc",
    "sdk_method": "get",
    "use_rest": false
  },
  "upgradeProtocolPack": {
    "path": "/sdavc/protocol-pack/maintenance/upgrade",
    "method": "POST",
    "description": "Deploy protocol pack to devices",
    "sdk_endpoint": "sdavc",
    "sdk_method": "create",
    "use_rest": false
  },
  "cancelScheduledDeployJob": {
    "path": "/sdavc/protocol-pack/maintenance/upgrade/cancel",
    "method": "POST",
    "description": "Cancel a Scheduled Deploy protocol pack job",
    "sdk_endpoint": "sdavc",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDeployJobStatus": {
    "path": "/sdavc/protocol-pack/maintenance/upgrade/status",
    "method": "GET",
    "description": "Get active deploy job status",
    "sdk_endpoint": "sdavc",
    "sdk_method": "get",
    "use_rest": false
  },
  "getdeployjobstatus1": {
    "path": "/sdavc/protocol-pack/maintenance/upgrade/status/{uuid}",
    "method": "GET",
    "description": "Get upgrade status for given Task UUID",
    "sdk_endpoint": "sdavc",
    "sdk_method": "get",
    "use_rest": false
  },
  "uploadProtocolPack": {
    "path": "/sdavc/protocol-pack/maintenance/upload",
    "method": "POST",
    "description": "Upload protocol pack to SDAVC",
    "sdk_endpoint": "sdavc",
    "sdk_method": "create",
    "use_rest": false
  },
  "cancelProtocolPackUpload": {
    "path": "/sdavc/protocol-pack/maintenance/upload/cancel/{uuid}",
    "method": "POST",
    "description": "Cancel or discard an uploaded protocol pack",
    "sdk_endpoint": "sdavc",
    "sdk_method": "create",
    "use_rest": false
  },
  "confirmProtocolPackUpload": {
    "path": "/sdavc/protocol-pack/maintenance/upload/confirm/{uuid}",
    "method": "POST",
    "description": "Confirm uploaded protocol pack",
    "sdk_endpoint": "sdavc",
    "sdk_method": "create",
    "use_rest": false
  },
  "getProtocolPackUploadStatus": {
    "path": "/sdavc/protocol-pack/maintenance/upload/status/{uuid}",
    "method": "GET",
    "description": "Get protocol pack upload status",
    "sdk_endpoint": "sdavc",
    "sdk_method": "get",
    "use_rest": false
  },
  "activateContainer": {
    "path": "/sdavc/task/{taskId}",
    "method": "POST",
    "description": "Activate container",
    "sdk_endpoint": "sdavc",
    "sdk_method": "create",
    "use_rest": false
  },
  "testLoadBalancer": {
    "path": "/sdavc/test",
    "method": "POST",
    "description": "Test SD_AVC load balancer",
    "sdk_endpoint": "sdavc",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSecurityDeviceHealth": {
    "path": "/security/device/health",
    "method": "GET",
    "description": "Get security device health",
    "sdk_endpoint": "security",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSecurityPolicyDeviceList": {
    "path": "/security/policy/devicelist",
    "method": "GET",
    "description": "Get security policy device list",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.security_template",
    "sdk_method": "get_security_policy_device_list",
    "use_rest": false
  },
  "getPostFwallByQuery": {
    "path": "/security/policy/fwall/device",
    "method": "POST",
    "description": "Get firewall devices list",
    "sdk_endpoint": "security",
    "sdk_method": "create",
    "use_rest": false
  },
  "getPostIPSAlertByQuery": {
    "path": "/security/policy/ips/device",
    "method": "POST",
    "description": "Get ips alert devices list",
    "sdk_endpoint": "security",
    "sdk_method": "create",
    "use_rest": false
  },
  "getPostUrlFilteringByQuery": {
    "path": "/security/policy/urlf/device",
    "method": "POST",
    "description": "Get url filtering devices list",
    "sdk_endpoint": "security",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSegments": {
    "path": "/segment",
    "method": "GET",
    "description": "Get network segments",
    "sdk_endpoint": "segment",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSegment": {
    "path": "/segment",
    "method": "POST",
    "description": "Create network segment",
    "sdk_endpoint": "segment",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSegment": {
    "path": "/segment/{id}",
    "method": "GET",
    "description": "Get network segment",
    "sdk_endpoint": "segment",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSegment": {
    "path": "/segment/{id}",
    "method": "PUT",
    "description": "Edit network segment",
    "sdk_endpoint": "segment",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSegment": {
    "path": "/segment/{id}",
    "method": "DELETE",
    "description": "Delete network segment",
    "sdk_endpoint": "segment",
    "sdk_method": "delete",
    "use_rest": false
  },
  "createserverinfo1": {
    "path": "/server/info",
    "method": "GET",
    "description": "Get Server info",
    "sdk_endpoint": "server",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDataChangeInfo": {
    "path": "/serverlongpoll/event/poll/{partnerId}",
    "method": "GET",
    "description": "Retrieve registration change information",
    "sdk_endpoint": "serverlongpoll",
    "sdk_method": "get",
    "use_rest": false
  },
  "showInfo": {
    "path": "/setting/configuration/webserver/certificate",
    "method": "GET",
    "description": "Retrieves Certificate Signing Request information",
    "sdk_endpoint": "admin_tech.session.endpoints.certificate_management_vmanage",
    "sdk_method": "show_info",
    "use_rest": false
  },
  "importCertificate": {
    "path": "/setting/configuration/webserver/certificate",
    "method": "PUT",
    "description": "Import a signed web server certificate",
    "sdk_endpoint": "admin_tech.session.endpoints.certificate_management_vmanage",
    "sdk_method": "import_certificate",
    "use_rest": false
  },
  "getCSR": {
    "path": "/setting/configuration/webserver/certificate",
    "method": "POST",
    "description": "Generate Certificate Signing Request",
    "sdk_endpoint": "setting",
    "sdk_method": "create",
    "use_rest": false
  },
  "getCertificate": {
    "path": "/setting/configuration/webserver/certificate/getcertificate",
    "method": "GET",
    "description": "Get certificate for alias server",
    "sdk_endpoint": "admin_tech.session.endpoints.certificate_management_vmanage",
    "sdk_method": "get_certificate",
    "use_rest": false
  },
  "getBanner": {
    "path": "/settings/banner",
    "method": "GET",
    "description": "Retrieve banner",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_settings",
    "sdk_method": "get_banner",
    "use_rest": false
  },
  "getSessionTimout": {
    "path": "/settings/clientSessionTimeout",
    "method": "GET",
    "description": "Get client session timeout",
    "sdk_endpoint": "settings",
    "sdk_method": "get",
    "use_rest": false
  },
  "createAnalyticsDataFile": {
    "path": "/settings/configuration/analytics/dca",
    "method": "POST",
    "description": "Create analytics data file",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_settings",
    "sdk_method": "create_analytics_data_file",
    "use_rest": false
  },
  "getCertConfiguration": {
    "path": "/settings/configuration/certificate/{type}",
    "method": "GET",
    "description": "Retrieve certificate configuration value by type",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_settings",
    "sdk_method": "get_cert_configuration",
    "use_rest": false
  },
  "editCertConfiguration": {
    "path": "/settings/configuration/certificate/{type}",
    "method": "PUT",
    "description": "Update certificate configuration",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_settings",
    "sdk_method": "edit_cert_configuration",
    "use_rest": false
  },
  "newCertConfiguration": {
    "path": "/settings/configuration/certificate/{type}",
    "method": "POST",
    "description": "Add new certificate configuration",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_settings",
    "sdk_method": "new_cert_configuration",
    "use_rest": false
  },
  "getCloudxConfiguration": {
    "path": "/settings/configuration/cloudx",
    "method": "GET",
    "description": "Retrieve cloudx configuration value",
    "sdk_endpoint": "settings",
    "sdk_method": "get",
    "use_rest": false
  },
  "editCloudxConfiguration": {
    "path": "/settings/configuration/cloudx",
    "method": "PUT",
    "description": "Update cloudx configuration setting",
    "sdk_endpoint": "settings",
    "sdk_method": "update",
    "use_rest": false
  },
  "newCloudxConfiguration": {
    "path": "/settings/configuration/cloudx",
    "method": "POST",
    "description": "Add new cloudx configuration",
    "sdk_endpoint": "settings",
    "sdk_method": "create",
    "use_rest": false
  },
  "getGoogleMapKey": {
    "path": "/settings/configuration/googleMapKey",
    "method": "GET",
    "description": "Retrieve Google map key",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_settings",
    "sdk_method": "get_google_map_key",
    "use_rest": false
  },
  "getMaintenanceWindow": {
    "path": "/settings/configuration/maintenanceWindow",
    "method": "GET",
    "description": "Retrieve maintenance window",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_settings",
    "sdk_method": "get_maintenance_window",
    "use_rest": false
  },
  "getMicrosoftTelemetryConfiguration": {
    "path": "/settings/configuration/microsoftTelemetry",
    "method": "GET",
    "description": "Retrieve Microsoft telemetry configuration value",
    "sdk_endpoint": "settings",
    "sdk_method": "get",
    "use_rest": false
  },
  "editMicrosoftTelemetryConfiguration": {
    "path": "/settings/configuration/microsoftTelemetry",
    "method": "PUT",
    "description": "Update Microsoft telemetry configuration setting",
    "sdk_endpoint": "settings",
    "sdk_method": "update",
    "use_rest": false
  },
  "newMicrosoftTelemetryConfiguration": {
    "path": "/settings/configuration/microsoftTelemetry",
    "method": "POST",
    "description": "Add new Microsoft telemetry configuration",
    "sdk_endpoint": "settings",
    "sdk_method": "create",
    "use_rest": false
  },
  "getWaniConfiguration": {
    "path": "/settings/configuration/wani",
    "method": "GET",
    "description": "Retrieve wani configuration value",
    "sdk_endpoint": "settings",
    "sdk_method": "get",
    "use_rest": false
  },
  "editWaniConfiguration": {
    "path": "/settings/configuration/wani",
    "method": "PUT",
    "description": "Update wani configuration setting",
    "sdk_endpoint": "settings",
    "sdk_method": "update",
    "use_rest": false
  },
  "newWaniConfiguration": {
    "path": "/settings/configuration/wani",
    "method": "POST",
    "description": "Add new wani configuration",
    "sdk_endpoint": "settings",
    "sdk_method": "create",
    "use_rest": false
  },
  "getConfigurationBySettingType": {
    "path": "/settings/configuration/{type}",
    "method": "GET",
    "description": "Retrieve configuration value by type",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_settings",
    "sdk_method": "get_configuration_by_setting_type",
    "use_rest": false
  },
  "editConfiguration": {
    "path": "/settings/configuration/{type}",
    "method": "PUT",
    "description": "Update configuration setting",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_settings",
    "sdk_method": "edit_configuration",
    "use_rest": false
  },
  "newConfiguration": {
    "path": "/settings/configuration/{type}",
    "method": "POST",
    "description": "Add new certificate configuration",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_settings",
    "sdk_method": "new_configuration",
    "use_rest": false
  },
  "getPasswordPolicy": {
    "path": "/settings/passwordPolicy",
    "method": "GET",
    "description": "Retrieve password policy from global settings",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_settings",
    "sdk_method": "get_password_policy",
    "use_rest": false
  },
  "getSigDynamicDataCenterList": {
    "path": "/sig/datacenters/{type}/{tunneltype}",
    "method": "GET",
    "description": "The API to get all sig data center for given provider type",
    "sdk_endpoint": "sig",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSigDataCenterList": {
    "path": "/sig/datacenters/{type}/{tunneltype}/{devicetype}",
    "method": "GET",
    "description": "Get list of data centers for zscaler or umbrella",
    "sdk_endpoint": "sig",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSigGlobalCredentials": {
    "path": "/sig/sigGlobalCredentials/{featureTemplateType}",
    "method": "GET",
    "description": "Get sig global credentials",
    "sdk_endpoint": "sig",
    "sdk_method": "get",
    "use_rest": false
  },
  "getChildOrgs": {
    "path": "/sig/umbrella/childOrg/{type}",
    "method": "GET",
    "description": "Get the list of child org IDs given the type management or device",
    "sdk_endpoint": "sig",
    "sdk_method": "get",
    "use_rest": false
  },
  "sleauthenticate": {
    "path": "/smartLicensing/authenticate",
    "method": "POST",
    "description": "authenticate user for sle",
    "sdk_endpoint": "smartLicensing",
    "sdk_method": "create",
    "use_rest": false
  },
  "fetchAccounts": {
    "path": "/smartLicensing/fetchAccounts",
    "method": "GET",
    "description": "fetch sava for sle",
    "sdk_endpoint": "smartLicensing",
    "sdk_method": "get",
    "use_rest": false
  },
  "fetchreports1": {
    "path": "/smartLicensing/fetchAllSa",
    "method": "GET",
    "description": "fetch reports offline for sle",
    "sdk_endpoint": "smartLicensing",
    "sdk_method": "get",
    "use_rest": false
  },
  "fetchReports": {
    "path": "/smartLicensing/fetchReportsForSa",
    "method": "GET",
    "description": "fetch reports offline for sle",
    "sdk_endpoint": "smartLicensing",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSettings": {
    "path": "/smartLicensing/getUserSettings",
    "method": "GET",
    "description": "get settings",
    "sdk_endpoint": "smartLicensing",
    "sdk_method": "get",
    "use_rest": false
  },
  "syncLicenses": {
    "path": "/smartLicensing/syncLicenses",
    "method": "POST",
    "description": "get all licenses for sa/va",
    "sdk_endpoint": "smartLicensing",
    "sdk_method": "create",
    "use_rest": false
  },
  "checkGivenIpList": {
    "path": "/software/compliance/ip/origin/check",
    "method": "POST",
    "description": "Block IP based on list",
    "sdk_endpoint": "software",
    "sdk_method": "create",
    "use_rest": false
  },
  "getProxyCertOfEdge": {
    "path": "/sslproxy/certificate",
    "method": "GET",
    "description": "Get edge proxy certificate",
    "sdk_endpoint": "sslproxy",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateCertificate": {
    "path": "/sslproxy/certificate",
    "method": "PUT",
    "description": "Upload device certificate",
    "sdk_endpoint": "sslproxy",
    "sdk_method": "update",
    "use_rest": false
  },
  "addWANEdge": {
    "path": "/sslproxy/certificate/wanedge/{deviceId}",
    "method": "POST",
    "description": "Add SSL proxy wan edge",
    "sdk_endpoint": "sslproxy",
    "sdk_method": "create",
    "use_rest": false
  },
  "uploadCertificiates": {
    "path": "/sslproxy/certificates",
    "method": "POST",
    "description": "Upload device certificates",
    "sdk_endpoint": "sslproxy",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSslProxyCSR": {
    "path": "/sslproxy/csr",
    "method": "GET",
    "description": "Get SSL proxy CSR",
    "sdk_endpoint": "sslproxy",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAllDeviceCertificates": {
    "path": "/sslproxy/devicecertificates",
    "method": "POST",
    "description": "Get certificate for all cEdges",
    "sdk_endpoint": "sslproxy",
    "sdk_method": "create",
    "use_rest": false
  },
  "getAllDeviceCSR": {
    "path": "/sslproxy/devicecsr",
    "method": "POST",
    "description": "Get CSR for all cEdges",
    "sdk_endpoint": "sslproxy",
    "sdk_method": "create",
    "use_rest": false
  },
  "generateSslProxyCSR": {
    "path": "/sslproxy/generate/csr/sslproxy",
    "method": "POST",
    "description": "CSR request SSL proxy for edge",
    "sdk_endpoint": "sslproxy",
    "sdk_method": "create",
    "use_rest": false
  },
  "generateSSLProxyCSR": {
    "path": "/sslproxy/generate/vmanage/csr",
    "method": "POST",
    "description": "Generate CSR",
    "sdk_endpoint": "sslproxy",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSslProxyList": {
    "path": "/sslproxy/list",
    "method": "GET",
    "description": "Get SSL proxy certificate list",
    "sdk_endpoint": "sslproxy",
    "sdk_method": "get",
    "use_rest": false
  },
  "renewCertificate": {
    "path": "/sslproxy/renew",
    "method": "POST",
    "description": "Renew device certificate",
    "sdk_endpoint": "sslproxy",
    "sdk_method": "create",
    "use_rest": false
  },
  "revokeCertificate": {
    "path": "/sslproxy/revoke",
    "method": "POST",
    "description": "Revoke device certificate",
    "sdk_endpoint": "sslproxy",
    "sdk_method": "create",
    "use_rest": false
  },
  "revokeRenewCertificate": {
    "path": "/sslproxy/revokerenew",
    "method": "POST",
    "description": "Revoke and renew device certificate",
    "sdk_endpoint": "sslproxy",
    "sdk_method": "create",
    "use_rest": false
  },
  "getCertificateState": {
    "path": "/sslproxy/settings/certificate",
    "method": "GET",
    "description": "Get certificate state",
    "sdk_endpoint": "sslproxy",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEnterpriseCertificate": {
    "path": "/sslproxy/settings/enterprise/certificate",
    "method": "GET",
    "description": "Get enterprise certificate",
    "sdk_endpoint": "sslproxy",
    "sdk_method": "get",
    "use_rest": false
  },
  "setEnterpriseCert": {
    "path": "/sslproxy/settings/enterprise/certificate",
    "method": "POST",
    "description": "Configure enterprise certificate",
    "sdk_endpoint": "sslproxy",
    "sdk_method": "create",
    "use_rest": false
  },
  "getVManageEnterpriseRootCertificate": {
    "path": "/sslproxy/settings/enterprise/rootca",
    "method": "GET",
    "description": "Get vManage enterprise root certificate",
    "sdk_endpoint": "sslproxy",
    "sdk_method": "get",
    "use_rest": false
  },
  "setEnterpriseRootCaCert": {
    "path": "/sslproxy/settings/enterprise/rootca",
    "method": "POST",
    "description": "Set vManage enterprise root certificate",
    "sdk_endpoint": "sslproxy",
    "sdk_method": "create",
    "use_rest": false
  },
  "getvManageCertificate": {
    "path": "/sslproxy/settings/vmanage/certificate",
    "method": "GET",
    "description": "Get vManage intermediate certificate",
    "sdk_endpoint": "sslproxy",
    "sdk_method": "get",
    "use_rest": false
  },
  "setvManageintermediateCert": {
    "path": "/sslproxy/settings/vmanage/certificate",
    "method": "POST",
    "description": "Set vManage root certificate",
    "sdk_endpoint": "sslproxy",
    "sdk_method": "create",
    "use_rest": false
  },
  "getvManageCSR": {
    "path": "/sslproxy/settings/vmanage/csr",
    "method": "GET",
    "description": "Get vManage CSR",
    "sdk_endpoint": "sslproxy",
    "sdk_method": "get",
    "use_rest": false
  },
  "getvManageRootCA": {
    "path": "/sslproxy/settings/vmanage/rootca",
    "method": "GET",
    "description": "Get vManage root certificate",
    "sdk_endpoint": "sslproxy",
    "sdk_method": "get",
    "use_rest": false
  },
  "setvManageRootCA": {
    "path": "/sslproxy/settings/vmanage/rootca",
    "method": "POST",
    "description": "Set vManage root certificate",
    "sdk_endpoint": "sslproxy",
    "sdk_method": "create",
    "use_rest": false
  },
  "getStatisticType": {
    "path": "/statistics",
    "method": "GET",
    "description": "Get statistics types",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata13": {
    "path": "/statistics",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery14": {
    "path": "/statistics/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery14": {
    "path": "/statistics/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdata1": {
    "path": "/statistics/apphosting",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata1": {
    "path": "/statistics/apphosting",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery1": {
    "path": "/statistics/apphosting/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery1": {
    "path": "/statistics/apphosting/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdataascsv1": {
    "path": "/statistics/apphosting/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount2": {
    "path": "/statistics/apphosting/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost2": {
    "path": "/statistics/apphosting/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields2": {
    "path": "/statistics/apphosting/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata1": {
    "path": "/statistics/apphosting/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata1": {
    "path": "/statistics/apphosting/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields2": {
    "path": "/statistics/apphosting/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getStatDataRawData": {
    "path": "/statistics/apphostinginterface",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getStatsRawData": {
    "path": "/statistics/apphostinginterface",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getAggregationDataByQuery": {
    "path": "/statistics/apphostinginterface/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPostAggregationDataByQuery": {
    "path": "/statistics/apphostinginterface/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getStatDataRawDataAsCSV": {
    "path": "/statistics/apphostinginterface/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount1": {
    "path": "/statistics/apphostinginterface/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost1": {
    "path": "/statistics/apphostinginterface/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields1": {
    "path": "/statistics/apphostinginterface/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getStatsPaginationRawData": {
    "path": "/statistics/apphostinginterface/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPostStatsPaginationRawData": {
    "path": "/statistics/apphostinginterface/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields1": {
    "path": "/statistics/apphostinginterface/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdata2": {
    "path": "/statistics/approute",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata2": {
    "path": "/statistics/approute",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery2": {
    "path": "/statistics/approute/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery2": {
    "path": "/statistics/approute/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getPostAggregationAppDataByQuery9": {
    "path": "/statistics/approute/app-agg/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdataascsv2": {
    "path": "/statistics/approute/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getStatsAppRouteDeviceTunnelSummary": {
    "path": "/statistics/approute/device/tunnel/summary",
    "method": "GET",
    "description": "Get statistics for top applications per tunnel in a grid table",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getStatsAppRouteDeviceTunnels": {
    "path": "/statistics/approute/device/tunnels",
    "method": "GET",
    "description": "Get statistics for top applications per tunnel in a grid table",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getdoccount1": {
    "path": "/statistics/approute/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDocCountPost": {
    "path": "/statistics/approute/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getAppRouteFecAgg": {
    "path": "/statistics/approute/fec/aggregation",
    "method": "POST",
    "description": "Get aggregation data and fec recovery rate",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields3": {
    "path": "/statistics/approute/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getStatBulkRawData": {
    "path": "/statistics/approute/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPostStatBulkRawData": {
    "path": "/statistics/approute/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields3": {
    "path": "/statistics/approute/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getApprouteTloc": {
    "path": "/statistics/approute/tloc",
    "method": "POST",
    "description": "Get tloc",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getAppRouteTransportSummaryType": {
    "path": "/statistics/approute/transport/summary/{type}",
    "method": "GET",
    "description": "Get application-aware routing statistics summary from device",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppRouteTransportType": {
    "path": "/statistics/approute/transport/{type}",
    "method": "GET",
    "description": "Get application-aware routing statistics from device",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppRouteTunnelSummaryType": {
    "path": "/statistics/approute/tunnel/{type}/summary",
    "method": "GET",
    "description": "Get tunnel top statistics in as chart",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppRouteTunnelHealth": {
    "path": "/statistics/approute/tunnels/health/{type}",
    "method": "GET",
    "description": "Get tunnel health",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppRouteTunnelsSummaryType": {
    "path": "/statistics/approute/tunnels/summary/{type}",
    "method": "GET",
    "description": "Get tunnel top statistics from device",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppRouteTunnelType": {
    "path": "/statistics/approute/tunnels/{type}",
    "method": "GET",
    "description": "Get tunnel top statistics from device",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdata4": {
    "path": "/statistics/art",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata4": {
    "path": "/statistics/art",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery4": {
    "path": "/statistics/art/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery4": {
    "path": "/statistics/art/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdataascsv4": {
    "path": "/statistics/art/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount4": {
    "path": "/statistics/art/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost4": {
    "path": "/statistics/art/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields5": {
    "path": "/statistics/art/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata3": {
    "path": "/statistics/art/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata3": {
    "path": "/statistics/art/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields5": {
    "path": "/statistics/art/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdata5": {
    "path": "/statistics/bfd",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata5": {
    "path": "/statistics/bfd",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery5": {
    "path": "/statistics/bfd/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery5": {
    "path": "/statistics/bfd/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdataascsv5": {
    "path": "/statistics/bfd/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount5": {
    "path": "/statistics/bfd/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost5": {
    "path": "/statistics/bfd/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields6": {
    "path": "/statistics/bfd/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata4": {
    "path": "/statistics/bfd/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata4": {
    "path": "/statistics/bfd/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields6": {
    "path": "/statistics/bfd/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdata6": {
    "path": "/statistics/bridgeinterface",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata6": {
    "path": "/statistics/bridgeinterface",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery6": {
    "path": "/statistics/bridgeinterface/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery6": {
    "path": "/statistics/bridgeinterface/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdataascsv6": {
    "path": "/statistics/bridgeinterface/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount6": {
    "path": "/statistics/bridgeinterface/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost6": {
    "path": "/statistics/bridgeinterface/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields7": {
    "path": "/statistics/bridgeinterface/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata5": {
    "path": "/statistics/bridgeinterface/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata5": {
    "path": "/statistics/bridgeinterface/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields7": {
    "path": "/statistics/bridgeinterface/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdata7": {
    "path": "/statistics/bridgemac",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata7": {
    "path": "/statistics/bridgemac",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery7": {
    "path": "/statistics/bridgemac/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery7": {
    "path": "/statistics/bridgemac/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdataascsv7": {
    "path": "/statistics/bridgemac/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount7": {
    "path": "/statistics/bridgemac/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost7": {
    "path": "/statistics/bridgemac/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields8": {
    "path": "/statistics/bridgemac/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata6": {
    "path": "/statistics/bridgemac/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata6": {
    "path": "/statistics/bridgemac/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields8": {
    "path": "/statistics/bridgemac/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdata9": {
    "path": "/statistics/cflowd",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata9": {
    "path": "/statistics/cflowd",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery9": {
    "path": "/statistics/cflowd/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery9": {
    "path": "/statistics/cflowd/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "createFlowsGrid": {
    "path": "/statistics/cflowd/applications",
    "method": "GET",
    "description": "Generate cflowd flows list in a grid table",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "createFlowssummary": {
    "path": "/statistics/cflowd/applications/summary",
    "method": "GET",
    "description": "Generate cflowd flows list in a grid table",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdataascsv9": {
    "path": "/statistics/cflowd/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "createFlowDeviceData": {
    "path": "/statistics/cflowd/device/applications",
    "method": "GET",
    "description": "Generate cflowd flows list in a grid table",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount9": {
    "path": "/statistics/cflowd/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost9": {
    "path": "/statistics/cflowd/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields10": {
    "path": "/statistics/cflowd/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata8": {
    "path": "/statistics/cflowd/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata8": {
    "path": "/statistics/cflowd/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields10": {
    "path": "/statistics/cflowd/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdata10": {
    "path": "/statistics/cloudx",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata10": {
    "path": "/statistics/cloudx",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery10": {
    "path": "/statistics/cloudx/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery10": {
    "path": "/statistics/cloudx/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdataascsv10": {
    "path": "/statistics/cloudx/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount10": {
    "path": "/statistics/cloudx/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost10": {
    "path": "/statistics/cloudx/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields11": {
    "path": "/statistics/cloudx/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata9": {
    "path": "/statistics/cloudx/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata9": {
    "path": "/statistics/cloudx/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields11": {
    "path": "/statistics/cloudx/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "startStatsCollection": {
    "path": "/statistics/collect",
    "method": "GET",
    "description": "Start stats collect",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "generateStatsCollectThreadReport": {
    "path": "/statistics/collect/thread/status",
    "method": "GET",
    "description": "Get stats collect thread report",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "resetStatsCollection": {
    "path": "/statistics/collection/reset/{processQueue}",
    "method": "GET",
    "description": "Reset stats collect thread report",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPostCryptoDataByQuery": {
    "path": "/statistics/cryptovpn/common",
    "method": "POST",
    "description": "Get crypto vpn common data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getPostCryptoDMVPNDataByQuery": {
    "path": "/statistics/cryptovpn/dmvpn",
    "method": "POST",
    "description": "Get crypto vpn dmvpn data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdataascsv13": {
    "path": "/statistics/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "enableStatisticsDemoMode": {
    "path": "/statistics/demomode",
    "method": "GET",
    "description": "Enable statistic demo mode",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdata16": {
    "path": "/statistics/device",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata17": {
    "path": "/statistics/device",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery18": {
    "path": "/statistics/device/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery20": {
    "path": "/statistics/device/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdataascsv16": {
    "path": "/statistics/device/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount15": {
    "path": "/statistics/device/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost16": {
    "path": "/statistics/device/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields17": {
    "path": "/statistics/device/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata14": {
    "path": "/statistics/device/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata14": {
    "path": "/statistics/device/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields18": {
    "path": "/statistics/device/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceHealthHistory": {
    "path": "/statistics/devicehealth/history",
    "method": "GET",
    "description": "Get all device health history",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceHealthOverview": {
    "path": "/statistics/devicehealth/overview/{type}",
    "method": "GET",
    "description": "Get all device health overview",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount12": {
    "path": "/statistics/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost13": {
    "path": "/statistics/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "fetchList": {
    "path": "/statistics/download/{processType}/fetchvManageList",
    "method": "GET",
    "description": "",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "download": {
    "path": "/statistics/download/{processType}/file/{fileType}/{queue}/{deviceIp}/{token}/{fileName}",
    "method": "GET",
    "description": "Downloading stats file",
    "sdk_endpoint": "admin_tech",
    "sdk_method": "download",
    "use_rest": false
  },
  "downloadList": {
    "path": "/statistics/download/{processType}/filelist",
    "method": "POST",
    "description": "Downloading list of stats file",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDPIStatsRawData": {
    "path": "/statistics/dpi",
    "method": "GET",
    "description": "Get DPI stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDPIStatsRawDataPost": {
    "path": "/statistics/dpi",
    "method": "POST",
    "description": "Get DPI stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getAggAppDataPost": {
    "path": "/statistics/dpi/agg-app/aggregation",
    "method": "POST",
    "description": "Get raw aggregated data and display applications with the highest utilization for a device",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDPIStatsAggregationData": {
    "path": "/statistics/dpi/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDPIStatsAggregationDataPost": {
    "path": "/statistics/dpi/aggregation",
    "method": "POST",
    "description": "Get raw aggregated data and display applications with the highest utilization for a device",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getAggAppFlows": {
    "path": "/statistics/dpi/applications",
    "method": "GET",
    "description": "Get detailed DPI application flows list in a grid table",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAggAppFlowsSummary": {
    "path": "/statistics/dpi/applications/summary",
    "method": "GET",
    "description": "Get detailed DPI application flows summary",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDPIStatsRawDataAsCSV": {
    "path": "/statistics/dpi/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDPIDeviceAppUniqueFlowCount": {
    "path": "/statistics/dpi/device/application/flowcount",
    "method": "GET",
    "description": "Get application flow count per tunnel",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDPIDeviceAppAggregationData": {
    "path": "/statistics/dpi/device/applications",
    "method": "GET",
    "description": "Get DPI application flows device aggregation data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDPIDeviceAppDetails": {
    "path": "/statistics/dpi/device/details/applications",
    "method": "GET",
    "description": "Get detailed DPI device and application list",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDPIStatsCount": {
    "path": "/statistics/dpi/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDPIStatsCountPost": {
    "path": "/statistics/dpi/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDPIFields": {
    "path": "/statistics/dpi/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDPIStatsPaginationRawData": {
    "path": "/statistics/dpi/page",
    "method": "GET",
    "description": "Get DPI stats pagination raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDPIStatsPaginationRawDataPost": {
    "path": "/statistics/dpi/page",
    "method": "POST",
    "description": "Get DPI stats pagination raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDPIStatsAggregationDataForPacketDup": {
    "path": "/statistics/dpi/pktdup/aggregation",
    "method": "POST",
    "description": "Get time series aggregation data for packet duplication for an application over TLOCs if available",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDPIQueryFields": {
    "path": "/statistics/dpi/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDPIStatsAggregationDataForFec": {
    "path": "/statistics/dpi/recovery/aggregation",
    "method": "POST",
    "description": "Get aggregation data and fec recovery rate if available",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdata8": {
    "path": "/statistics/eiolte",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata8": {
    "path": "/statistics/eiolte",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery8": {
    "path": "/statistics/eiolte/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery8": {
    "path": "/statistics/eiolte/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "cellularAggregation": {
    "path": "/statistics/eiolte/cellularAggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdataascsv8": {
    "path": "/statistics/eiolte/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount8": {
    "path": "/statistics/eiolte/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost8": {
    "path": "/statistics/eiolte/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields9": {
    "path": "/statistics/eiolte/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata7": {
    "path": "/statistics/eiolte/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata7": {
    "path": "/statistics/eiolte/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields9": {
    "path": "/statistics/eiolte/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "uniqueAggregation": {
    "path": "/statistics/eiolte/uniqueAggregation",
    "method": "POST",
    "description": "Get unique aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdata19": {
    "path": "/statistics/endpointTracker",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata20": {
    "path": "/statistics/endpointTracker",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery21": {
    "path": "/statistics/endpointTracker/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery23": {
    "path": "/statistics/endpointTracker/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdataascsv19": {
    "path": "/statistics/endpointTracker/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount18": {
    "path": "/statistics/endpointTracker/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost19": {
    "path": "/statistics/endpointTracker/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields20": {
    "path": "/statistics/endpointTracker/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata17": {
    "path": "/statistics/endpointTracker/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata17": {
    "path": "/statistics/endpointTracker/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields21": {
    "path": "/statistics/endpointTracker/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatafields14": {
    "path": "/statistics/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdata14": {
    "path": "/statistics/flowlog",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getStatDataRawDataPost": {
    "path": "/statistics/flowlog",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery28": {
    "path": "/statistics/flowlog/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery31": {
    "path": "/statistics/flowlog/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdataascsv26": {
    "path": "/statistics/flowlog/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getFlowlogCount": {
    "path": "/statistics/flowlog/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getFlowlogCountPost": {
    "path": "/statistics/flowlog/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getFlowlogFields": {
    "path": "/statistics/flowlog/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata24": {
    "path": "/statistics/flowlog/page",
    "method": "GET",
    "description": "Get stats pagination raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getStatsPaginationRawDataPost": {
    "path": "/statistics/flowlog/page",
    "method": "POST",
    "description": "Get stats pagination raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getFlowlogQueryFields": {
    "path": "/statistics/flowlog/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdata24": {
    "path": "/statistics/fwall",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata25": {
    "path": "/statistics/fwall",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery26": {
    "path": "/statistics/fwall/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery28": {
    "path": "/statistics/fwall/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdataascsv24": {
    "path": "/statistics/fwall/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount23": {
    "path": "/statistics/fwall/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost24": {
    "path": "/statistics/fwall/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields25": {
    "path": "/statistics/fwall/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata22": {
    "path": "/statistics/fwall/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata22": {
    "path": "/statistics/fwall/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields26": {
    "path": "/statistics/fwall/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdata11": {
    "path": "/statistics/interface",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata11": {
    "path": "/statistics/interface",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery11": {
    "path": "/statistics/interface/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery11": {
    "path": "/statistics/interface/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getPostAggregationAppDataByQuery": {
    "path": "/statistics/interface/app-agg/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getBandwidthDistribution": {
    "path": "/statistics/interface/ccapacity/distribution",
    "method": "GET",
    "description": "Get bandwidth distribution",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdataascsv11": {
    "path": "/statistics/interface/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCount10": {
    "path": "/statistics/interface/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost11": {
    "path": "/statistics/interface/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields12": {
    "path": "/statistics/interface/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatbulkrawdata1": {
    "path": "/statistics/interface/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatbulkrawdata1": {
    "path": "/statistics/interface/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields12": {
    "path": "/statistics/interface/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getStatisticsPerInterface": {
    "path": "/statistics/interface/type",
    "method": "GET",
    "description": "Get statistics per interface",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdata22": {
    "path": "/statistics/ipsalert",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata23": {
    "path": "/statistics/ipsalert",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery24": {
    "path": "/statistics/ipsalert/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery26": {
    "path": "/statistics/ipsalert/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdataascsv22": {
    "path": "/statistics/ipsalert/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount21": {
    "path": "/statistics/ipsalert/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost22": {
    "path": "/statistics/ipsalert/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields23": {
    "path": "/statistics/ipsalert/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata20": {
    "path": "/statistics/ipsalert/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata20": {
    "path": "/statistics/ipsalert/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields24": {
    "path": "/statistics/ipsalert/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getaggregationdatabyquery3": {
    "path": "/statistics/nwa",
    "method": "POST",
    "description": "Get network availability raw data based on input query and filters.",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getpostaggregationdatabyquery3": {
    "path": "/statistics/nwa/aggregation",
    "method": "POST",
    "description": "Get network availability aggregated data based on input query and filters.",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDetailAggregationDataByQuery": {
    "path": "/statistics/nwa/details",
    "method": "POST",
    "description": "Get network availability aggregated data with details based on input query and filters.",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getQueueEntries": {
    "path": "/statistics/on-demand/queue",
    "method": "GET",
    "description": "gets current on-demand queue entries",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "createQueueEntry": {
    "path": "/statistics/on-demand/queue",
    "method": "POST",
    "description": "Create on-demand troubleshooting queue entry",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getQueueProperties": {
    "path": "/statistics/on-demand/queue/properties",
    "method": "GET",
    "description": "gets current size of on-demand queue",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateQueueEntry": {
    "path": "/statistics/on-demand/queue/{entryId}",
    "method": "PUT",
    "description": "Updates on-demand troubleshooting queue entry",
    "sdk_endpoint": "statistics",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteQueueEntry": {
    "path": "/statistics/on-demand/queue/{entryId}",
    "method": "DELETE",
    "description": "removes on-demand queue entry",
    "sdk_endpoint": "statistics",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getstatspaginationrawdata11": {
    "path": "/statistics/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata11": {
    "path": "/statistics/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getpostaggregationdatabyquery15": {
    "path": "/statistics/perfmon/aggregation",
    "method": "POST",
    "description": "Get one application one site line chart data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getApplicationHeatMapDetail": {
    "path": "/statistics/perfmon/application/heatmap/detail",
    "method": "GET",
    "description": "Get single applicaiton site health detail in a time range",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getApplicationSiteHealth": {
    "path": "/statistics/perfmon/application/site/health",
    "method": "POST",
    "description": "Get one application health for one site",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getApplicationSitesHealth": {
    "path": "/statistics/perfmon/application/sites/health",
    "method": "GET",
    "description": "Get one application health for all sites",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getApplicationsSiteHealth": {
    "path": "/statistics/perfmon/applications/site/health",
    "method": "GET",
    "description": "Get all applications health for one site",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getApplicationsSitesHealth": {
    "path": "/statistics/perfmon/applications/sites/health",
    "method": "GET",
    "description": "Get applications health for all sites",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata3": {
    "path": "/statistics/powerconsumption",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getpostaggregationdatabyquery16": {
    "path": "/statistics/powerconsumption/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getPowerConsumptionDevice": {
    "path": "/statistics/powerconsumption/device",
    "method": "POST",
    "description": "Get Power Consumption Per Device stats",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getPowerConsumptionEnergyMix": {
    "path": "/statistics/powerconsumption/energymix",
    "method": "POST",
    "description": "Get Power Consumption Energy Mix",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSupportedDeviceList": {
    "path": "/statistics/powerconsumption/supportdevicelist",
    "method": "GET",
    "description": "Get power consumption collection supported device list",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPowerConsumptionTotal": {
    "path": "/statistics/powerconsumption/total",
    "method": "POST",
    "description": "Get Power Consumption Total stats",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "processStatisticsData": {
    "path": "/statistics/process",
    "method": "GET",
    "description": "Process stats data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getStatisticsProcessingCounters": {
    "path": "/statistics/process/counters",
    "method": "GET",
    "description": "Get statistics processing counters",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "generateStatsProcessReport": {
    "path": "/statistics/process/status",
    "method": "GET",
    "description": "Get stats process report",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "generateStatsProcessThreadReport": {
    "path": "/statistics/process/thread/status",
    "method": "GET",
    "description": "Get stats process thread report",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdata3": {
    "path": "/statistics/qfp",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata14": {
    "path": "/statistics/qfp",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery15": {
    "path": "/statistics/qfp/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery17": {
    "path": "/statistics/qfp/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdataascsv3": {
    "path": "/statistics/qfp/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount3": {
    "path": "/statistics/qfp/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost3": {
    "path": "/statistics/qfp/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields4": {
    "path": "/statistics/qfp/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata2": {
    "path": "/statistics/qfp/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata2": {
    "path": "/statistics/qfp/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields4": {
    "path": "/statistics/qfp/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdata13": {
    "path": "/statistics/qos",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getStatsRawData12": {
    "path": "/statistics/qos",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery13": {
    "path": "/statistics/qos/aggregation",
    "method": "GET",
    "description": "Monitoring - QoS",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery13": {
    "path": "/statistics/qos/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getpostaggregationappdatabyquery1": {
    "path": "/statistics/qos/app-agg/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getStatDataRawDataAsCSV12": {
    "path": "/statistics/qos/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCount13": {
    "path": "/statistics/qos/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCountPost13": {
    "path": "/statistics/qos/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getStatDataFields13": {
    "path": "/statistics/qos/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatbulkrawdata2": {
    "path": "/statistics/qos/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPostStatBulkRawData12": {
    "path": "/statistics/qos/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields14": {
    "path": "/statistics/qos/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatqueryfields15": {
    "path": "/statistics/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdraHeadendSummary": {
    "path": "/statistics/sdra/headends",
    "method": "GET",
    "description": "Get SD-WAN Remote Access Head-end summary",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdraSessionSummary": {
    "path": "/statistics/sdra/sessions",
    "method": "GET",
    "description": "Get SD-WAN Remote Access session summary",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDisabledDeviceList": {
    "path": "/statistics/settings/disable/devicelist/{indexName}",
    "method": "GET",
    "description": "Get list of disabled devices for a statistics index",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_status",
    "sdk_method": "get_disabled_device_list",
    "use_rest": false
  },
  "updateStatisticsDeviceList": {
    "path": "/statistics/settings/disable/devicelist/{indexName}",
    "method": "PUT",
    "description": "Update list of disabled devices for a statistics index",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_status",
    "sdk_method": "update_statistics_device_list",
    "use_rest": false
  },
  "getStatisticsSettings": {
    "path": "/statistics/settings/status",
    "method": "GET",
    "description": "Get statistics settings",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_status",
    "sdk_method": "get_statistics_settings",
    "use_rest": false
  },
  "updateStatisticsSettings": {
    "path": "/statistics/settings/status",
    "method": "PUT",
    "description": "Update statistics settings",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_status",
    "sdk_method": "update_statistics_settings",
    "use_rest": false
  },
  "getEnabledIndexForDevice": {
    "path": "/statistics/settings/status/device",
    "method": "GET",
    "description": "Get list of enabled device for statistics index",
    "sdk_endpoint": "admin_tech.session.endpoints.monitoring_status",
    "sdk_method": "get_enabled_index_for_device",
    "use_rest": false
  },
  "getstatdatarawdata15": {
    "path": "/statistics/sitehealth",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata15": {
    "path": "/statistics/sitehealth",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery16": {
    "path": "/statistics/sitehealth/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery18": {
    "path": "/statistics/sitehealth/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSiteHealth": {
    "path": "/statistics/sitehealth/common",
    "method": "GET",
    "description": "Get all site health",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdataascsv14": {
    "path": "/statistics/sitehealth/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount13": {
    "path": "/statistics/sitehealth/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost14": {
    "path": "/statistics/sitehealth/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields15": {
    "path": "/statistics/sitehealth/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata12": {
    "path": "/statistics/sitehealth/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata12": {
    "path": "/statistics/sitehealth/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields16": {
    "path": "/statistics/sitehealth/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSiteHealthTopology": {
    "path": "/statistics/sitehealth/topology",
    "method": "GET",
    "description": "Get all site health topology",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdata26": {
    "path": "/statistics/speedtest",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata27": {
    "path": "/statistics/speedtest",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery29": {
    "path": "/statistics/speedtest/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery32": {
    "path": "/statistics/speedtest/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdataascsv27": {
    "path": "/statistics/speedtest/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount25": {
    "path": "/statistics/speedtest/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost26": {
    "path": "/statistics/speedtest/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields27": {
    "path": "/statistics/speedtest/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata25": {
    "path": "/statistics/speedtest/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata24": {
    "path": "/statistics/speedtest/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields29": {
    "path": "/statistics/speedtest/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSulStatDataRawData": {
    "path": "/statistics/sul/connections",
    "method": "GET",
    "description": "Get security connection events stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata16": {
    "path": "/statistics/sul/connections",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery17": {
    "path": "/statistics/sul/connections/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery19": {
    "path": "/statistics/sul/connections/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getpostaggregationappdatabyquery2": {
    "path": "/statistics/sul/connections/app-agg/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdataascsv15": {
    "path": "/statistics/sul/connections/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount14": {
    "path": "/statistics/sul/connections/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost15": {
    "path": "/statistics/sul/connections/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields16": {
    "path": "/statistics/sul/connections/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getFilterPolicyNameList": {
    "path": "/statistics/sul/connections/filter/policy_name/{policyType}",
    "method": "GET",
    "description": "Get filter Policy Name list",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata13": {
    "path": "/statistics/sul/connections/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata13": {
    "path": "/statistics/sul/connections/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields17": {
    "path": "/statistics/sul/connections/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdata17": {
    "path": "/statistics/system",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata18": {
    "path": "/statistics/system",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery19": {
    "path": "/statistics/system/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery21": {
    "path": "/statistics/system/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "createDeviceSystemCPUStat": {
    "path": "/statistics/system/cpu",
    "method": "GET",
    "description": "Get device system CPU stats list",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdataascsv17": {
    "path": "/statistics/system/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount16": {
    "path": "/statistics/system/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost17": {
    "path": "/statistics/system/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields18": {
    "path": "/statistics/system/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "createDeviceSystemMemoryStat": {
    "path": "/statistics/system/memory",
    "method": "GET",
    "description": "Get device system memory stats list",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata15": {
    "path": "/statistics/system/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata15": {
    "path": "/statistics/system/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields19": {
    "path": "/statistics/system/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdata18": {
    "path": "/statistics/system/stats",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata19": {
    "path": "/statistics/system/stats",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery20": {
    "path": "/statistics/system/stats/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery22": {
    "path": "/statistics/system/stats/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdataascsv18": {
    "path": "/statistics/system/stats/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount17": {
    "path": "/statistics/system/stats/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost18": {
    "path": "/statistics/system/stats/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields19": {
    "path": "/statistics/system/stats/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata16": {
    "path": "/statistics/system/stats/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata16": {
    "path": "/statistics/system/stats/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields20": {
    "path": "/statistics/system/stats/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "statisticsApprouteTunnelhealthHistoryGet": {
    "path": "/statistics/tunnelhealth/history",
    "method": "GET",
    "description": "Get all tunnel health history",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "statisticsApprouteTunnelhealthOverviewTypeGet": {
    "path": "/statistics/tunnelhealth/overview/{type}",
    "method": "GET",
    "description": "Get all tunnel health overview",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdata25": {
    "path": "/statistics/umbrella",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata26": {
    "path": "/statistics/umbrella",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery27": {
    "path": "/statistics/umbrella/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery29": {
    "path": "/statistics/umbrella/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdataascsv25": {
    "path": "/statistics/umbrella/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount24": {
    "path": "/statistics/umbrella/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost25": {
    "path": "/statistics/umbrella/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields26": {
    "path": "/statistics/umbrella/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata23": {
    "path": "/statistics/umbrella/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata23": {
    "path": "/statistics/umbrella/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields27": {
    "path": "/statistics/umbrella/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdata23": {
    "path": "/statistics/urlf",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata24": {
    "path": "/statistics/urlf",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery25": {
    "path": "/statistics/urlf/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery27": {
    "path": "/statistics/urlf/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdataascsv23": {
    "path": "/statistics/urlf/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount22": {
    "path": "/statistics/urlf/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost23": {
    "path": "/statistics/urlf/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields24": {
    "path": "/statistics/urlf/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata21": {
    "path": "/statistics/urlf/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata21": {
    "path": "/statistics/urlf/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields25": {
    "path": "/statistics/urlf/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdata12": {
    "path": "/statistics/vnfstatistics",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata12": {
    "path": "/statistics/vnfstatistics",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery12": {
    "path": "/statistics/vnfstatistics/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery12": {
    "path": "/statistics/vnfstatistics/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdataascsv12": {
    "path": "/statistics/vnfstatistics/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount11": {
    "path": "/statistics/vnfstatistics/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost12": {
    "path": "/statistics/vnfstatistics/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields13": {
    "path": "/statistics/vnfstatistics/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata10": {
    "path": "/statistics/vnfstatistics/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata10": {
    "path": "/statistics/vnfstatistics/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields13": {
    "path": "/statistics/vnfstatistics/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatdatarawdata20": {
    "path": "/statistics/wlanclientinfo",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatsrawdata21": {
    "path": "/statistics/wlanclientinfo",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getaggregationdatabyquery22": {
    "path": "/statistics/wlanclientinfo/aggregation",
    "method": "GET",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpostaggregationdatabyquery24": {
    "path": "/statistics/wlanclientinfo/aggregation",
    "method": "POST",
    "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatarawdataascsv20": {
    "path": "/statistics/wlanclientinfo/csv",
    "method": "GET",
    "description": "Get raw data with optional query as CSV",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcount19": {
    "path": "/statistics/wlanclientinfo/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getcountpost20": {
    "path": "/statistics/wlanclientinfo/doccount",
    "method": "POST",
    "description": "Get response count of a query",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatdatafields21": {
    "path": "/statistics/wlanclientinfo/fields",
    "method": "GET",
    "description": "Get fields and type",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatspaginationrawdata18": {
    "path": "/statistics/wlanclientinfo/page",
    "method": "GET",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpoststatspaginationrawdata18": {
    "path": "/statistics/wlanclientinfo/page",
    "method": "POST",
    "description": "Get stats raw data",
    "sdk_endpoint": "statistics",
    "sdk_method": "create",
    "use_rest": false
  },
  "getstatqueryfields22": {
    "path": "/statistics/wlanclientinfo/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "statistics",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSessionInfoCapture": {
    "path": "/stream/device/capture",
    "method": "POST",
    "description": "Create packet capture session",
    "sdk_endpoint": "stream",
    "sdk_method": "create",
    "use_rest": false
  },
  "disablePacketCaptureSession": {
    "path": "/stream/device/capture/disable/{sessionId}",
    "method": "GET",
    "description": "Disable packet capture session",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "downloadFile": {
    "path": "/stream/device/capture/download/{sessionId}",
    "method": "GET",
    "description": "Download packet capture file",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "forceStopPcapSession": {
    "path": "/stream/device/capture/forcedisbale/{sessionId}",
    "method": "GET",
    "description": "Force stop packet capture session",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "startPcapSession": {
    "path": "/stream/device/capture/start/{sessionId}",
    "method": "GET",
    "description": "Start packet capture session",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getFileDownloadStatus": {
    "path": "/stream/device/capture/status/{sessionId}",
    "method": "GET",
    "description": "Get packet capture session status",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "stopPcapSession": {
    "path": "/stream/device/capture/stop/{sessionId}",
    "method": "GET",
    "description": "Stop packet capture session",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getVnicInfoByVnfId": {
    "path": "/stream/device/capture/vnicsInfo/{vnfId}",
    "method": "GET",
    "description": "Get vnic info by vrfId",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "formPostPacketCapture": {
    "path": "/stream/device/capture/{deviceUUID}/{sessionId}",
    "method": "POST",
    "description": "Form post packet capture",
    "sdk_endpoint": "stream",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSessionInfoLog": {
    "path": "/stream/device/log",
    "method": "POST",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "create",
    "use_rest": false
  },
  "disableDeviceLog": {
    "path": "/stream/device/log/disable/{sessionId}",
    "method": "GET",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "downloadDebugLog": {
    "path": "/stream/device/log/download/{sessionId}",
    "method": "GET",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "renewSessionInfo": {
    "path": "/stream/device/log/renew/{sessionId}",
    "method": "GET",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "searchDeviceLog": {
    "path": "/stream/device/log/search/{sessionId}",
    "method": "POST",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSessions": {
    "path": "/stream/device/log/sessions",
    "method": "GET",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "clearSession": {
    "path": "/stream/device/log/sessions/clear/{sessionId}",
    "method": "GET",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLogType": {
    "path": "/stream/device/log/type",
    "method": "GET",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "streamLog": {
    "path": "/stream/device/log/{logType}/{deviceUUID}/{sessionId}",
    "method": "POST",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDeviceLog": {
    "path": "/stream/device/log/{sessionId}",
    "method": "GET",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "activeFlowWithQuery": {
    "path": "/stream/device/nwpi/activeFlowWithQuery",
    "method": "GET",
    "description": "Get active flows for NWPI.",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAggFlow": {
    "path": "/stream/device/nwpi/aggFlow",
    "method": "GET",
    "description": "Get aggregated flow data for NWPI.",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppQosData": {
    "path": "/stream/device/nwpi/appQosData",
    "method": "GET",
    "description": "Get QoS Application data for NWPI.",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppQosState": {
    "path": "/stream/device/nwpi/appQosState",
    "method": "GET",
    "description": "Get QoS Application state to received timestamp mapping for NWPI.",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getConcurrentData": {
    "path": "/stream/device/nwpi/concurrentData",
    "method": "GET",
    "description": "Get concurrent data for NWPI.",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getConcurrentDomainData": {
    "path": "/stream/device/nwpi/concurrentDomainData",
    "method": "GET",
    "description": "Get concurrent domain data for NWPI.",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCurrentTimestamp": {
    "path": "/stream/device/nwpi/currentTimestamp",
    "method": "GET",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "delDeviceBlack": {
    "path": "/stream/device/nwpi/device/blist/del",
    "method": "DELETE",
    "description": "Delete Device BlackList for NWPI.",
    "sdk_endpoint": "stream",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getDeviceBList": {
    "path": "/stream/device/nwpi/device/blist/get",
    "method": "GET",
    "description": "Get Device BlackList for NWPI.",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDevicesAndInterfacesBySite": {
    "path": "/stream/device/nwpi/deviceInfoBySite",
    "method": "GET",
    "description": "Get device and interface data by site",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDomainMetric": {
    "path": "/stream/device/nwpi/domainMetric",
    "method": "GET",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEventAppHopList": {
    "path": "/stream/device/nwpi/eventAppHopList",
    "method": "GET",
    "description": "Get Trace Application and HopList for NWPI.",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEventAppScoreBandwidth": {
    "path": "/stream/device/nwpi/eventAppScoreBandwidth",
    "method": "GET",
    "description": "Get Trace Event Application Performance Score and Bandwidth for NWPI.",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEventFlowFromAppHop": {
    "path": "/stream/device/nwpi/eventFlowFromAppHop",
    "method": "GET",
    "description": "Get Trace Event Flow From Application And Hop for NWPI.",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEventReadout": {
    "path": "/stream/device/nwpi/eventReadout",
    "method": "GET",
    "description": "Get Trace Event Readout for NWPI.",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEventReadoutBySite": {
    "path": "/stream/device/nwpi/eventReadoutBySite",
    "method": "GET",
    "description": "Get event Readout By Site",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getEventReadoutByTraces": {
    "path": "/stream/device/nwpi/eventReadoutByTraces",
    "method": "GET",
    "description": "Get event Readout By Traces",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "exportTrace": {
    "path": "/stream/device/nwpi/exportTrace",
    "method": "GET",
    "description": "Export NWPI Trace Data",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getFinalizedData": {
    "path": "/stream/device/nwpi/finalizedData",
    "method": "GET",
    "description": "finalizedData for NWPI.",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getFinalizedDomainData": {
    "path": "/stream/device/nwpi/finalizedDomainData",
    "method": "GET",
    "description": "Get Domain data for NWPI.",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getFlowDetail": {
    "path": "/stream/device/nwpi/flowDetail",
    "method": "GET",
    "description": "flowDetail for NWPI.",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getFlowMetric": {
    "path": "/stream/device/nwpi/flowMetric",
    "method": "GET",
    "description": "flowMetric for NWPI.",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getMonitorState": {
    "path": "/stream/device/nwpi/getMonitorState",
    "method": "GET",
    "description": "getMonitorState",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "importTrace": {
    "path": "/stream/device/nwpi/importTrace",
    "method": "POST",
    "description": "Import Trace",
    "sdk_endpoint": "stream",
    "sdk_method": "create",
    "use_rest": false
  },
  "monitorOverrideStart": {
    "path": "/stream/device/nwpi/monitor/overrideStart",
    "method": "POST",
    "description": "CXP Monitor Action - Override Start",
    "sdk_endpoint": "stream",
    "sdk_method": "create",
    "use_rest": false
  },
  "monitorStart": {
    "path": "/stream/device/nwpi/monitor/start",
    "method": "POST",
    "description": "CXP Monitor Action - Start",
    "sdk_endpoint": "stream",
    "sdk_method": "create",
    "use_rest": false
  },
  "monitorStop": {
    "path": "/stream/device/nwpi/monitor/stop",
    "method": "POST",
    "description": "CXP Monitor Action - Stop",
    "sdk_endpoint": "stream",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNwpiDscp": {
    "path": "/stream/device/nwpi/nwpiDSCP",
    "method": "GET",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getNwpiNbarAppGroup": {
    "path": "/stream/device/nwpi/nwpiNbarAppGroup",
    "method": "GET",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getNwpiProtocol": {
    "path": "/stream/device/nwpi/nwpiProtocol",
    "method": "GET",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "nwpiSettingView": {
    "path": "/stream/device/nwpi/nwpiSettingView",
    "method": "GET",
    "description": "get NWPI setting",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPacketFeatures": {
    "path": "/stream/device/nwpi/packetFeatures",
    "method": "GET",
    "description": "packetFeatures for NWPI.",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPreloadInfo": {
    "path": "/stream/device/nwpi/preloadinfo",
    "method": "GET",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getstatqueryfields28": {
    "path": "/stream/device/nwpi/query/fields",
    "method": "GET",
    "description": "Get query fields",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getRoutingDetailFromLocal": {
    "path": "/stream/device/nwpi/routingDetail",
    "method": "GET",
    "description": "Get Routing Details for NWPI.",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "taskCreate": {
    "path": "/stream/device/nwpi/tasks/create",
    "method": "POST",
    "description": "Task Action - Create",
    "sdk_endpoint": "stream",
    "sdk_method": "create",
    "use_rest": false
  },
  "taskDelete": {
    "path": "/stream/device/nwpi/tasks/delete/{taskId}",
    "method": "DELETE",
    "description": "Delete Auto On Task",
    "sdk_endpoint": "stream",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getEventStatsData": {
    "path": "/stream/device/nwpi/tasks/eventStatsData",
    "method": "GET",
    "description": "Get auto on stats data in one task",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "taskStop": {
    "path": "/stream/device/nwpi/tasks/stop/{taskId}",
    "method": "POST",
    "description": "Task Action - Stop",
    "sdk_endpoint": "stream",
    "sdk_method": "create",
    "use_rest": false
  },
  "getTaskHistory": {
    "path": "/stream/device/nwpi/tasks/taskHistory",
    "method": "GET",
    "description": "Get all the auto on tasks",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getTaskTrace": {
    "path": "/stream/device/nwpi/tasks/{taskId}/traces",
    "method": "GET",
    "description": "Get all traces in one task",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "traceDelete": {
    "path": "/stream/device/nwpi/trace/delete",
    "method": "DELETE",
    "description": "Trace Action - Delete",
    "sdk_endpoint": "stream",
    "sdk_method": "delete",
    "use_rest": false
  },
  "nwpiPostFlowData": {
    "path": "/stream/device/nwpi/trace/record/{deviceUUID}",
    "method": "POST",
    "description": "post flow data",
    "sdk_endpoint": "stream",
    "sdk_method": "create",
    "use_rest": false
  },
  "traceStart": {
    "path": "/stream/device/nwpi/trace/start",
    "method": "POST",
    "description": "Trace Action - Start",
    "sdk_endpoint": "stream",
    "sdk_method": "create",
    "use_rest": false
  },
  "traceStop": {
    "path": "/stream/device/nwpi/trace/stop/{traceId}",
    "method": "POST",
    "description": "Trace Action - Stop",
    "sdk_endpoint": "stream",
    "sdk_method": "create",
    "use_rest": false
  },
  "getTraceCftRecord": {
    "path": "/stream/device/nwpi/traceCftRecord",
    "method": "GET",
    "description": "Get Trace CFT record",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getFinalizedFlowCount": {
    "path": "/stream/device/nwpi/traceFinFlowCount",
    "method": "GET",
    "description": "Retrieve total Fin Flow counts",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getFinFlowTimeRange": {
    "path": "/stream/device/nwpi/traceFinFlowTimeRange",
    "method": "GET",
    "description": "Retrieve Fin Flow time range",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "traceFinFlowWithQuery": {
    "path": "/stream/device/nwpi/traceFinFlowWithQuery",
    "method": "GET",
    "description": "Retrieve Certain Fin Flows",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getTraceFlow": {
    "path": "/stream/device/nwpi/traceFlow",
    "method": "GET",
    "description": "getTraceFlow",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getTraceHistory": {
    "path": "/stream/device/nwpi/traceHistory",
    "method": "GET",
    "description": "Get historical traces",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getTraceInfoByBaseKey": {
    "path": "/stream/device/nwpi/traceInfoByBaseKey",
    "method": "GET",
    "description": "Get TraceInfoByBaseKey",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getTraceReadoutFilter": {
    "path": "/stream/device/nwpi/traceReadoutFilter",
    "method": "GET",
    "description": "Get event Readout Filter By Traces",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "upsertSetting": {
    "path": "/stream/device/nwpi/upsertSetting",
    "method": "POST",
    "description": "insert or update setting",
    "sdk_endpoint": "stream",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSession": {
    "path": "/stream/device/speed",
    "method": "POST",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "create",
    "use_rest": false
  },
  "disableSpeedTestSession": {
    "path": "/stream/device/speed/disable/{sessionId}",
    "method": "GET",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getInterfaceBandwidth": {
    "path": "/stream/device/speed/interface/bandwidth",
    "method": "GET",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "startSpeedTest": {
    "path": "/stream/device/speed/start/{sessionId}",
    "method": "GET",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSpeedTestStatus": {
    "path": "/stream/device/speed/status/{sessionId}",
    "method": "GET",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "stopSpeedTest": {
    "path": "/stream/device/speed/stop/{sessionId}",
    "method": "GET",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "saveSpeedTestResults": {
    "path": "/stream/device/speed/{deviceUUID}/{sessionId}",
    "method": "POST",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSpeedTest": {
    "path": "/stream/device/speed/{sessionId}",
    "method": "GET",
    "description": "",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "processDeviceStatus": {
    "path": "/stream/device/status/{deviceUUID}",
    "method": "POST",
    "description": "Get device status stream",
    "sdk_endpoint": "stream",
    "sdk_method": "create",
    "use_rest": false
  },
  "enableSession": {
    "path": "/stream/device/umts",
    "method": "POST",
    "description": "assign sessionId to client if there is no conflict ongoing sessions",
    "sdk_endpoint": "stream",
    "sdk_method": "create",
    "use_rest": false
  },
  "getUMTSData": {
    "path": "/stream/device/umts/statistics/{deviceUUID}/{eventType}",
    "method": "GET",
    "description": "get UMTS result by type, time, and device uuid",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "saveUMTSData": {
    "path": "/stream/device/umts/{deviceUUID}/save",
    "method": "POST",
    "description": "Save UMTS Data, this api is called by device side",
    "sdk_endpoint": "stream",
    "sdk_method": "create",
    "use_rest": false
  },
  "updateUmtsSessionStatus": {
    "path": "/stream/device/umts/{operation}/{sessionId}",
    "method": "GET",
    "description": "start, stop,status,download or disable session",
    "sdk_endpoint": "stream",
    "sdk_method": "get",
    "use_rest": false
  },
  "createDevice": {
    "path": "/system/device",
    "method": "POST",
    "description": "Create new device<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view 123.",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_inventory",
    "sdk_method": "create_device",
    "use_rest": false
  },
  "generateBootstrapConfigForVedge": {
    "path": "/system/device/bootstrap/device/{uuid}",
    "method": "GET",
    "description": "Create vEdge device config",
    "sdk_endpoint": "system",
    "sdk_method": "get",
    "use_rest": false
  },
  "generateBootstrapConfigForVedges": {
    "path": "/system/device/bootstrap/devices",
    "method": "POST",
    "description": "Create bootstrap config for software vEdges",
    "sdk_endpoint": "system",
    "sdk_method": "create",
    "use_rest": false
  },
  "getBootstrapConfigZip": {
    "path": "/system/device/bootstrap/download/{id}",
    "method": "GET",
    "description": "Download vEdge device config",
    "sdk_endpoint": "system",
    "sdk_method": "get",
    "use_rest": false
  },
  "generateGenericBootstrapConfigForVedges": {
    "path": "/system/device/bootstrap/generic/devices",
    "method": "GET",
    "description": "Create bootstrap config for software vEdges",
    "sdk_endpoint": "system",
    "sdk_method": "get",
    "use_rest": false
  },
  "claimDevices": {
    "path": "/system/device/claimDevices",
    "method": "POST",
    "description": "Claim the selected unclaimed devices",
    "sdk_endpoint": "system",
    "sdk_method": "create",
    "use_rest": false
  },
  "getcontrollervedgesyncstatus1": {
    "path": "/system/device/controllers/vedge/status",
    "method": "GET",
    "description": "Get controllers vEdge sync status",
    "sdk_endpoint": "system",
    "sdk_method": "get",
    "use_rest": false
  },
  "decommissionVedgeCloud": {
    "path": "/system/device/decommission/{uuid}",
    "method": "PUT",
    "description": "Decomission vEdge device",
    "sdk_endpoint": "system",
    "sdk_method": "update",
    "use_rest": false
  },
  "devicesWithoutSubjectSudi": {
    "path": "/system/device/devicesWithoutSubjectSudi",
    "method": "GET",
    "description": "retrieve devices without subject sudi",
    "sdk_endpoint": "system",
    "sdk_method": "get",
    "use_rest": false
  },
  "formPost": {
    "path": "/system/device/fileupload",
    "method": "POST",
    "description": "Upload file to vEdge",
    "sdk_endpoint": "system",
    "sdk_method": "create",
    "use_rest": false
  },
  "validateUser": {
    "path": "/system/device/generate-payg",
    "method": "POST",
    "description": "Authenticate vSmart user account",
    "sdk_endpoint": "system",
    "sdk_method": "create",
    "use_rest": false
  },
  "setLifeCycle": {
    "path": "/system/device/lifecycle/management/{uuid}",
    "method": "POST",
    "description": "Set device lifecycle needed flag",
    "sdk_endpoint": "system",
    "sdk_method": "create",
    "use_rest": false
  },
  "getmanagementsystemipinfo1": {
    "path": "/system/device/management/systemip",
    "method": "GET",
    "description": "Get management system IP mapping",
    "sdk_endpoint": "system",
    "sdk_method": "get",
    "use_rest": false
  },
  "migrateDevice": {
    "path": "/system/device/migrateDevice/{uuid}",
    "method": "PUT",
    "description": "Migrate device software to vedge/cedge",
    "sdk_endpoint": "system",
    "sdk_method": "update",
    "use_rest": false
  },
  "getSmartAccountDevices": {
    "path": "/system/device/quickconnect/smartaccount/sync",
    "method": "POST",
    "description": "Sync devices from Smart-Account",
    "sdk_endpoint": "system",
    "sdk_method": "create",
    "use_rest": false
  },
  "resetVedgeCloud": {
    "path": "/system/device/reset/{uuid}",
    "method": "PUT",
    "description": "Reset vEdge device",
    "sdk_endpoint": "system",
    "sdk_method": "update",
    "use_rest": false
  },
  "getRMACandidates": {
    "path": "/system/device/rma/candidates/{deviceType}",
    "method": "GET",
    "description": "Get RMA candidates by device type",
    "sdk_endpoint": "system",
    "sdk_method": "get",
    "use_rest": false
  },
  "getRootCertStatusAll": {
    "path": "/system/device/rootcertchain/status",
    "method": "GET",
    "description": "Get controllers vEdge sync status",
    "sdk_endpoint": "system",
    "sdk_method": "get",
    "use_rest": false
  },
  "checkselfsignedcert1": {
    "path": "/system/device/selfsignedcert/iscreated",
    "method": "GET",
    "description": "Whether self signed certificate created",
    "sdk_endpoint": "system",
    "sdk_method": "get",
    "use_rest": false
  },
  "smartAccountAuthenticate": {
    "path": "/system/device/smartaccount/authenticate",
    "method": "POST",
    "description": "Authenticate vSmart user account",
    "sdk_endpoint": "system",
    "sdk_method": "create",
    "use_rest": false
  },
  "syncDevices": {
    "path": "/system/device/smartaccount/sync",
    "method": "POST",
    "description": "Sync devices from Smart-Account",
    "sdk_endpoint": "system",
    "sdk_method": "create",
    "use_rest": false
  },
  "syncRootCertChain": {
    "path": "/system/device/sync/rootcertchain",
    "method": "GET",
    "description": "Sync root certificate",
    "sdk_endpoint": "system",
    "sdk_method": "get",
    "use_rest": false
  },
  "getTenantManagementSystemIPs": {
    "path": "/system/device/tenant/management/systemip",
    "method": "GET",
    "description": "Get management system IP<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "system",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCloudDockDataBasedOnDeviceType": {
    "path": "/system/device/type/{deviceCategory}",
    "method": "GET",
    "description": "Get devices details",
    "sdk_endpoint": "system",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCloudDockDefaultConfigBasedOnDeviceType": {
    "path": "/system/device/type/{deviceCategory}/defaultConfig",
    "method": "GET",
    "description": "Get devices default config",
    "sdk_endpoint": "system",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAllUnclaimedDevices": {
    "path": "/system/device/unclaimedDevices",
    "method": "GET",
    "description": "Get list of all unclaimed devices",
    "sdk_endpoint": "system",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateDeviceSubjectSUDI": {
    "path": "/system/device/updateDeviceSubjectSUDI/{uuid}",
    "method": "PUT",
    "description": "update subject sudi value of given device uuid",
    "sdk_endpoint": "system",
    "sdk_method": "update",
    "use_rest": false
  },
  "checkvEdgeDevicePresence": {
    "path": "/system/device/vedgedetection",
    "method": "GET",
    "description": "Check for Vedge Device Presence",
    "sdk_endpoint": "system",
    "sdk_method": "get",
    "use_rest": false
  },
  "invalidateVmanageRootCA": {
    "path": "/system/device/vmanagerootca/{uuid}",
    "method": "DELETE",
    "description": "Invalidate vManage root CA",
    "sdk_endpoint": "system",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getDevicesDetails": {
    "path": "/system/device/{deviceCategory}",
    "method": "GET",
    "description": "Get devices details. When {deviceCategory = controllers}, it returns vEdge sync status, vBond, vManage and vSmart. When {deviceCategory = vedges}, it returns all available vEdge routers",
    "sdk_endpoint": "system",
    "sdk_method": "get",
    "use_rest": false
  },
  "editDevice": {
    "path": "/system/device/{uuid}",
    "method": "PUT",
    "description": "Edit device",
    "sdk_endpoint": "system",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletedevice1": {
    "path": "/system/device/{uuid}",
    "method": "DELETE",
    "description": "Delete vEdges",
    "sdk_endpoint": "system",
    "sdk_method": "delete",
    "use_rest": false
  },
  "unlockDevice": {
    "path": "/system/device/{uuid}/unlock",
    "method": "POST",
    "description": "Unlock device",
    "sdk_endpoint": "system",
    "sdk_method": "create",
    "use_rest": false
  },
  "getReverseProxyMappings": {
    "path": "/system/reverseproxy/{uuid}",
    "method": "GET",
    "description": "Get reverse proxy IP/Port mappings for controller",
    "sdk_endpoint": "system",
    "sdk_method": "get",
    "use_rest": false
  },
  "createReverseProxyMappings": {
    "path": "/system/reverseproxy/{uuid}",
    "method": "POST",
    "description": "Create reverse proxy IP/Port mappings for controller",
    "sdk_endpoint": "system",
    "sdk_method": "create",
    "use_rest": false
  },
  "getCloudXStatus": {
    "path": "/template/cloudx",
    "method": "GET",
    "description": "Get CloudX feature list",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "addCloudxType": {
    "path": "/template/cloudx/addcloudx/{type}",
    "method": "POST",
    "description": "Add cloudx gateway",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getAttachedClientList": {
    "path": "/template/cloudx/attachedclient",
    "method": "GET",
    "description": "Get attached client site list",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAttachedDiaList": {
    "path": "/template/cloudx/attacheddia",
    "method": "GET",
    "description": "Get attached Dia site list",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAttachedGatewayList": {
    "path": "/template/cloudx/attachedgateway",
    "method": "GET",
    "description": "Get attached gateway list",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCloudXAvailableApps": {
    "path": "/template/cloudx/availableapps",
    "method": "GET",
    "description": "Get CloudX available apps list",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSiteList": {
    "path": "/template/cloudx/clientlist",
    "method": "GET",
    "description": "Get site list",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDiaList": {
    "path": "/template/cloudx/dialist",
    "method": "GET",
    "description": "Get Dia site list",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getGatewayList": {
    "path": "/template/cloudx/gatewaylist",
    "method": "GET",
    "description": "Get gateway list",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "addCloudxInterfaces": {
    "path": "/template/cloudx/interfaces",
    "method": "POST",
    "description": "Enable cloudx gateway",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getApps": {
    "path": "/template/cloudx/manage/apps",
    "method": "GET",
    "description": "Get apps and vpns",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editApps": {
    "path": "/template/cloudx/manage/apps",
    "method": "PUT",
    "description": "Edit apps and vpns",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "addApps": {
    "path": "/template/cloudx/manage/apps",
    "method": "POST",
    "description": "Add apps and vpns",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getsigtunnellist1": {
    "path": "/template/cloudx/sig_tunnels",
    "method": "GET",
    "description": "Get Secure Internet Gateway Tunnel List",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "sitePerApp": {
    "path": "/template/cloudx/status",
    "method": "GET",
    "description": "Get sites per application per vpn",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "uploadConfig": {
    "path": "/template/config/attach/{deviceId}",
    "method": "PUT",
    "description": "Upload device config",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "getAttachedConfig": {
    "path": "/template/config/attached/{deviceId}",
    "method": "GET",
    "description": "Get local template attached config for given device",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "generateCLIModeDevices": {
    "path": "/template/config/device/mode/cli",
    "method": "GET",
    "description": "Generates a JSON object that contains a list of valid devices in CLI mode",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateDeviceToCLIMode": {
    "path": "/template/config/device/mode/cli",
    "method": "POST",
    "description": "Given a JSON list of devices not managed by any third member partners, push to devices from a CLI template",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "generatevManageModeDevices": {
    "path": "/template/config/device/mode/vmanage",
    "method": "GET",
    "description": "Get list of devices that are allowable for vmanage modes",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceDiff": {
    "path": "/template/config/diff/{deviceId}",
    "method": "GET",
    "description": "Generates a JSON object that contains the diff for a given device",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "submitDay0Config": {
    "path": "/template/config/quickConnect/submitDevices",
    "method": "POST",
    "description": "Creates and pushes bootstrap configurations onto day0 devices.",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getCompatibleDevices": {
    "path": "/template/config/rmalist/{oldDeviceId}",
    "method": "GET",
    "description": "Get compatible devices of model, chassis number, certificate serial number with the old device",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "rmaUpdate": {
    "path": "/template/config/rmaupdate",
    "method": "PUT",
    "description": "Update new device",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "getRunningConfig": {
    "path": "/template/config/running/{deviceId}",
    "method": "GET",
    "description": "Get device running config",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getVpnForDevice": {
    "path": "/template/config/vpn/{deviceId}",
    "method": "GET",
    "description": "Get list of configured VPN (excluding reserved VPN) for a device",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCORStatus": {
    "path": "/template/cor",
    "method": "GET",
    "description": "Get Cloud On Ramp list",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createAndMap": {
    "path": "/template/cor",
    "method": "POST",
    "description": "Map Host to Transit VPC/VNet",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "removeTransitVPC": {
    "path": "/template/cor/accountid/{accountid}",
    "method": "DELETE",
    "description": "Delete transit VPC/VNet",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "acquireResourcePool": {
    "path": "/template/cor/acquireResourcePool",
    "method": "POST",
    "description": "Acquire IP from resource pool",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getAmiList": {
    "path": "/template/cor/ami",
    "method": "GET",
    "description": "Get AMI list",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCloudList": {
    "path": "/template/cor/cloud",
    "method": "GET",
    "description": "Get cloud list",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCloudAccounts": {
    "path": "/template/cor/cloud/account",
    "method": "GET",
    "description": "Get cloud accounts",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "authenticateCredAndUpdate": {
    "path": "/template/cor/cloud/authenticate",
    "method": "PUT",
    "description": "Authenticate and update cloud account credentials",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "authenticateCloudOnRampCredAndAdd": {
    "path": "/template/cor/cloud/authenticate",
    "method": "POST",
    "description": "Authenticate cloud account credentials",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getCloudHostVpcAccountDetails": {
    "path": "/template/cor/cloud/host/accountdetails",
    "method": "GET",
    "description": "Get cloud host VPC account details",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCloudMappedHostAccounts": {
    "path": "/template/cor/cloud/mappedhostaccounts",
    "method": "GET",
    "description": "Get cloud mapped accounts view",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createResourcePool": {
    "path": "/template/cor/createResourcePool",
    "method": "POST",
    "description": "Add resource pool",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "removeDeviceId": {
    "path": "/template/cor/deleteDevicepair",
    "method": "DELETE",
    "description": "Remove device pair",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getCloudOnRampDevices": {
    "path": "/template/cor/device",
    "method": "GET",
    "description": "Get available device list",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "addDevicePair": {
    "path": "/template/cor/devicepair",
    "method": "POST",
    "description": "Add device pair",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getHostVPCs": {
    "path": "/template/cor/devicepair/hostvpc",
    "method": "GET",
    "description": "Get host VPC details",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getExternalId": {
    "path": "/template/cor/externalId",
    "method": "GET",
    "description": "Get the vManage external ID for AWS",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getTransitDevicePairAndHostList": {
    "path": "/template/cor/getTransitDevicePairAndHostList",
    "method": "GET",
    "description": "Get device and host details",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getTransitVpcVpnList": {
    "path": "/template/cor/getTransitVpnList",
    "method": "GET",
    "description": "Get transit VPN list",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCloudHostVPCs": {
    "path": "/template/cor/hostvpc",
    "method": "GET",
    "description": "Get host VPC/VNet list",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getMappedVPCs": {
    "path": "/template/cor/map",
    "method": "GET",
    "description": "Get mapped VPC/VNet list",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "mapVPCs": {
    "path": "/template/cor/map",
    "method": "POST",
    "description": "Map host to transit VPC/VNet",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "unmapVPCs": {
    "path": "/template/cor/map",
    "method": "DELETE",
    "description": "Unmap host from transit VPC/VNet",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getPemKeyList": {
    "path": "/template/cor/pem",
    "method": "GET",
    "description": "Get transit VPC PEM key list",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "scaleDown": {
    "path": "/template/cor/scale/down",
    "method": "POST",
    "description": "Scale down cloud on ramp",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "scaleUp": {
    "path": "/template/cor/scale/up",
    "method": "POST",
    "description": "Scale up cloud on ramp",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getTransitVPCs": {
    "path": "/template/cor/transitvpc",
    "method": "GET",
    "description": "Get transit VPC/VNet list",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateTransitVPC": {
    "path": "/template/cor/transitvpc",
    "method": "PUT",
    "description": "Update transit VPC/VNet",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "addTransitVPC": {
    "path": "/template/cor/transitvpc",
    "method": "POST",
    "description": "Create transit VPC/VNet",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "updateTransitVpcAutoscaleProperties": {
    "path": "/template/cor/transitvpc/autoscale-properties",
    "method": "PUT",
    "description": "Update transit VPC autoscale properties",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "getTransitVPCSupportedSize": {
    "path": "/template/cor/transitvpc/size",
    "method": "GET",
    "description": "Get transit VPC supported size",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCortexStatus": {
    "path": "/template/cortex",
    "method": "GET",
    "description": "Get Cortex List",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "authenticateAzureConnectCredAndAdd": {
    "path": "/template/cortex/cloud/authenticate",
    "method": "POST",
    "description": "Authenticate Cloud Account Credentials",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getMappedWanResourceGroups": {
    "path": "/template/cortex/map",
    "method": "GET",
    "description": "Get Mapped WAN Resource Groups",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "syncWanResourceGroups": {
    "path": "/template/cortex/sync",
    "method": "POST",
    "description": "Sync WAN Resource Groups",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getWanResourceGroups": {
    "path": "/template/cortex/wanrg",
    "method": "GET",
    "description": "Get WAN Resource Groups",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editWanResourceGroups": {
    "path": "/template/cortex/wanrg",
    "method": "PUT",
    "description": "Edit WAN Resource Groups",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "saveWanResourceGroups": {
    "path": "/template/cortex/wanrg",
    "method": "POST",
    "description": "Create WAN Resource Groups",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deleteWanResourceGroups": {
    "path": "/template/cortex/wanrg",
    "method": "DELETE",
    "description": "Delete WAN Resource Groups",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "generateMasterTemplateList": {
    "path": "/template/device",
    "method": "GET",
    "description": "Generate template list<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createCLITemplate": {
    "path": "/template/device/cli",
    "method": "POST",
    "description": "Create CLI template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "pushmastertemplate1": {
    "path": "/template/device/config/attachBootStrap",
    "method": "POST",
    "description": "Attach feature device template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "pushCLITemplate": {
    "path": "/template/device/config/attachcli",
    "method": "POST",
    "description": "Attach CLI device template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "editCloudxConfig": {
    "path": "/template/device/config/attachcloudx",
    "method": "PUT",
    "description": "Edit already enabled gateways, clients, dias<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "pushCloudxConfig": {
    "path": "/template/device/config/attachcloudx",
    "method": "POST",
    "description": "Enable gateways, clients, dias",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getAttachedDeviceList": {
    "path": "/template/device/config/attached/{masterTemplateId}",
    "method": "GET",
    "description": "Get attached device list by master template Id<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAttachedConfigToDevice": {
    "path": "/template/device/config/attachedconfig",
    "method": "GET",
    "description": "Get attached config to device<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "pushMasterTemplate": {
    "path": "/template/device/config/attachfeature",
    "method": "POST",
    "description": "Attach feature device template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "attachDeviceTemplate": {
    "path": "/template/device/config/attachment",
    "method": "POST",
    "description": "Attach device template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDeviceListByMasterTemplateId": {
    "path": "/template/device/config/available/{masterTemplateId}",
    "method": "GET",
    "description": "Get possible device list by master template Id<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceConfigurationPreview": {
    "path": "/template/device/config/config",
    "method": "POST",
    "description": "Get device configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_device_template",
    "sdk_method": "get_device_configuration_preview",
    "use_rest": false
  },
  "detachDeviceTemplate": {
    "path": "/template/device/config/detach",
    "method": "POST",
    "description": "Detach device template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "detachSites": {
    "path": "/template/device/config/detachcloudx",
    "method": "POST",
    "description": "Disable enabled gateways, clients, dias<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDevicesWithDuplicateIP": {
    "path": "/template/device/config/duplicateip",
    "method": "POST",
    "description": "Detects duplicate system IP from a list of devices<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDevicesWithDuplicateLocationName": {
    "path": "/template/device/config/duplicatelocationname",
    "method": "POST",
    "description": "Detects duplicate system IP from a list of devices<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "createInputWithoutDevice": {
    "path": "/template/device/config/exportcsv",
    "method": "POST",
    "description": "Export the device template to CSV format for given template id<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "createDeviceInput": {
    "path": "/template/device/config/input",
    "method": "POST",
    "description": "Create device input<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "processInputCommaSepFile": {
    "path": "/template/device/config/process/input/file",
    "method": "POST",
    "description": "Process input comma separated file<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getQuickConnectVariables": {
    "path": "/template/device/config/quickconnectvariable",
    "method": "POST",
    "description": "Get connection variables to be configured",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "checkVbond": {
    "path": "/template/device/config/vbond",
    "method": "GET",
    "description": "Check if vBond is configured<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "validateTemplate": {
    "path": "/template/device/config/verify",
    "method": "POST",
    "description": "Validate full template\"\n<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "createMasterTemplate": {
    "path": "/template/device/feature",
    "method": "POST",
    "description": "Create a device template from feature templates and sub templates<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "isMigrationRequired": {
    "path": "/template/device/is_migration_required",
    "method": "GET",
    "description": "Check if any device templates need migration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "generateTemplateForMigration": {
    "path": "/template/device/migration",
    "method": "GET",
    "description": "Generate a list of templates which require migration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "migrateTemplates": {
    "path": "/template/device/migration",
    "method": "POST",
    "description": "Migrate the device templates given the template Ids",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "migrationInfo": {
    "path": "/template/device/migration_info",
    "method": "GET",
    "description": "Returns the mapping between old and migrated templates<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getMasterTemplateDefinition": {
    "path": "/template/device/object/{templateId}",
    "method": "GET",
    "description": "Generate template by Id<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "changetemplateresourcegroup1": {
    "path": "/template/device/resource-group/{resourceGroupName}/{templateId}",
    "method": "POST",
    "description": "Change template resource group",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getOutOfSyncTemplates": {
    "path": "/template/device/syncstatus",
    "method": "GET",
    "description": "Get template sync status<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getOutOfSyncDevices": {
    "path": "/template/device/syncstatus/{templateId}",
    "method": "GET",
    "description": "Get out of sync devices<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editMasterTemplate": {
    "path": "/template/device/{templateId}",
    "method": "PUT",
    "description": "Edit template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteMasterTemplate": {
    "path": "/template/device/{templateId}",
    "method": "DELETE",
    "description": "Delete template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getAssociatedFeatureTemplatesDetails": {
    "path": "/template/device/{templateId}/featuretemplates",
    "method": "GET",
    "description": "get Associated Feature Templates Details",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "generateFeatureTemplateList": {
    "path": "/template/feature",
    "method": "GET",
    "description": "Get feature template list<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createFeatureTemplate": {
    "path": "/template/feature",
    "method": "POST",
    "description": "Create feature template",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "cloneTemplate": {
    "path": "/template/feature/clone",
    "method": "POST",
    "description": "Clone a feature template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNetworkInterface": {
    "path": "/template/feature/default/networkinterface",
    "method": "GET",
    "description": "Get default network interface<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDefaultNetworks": {
    "path": "/template/feature/default/networks",
    "method": "GET",
    "description": "Get default networks<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getTemplateDefinition": {
    "path": "/template/feature/definition/{templateId}",
    "method": "GET",
    "description": "Get the configured template definition for given template Id<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceTemplatesAttachedToFeature": {
    "path": "/template/feature/devicetemplates/{templateId}",
    "method": "GET",
    "description": "Get all device templates for this feature template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "listLITemplate": {
    "path": "/template/feature/li",
    "method": "GET",
    "description": "Get LI feature template",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createLITemplate": {
    "path": "/template/feature/li",
    "method": "POST",
    "description": "Create LI feature template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "editLITemplate": {
    "path": "/template/feature/li/{templateId}",
    "method": "PUT",
    "description": "Update LI feature template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "generateMasterTemplateDefinition": {
    "path": "/template/feature/master/{type_name}",
    "method": "GET",
    "description": "Generate template type definition by device type<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getTemplateForMigration": {
    "path": "/template/feature/migration",
    "method": "GET",
    "description": "Generate a list of templates which require migration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getGeneralTemplate": {
    "path": "/template/feature/object/{templateId}",
    "method": "GET",
    "description": "Get template object definition for given template Id<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "changeTemplateResourceGroup": {
    "path": "/template/feature/resource-group/{resourceGroupName}/{templateId}",
    "method": "POST",
    "description": "Change template resource group",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "generateTemplateTypes": {
    "path": "/template/feature/types",
    "method": "GET",
    "description": "Generate template types<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "generateTemplateTypeDefinition": {
    "path": "/template/feature/types/definition/{type_name}/{version}",
    "method": "GET",
    "description": "Generate template type definition<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "generateTemplateByDeviceType": {
    "path": "/template/feature/{deviceType}",
    "method": "GET",
    "description": "Generate template based on device<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editFeatureTemplate": {
    "path": "/template/feature/{templateId}",
    "method": "PUT",
    "description": "Update feature template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteGeneralTemplate": {
    "path": "/template/feature/{templateId}",
    "method": "DELETE",
    "description": "Delete feature template",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "updateLeaseTime": {
    "path": "/template/lock/{processId}",
    "method": "PUT",
    "description": "Update lease",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "removeLock": {
    "path": "/template/lock/{processId}",
    "method": "DELETE",
    "description": "Remove lock",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "preview": {
    "path": "/template/policy/assembly/security",
    "method": "POST",
    "description": "Get policy assembly preview",
    "sdk_endpoint": "policy.localized",
    "sdk_method": "preview",
    "use_rest": false
  },
  "previewById": {
    "path": "/template/policy/assembly/security/{id}",
    "method": "GET",
    "description": "Get policy assembly preview for feature policy",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.vedge_template",
    "sdk_method": "preview_by_id",
    "use_rest": false
  },
  "preview1": {
    "path": "/template/policy/assembly/vedge",
    "method": "POST",
    "description": "Get policy assembly preview",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewbyid1": {
    "path": "/template/policy/assembly/vedge/{id}",
    "method": "GET",
    "description": "Get policy assembly preview for feature policy",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "preview2": {
    "path": "/template/policy/assembly/voice",
    "method": "POST",
    "description": "Get policy assembly preview",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewbyid2": {
    "path": "/template/policy/assembly/voice/{id}",
    "method": "GET",
    "description": "Get policy assembly preview for feature policy",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "preview3": {
    "path": "/template/policy/assembly/vsmart",
    "method": "POST",
    "description": "Get policy assembly preview",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewbyid3": {
    "path": "/template/policy/assembly/vsmart/{id}",
    "method": "GET",
    "description": "Get policy assembly preview for feature policy",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCloudDiscoveredApps": {
    "path": "/template/policy/clouddiscoveredapp",
    "method": "GET",
    "description": "Get all cloud discovered applications",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "mapTrafficProfiles": {
    "path": "/template/policy/clouddiscoveredapp",
    "method": "POST",
    "description": "Set SLA class for policy cloud discovered applications",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getCustomApps": {
    "path": "/template/policy/customapp",
    "method": "GET",
    "description": "Get all policy custom applications",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createCustomApplication": {
    "path": "/template/policy/customapp",
    "method": "POST",
    "description": "Create Custom Applications",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getCustomAppById": {
    "path": "/template/policy/customapp/{id}",
    "method": "GET",
    "description": "Get a policy custom applications",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateCustomApplication": {
    "path": "/template/policy/customapp/{id}",
    "method": "PUT",
    "description": "Update Custom Applications",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteCustomApp": {
    "path": "/template/policy/customapp/{id}",
    "method": "DELETE",
    "description": "Delete Custom Application",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions8": {
    "path": "/template/policy/definition/acl",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition8": {
    "path": "/template/policy/definition/acl",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk8": {
    "path": "/template/policy/definition/acl/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition8": {
    "path": "/template/policy/definition/acl/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition8": {
    "path": "/template/policy/definition/acl/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid8": {
    "path": "/template/policy/definition/acl/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition8": {
    "path": "/template/policy/definition/acl/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition8": {
    "path": "/template/policy/definition/acl/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition8": {
    "path": "/template/policy/definition/acl/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions9": {
    "path": "/template/policy/definition/aclv6",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition9": {
    "path": "/template/policy/definition/aclv6",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk9": {
    "path": "/template/policy/definition/aclv6/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition9": {
    "path": "/template/policy/definition/aclv6/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition9": {
    "path": "/template/policy/definition/aclv6/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid9": {
    "path": "/template/policy/definition/aclv6/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition9": {
    "path": "/template/policy/definition/aclv6/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition9": {
    "path": "/template/policy/definition/aclv6/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition9": {
    "path": "/template/policy/definition/aclv6/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions11": {
    "path": "/template/policy/definition/advancedMalwareProtection",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition11": {
    "path": "/template/policy/definition/advancedMalwareProtection",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk11": {
    "path": "/template/policy/definition/advancedMalwareProtection/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition11": {
    "path": "/template/policy/definition/advancedMalwareProtection/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition11": {
    "path": "/template/policy/definition/advancedMalwareProtection/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid11": {
    "path": "/template/policy/definition/advancedMalwareProtection/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition11": {
    "path": "/template/policy/definition/advancedMalwareProtection/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition11": {
    "path": "/template/policy/definition/advancedMalwareProtection/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition11": {
    "path": "/template/policy/definition/advancedMalwareProtection/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions10": {
    "path": "/template/policy/definition/advancedinspectionprofile",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition10": {
    "path": "/template/policy/definition/advancedinspectionprofile",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk10": {
    "path": "/template/policy/definition/advancedinspectionprofile/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition10": {
    "path": "/template/policy/definition/advancedinspectionprofile/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition10": {
    "path": "/template/policy/definition/advancedinspectionprofile/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid10": {
    "path": "/template/policy/definition/advancedinspectionprofile/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition10": {
    "path": "/template/policy/definition/advancedinspectionprofile/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition10": {
    "path": "/template/policy/definition/advancedinspectionprofile/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition10": {
    "path": "/template/policy/definition/advancedinspectionprofile/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions12": {
    "path": "/template/policy/definition/approute",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition12": {
    "path": "/template/policy/definition/approute",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk12": {
    "path": "/template/policy/definition/approute/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition12": {
    "path": "/template/policy/definition/approute/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition12": {
    "path": "/template/policy/definition/approute/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid12": {
    "path": "/template/policy/definition/approute/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition12": {
    "path": "/template/policy/definition/approute/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition12": {
    "path": "/template/policy/definition/approute/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition12": {
    "path": "/template/policy/definition/approute/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions13": {
    "path": "/template/policy/definition/cflowd",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition13": {
    "path": "/template/policy/definition/cflowd",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk13": {
    "path": "/template/policy/definition/cflowd/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition13": {
    "path": "/template/policy/definition/cflowd/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition13": {
    "path": "/template/policy/definition/cflowd/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid13": {
    "path": "/template/policy/definition/cflowd/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition13": {
    "path": "/template/policy/definition/cflowd/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition13": {
    "path": "/template/policy/definition/cflowd/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition13": {
    "path": "/template/policy/definition/cflowd/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions14": {
    "path": "/template/policy/definition/control",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition14": {
    "path": "/template/policy/definition/control",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk14": {
    "path": "/template/policy/definition/control/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition14": {
    "path": "/template/policy/definition/control/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition14": {
    "path": "/template/policy/definition/control/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid14": {
    "path": "/template/policy/definition/control/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition14": {
    "path": "/template/policy/definition/control/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition14": {
    "path": "/template/policy/definition/control/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition14": {
    "path": "/template/policy/definition/control/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions15": {
    "path": "/template/policy/definition/data",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition15": {
    "path": "/template/policy/definition/data",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk15": {
    "path": "/template/policy/definition/data/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition15": {
    "path": "/template/policy/definition/data/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition15": {
    "path": "/template/policy/definition/data/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid15": {
    "path": "/template/policy/definition/data/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition15": {
    "path": "/template/policy/definition/data/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition15": {
    "path": "/template/policy/definition/data/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition15": {
    "path": "/template/policy/definition/data/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions16": {
    "path": "/template/policy/definition/deviceaccesspolicy",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition16": {
    "path": "/template/policy/definition/deviceaccesspolicy",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk16": {
    "path": "/template/policy/definition/deviceaccesspolicy/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition16": {
    "path": "/template/policy/definition/deviceaccesspolicy/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition16": {
    "path": "/template/policy/definition/deviceaccesspolicy/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid16": {
    "path": "/template/policy/definition/deviceaccesspolicy/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition16": {
    "path": "/template/policy/definition/deviceaccesspolicy/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition16": {
    "path": "/template/policy/definition/deviceaccesspolicy/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition16": {
    "path": "/template/policy/definition/deviceaccesspolicy/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions17": {
    "path": "/template/policy/definition/deviceaccesspolicyv6",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition17": {
    "path": "/template/policy/definition/deviceaccesspolicyv6",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk17": {
    "path": "/template/policy/definition/deviceaccesspolicyv6/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition17": {
    "path": "/template/policy/definition/deviceaccesspolicyv6/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition17": {
    "path": "/template/policy/definition/deviceaccesspolicyv6/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid17": {
    "path": "/template/policy/definition/deviceaccesspolicyv6/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition17": {
    "path": "/template/policy/definition/deviceaccesspolicyv6/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition17": {
    "path": "/template/policy/definition/deviceaccesspolicyv6/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition17": {
    "path": "/template/policy/definition/deviceaccesspolicyv6/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions25": {
    "path": "/template/policy/definition/dialpeer",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition25": {
    "path": "/template/policy/definition/dialpeer",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk25": {
    "path": "/template/policy/definition/dialpeer/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition25": {
    "path": "/template/policy/definition/dialpeer/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition25": {
    "path": "/template/policy/definition/dialpeer/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid25": {
    "path": "/template/policy/definition/dialpeer/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition25": {
    "path": "/template/policy/definition/dialpeer/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition25": {
    "path": "/template/policy/definition/dialpeer/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition25": {
    "path": "/template/policy/definition/dialpeer/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getDefinitions": {
    "path": "/template/policy/definition/dnssecurity",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.definition.acl",
    "sdk_method": "get_definitions",
    "use_rest": false
  },
  "createPolicyDefinition": {
    "path": "/template/policy/definition/dnssecurity",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.definition.acl",
    "sdk_method": "create_policy_definition",
    "use_rest": false
  },
  "savePolicyDefinitionInBulk": {
    "path": "/template/policy/definition/dnssecurity/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.definition.acl",
    "sdk_method": "save_policy_definition_in_bulk",
    "use_rest": false
  },
  "editMultiplePolicyDefinition": {
    "path": "/template/policy/definition/dnssecurity/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.definition.acl",
    "sdk_method": "edit_multiple_policy_definition",
    "use_rest": false
  },
  "previewPolicyDefinition": {
    "path": "/template/policy/definition/dnssecurity/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.definition.acl",
    "sdk_method": "preview_policy_definition",
    "use_rest": false
  },
  "previewPolicyDefinitionById": {
    "path": "/template/policy/definition/dnssecurity/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.definition.acl",
    "sdk_method": "preview_policy_definition_by_id",
    "use_rest": false
  },
  "getPolicyDefinition": {
    "path": "/template/policy/definition/dnssecurity/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.definition.acl",
    "sdk_method": "get_policy_definition",
    "use_rest": false
  },
  "editPolicyDefinition": {
    "path": "/template/policy/definition/dnssecurity/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.definition.acl",
    "sdk_method": "edit_policy_definition",
    "use_rest": false
  },
  "deletePolicyDefinition": {
    "path": "/template/policy/definition/dnssecurity/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.definition.acl",
    "sdk_method": "delete_policy_definition",
    "use_rest": false
  },
  "getdefinitions26": {
    "path": "/template/policy/definition/fxoport",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition26": {
    "path": "/template/policy/definition/fxoport",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk26": {
    "path": "/template/policy/definition/fxoport/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition26": {
    "path": "/template/policy/definition/fxoport/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition26": {
    "path": "/template/policy/definition/fxoport/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid26": {
    "path": "/template/policy/definition/fxoport/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition26": {
    "path": "/template/policy/definition/fxoport/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition26": {
    "path": "/template/policy/definition/fxoport/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition26": {
    "path": "/template/policy/definition/fxoport/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions28": {
    "path": "/template/policy/definition/fxsdidport",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition28": {
    "path": "/template/policy/definition/fxsdidport",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk28": {
    "path": "/template/policy/definition/fxsdidport/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition28": {
    "path": "/template/policy/definition/fxsdidport/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition28": {
    "path": "/template/policy/definition/fxsdidport/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid28": {
    "path": "/template/policy/definition/fxsdidport/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition28": {
    "path": "/template/policy/definition/fxsdidport/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition28": {
    "path": "/template/policy/definition/fxsdidport/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition28": {
    "path": "/template/policy/definition/fxsdidport/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions27": {
    "path": "/template/policy/definition/fxsport",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition27": {
    "path": "/template/policy/definition/fxsport",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk27": {
    "path": "/template/policy/definition/fxsport/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition27": {
    "path": "/template/policy/definition/fxsport/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition27": {
    "path": "/template/policy/definition/fxsport/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid27": {
    "path": "/template/policy/definition/fxsport/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition27": {
    "path": "/template/policy/definition/fxsport/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition27": {
    "path": "/template/policy/definition/fxsport/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition27": {
    "path": "/template/policy/definition/fxsport/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions4": {
    "path": "/template/policy/definition/hubandspoke",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition4": {
    "path": "/template/policy/definition/hubandspoke",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk4": {
    "path": "/template/policy/definition/hubandspoke/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition4": {
    "path": "/template/policy/definition/hubandspoke/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition4": {
    "path": "/template/policy/definition/hubandspoke/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid4": {
    "path": "/template/policy/definition/hubandspoke/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition4": {
    "path": "/template/policy/definition/hubandspoke/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition4": {
    "path": "/template/policy/definition/hubandspoke/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition4": {
    "path": "/template/policy/definition/hubandspoke/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions18": {
    "path": "/template/policy/definition/intrusionprevention",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition18": {
    "path": "/template/policy/definition/intrusionprevention",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk18": {
    "path": "/template/policy/definition/intrusionprevention/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition18": {
    "path": "/template/policy/definition/intrusionprevention/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition18": {
    "path": "/template/policy/definition/intrusionprevention/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid18": {
    "path": "/template/policy/definition/intrusionprevention/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition18": {
    "path": "/template/policy/definition/intrusionprevention/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition18": {
    "path": "/template/policy/definition/intrusionprevention/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition18": {
    "path": "/template/policy/definition/intrusionprevention/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions5": {
    "path": "/template/policy/definition/mesh",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition5": {
    "path": "/template/policy/definition/mesh",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk5": {
    "path": "/template/policy/definition/mesh/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition5": {
    "path": "/template/policy/definition/mesh/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition5": {
    "path": "/template/policy/definition/mesh/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid5": {
    "path": "/template/policy/definition/mesh/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition5": {
    "path": "/template/policy/definition/mesh/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition5": {
    "path": "/template/policy/definition/mesh/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition5": {
    "path": "/template/policy/definition/mesh/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions29": {
    "path": "/template/policy/definition/priisdnport",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition29": {
    "path": "/template/policy/definition/priisdnport",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk29": {
    "path": "/template/policy/definition/priisdnport/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition29": {
    "path": "/template/policy/definition/priisdnport/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition29": {
    "path": "/template/policy/definition/priisdnport/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid29": {
    "path": "/template/policy/definition/priisdnport/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition29": {
    "path": "/template/policy/definition/priisdnport/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition29": {
    "path": "/template/policy/definition/priisdnport/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition29": {
    "path": "/template/policy/definition/priisdnport/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions1": {
    "path": "/template/policy/definition/qosmap",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition1": {
    "path": "/template/policy/definition/qosmap",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk1": {
    "path": "/template/policy/definition/qosmap/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition1": {
    "path": "/template/policy/definition/qosmap/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition1": {
    "path": "/template/policy/definition/qosmap/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid1": {
    "path": "/template/policy/definition/qosmap/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition1": {
    "path": "/template/policy/definition/qosmap/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition1": {
    "path": "/template/policy/definition/qosmap/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition1": {
    "path": "/template/policy/definition/qosmap/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions19": {
    "path": "/template/policy/definition/rewriterule",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition19": {
    "path": "/template/policy/definition/rewriterule",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk19": {
    "path": "/template/policy/definition/rewriterule/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition19": {
    "path": "/template/policy/definition/rewriterule/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition19": {
    "path": "/template/policy/definition/rewriterule/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid19": {
    "path": "/template/policy/definition/rewriterule/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition19": {
    "path": "/template/policy/definition/rewriterule/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition19": {
    "path": "/template/policy/definition/rewriterule/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition19": {
    "path": "/template/policy/definition/rewriterule/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions20": {
    "path": "/template/policy/definition/ruleset",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition20": {
    "path": "/template/policy/definition/ruleset",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk20": {
    "path": "/template/policy/definition/ruleset/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition20": {
    "path": "/template/policy/definition/ruleset/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition20": {
    "path": "/template/policy/definition/ruleset/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid20": {
    "path": "/template/policy/definition/ruleset/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition20": {
    "path": "/template/policy/definition/ruleset/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition20": {
    "path": "/template/policy/definition/ruleset/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition20": {
    "path": "/template/policy/definition/ruleset/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions21": {
    "path": "/template/policy/definition/securitygroup",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition21": {
    "path": "/template/policy/definition/securitygroup",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk21": {
    "path": "/template/policy/definition/securitygroup/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition21": {
    "path": "/template/policy/definition/securitygroup/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition21": {
    "path": "/template/policy/definition/securitygroup/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid21": {
    "path": "/template/policy/definition/securitygroup/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition21": {
    "path": "/template/policy/definition/securitygroup/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition21": {
    "path": "/template/policy/definition/securitygroup/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition21": {
    "path": "/template/policy/definition/securitygroup/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions30": {
    "path": "/template/policy/definition/srstphoneprofile",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition30": {
    "path": "/template/policy/definition/srstphoneprofile",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk30": {
    "path": "/template/policy/definition/srstphoneprofile/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition30": {
    "path": "/template/policy/definition/srstphoneprofile/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition30": {
    "path": "/template/policy/definition/srstphoneprofile/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid30": {
    "path": "/template/policy/definition/srstphoneprofile/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition30": {
    "path": "/template/policy/definition/srstphoneprofile/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition30": {
    "path": "/template/policy/definition/srstphoneprofile/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition30": {
    "path": "/template/policy/definition/srstphoneprofile/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions3": {
    "path": "/template/policy/definition/ssldecryption",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition3": {
    "path": "/template/policy/definition/ssldecryption",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk3": {
    "path": "/template/policy/definition/ssldecryption/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition3": {
    "path": "/template/policy/definition/ssldecryption/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition3": {
    "path": "/template/policy/definition/ssldecryption/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid3": {
    "path": "/template/policy/definition/ssldecryption/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition3": {
    "path": "/template/policy/definition/ssldecryption/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition3": {
    "path": "/template/policy/definition/ssldecryption/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition3": {
    "path": "/template/policy/definition/ssldecryption/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions22": {
    "path": "/template/policy/definition/sslutdprofile",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition22": {
    "path": "/template/policy/definition/sslutdprofile",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk22": {
    "path": "/template/policy/definition/sslutdprofile/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition22": {
    "path": "/template/policy/definition/sslutdprofile/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition22": {
    "path": "/template/policy/definition/sslutdprofile/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid22": {
    "path": "/template/policy/definition/sslutdprofile/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition22": {
    "path": "/template/policy/definition/sslutdprofile/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition22": {
    "path": "/template/policy/definition/sslutdprofile/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition22": {
    "path": "/template/policy/definition/sslutdprofile/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions23": {
    "path": "/template/policy/definition/urlfiltering",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition23": {
    "path": "/template/policy/definition/urlfiltering",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk23": {
    "path": "/template/policy/definition/urlfiltering/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition23": {
    "path": "/template/policy/definition/urlfiltering/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition23": {
    "path": "/template/policy/definition/urlfiltering/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid23": {
    "path": "/template/policy/definition/urlfiltering/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition23": {
    "path": "/template/policy/definition/urlfiltering/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition23": {
    "path": "/template/policy/definition/urlfiltering/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition23": {
    "path": "/template/policy/definition/urlfiltering/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions24": {
    "path": "/template/policy/definition/vedgeroute",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition24": {
    "path": "/template/policy/definition/vedgeroute",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk24": {
    "path": "/template/policy/definition/vedgeroute/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition24": {
    "path": "/template/policy/definition/vedgeroute/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition24": {
    "path": "/template/policy/definition/vedgeroute/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid24": {
    "path": "/template/policy/definition/vedgeroute/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition24": {
    "path": "/template/policy/definition/vedgeroute/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition24": {
    "path": "/template/policy/definition/vedgeroute/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition24": {
    "path": "/template/policy/definition/vedgeroute/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions6": {
    "path": "/template/policy/definition/vpnmembershipgroup",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition6": {
    "path": "/template/policy/definition/vpnmembershipgroup",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk6": {
    "path": "/template/policy/definition/vpnmembershipgroup/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition6": {
    "path": "/template/policy/definition/vpnmembershipgroup/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition6": {
    "path": "/template/policy/definition/vpnmembershipgroup/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid6": {
    "path": "/template/policy/definition/vpnmembershipgroup/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition6": {
    "path": "/template/policy/definition/vpnmembershipgroup/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition6": {
    "path": "/template/policy/definition/vpnmembershipgroup/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition6": {
    "path": "/template/policy/definition/vpnmembershipgroup/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions2": {
    "path": "/template/policy/definition/vpnqosmap",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition2": {
    "path": "/template/policy/definition/vpnqosmap",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk2": {
    "path": "/template/policy/definition/vpnqosmap/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition2": {
    "path": "/template/policy/definition/vpnqosmap/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition2": {
    "path": "/template/policy/definition/vpnqosmap/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid2": {
    "path": "/template/policy/definition/vpnqosmap/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition2": {
    "path": "/template/policy/definition/vpnqosmap/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition2": {
    "path": "/template/policy/definition/vpnqosmap/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition2": {
    "path": "/template/policy/definition/vpnqosmap/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getdefinitions7": {
    "path": "/template/policy/definition/zonebasedfw",
    "method": "GET",
    "description": "Get policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicydefinition7": {
    "path": "/template/policy/definition/zonebasedfw",
    "method": "POST",
    "description": "Create policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "savepolicydefinitioninbulk7": {
    "path": "/template/policy/definition/zonebasedfw/bulk",
    "method": "PUT",
    "description": "Create/Edit policy definitions in bulk",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "editmultiplepolicydefinition7": {
    "path": "/template/policy/definition/zonebasedfw/multiple/{id}",
    "method": "PUT",
    "description": "Edit multiple policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "previewpolicydefinition7": {
    "path": "/template/policy/definition/zonebasedfw/preview",
    "method": "POST",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicydefinitionbyid7": {
    "path": "/template/policy/definition/zonebasedfw/preview/{id}",
    "method": "GET",
    "description": "Preview policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicydefinition7": {
    "path": "/template/policy/definition/zonebasedfw/{id}",
    "method": "GET",
    "description": "Get a specific policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicydefinition7": {
    "path": "/template/policy/definition/zonebasedfw/{id}",
    "method": "PUT",
    "description": "Edit a policy definitions",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicydefinition7": {
    "path": "/template/policy/definition/zonebasedfw/{id}",
    "method": "DELETE",
    "description": "Delete policy definition",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "deleteAllLists": {
    "path": "/template/policy/ise/identity/deleteAllLists",
    "method": "DELETE",
    "description": "Delete all lists of the specified list type",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getListReference": {
    "path": "/template/policy/ise/identity/referenced/{listType}",
    "method": "GET",
    "description": "Get all referenced Lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "sgts": {
    "path": "/template/policy/ise/identity/sgt",
    "method": "GET",
    "description": "Get trustsec Scalable Group Tags",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getIdentityUserGroups": {
    "path": "/template/policy/ise/identity/usergroups",
    "method": "POST",
    "description": "Get all identity user groups",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getIdentityUsers": {
    "path": "/template/policy/ise/identity/users",
    "method": "POST",
    "description": "Get all identity users",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getAllPolicyLists": {
    "path": "/template/policy/list",
    "method": "GET",
    "description": "Get all policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicylists3": {
    "path": "/template/policy/list/app",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist3": {
    "path": "/template/policy/list/app",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag3": {
    "path": "/template/policy/list/app",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag3": {
    "path": "/template/policy/list/app/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist3": {
    "path": "/template/policy/list/app/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid3": {
    "path": "/template/policy/list/app/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid3": {
    "path": "/template/policy/list/app/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist3": {
    "path": "/template/policy/list/app/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist3": {
    "path": "/template/policy/list/app/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists4": {
    "path": "/template/policy/list/appprobe",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist4": {
    "path": "/template/policy/list/appprobe",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag4": {
    "path": "/template/policy/list/appprobe",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag4": {
    "path": "/template/policy/list/appprobe/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist4": {
    "path": "/template/policy/list/appprobe/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid4": {
    "path": "/template/policy/list/appprobe/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid4": {
    "path": "/template/policy/list/appprobe/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist4": {
    "path": "/template/policy/list/appprobe/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist4": {
    "path": "/template/policy/list/appprobe/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists5": {
    "path": "/template/policy/list/aspath",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist5": {
    "path": "/template/policy/list/aspath",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag5": {
    "path": "/template/policy/list/aspath",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag5": {
    "path": "/template/policy/list/aspath/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist5": {
    "path": "/template/policy/list/aspath/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid5": {
    "path": "/template/policy/list/aspath/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid5": {
    "path": "/template/policy/list/aspath/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist5": {
    "path": "/template/policy/list/aspath/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist5": {
    "path": "/template/policy/list/aspath/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists13": {
    "path": "/template/policy/list/class",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist14": {
    "path": "/template/policy/list/class",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag14": {
    "path": "/template/policy/list/class",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag14": {
    "path": "/template/policy/list/class/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist14": {
    "path": "/template/policy/list/class/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid14": {
    "path": "/template/policy/list/class/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid14": {
    "path": "/template/policy/list/class/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist14": {
    "path": "/template/policy/list/class/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist14": {
    "path": "/template/policy/list/class/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists6": {
    "path": "/template/policy/list/color",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist6": {
    "path": "/template/policy/list/color",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag6": {
    "path": "/template/policy/list/color",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag6": {
    "path": "/template/policy/list/color/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist6": {
    "path": "/template/policy/list/color/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid6": {
    "path": "/template/policy/list/color/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid6": {
    "path": "/template/policy/list/color/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist6": {
    "path": "/template/policy/list/color/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist6": {
    "path": "/template/policy/list/color/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists7": {
    "path": "/template/policy/list/community",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist7": {
    "path": "/template/policy/list/community",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag7": {
    "path": "/template/policy/list/community",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag7": {
    "path": "/template/policy/list/community/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist7": {
    "path": "/template/policy/list/community/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid7": {
    "path": "/template/policy/list/community/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid7": {
    "path": "/template/policy/list/community/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist7": {
    "path": "/template/policy/list/community/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist7": {
    "path": "/template/policy/list/community/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists8": {
    "path": "/template/policy/list/dataipv6prefix",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist8": {
    "path": "/template/policy/list/dataipv6prefix",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag8": {
    "path": "/template/policy/list/dataipv6prefix",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag8": {
    "path": "/template/policy/list/dataipv6prefix/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist8": {
    "path": "/template/policy/list/dataipv6prefix/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid8": {
    "path": "/template/policy/list/dataipv6prefix/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid8": {
    "path": "/template/policy/list/dataipv6prefix/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist8": {
    "path": "/template/policy/list/dataipv6prefix/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist8": {
    "path": "/template/policy/list/dataipv6prefix/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists9": {
    "path": "/template/policy/list/dataprefix",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist10": {
    "path": "/template/policy/list/dataprefix",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag10": {
    "path": "/template/policy/list/dataprefix",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag10": {
    "path": "/template/policy/list/dataprefix/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist10": {
    "path": "/template/policy/list/dataprefix/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid10": {
    "path": "/template/policy/list/dataprefix/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid10": {
    "path": "/template/policy/list/dataprefix/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist10": {
    "path": "/template/policy/list/dataprefix/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist10": {
    "path": "/template/policy/list/dataprefix/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getListsForAllDataPrefixes": {
    "path": "/template/policy/list/dataprefixall",
    "method": "GET",
    "description": "Get policy lists for all data prefixes",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist9": {
    "path": "/template/policy/list/dataprefixall",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag9": {
    "path": "/template/policy/list/dataprefixall",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag9": {
    "path": "/template/policy/list/dataprefixall/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist9": {
    "path": "/template/policy/list/dataprefixall/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid9": {
    "path": "/template/policy/list/dataprefixall/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid9": {
    "path": "/template/policy/list/dataprefixall/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist9": {
    "path": "/template/policy/list/dataprefixall/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist9": {
    "path": "/template/policy/list/dataprefixall/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getAllDataPrefixAndFQDNLists": {
    "path": "/template/policy/list/dataprefixfqdn",
    "method": "GET",
    "description": "Get lists for all all data-prefix(IPv4) and Fqdn lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist15": {
    "path": "/template/policy/list/dataprefixfqdn",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag15": {
    "path": "/template/policy/list/dataprefixfqdn",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag15": {
    "path": "/template/policy/list/dataprefixfqdn/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist15": {
    "path": "/template/policy/list/dataprefixfqdn/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid15": {
    "path": "/template/policy/list/dataprefixfqdn/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid15": {
    "path": "/template/policy/list/dataprefixfqdn/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist15": {
    "path": "/template/policy/list/dataprefixfqdn/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist15": {
    "path": "/template/policy/list/dataprefixfqdn/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists10": {
    "path": "/template/policy/list/expandedcommunity",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist11": {
    "path": "/template/policy/list/expandedcommunity",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag11": {
    "path": "/template/policy/list/expandedcommunity",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag11": {
    "path": "/template/policy/list/expandedcommunity/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist11": {
    "path": "/template/policy/list/expandedcommunity/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid11": {
    "path": "/template/policy/list/expandedcommunity/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid11": {
    "path": "/template/policy/list/expandedcommunity/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist11": {
    "path": "/template/policy/list/expandedcommunity/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist11": {
    "path": "/template/policy/list/expandedcommunity/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists11": {
    "path": "/template/policy/list/extcommunity",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist12": {
    "path": "/template/policy/list/extcommunity",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag12": {
    "path": "/template/policy/list/extcommunity",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag12": {
    "path": "/template/policy/list/extcommunity/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist12": {
    "path": "/template/policy/list/extcommunity/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid12": {
    "path": "/template/policy/list/extcommunity/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid12": {
    "path": "/template/policy/list/extcommunity/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist12": {
    "path": "/template/policy/list/extcommunity/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist12": {
    "path": "/template/policy/list/extcommunity/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists12": {
    "path": "/template/policy/list/faxprotocol",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist13": {
    "path": "/template/policy/list/faxprotocol",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag13": {
    "path": "/template/policy/list/faxprotocol",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag13": {
    "path": "/template/policy/list/faxprotocol/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist13": {
    "path": "/template/policy/list/faxprotocol/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid13": {
    "path": "/template/policy/list/faxprotocol/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid13": {
    "path": "/template/policy/list/faxprotocol/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist13": {
    "path": "/template/policy/list/faxprotocol/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist13": {
    "path": "/template/policy/list/faxprotocol/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists14": {
    "path": "/template/policy/list/fqdn",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist16": {
    "path": "/template/policy/list/fqdn",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag16": {
    "path": "/template/policy/list/fqdn",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag16": {
    "path": "/template/policy/list/fqdn/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist16": {
    "path": "/template/policy/list/fqdn/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid16": {
    "path": "/template/policy/list/fqdn/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid16": {
    "path": "/template/policy/list/fqdn/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist16": {
    "path": "/template/policy/list/fqdn/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist16": {
    "path": "/template/policy/list/fqdn/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists15": {
    "path": "/template/policy/list/geolocation",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist17": {
    "path": "/template/policy/list/geolocation",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag17": {
    "path": "/template/policy/list/geolocation",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getGeoLocationLists": {
    "path": "/template/policy/list/geolocation/entries",
    "method": "GET",
    "description": "Get list of countries and continents for geo location",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getpolicylistswithinfotag17": {
    "path": "/template/policy/list/geolocation/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist17": {
    "path": "/template/policy/list/geolocation/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid17": {
    "path": "/template/policy/list/geolocation/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid17": {
    "path": "/template/policy/list/geolocation/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist17": {
    "path": "/template/policy/list/geolocation/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist17": {
    "path": "/template/policy/list/geolocation/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists16": {
    "path": "/template/policy/list/identity",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist18": {
    "path": "/template/policy/list/identity",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag18": {
    "path": "/template/policy/list/identity",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag18": {
    "path": "/template/policy/list/identity/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist18": {
    "path": "/template/policy/list/identity/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid18": {
    "path": "/template/policy/list/identity/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid18": {
    "path": "/template/policy/list/identity/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist18": {
    "path": "/template/policy/list/identity/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist18": {
    "path": "/template/policy/list/identity/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getListsForAllPrefixes": {
    "path": "/template/policy/list/ipprefixall",
    "method": "GET",
    "description": "Get lists for all prefixes",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist21": {
    "path": "/template/policy/list/ipprefixall",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag21": {
    "path": "/template/policy/list/ipprefixall",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag21": {
    "path": "/template/policy/list/ipprefixall/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist21": {
    "path": "/template/policy/list/ipprefixall/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid21": {
    "path": "/template/policy/list/ipprefixall/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid21": {
    "path": "/template/policy/list/ipprefixall/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist21": {
    "path": "/template/policy/list/ipprefixall/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist21": {
    "path": "/template/policy/list/ipprefixall/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists17": {
    "path": "/template/policy/list/ipssignature",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist19": {
    "path": "/template/policy/list/ipssignature",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag19": {
    "path": "/template/policy/list/ipssignature",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag19": {
    "path": "/template/policy/list/ipssignature/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist19": {
    "path": "/template/policy/list/ipssignature/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid19": {
    "path": "/template/policy/list/ipssignature/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid19": {
    "path": "/template/policy/list/ipssignature/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist19": {
    "path": "/template/policy/list/ipssignature/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist19": {
    "path": "/template/policy/list/ipssignature/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists18": {
    "path": "/template/policy/list/ipv6prefix",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist20": {
    "path": "/template/policy/list/ipv6prefix",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag20": {
    "path": "/template/policy/list/ipv6prefix",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag20": {
    "path": "/template/policy/list/ipv6prefix/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist20": {
    "path": "/template/policy/list/ipv6prefix/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid20": {
    "path": "/template/policy/list/ipv6prefix/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid20": {
    "path": "/template/policy/list/ipv6prefix/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist20": {
    "path": "/template/policy/list/ipv6prefix/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist20": {
    "path": "/template/policy/list/ipv6prefix/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists19": {
    "path": "/template/policy/list/localapp",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist22": {
    "path": "/template/policy/list/localapp",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag22": {
    "path": "/template/policy/list/localapp",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag22": {
    "path": "/template/policy/list/localapp/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist22": {
    "path": "/template/policy/list/localapp/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid22": {
    "path": "/template/policy/list/localapp/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid22": {
    "path": "/template/policy/list/localapp/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist22": {
    "path": "/template/policy/list/localapp/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist22": {
    "path": "/template/policy/list/localapp/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists20": {
    "path": "/template/policy/list/localdomain",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist23": {
    "path": "/template/policy/list/localdomain",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag23": {
    "path": "/template/policy/list/localdomain",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag23": {
    "path": "/template/policy/list/localdomain/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist23": {
    "path": "/template/policy/list/localdomain/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid23": {
    "path": "/template/policy/list/localdomain/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid23": {
    "path": "/template/policy/list/localdomain/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist23": {
    "path": "/template/policy/list/localdomain/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist23": {
    "path": "/template/policy/list/localdomain/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getPolicyLists": {
    "path": "/template/policy/list/mediaprofile",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.list.app",
    "sdk_method": "get_policy_lists",
    "use_rest": false
  },
  "createPolicyList": {
    "path": "/template/policy/list/mediaprofile",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.list.app",
    "sdk_method": "create_policy_list",
    "use_rest": false
  },
  "deletePolicyListsWithInfoTag": {
    "path": "/template/policy/list/mediaprofile",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.list.app",
    "sdk_method": "delete_policy_lists_with_info_tag",
    "use_rest": false
  },
  "getPolicyListsWithInfoTag": {
    "path": "/template/policy/list/mediaprofile/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.list.app",
    "sdk_method": "get_policy_lists_with_info_tag",
    "use_rest": false
  },
  "previewPolicyList": {
    "path": "/template/policy/list/mediaprofile/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.list.app",
    "sdk_method": "preview_policy_list",
    "use_rest": false
  },
  "previewPolicyListById": {
    "path": "/template/policy/list/mediaprofile/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.list.app",
    "sdk_method": "preview_policy_list_by_id",
    "use_rest": false
  },
  "getListsById": {
    "path": "/template/policy/list/mediaprofile/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.list.app",
    "sdk_method": "get_lists_by_id",
    "use_rest": false
  },
  "editPolicyList": {
    "path": "/template/policy/list/mediaprofile/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.list.app",
    "sdk_method": "edit_policy_list",
    "use_rest": false
  },
  "deletePolicyList": {
    "path": "/template/policy/list/mediaprofile/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.list.app",
    "sdk_method": "delete_policy_list",
    "use_rest": false
  },
  "getpolicylists21": {
    "path": "/template/policy/list/mirror",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist24": {
    "path": "/template/policy/list/mirror",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag24": {
    "path": "/template/policy/list/mirror",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag24": {
    "path": "/template/policy/list/mirror/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist24": {
    "path": "/template/policy/list/mirror/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid24": {
    "path": "/template/policy/list/mirror/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid24": {
    "path": "/template/policy/list/mirror/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist24": {
    "path": "/template/policy/list/mirror/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist24": {
    "path": "/template/policy/list/mirror/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists22": {
    "path": "/template/policy/list/modempassthrough",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist25": {
    "path": "/template/policy/list/modempassthrough",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag25": {
    "path": "/template/policy/list/modempassthrough",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag25": {
    "path": "/template/policy/list/modempassthrough/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist25": {
    "path": "/template/policy/list/modempassthrough/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid25": {
    "path": "/template/policy/list/modempassthrough/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid25": {
    "path": "/template/policy/list/modempassthrough/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist25": {
    "path": "/template/policy/list/modempassthrough/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist25": {
    "path": "/template/policy/list/modempassthrough/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists23": {
    "path": "/template/policy/list/policer",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist26": {
    "path": "/template/policy/list/policer",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag26": {
    "path": "/template/policy/list/policer",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag26": {
    "path": "/template/policy/list/policer/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist26": {
    "path": "/template/policy/list/policer/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid26": {
    "path": "/template/policy/list/policer/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid26": {
    "path": "/template/policy/list/policer/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist26": {
    "path": "/template/policy/list/policer/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist26": {
    "path": "/template/policy/list/policer/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists24": {
    "path": "/template/policy/list/port",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist27": {
    "path": "/template/policy/list/port",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag27": {
    "path": "/template/policy/list/port",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag27": {
    "path": "/template/policy/list/port/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist27": {
    "path": "/template/policy/list/port/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid27": {
    "path": "/template/policy/list/port/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid27": {
    "path": "/template/policy/list/port/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist27": {
    "path": "/template/policy/list/port/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist27": {
    "path": "/template/policy/list/port/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists25": {
    "path": "/template/policy/list/preferredcolorgroup",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist28": {
    "path": "/template/policy/list/preferredcolorgroup",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag28": {
    "path": "/template/policy/list/preferredcolorgroup",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag28": {
    "path": "/template/policy/list/preferredcolorgroup/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist28": {
    "path": "/template/policy/list/preferredcolorgroup/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid28": {
    "path": "/template/policy/list/preferredcolorgroup/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid28": {
    "path": "/template/policy/list/preferredcolorgroup/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist28": {
    "path": "/template/policy/list/preferredcolorgroup/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist28": {
    "path": "/template/policy/list/preferredcolorgroup/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists26": {
    "path": "/template/policy/list/prefix",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist29": {
    "path": "/template/policy/list/prefix",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag29": {
    "path": "/template/policy/list/prefix",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag29": {
    "path": "/template/policy/list/prefix/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist29": {
    "path": "/template/policy/list/prefix/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid29": {
    "path": "/template/policy/list/prefix/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid29": {
    "path": "/template/policy/list/prefix/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist29": {
    "path": "/template/policy/list/prefix/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist29": {
    "path": "/template/policy/list/prefix/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists27": {
    "path": "/template/policy/list/protocolname",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist30": {
    "path": "/template/policy/list/protocolname",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag30": {
    "path": "/template/policy/list/protocolname",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag30": {
    "path": "/template/policy/list/protocolname/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist30": {
    "path": "/template/policy/list/protocolname/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid30": {
    "path": "/template/policy/list/protocolname/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid30": {
    "path": "/template/policy/list/protocolname/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist30": {
    "path": "/template/policy/list/protocolname/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist30": {
    "path": "/template/policy/list/protocolname/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists28": {
    "path": "/template/policy/list/region",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist31": {
    "path": "/template/policy/list/region",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag31": {
    "path": "/template/policy/list/region",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag31": {
    "path": "/template/policy/list/region/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist31": {
    "path": "/template/policy/list/region/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid31": {
    "path": "/template/policy/list/region/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid31": {
    "path": "/template/policy/list/region/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist31": {
    "path": "/template/policy/list/region/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist31": {
    "path": "/template/policy/list/region/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists29": {
    "path": "/template/policy/list/scalablegrouptag",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist32": {
    "path": "/template/policy/list/scalablegrouptag",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag32": {
    "path": "/template/policy/list/scalablegrouptag",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag32": {
    "path": "/template/policy/list/scalablegrouptag/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist32": {
    "path": "/template/policy/list/scalablegrouptag/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid32": {
    "path": "/template/policy/list/scalablegrouptag/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid32": {
    "path": "/template/policy/list/scalablegrouptag/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist32": {
    "path": "/template/policy/list/scalablegrouptag/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist32": {
    "path": "/template/policy/list/scalablegrouptag/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists30": {
    "path": "/template/policy/list/site",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist33": {
    "path": "/template/policy/list/site",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag33": {
    "path": "/template/policy/list/site",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "createDefaultSiteList": {
    "path": "/template/policy/list/site/defaultsite",
    "method": "POST",
    "description": "Create default site list for sites missing from centralized policy",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.list.site",
    "sdk_method": "create_default_site_list",
    "use_rest": false
  },
  "getpolicylistswithinfotag33": {
    "path": "/template/policy/list/site/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist33": {
    "path": "/template/policy/list/site/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid33": {
    "path": "/template/policy/list/site/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid33": {
    "path": "/template/policy/list/site/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist33": {
    "path": "/template/policy/list/site/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist33": {
    "path": "/template/policy/list/site/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists31": {
    "path": "/template/policy/list/sla",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist34": {
    "path": "/template/policy/list/sla",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag34": {
    "path": "/template/policy/list/sla",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag34": {
    "path": "/template/policy/list/sla/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist34": {
    "path": "/template/policy/list/sla/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid34": {
    "path": "/template/policy/list/sla/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid34": {
    "path": "/template/policy/list/sla/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist34": {
    "path": "/template/policy/list/sla/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist34": {
    "path": "/template/policy/list/sla/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists32": {
    "path": "/template/policy/list/supervisorydisc",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist35": {
    "path": "/template/policy/list/supervisorydisc",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag35": {
    "path": "/template/policy/list/supervisorydisc",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag35": {
    "path": "/template/policy/list/supervisorydisc/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist35": {
    "path": "/template/policy/list/supervisorydisc/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid35": {
    "path": "/template/policy/list/supervisorydisc/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid35": {
    "path": "/template/policy/list/supervisorydisc/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist35": {
    "path": "/template/policy/list/supervisorydisc/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist35": {
    "path": "/template/policy/list/supervisorydisc/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists33": {
    "path": "/template/policy/list/tgapikey",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist36": {
    "path": "/template/policy/list/tgapikey",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag36": {
    "path": "/template/policy/list/tgapikey",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag36": {
    "path": "/template/policy/list/tgapikey/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist36": {
    "path": "/template/policy/list/tgapikey/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid36": {
    "path": "/template/policy/list/tgapikey/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid36": {
    "path": "/template/policy/list/tgapikey/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist36": {
    "path": "/template/policy/list/tgapikey/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist36": {
    "path": "/template/policy/list/tgapikey/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists34": {
    "path": "/template/policy/list/tloc",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist37": {
    "path": "/template/policy/list/tloc",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag37": {
    "path": "/template/policy/list/tloc",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag37": {
    "path": "/template/policy/list/tloc/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist37": {
    "path": "/template/policy/list/tloc/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid37": {
    "path": "/template/policy/list/tloc/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid37": {
    "path": "/template/policy/list/tloc/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist37": {
    "path": "/template/policy/list/tloc/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist37": {
    "path": "/template/policy/list/tloc/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists1": {
    "path": "/template/policy/list/translationprofile",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist1": {
    "path": "/template/policy/list/translationprofile",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag1": {
    "path": "/template/policy/list/translationprofile",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag1": {
    "path": "/template/policy/list/translationprofile/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist1": {
    "path": "/template/policy/list/translationprofile/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid1": {
    "path": "/template/policy/list/translationprofile/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid1": {
    "path": "/template/policy/list/translationprofile/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist1": {
    "path": "/template/policy/list/translationprofile/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist1": {
    "path": "/template/policy/list/translationprofile/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists2": {
    "path": "/template/policy/list/translationrules",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist2": {
    "path": "/template/policy/list/translationrules",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag2": {
    "path": "/template/policy/list/translationrules",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag2": {
    "path": "/template/policy/list/translationrules/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist2": {
    "path": "/template/policy/list/translationrules/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid2": {
    "path": "/template/policy/list/translationrules/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid2": {
    "path": "/template/policy/list/translationrules/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist2": {
    "path": "/template/policy/list/translationrules/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist2": {
    "path": "/template/policy/list/translationrules/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists35": {
    "path": "/template/policy/list/trunkgroup",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist38": {
    "path": "/template/policy/list/trunkgroup",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag38": {
    "path": "/template/policy/list/trunkgroup",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag38": {
    "path": "/template/policy/list/trunkgroup/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist38": {
    "path": "/template/policy/list/trunkgroup/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid38": {
    "path": "/template/policy/list/trunkgroup/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid38": {
    "path": "/template/policy/list/trunkgroup/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist38": {
    "path": "/template/policy/list/trunkgroup/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist38": {
    "path": "/template/policy/list/trunkgroup/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists36": {
    "path": "/template/policy/list/umbrelladata",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist39": {
    "path": "/template/policy/list/umbrelladata",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag39": {
    "path": "/template/policy/list/umbrelladata",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag39": {
    "path": "/template/policy/list/umbrelladata/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist39": {
    "path": "/template/policy/list/umbrelladata/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid39": {
    "path": "/template/policy/list/umbrelladata/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid39": {
    "path": "/template/policy/list/umbrelladata/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist39": {
    "path": "/template/policy/list/umbrelladata/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist39": {
    "path": "/template/policy/list/umbrelladata/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists37": {
    "path": "/template/policy/list/urlblacklist",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist40": {
    "path": "/template/policy/list/urlblacklist",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag40": {
    "path": "/template/policy/list/urlblacklist",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag40": {
    "path": "/template/policy/list/urlblacklist/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist40": {
    "path": "/template/policy/list/urlblacklist/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid40": {
    "path": "/template/policy/list/urlblacklist/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid40": {
    "path": "/template/policy/list/urlblacklist/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist40": {
    "path": "/template/policy/list/urlblacklist/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist40": {
    "path": "/template/policy/list/urlblacklist/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists38": {
    "path": "/template/policy/list/urlwhitelist",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist41": {
    "path": "/template/policy/list/urlwhitelist",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag41": {
    "path": "/template/policy/list/urlwhitelist",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag41": {
    "path": "/template/policy/list/urlwhitelist/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist41": {
    "path": "/template/policy/list/urlwhitelist/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid41": {
    "path": "/template/policy/list/urlwhitelist/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid41": {
    "path": "/template/policy/list/urlwhitelist/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist41": {
    "path": "/template/policy/list/urlwhitelist/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist41": {
    "path": "/template/policy/list/urlwhitelist/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylists39": {
    "path": "/template/policy/list/vpn",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist42": {
    "path": "/template/policy/list/vpn",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag42": {
    "path": "/template/policy/list/vpn",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag42": {
    "path": "/template/policy/list/vpn/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist42": {
    "path": "/template/policy/list/vpn/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid42": {
    "path": "/template/policy/list/vpn/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid42": {
    "path": "/template/policy/list/vpn/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist42": {
    "path": "/template/policy/list/vpn/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist42": {
    "path": "/template/policy/list/vpn/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "createWebexPrefixLists": {
    "path": "/template/policy/list/webex",
    "method": "POST",
    "description": "TEMP-Create Webex policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "createwebexprefixlists1": {
    "path": "/template/policy/list/webex/update",
    "method": "POST",
    "description": "TEMP-Update Webex policy lists from Webex config",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getpolicylists40": {
    "path": "/template/policy/list/zone",
    "method": "GET",
    "description": "Get policy lists",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createpolicylist43": {
    "path": "/template/policy/list/zone",
    "method": "POST",
    "description": "Create policy list",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletepolicylistswithinfotag43": {
    "path": "/template/policy/list/zone",
    "method": "DELETE",
    "description": "Delete policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getpolicylistswithinfotag43": {
    "path": "/template/policy/list/zone/filtered",
    "method": "GET",
    "description": "Get policy lists with specific info tag",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "previewpolicylist43": {
    "path": "/template/policy/list/zone/preview",
    "method": "POST",
    "description": "Preview a policy list based on the policy list type",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "previewpolicylistbyid43": {
    "path": "/template/policy/list/zone/preview/{id}",
    "method": "GET",
    "description": "Preview a specific policy list entry based on id provided",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getlistsbyid43": {
    "path": "/template/policy/list/zone/{id}",
    "method": "GET",
    "description": "Get a specific policy list based on the id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editpolicylist43": {
    "path": "/template/policy/list/zone/{id}",
    "method": "PUT",
    "description": "Edit policy list entries for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletepolicylist43": {
    "path": "/template/policy/list/zone/{id}",
    "method": "DELETE",
    "description": "Delete policy list entry for a specific type of policy list",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "generateSecurityTemplateList": {
    "path": "/template/policy/security",
    "method": "GET",
    "description": "Generate template list",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.security_template",
    "sdk_method": "generate_security_template_list",
    "use_rest": false
  },
  "createSecurityTemplate": {
    "path": "/template/policy/security",
    "method": "POST",
    "description": "Create Template",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.security_template",
    "sdk_method": "create_security_template",
    "use_rest": false
  },
  "getSecurityTemplate": {
    "path": "/template/policy/security/definition/{policyId}",
    "method": "GET",
    "description": "Get Template",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.security_template",
    "sdk_method": "get_security_template",
    "use_rest": false
  },
  "getsecuritypolicydevicelist1": {
    "path": "/template/policy/security/devices",
    "method": "GET",
    "description": "Get device list",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceListById": {
    "path": "/template/policy/security/devices/{policyId}",
    "method": "GET",
    "description": "Get device list by Id",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.security_template",
    "sdk_method": "get_device_list_by_id",
    "use_rest": false
  },
  "editTemplateWithLenientLock": {
    "path": "/template/policy/security/staging/{policyId}",
    "method": "PUT",
    "description": "Edit Template",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.security_template",
    "sdk_method": "edit_template_with_lenient_lock",
    "use_rest": false
  },
  "generateSecurityPolicySummary": {
    "path": "/template/policy/security/summary",
    "method": "GET",
    "description": "Generate security policy summary",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.security_template",
    "sdk_method": "generate_security_policy_summary",
    "use_rest": false
  },
  "getSecurityTemplatesForDevice": {
    "path": "/template/policy/security/{deviceModel}",
    "method": "GET",
    "description": "Get templates that map a device model",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.security_template",
    "sdk_method": "get_security_templates_for_device",
    "use_rest": false
  },
  "editSecurityTemplate": {
    "path": "/template/policy/security/{policyId}",
    "method": "PUT",
    "description": "Edit Template",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.security_template",
    "sdk_method": "edit_security_template",
    "use_rest": false
  },
  "deleteSecurityTemplate": {
    "path": "/template/policy/security/{policyId}",
    "method": "DELETE",
    "description": "Delete Template",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.security_template",
    "sdk_method": "delete_security_template",
    "use_rest": false
  },
  "generatePolicyTemplateList": {
    "path": "/template/policy/vedge",
    "method": "GET",
    "description": "Get policy details",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.vedge_template",
    "sdk_method": "generate_policy_template_list",
    "use_rest": false
  },
  "createVEdgeTemplate": {
    "path": "/template/policy/vedge",
    "method": "POST",
    "description": "Create template",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getVEdgeTemplate": {
    "path": "/template/policy/vedge/definition/{policyId}",
    "method": "GET",
    "description": "Get template",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getVEdgePolicyDeviceList": {
    "path": "/template/policy/vedge/devices",
    "method": "GET",
    "description": "Get device list",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceListByPolicy": {
    "path": "/template/policy/vedge/devices/{policyId}",
    "method": "GET",
    "description": "Get device list by policy",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.vedge_template",
    "sdk_method": "get_device_list_by_policy",
    "use_rest": false
  },
  "editVEdgeTemplate": {
    "path": "/template/policy/vedge/{policyId}",
    "method": "PUT",
    "description": "Edit template",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteVEdgeTemplate": {
    "path": "/template/policy/vedge/{policyId}",
    "method": "DELETE",
    "description": "Delete template",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "changePolicyResourceGroup": {
    "path": "/template/policy/vedge/{resourceGroupName}/{policyId}",
    "method": "POST",
    "description": "Change policy resource group",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.vedge_template",
    "sdk_method": "change_policy_resource_group",
    "use_rest": false
  },
  "generateVoiceTemplateList": {
    "path": "/template/policy/voice",
    "method": "GET",
    "description": "Generate template list",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createVoiceTemplate": {
    "path": "/template/policy/voice",
    "method": "POST",
    "description": "Create Template",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getTemplateById": {
    "path": "/template/policy/voice/definition/{policyId}",
    "method": "GET",
    "description": "Get templates by policy Id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getVoicePolicyDeviceList": {
    "path": "/template/policy/voice/devices",
    "method": "GET",
    "description": "Get all device list",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDeviceListByPolicyId": {
    "path": "/template/policy/voice/devices/{policyId}",
    "method": "GET",
    "description": "Get device list by policy Id",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "generateVoicePolicySummary": {
    "path": "/template/policy/voice/summary",
    "method": "GET",
    "description": "Get templates that map a device model",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "getVoiceTemplatesForDevice": {
    "path": "/template/policy/voice/{deviceModel}",
    "method": "GET",
    "description": "Get templates that map a device model",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "editVoiceTemplate": {
    "path": "/template/policy/voice/{policyId}",
    "method": "PUT",
    "description": "Edit Template",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteVoiceTemplate": {
    "path": "/template/policy/voice/{policyId}",
    "method": "DELETE",
    "description": "Delete Template",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "generateVSmartPolicyTemplateList": {
    "path": "/template/policy/vsmart",
    "method": "GET",
    "description": "Get all template vsmart policy list",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "createVSmartTemplate": {
    "path": "/template/policy/vsmart",
    "method": "POST",
    "description": "Create template for given policy",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "activatePolicyForCloudServices": {
    "path": "/template/policy/vsmart/activate/central/{policyId}",
    "method": "POST",
    "description": "Activate vsmart policy for a given policy id",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.vsmart_template",
    "sdk_method": "activate_policy_for_cloud_services",
    "use_rest": false
  },
  "activatePolicy": {
    "path": "/template/policy/vsmart/activate/{policyId}",
    "method": "POST",
    "description": "Activate vsmart policy for a given policy id",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.vsmart_template",
    "sdk_method": "activate_policy",
    "use_rest": false
  },
  "editTemplateWithoutLockChecks": {
    "path": "/template/policy/vsmart/central/{policyId}",
    "method": "PUT",
    "description": "Edit template for given policy id to allow for multiple component edits",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.vsmart_template",
    "sdk_method": "edit_template_without_lock_checks",
    "use_rest": false
  },
  "checkVSmartConnectivityStatus": {
    "path": "/template/policy/vsmart/connectivity/status",
    "method": "GET",
    "description": "Check VSmart Connectivity Status",
    "sdk_endpoint": "template",
    "sdk_method": "get",
    "use_rest": false
  },
  "deActivatePolicy": {
    "path": "/template/policy/vsmart/deactivate/{policyId}",
    "method": "POST",
    "description": "Deactivate vsmart policy for a given policy id",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getTemplateByPolicyId": {
    "path": "/template/policy/vsmart/definition/{policyId}",
    "method": "GET",
    "description": "Get template policy definition by policy id",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.vsmart_template",
    "sdk_method": "get_template_by_policy_id",
    "use_rest": false
  },
  "qosmosNbarMigrationWarning": {
    "path": "/template/policy/vsmart/qosmos_nbar_migration_warning",
    "method": "GET",
    "description": "Qosmos Nbar migration",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.policy.vsmart_template",
    "sdk_method": "qosmos_nbar_migration_warning",
    "use_rest": false
  },
  "editVSmartTemplate": {
    "path": "/template/policy/vsmart/{policyId}",
    "method": "PUT",
    "description": "Edit template for given policy id",
    "sdk_endpoint": "template",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteVSmartTemplate": {
    "path": "/template/policy/vsmart/{policyId}",
    "method": "DELETE",
    "description": "Delete template for a given policy id",
    "sdk_endpoint": "template",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getEncryptedString": {
    "path": "/template/security/encryptText/encrypt",
    "method": "POST",
    "description": "Get Type 6 Encryptedd String for a given value",
    "sdk_endpoint": "template",
    "sdk_method": "create",
    "use_rest": false
  },
  "getAllTenants": {
    "path": "/tenant",
    "method": "GET",
    "description": "Lists all the tenants on the vManage<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.tenant_management",
    "sdk_method": "get_all_tenants",
    "use_rest": false
  },
  "updateTenantBulk": {
    "path": "/tenant",
    "method": "PUT",
    "description": "Update tenants in Multi-Tenant vManage<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "tenant",
    "sdk_method": "update",
    "use_rest": false
  },
  "createTenant": {
    "path": "/tenant",
    "method": "POST",
    "description": "Create a new tenant in Multi-Tenant vManage<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.tenant_management",
    "sdk_method": "create_tenant",
    "use_rest": false
  },
  "createTenantAsync": {
    "path": "/tenant/async",
    "method": "POST",
    "description": "Create a new tenant in Multi-Tenant vManage asynchronously<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.tenant_management",
    "sdk_method": "create_tenant_async",
    "use_rest": false
  },
  "createTenantAsyncBulk": {
    "path": "/tenant/bulk/async",
    "method": "POST",
    "description": "Create multiple tenants on vManage asynchronously<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.tenant_management",
    "sdk_method": "create_tenant_async_bulk",
    "use_rest": false
  },
  "deleteTenantAsyncBulk": {
    "path": "/tenant/bulk/async",
    "method": "DELETE",
    "description": "Delete multiple tenants on vManage asynchronously<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.tenant_management",
    "sdk_method": "delete_tenant_async_bulk",
    "use_rest": false
  },
  "getTenantvSmartMapping": {
    "path": "/tenant/vsmart",
    "method": "GET",
    "description": "Retrieve mapping of tenants to vSmarts<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "tenant",
    "sdk_method": "get",
    "use_rest": false
  },
  "getTenantHostingCapacityOnvSmarts": {
    "path": "/tenant/vsmart/capacity",
    "method": "GET",
    "description": "Lists all the vsmarts on the vManage and its tenant hosting capacity<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "tenant",
    "sdk_method": "get",
    "use_rest": false
  },
  "getTenant": {
    "path": "/tenant/{tenantId}",
    "method": "GET",
    "description": "Get a tenant by Id<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.tenant_management",
    "sdk_method": "get_tenant",
    "use_rest": false
  },
  "updateTenant": {
    "path": "/tenant/{tenantId}",
    "method": "PUT",
    "description": "Update a tenant in Multi-Tenant vManage<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.tenant_management",
    "sdk_method": "update_tenant",
    "use_rest": false
  },
  "deleteTenant": {
    "path": "/tenant/{tenantId}/delete",
    "method": "POST",
    "description": "Delete a tenant by Id<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.tenant_management",
    "sdk_method": "delete_tenant",
    "use_rest": false
  },
  "switchTenant": {
    "path": "/tenant/{tenantId}/switch",
    "method": "POST",
    "description": "Switch to a specific tenant<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.tenant_management",
    "sdk_method": "switch_tenant",
    "use_rest": false
  },
  "vSessionId": {
    "path": "/tenant/{tenantId}/vsessionid",
    "method": "POST",
    "description": "Get VSessionId for a specific tenant<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "tenant",
    "sdk_method": "create",
    "use_rest": false
  },
  "updateTenantvSmartPlacement": {
    "path": "/tenant/{tenantId}/vsmart",
    "method": "PUT",
    "description": "Update placement of the Tenant from source vSmart to destination vSmart<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "tenant",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteTenantBackup": {
    "path": "/tenantbackup/delete",
    "method": "DELETE",
    "description": "Delete all or a specific backup file stored in vManage<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.tenant_backup_restore",
    "sdk_method": "delete_tenant_backup",
    "use_rest": false
  },
  "downloadExistingBackupFile": {
    "path": "/tenantbackup/download/{path}",
    "method": "GET",
    "description": "Download a Backup File that is already stored in vManage<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.tenant_backup_restore",
    "sdk_method": "download_existing_backup_file",
    "use_rest": false
  },
  "exportTenantBackup": {
    "path": "/tenantbackup/export",
    "method": "GET",
    "description": "Trigger a backup of configuration database and store it in vManage<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.tenant_backup_restore",
    "sdk_method": "export_tenant_backup",
    "use_rest": false
  },
  "importTenantBackup": {
    "path": "/tenantbackup/import",
    "method": "POST",
    "description": "Submit a previously backed up file and import the data and apply it to the configuraion database<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.tenant_backup_restore",
    "sdk_method": "import_tenant_backup",
    "use_rest": false
  },
  "listTenantBackup": {
    "path": "/tenantbackup/list",
    "method": "GET",
    "description": "List all backup files of a tenant stored in vManage<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.tenant_backup_restore",
    "sdk_method": "list_tenant_backup",
    "use_rest": false
  },
  "downloadTenantData": {
    "path": "/tenantmigration/download/{path}",
    "method": "GET",
    "description": "Download tenant data",
    "sdk_endpoint": "admin_tech.session.endpoints.tenant_migration",
    "sdk_method": "download_tenant_data",
    "use_rest": false
  },
  "exportTenantData": {
    "path": "/tenantmigration/export",
    "method": "POST",
    "description": "Export tenant data",
    "sdk_endpoint": "admin_tech.session.endpoints.tenant_migration",
    "sdk_method": "export_tenant_data",
    "use_rest": false
  },
  "importTenantData": {
    "path": "/tenantmigration/import/{migrationKey}",
    "method": "POST",
    "description": "Import tenant data",
    "sdk_endpoint": "admin_tech.session.endpoints.tenant_migration",
    "sdk_method": "import_tenant_data",
    "use_rest": false
  },
  "getMigrationToken": {
    "path": "/tenantmigration/migrationToken",
    "method": "GET",
    "description": "Get migration token",
    "sdk_endpoint": "admin_tech.session.endpoints.tenant_migration",
    "sdk_method": "get_migration_token",
    "use_rest": false
  },
  "reTriggerNetworkMigration": {
    "path": "/tenantmigration/networkMigration",
    "method": "GET",
    "description": "Re-trigger network migration",
    "sdk_endpoint": "tenantmigration",
    "sdk_method": "get",
    "use_rest": false
  },
  "migrateNetwork": {
    "path": "/tenantmigration/networkMigration",
    "method": "POST",
    "description": "Migrate network",
    "sdk_endpoint": "admin_tech.session.endpoints.tenant_migration",
    "sdk_method": "migrate_network",
    "use_rest": false
  },
  "getAllTenantStatuses": {
    "path": "/tenantstatus",
    "method": "GET",
    "description": "List all tenant status<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.tenant_management",
    "sdk_method": "get_all_tenant_statuses",
    "use_rest": false
  },
  "forceStatusCollection": {
    "path": "/tenantstatus/force",
    "method": "POST",
    "description": "Force tenant status collection<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "admin_tech.session.endpoints.tenant_management",
    "sdk_method": "force_status_collection",
    "use_rest": false
  },
  "token": {
    "path": "/token/{regionBaseUri}/{clientId}",
    "method": "POST",
    "description": "Get Access Token and Refresh Token for authorized user",
    "sdk_endpoint": "token",
    "sdk_method": "create",
    "use_rest": false
  },
  "createFullTopology": {
    "path": "/topology",
    "method": "GET",
    "description": "Create full topology",
    "sdk_endpoint": "topology",
    "sdk_method": "get",
    "use_rest": false
  },
  "createDeviceTopology": {
    "path": "/topology/device",
    "method": "GET",
    "description": "Create device topology",
    "sdk_endpoint": "topology",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSiteTopology": {
    "path": "/topology/device/site/{siteId}",
    "method": "GET",
    "description": "Get topology for a given site id",
    "sdk_endpoint": "topology",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSiteTopologyMonitorData": {
    "path": "/topology/monitor/site/{siteId}",
    "method": "GET",
    "description": "Get topology monitor data for a given site id",
    "sdk_endpoint": "topology",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPhysicalTopology": {
    "path": "/topology/physical",
    "method": "GET",
    "description": "Create pysical topology",
    "sdk_endpoint": "topology",
    "sdk_method": "get",
    "use_rest": false
  },
  "getControlConnections": {
    "path": "/troubleshooting/control/{uuid}",
    "method": "GET",
    "description": "Troubleshoot control connections",
    "sdk_endpoint": "admin_tech.session.endpoints.troubleshooting_tools.device_connectivity",
    "sdk_method": "get_control_connections",
    "use_rest": false
  },
  "getDeviceConfiguration": {
    "path": "/troubleshooting/devicebringup",
    "method": "GET",
    "description": "Debug device bring up",
    "sdk_endpoint": "admin_tech.session.endpoints.troubleshooting_tools.device_connectivity",
    "sdk_method": "get_device_configuration",
    "use_rest": false
  },
  "getAllKeysFromUmbrella": {
    "path": "/umbrella/getkeys",
    "method": "GET",
    "description": "Get keys from Umbrella",
    "sdk_endpoint": "umbrella",
    "sdk_method": "get",
    "use_rest": false
  },
  "getManagementKeysFromUmbrella": {
    "path": "/umbrella/getkeys/management",
    "method": "GET",
    "description": "Get management keys from Umbrella",
    "sdk_endpoint": "umbrella",
    "sdk_method": "get",
    "use_rest": false
  },
  "getNetworkKeysFromUmbrella": {
    "path": "/umbrella/getkeys/networkdevices",
    "method": "GET",
    "description": "Get network devices keys from Umbrella",
    "sdk_endpoint": "umbrella",
    "sdk_method": "get",
    "use_rest": false
  },
  "getReportingKeysFromUmbrella": {
    "path": "/umbrella/getkeys/reporting",
    "method": "GET",
    "description": "Get reporting keys from Umbrella",
    "sdk_endpoint": "umbrella",
    "sdk_method": "get",
    "use_rest": false
  },
  "sendMetaDataToUmbrella": {
    "path": "/umbrella/syncnow",
    "method": "GET",
    "description": "Get metadata from db and send to Umbrella",
    "sdk_endpoint": "umbrella",
    "sdk_method": "get",
    "use_rest": false
  },
  "getStatus": {
    "path": "/ump/status",
    "method": "GET",
    "description": "Get last N minutes UMP historic data",
    "sdk_endpoint": "packet_capture",
    "sdk_method": "get_status",
    "use_rest": false
  },
  "getUrlMonitor": {
    "path": "/url/monitor",
    "method": "GET",
    "description": "List url's with monitoring configuration and details about the current state of alarm.",
    "sdk_endpoint": "admin_tech.session.endpoints.url_monitoring",
    "sdk_method": "get_url_monitor",
    "use_rest": false
  },
  "updateUrlMonitor": {
    "path": "/url/monitor",
    "method": "PUT",
    "description": "Update monitor configuration related to the url",
    "sdk_endpoint": "admin_tech.session.endpoints.url_monitoring",
    "sdk_method": "update_url_monitor",
    "use_rest": false
  },
  "createUrlMonitor": {
    "path": "/url/monitor",
    "method": "POST",
    "description": "Monitor the url with specified configuration.",
    "sdk_endpoint": "url",
    "sdk_method": "create",
    "use_rest": false
  },
  "deleteUrlMonitor": {
    "path": "/url/monitor",
    "method": "DELETE",
    "description": "Delete an url which is already being monitored.",
    "sdk_endpoint": "admin_tech.session.endpoints.url_monitoring",
    "sdk_method": "delete_url_monitor",
    "use_rest": false
  },
  "returnMetric": {
    "path": "/util/configdb/metrics",
    "method": "GET",
    "description": "By passing in the appropriate metric, it will return the values of  the respective metric within the timeframe provided",
    "sdk_endpoint": "util",
    "sdk_method": "get",
    "use_rest": false
  },
  "returnMetricFiles": {
    "path": "/util/configdb/metrics/downloadfiles",
    "method": "GET",
    "description": "By passing in the appropriate metric, date, start and end time, it will return a tar file consisting of all the metric files of the respective metric within the timeframe provided",
    "sdk_endpoint": "util",
    "sdk_method": "get",
    "use_rest": false
  },
  "getMetricsList": {
    "path": "/util/configdb/metrics/listmetrics",
    "method": "GET",
    "description": "Fetches the list of enabled metrics",
    "sdk_endpoint": "util",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDBSizeOnFile": {
    "path": "/util/configdb/size",
    "method": "GET",
    "description": "Fetches the disk usage by configuration-db",
    "sdk_endpoint": "util",
    "sdk_method": "get",
    "use_rest": false
  },
  "listLogFileDetails": {
    "path": "/util/logfile/appserver",
    "method": "GET",
    "description": "Lists content of log file. This API accepts content type as text/plain. It is mandatory to provide response content type. Any other content type would result in empty response.",
    "sdk_endpoint": "util",
    "sdk_method": "get",
    "use_rest": false
  },
  "listVManageServerLogLastNLines": {
    "path": "/util/logfile/appserver/lastnlines",
    "method": "GET",
    "description": "List last N lines of log file. This API accepts content type as text/plain. It is mandatory to provide response content type. Any other content type would result in empty response.",
    "sdk_endpoint": "util",
    "sdk_method": "get",
    "use_rest": false
  },
  "listConfigurations": {
    "path": "/util/logging/configurations",
    "method": "GET",
    "description": "List logger configuration",
    "sdk_endpoint": "util",
    "sdk_method": "get",
    "use_rest": false
  },
  "debugLog": {
    "path": "/util/logging/debuglog",
    "method": "POST",
    "description": "Test whether logging works",
    "sdk_endpoint": "util",
    "sdk_method": "create",
    "use_rest": false
  },
  "setLogLevel": {
    "path": "/util/logging/level",
    "method": "POST",
    "description": "Set log level for logger",
    "sdk_endpoint": "util",
    "sdk_method": "create",
    "use_rest": false
  },
  "listLoggers": {
    "path": "/util/logging/loggers",
    "method": "GET",
    "description": "List loggers",
    "sdk_endpoint": "util",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateLoggerConfiguration": {
    "path": "/util/logging/updateConfiguration",
    "method": "POST",
    "description": "Update logger configuration for rollover size and max file number",
    "sdk_endpoint": "util",
    "sdk_method": "create",
    "use_rest": false
  },
  "postStatsMigrationAction": {
    "path": "/util/olapdb/migration/action/{action}",
    "method": "POST",
    "description": "Migration actions - start pause or restart migration",
    "sdk_endpoint": "util",
    "sdk_method": "create",
    "use_rest": false
  },
  "getStatsMigrationRangeConfig": {
    "path": "/util/olapdb/migration/rangefrom",
    "method": "GET",
    "description": "Get migration historical data range configuration from upgrade time",
    "sdk_endpoint": "util",
    "sdk_method": "get",
    "use_rest": false
  },
  "postStatsMigrationRangeConfig": {
    "path": "/util/olapdb/migration/rangefrom",
    "method": "POST",
    "description": "Config migration historical data range from upgrade time in seconds. -1 to keep all.",
    "sdk_endpoint": "util",
    "sdk_method": "create",
    "use_rest": false
  },
  "getStatsMigrationSettings": {
    "path": "/util/olapdb/migration/settings",
    "method": "GET",
    "description": "Get migration generic settings",
    "sdk_endpoint": "util",
    "sdk_method": "get",
    "use_rest": false
  },
  "postStatsMigrationSettings": {
    "path": "/util/olapdb/migration/settings",
    "method": "POST",
    "description": "Config generic settings",
    "sdk_endpoint": "util",
    "sdk_method": "create",
    "use_rest": false
  },
  "getStatsMigrationStatsDbInfo": {
    "path": "/util/olapdb/migration/statsdbinfo",
    "method": "GET",
    "description": "Get stats db table information",
    "sdk_endpoint": "util",
    "sdk_method": "get",
    "use_rest": false
  },
  "getStatsMigrationStatus": {
    "path": "/util/olapdb/migration/status",
    "method": "GET",
    "description": "Get migration status",
    "sdk_endpoint": "util",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCloudOnRampSaasStatus": {
    "path": "/v1/cloudonramp/saas",
    "method": "GET",
    "description": "Get Cloud On Ramp For Saas apps status",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCloudTunnelList": {
    "path": "/v1/cloudonramp/saas/cloud_tunnels",
    "method": "GET",
    "description": "Get Secure Internet Gateway Tunnel List",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPolicyGroupsWithCorSaasApps": {
    "path": "/v1/cloudonramp/saas/configuration",
    "method": "GET",
    "description": "Get Policy Groups that are deployed with Cloud on Ramp for Saas intent",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCorSitesPerDevice": {
    "path": "/v1/cloudonramp/saas/devices",
    "method": "GET",
    "description": "Get site, apps and device role information for cloud on ramp devices",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getInactiveCorSaasSites": {
    "path": "/v1/cloudonramp/saas/inactivesites",
    "method": "GET",
    "description": "Get inactive sites",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLegacyDeviceList": {
    "path": "/v1/cloudonramp/saas/legacydevicelist",
    "method": "GET",
    "description": "Get Legacy Devices List",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCorSaasStatusPerDevice": {
    "path": "/v1/cloudonramp/saas/status",
    "method": "GET",
    "description": "Get Cloud On Ramp App details per device",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWebexSyncStatus": {
    "path": "/v1/cloudonramp/saas/webexsyncstatus",
    "method": "GET",
    "description": "Get Webex's sync Status for devices with COR Saas enabled via config group or device template",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getConfigGroupBySolution": {
    "path": "/v1/config-group",
    "method": "GET",
    "description": "Get a Configuration Group by Solution",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createConfigGroup": {
    "path": "/v1/config-group",
    "method": "POST",
    "description": "Create a new Configuration Group",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_group",
    "sdk_method": "create_config_group",
    "use_rest": false
  },
  "getConfigGroup": {
    "path": "/v1/config-group/{configGroupId}",
    "method": "GET",
    "description": "Get a Configuration Group by ID",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editConfigGroup": {
    "path": "/v1/config-group/{configGroupId}",
    "method": "PUT",
    "description": "Edit a Configuration Group",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_group",
    "sdk_method": "edit_config_group",
    "use_rest": false
  },
  "deleteConfigGroup": {
    "path": "/v1/config-group/{configGroupId}",
    "method": "DELETE",
    "description": "Delete Config Group",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration_group",
    "sdk_method": "delete_config_group",
    "use_rest": false
  },
  "getConfigGroupAssociation": {
    "path": "/v1/config-group/{configGroupId}/device/associate",
    "method": "GET",
    "description": "Get devices association with a config group",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateConfigGroupAssociation": {
    "path": "/v1/config-group/{configGroupId}/device/associate",
    "method": "PUT",
    "description": "Move the devices from one config group to another",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "createConfigGroupAssociation": {
    "path": "/v1/config-group/{configGroupId}/device/associate",
    "method": "POST",
    "description": "Create associations with device and a config group",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "deleteConfigGroupAssociation": {
    "path": "/v1/config-group/{configGroupId}/device/associate",
    "method": "DELETE",
    "description": "Delete Config Group Association from devices",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "deployConfigGroup": {
    "path": "/v1/config-group/{configGroupId}/device/deploy",
    "method": "POST",
    "description": "deploy config group to devices<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view.",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getConfigGroupDeviceVariables": {
    "path": "/v1/config-group/{configGroupId}/device/variables",
    "method": "GET",
    "description": "Get device variables",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createConfigGroupDeviceVariables": {
    "path": "/v1/config-group/{configGroupId}/device/variables",
    "method": "PUT",
    "description": "assign values to device variables",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "fetchConfigGroupDeviceVariables": {
    "path": "/v1/config-group/{configGroupId}/device/variables",
    "method": "POST",
    "description": "Fetch device variables",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getConfigGroupDeviceVariablesSchema": {
    "path": "/v1/config-group/{configGroupId}/device/variables/schema",
    "method": "GET",
    "description": "get device variables schema",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getConfigGroupDeviceConfigurationPreview": {
    "path": "/v1/config-group/{configGroupId}/device/{deviceId}/preview",
    "method": "POST",
    "description": "Get a preview of the configuration for a device",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getRuleAssociationByConfigGroupId": {
    "path": "/v1/config-group/{configGroupId}/rules",
    "method": "GET",
    "description": "Get Rule by associated object Id, example : get rules by config group Id",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "analyzeCliConfig": {
    "path": "/v1/device/analyzeCliConfig",
    "method": "POST",
    "description": "Analyze CLI Config for device",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getRunningIosCliConfig": {
    "path": "/v1/device/runningIosCliConfig/{deviceUUID}",
    "method": "GET",
    "description": "Get Running iOS CLI Config for device",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getUnsupportedCliConfig": {
    "path": "/v1/device/unsupportedCliConfig/{deviceUUID}",
    "method": "GET",
    "description": "Get Unsupported CLI Config for device",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getMobilityCliFeatureProfile": {
    "path": "/v1/feature-profile/mobility/cli",
    "method": "GET",
    "description": "Get Mobility Cli Feature Profiles",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getMobilityCliFeatureProfileByCliId": {
    "path": "/v1/feature-profile/mobility/cli/{cliId}",
    "method": "GET",
    "description": "Get a Mobility Feature Profile with Cli profile type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAllConfigFeatureForMobility": {
    "path": "/v1/feature-profile/mobility/cli/{cliId}/config",
    "method": "GET",
    "description": "Get config Features for cli feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createConfigFeatureForMobility": {
    "path": "/v1/feature-profile/mobility/cli/{cliId}/config",
    "method": "POST",
    "description": "Create a config Feature for cli feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getConfigFeatureForMobilityByParcelId": {
    "path": "/v1/feature-profile/mobility/cli/{cliId}/config/{configId}",
    "method": "GET",
    "description": "Get config Feature by configId for cli feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editConfigFeatureForMobility": {
    "path": "/v1/feature-profile/mobility/cli/{cliId}/config/{configId}",
    "method": "PUT",
    "description": "Update a config Feature for cli feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteConfigFeatureForMobility": {
    "path": "/v1/feature-profile/mobility/cli/{cliId}/config/{configId}",
    "method": "DELETE",
    "description": "Delete a config Feature for cli feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getMobilityGlobalFeatureProfile": {
    "path": "/v1/feature-profile/mobility/global",
    "method": "GET",
    "description": "Get Mobility Global Feature Profiles",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getMobilityGlobalBasicParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/mobility/global/basic/schema",
    "method": "GET",
    "description": "Get a Mobility Global Basic Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getMobilityFeatureProfileByGlobalId": {
    "path": "/v1/feature-profile/mobility/global/{globalId}",
    "method": "GET",
    "description": "Get a Mobility Global Feature Profile by profileId",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getQosFeatureForGlobal": {
    "path": "/v1/feature-profile/mobility/global/{globalId}/qos",
    "method": "GET",
    "description": "Get Qos Feature for Global feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createQosFeatureForGlobal": {
    "path": "/v1/feature-profile/mobility/global/{globalId}/qos",
    "method": "POST",
    "description": "Create a Qos Feature for Global feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getQosFeatureByParcelIdForGlobal": {
    "path": "/v1/feature-profile/mobility/global/{globalId}/qos/{qosId}",
    "method": "GET",
    "description": "Get Qos Feature by parcelId for Global feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editQosFeatureForGlobal": {
    "path": "/v1/feature-profile/mobility/global/{globalId}/qos/{qosId}",
    "method": "PUT",
    "description": "Update a Qos Feature for Global feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteQosFeatureForGlobal": {
    "path": "/v1/feature-profile/mobility/global/{globalId}/qos/{qosId}",
    "method": "DELETE",
    "description": "Delete a Qos Feature for Global feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getAaaServersProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/aaaservers",
    "method": "GET",
    "description": "Get aaaservers Profile Parcels for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createAaaServersProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/aaaservers",
    "method": "POST",
    "description": "Create a aaaservers Profile Parcel for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getAaaServersProfileParcelByParcelIdForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/aaaservers/{aaaserversId}",
    "method": "GET",
    "description": "Get aaaservers Profile Parcel by parcelId for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editAaaServersProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/aaaservers/{aaaserversId}",
    "method": "PUT",
    "description": "Update a aaaservers Profile Parcel for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteAaaServersProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/aaaservers/{aaaserversId}",
    "method": "DELETE",
    "description": "Delete a aaaservers Profile Parcel for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getBasicProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/basic",
    "method": "GET",
    "description": "Get Basic Profile Parcels for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createBasicProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/basic",
    "method": "POST",
    "description": "Create a Basic Profile Parcel for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getBasicProfileParcelByParcelIdForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/basic/{parcelId}",
    "method": "GET",
    "description": "Get Basic Profile Parcel by parcelId for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editBasicProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/basic/{parcelId}",
    "method": "PUT",
    "description": "Update a Basic Profile Parcel for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteBasicProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/basic/{parcelId}",
    "method": "DELETE",
    "description": "Delete a Basic Profile Parcel for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getCellularProfileParcelListForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/cellular",
    "method": "GET",
    "description": "Get an Mobility Cellular Profile Parcel list for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createCellularProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/cellular",
    "method": "POST",
    "description": "Create an cellular Profile Parcel for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getCellularProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/cellular/{cellularId}",
    "method": "GET",
    "description": "Get an Mobility Cellular Profile Parcel for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editCellularProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/cellular/{cellularId}",
    "method": "PUT",
    "description": "Edit an Cellular Profile Parcel for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteACellularProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/cellular/{cellularId}",
    "method": "DELETE",
    "description": "Delete a Cellular Profile Parcel for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getEsimCellularProfileFeatureForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/esimcellular",
    "method": "GET",
    "description": "Get EsimCellular Profile Features for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createEsimCellularProfileFeatureForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/esimcellular",
    "method": "POST",
    "description": "Create a EsimCellular Profile Feature for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getEsimCellularProfileFeatureByEsimCellularIdForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/esimcellular/{esimCellularId}",
    "method": "GET",
    "description": "Get EsimCellular Profile Feature by Feature Id for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editEsimCellularProfileFeatureForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/esimcellular/{esimCellularId}",
    "method": "PUT",
    "description": "Update a EsimCellular Profile Feature for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteEsimCellularProfileFeatureForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/esimcellular/{esimCellularId}",
    "method": "DELETE",
    "description": "Delete a EsimCellular Profile Feature for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getEthernetProfileParcels": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/ethernet",
    "method": "GET",
    "description": "Get Ethernet Profile Parcels for feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createEthernetProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/ethernet",
    "method": "POST",
    "description": "Create an ethernet Profile Parcel for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getEthernetProfileParcel": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/ethernet/{ethernetId}",
    "method": "GET",
    "description": "Get Ethernet Profile Parcels for feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editEthernetProfileParcelForSystem": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/ethernet/{ethernetId}",
    "method": "PUT",
    "description": "Update a Ethernet Profile Parcel for feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteEthernetProfileParcelForSystem": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/ethernet/{ethernetId}",
    "method": "DELETE",
    "description": "Delete a Ethernet Profile Parcel for feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getLoggingProfileFeatureForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/logging",
    "method": "GET",
    "description": "Get Logging Profile Features for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createLoggingProfileFeatureForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/logging",
    "method": "POST",
    "description": "Create a Logging Profile Feature for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getLoggingProfileFeatureByFeatureIdForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/logging/{loggingId}",
    "method": "GET",
    "description": "Get Logging Profile Feature by parcelId for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editLoggingProfileFeatureForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/logging/{loggingId}",
    "method": "PUT",
    "description": "Update a Logging Profile Feature for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteLoggingProfileFeatureForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/logging/{loggingId}",
    "method": "DELETE",
    "description": "Delete a Logging Profile Feature for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getNetworkProtocolProfileParcelListForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/networkProtocol",
    "method": "GET",
    "description": "Get an Mobility NetworkProtocol Profile Parcel list for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createNetworkProtocolProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/networkProtocol",
    "method": "POST",
    "description": "Create an NetworkProtocol Profile Parcel for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNetworkProtocolProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/networkProtocol/{networkProtocolId}",
    "method": "GET",
    "description": "Get an Mobility NetworkProtocol Profile Parcel for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editNetworkProtocolProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/networkProtocol/{networkProtocolId}",
    "method": "PUT",
    "description": "Edit an Network Protocol Profile Parcel for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteNetworkProtocolProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/networkProtocol/{networkProtocolId}",
    "method": "DELETE",
    "description": "Delete a Network Protocol Profile Parcel for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSecurityPolicyProfileParcelListForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/securityPolicy",
    "method": "GET",
    "description": "Get an Mobility SecurityPolicy Profile Parcel list for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSecurityPolicyProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/securityPolicy",
    "method": "POST",
    "description": "Create an SecurityPolicy Profile Parcel for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSecurityPolicyProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/securityPolicy/{securityPolicyId}",
    "method": "GET",
    "description": "Get an Mobility SecurityPolicy Profile Parcel for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSecurityPolicyProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/securityPolicy/{securityPolicyId}",
    "method": "PUT",
    "description": "Edit an Security Policy Profile Parcel for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSecurityPolicyProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/securityPolicy/{securityPolicyId}",
    "method": "DELETE",
    "description": "Delete a Security Policy Profile Parcel for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getVpnProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/vpn",
    "method": "GET",
    "description": "Get VPN Profile Parcels for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createVpnProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/vpn",
    "method": "POST",
    "description": "Create a VPN Profile Parcel for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getVpnProfileParcelByParcelIdForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/vpn/{vpnId}",
    "method": "GET",
    "description": "Get VPN Profile Parcel by parcelId for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editVpnProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/vpn/{vpnId}",
    "method": "PUT",
    "description": "Update a VPN Profile Parcel for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteVpnProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/vpn/{vpnId}",
    "method": "DELETE",
    "description": "Delete a VPN Profile Parcel for Mobility Global Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getWifiProfileParcelListForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/wifi",
    "method": "GET",
    "description": "Get Wifi Profile Parcel List for Mobility feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createWifiProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/wifi",
    "method": "POST",
    "description": "Create an Wifi Profile Parcel for Mobility feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getWifiProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/wifi/{wifiId}",
    "method": "GET",
    "description": "Get an Wifi Profile Parcel for Mobility feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editWifiProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/wifi/{wifiId}",
    "method": "PUT",
    "description": "Edit an Wifi Profile Parcel for Mobility feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteWifiProfileParcelForMobility": {
    "path": "/v1/feature-profile/mobility/global/{profileId}/wifi/{wifiId}",
    "method": "DELETE",
    "description": "Delete an Wifi Profile Parcel for Mobility feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getAllNfvirtualCLIFeatureProfiles": {
    "path": "/v1/feature-profile/nfvirtual/cli",
    "method": "GET",
    "description": "Get all Nfvirtual CLI Feature Profiles",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createNfvirtualCLIFeatureProfile": {
    "path": "/v1/feature-profile/nfvirtual/cli",
    "method": "POST",
    "description": "Create a Nfvirtual CLI Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNfvirtualCLIFeatureProfileByid": {
    "path": "/v1/feature-profile/nfvirtual/cli/{cliId}",
    "method": "GET",
    "description": "Get nfvirtual CLI Feature Profile with cliId",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editNfvirtualCLIFeatureProfile": {
    "path": "/v1/feature-profile/nfvirtual/cli/{cliId}",
    "method": "PUT",
    "description": "Edit a Nfvirtual CLI Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteNfvirtualCLIFeatureProfile": {
    "path": "/v1/feature-profile/nfvirtual/cli/{cliId}",
    "method": "DELETE",
    "description": "Delete nfvirtual CLI Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "createNfvirtualCLIParcel": {
    "path": "/v1/feature-profile/nfvirtual/cli/{cliId}/config",
    "method": "POST",
    "description": "Create CLI Profile Parcel for CLI feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNfvirtualCLIParcel": {
    "path": "/v1/feature-profile/nfvirtual/cli/{cliId}/config/{configId}",
    "method": "GET",
    "description": "Get CLI Profile Parcels for CLI feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editNfvirtualCLIParcel": {
    "path": "/v1/feature-profile/nfvirtual/cli/{cliId}/config/{configId}",
    "method": "PUT",
    "description": "Edit CLI Profile Parcel for CLI feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteNfvirtualCLIParcel": {
    "path": "/v1/feature-profile/nfvirtual/cli/{cliId}/config/{configId}",
    "method": "DELETE",
    "description": "Delete CLI Profile Parcel for CLI feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getAllNfvirtualNetworksFeatureProfiles": {
    "path": "/v1/feature-profile/nfvirtual/networks",
    "method": "GET",
    "description": "Get all Nfvirtual Feature Profiles",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createNfvirtualNetworksFeatureProfile": {
    "path": "/v1/feature-profile/nfvirtual/networks",
    "method": "POST",
    "description": "Create a nfvirtual Networks Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getAllNfvirtualOvsNetworksFeatureProfileByProfileId": {
    "path": "/v1/feature-profile/nfvirtual/networks/ovsnetwork/{networkId}",
    "method": "GET",
    "description": "Get all Nfvirtual OVS Networks Feature Profile with networkId",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getNfvirtualNetworksFeatureProfileByProfileId": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networkId}",
    "method": "GET",
    "description": "Get a Nfvirtual Networks Feature Profile with networkId",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editNfvirtualNetworksFeatureProfile": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networkId}",
    "method": "PUT",
    "description": "Edit a Nfvirtual Networks Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteNfvirtualNetworksFeatureProfile": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networkId}",
    "method": "DELETE",
    "description": "Delete a Nfvirtual Networks Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "createNfvirtualLANParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/lan",
    "method": "POST",
    "description": "Create LAN Profile Parcel for Networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNfvirtualLANParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/lan/{lanId}",
    "method": "GET",
    "description": "Get LAN Profile Parcels for Networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editNfvirtualLANParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/lan/{lanId}",
    "method": "PUT",
    "description": "Edit a  LAN Profile Parcel for networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteNfvirtualLANParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/lan/{lanId}",
    "method": "DELETE",
    "description": "Delete a LAN Profile Parcel for Networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "createNfvirtualOVSNetworkParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/ovsnetwork",
    "method": "POST",
    "description": "Create OVS Network Profile Parcel for Networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNfvirtualOVSNetworkParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/ovsnetwork/{ovsNetworkId}",
    "method": "GET",
    "description": "Get OVS Network Profile Parcels for Networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editNfvirtualOVSNetworkParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/ovsnetwork/{ovsNetworkId}",
    "method": "PUT",
    "description": "Edit a OVS Network Profile Parcel for Networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteNfvirtualOVSNetworkParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/ovsnetwork/{ovsNetworkId}",
    "method": "DELETE",
    "description": "Delete a OVS Network Profile Parcel for Networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "createNfvirtualRoutesParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/routes",
    "method": "POST",
    "description": "Create Routes Profile config for Networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNfvirtualRoutesParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/routes/{routesId}",
    "method": "GET",
    "description": "Get Routes Profile Parcels for Networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editNfvirtualRoutesParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/routes/{routesId}",
    "method": "PUT",
    "description": "Edit a Routes Profile Parcel for networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteNfvirtualRoutesParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/routes/{routesId}",
    "method": "DELETE",
    "description": "Delete Routes Profile config for Networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "createNfvirtualSwitchParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/switch",
    "method": "POST",
    "description": "Create Switch Profile config for Networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNfvirtualSwitchParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/switch/{switchId}",
    "method": "GET",
    "description": "Get Switch Profile Parcels for Networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editNfvirtualSwitchParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/switch/{switchId}",
    "method": "PUT",
    "description": "Edit a Switch Profile Parcel for networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteNfvirtualSwitchParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/switch/{switchId}",
    "method": "DELETE",
    "description": "Delete Switch Profile config for Networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "createNfvirtualVNFAttributesParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/vnf-attributes",
    "method": "POST",
    "description": "Create VNF Attributes Profile config for Networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNfvirtualVNFAttributesParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/vnf-attributes/{vnfAttributesId}",
    "method": "GET",
    "description": "Get VNF Attributes Profile Parcels for Networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editNfvirtualVNFAttributesParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/vnf-attributes/{vnfAttributesId}",
    "method": "PUT",
    "description": "Edit a VNF Attributes Profile Parcel for networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteNfvirtualVNFAttributesParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/vnf-attributes/{vnfAttributesId}",
    "method": "DELETE",
    "description": "Delete VNF Attributes Profile config for Networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "createNfvirtualVNFParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/vnf-attributes/{vnfAttributesId}/vnf",
    "method": "POST",
    "description": "Create VNF Profile Parcel for Networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNfvirtualVNFParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/vnf-attributes/{vnfAttributesId}/vnf/{vnfId}",
    "method": "GET",
    "description": "Get VNF Profile Parcels for Networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editNfvirtualVNFParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/vnf-attributes/{vnfAttributesId}/vnf/{vnfId}",
    "method": "PUT",
    "description": "Edit a VNF Profile Parcel for networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteNfvirtualVNFParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/vnf-attributes/{vnfAttributesId}/vnf/{vnfId}",
    "method": "DELETE",
    "description": "Delete a VNF Profile Parcel for Networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "createNfvirtualWanParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/wan",
    "method": "POST",
    "description": "Create a WAN Profile Parcel for Networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNfvirtualWANParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/wan/{wanId}",
    "method": "GET",
    "description": "Get WAN Profile Parcels for Networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editNfvirtualWANParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/wan/{wanId}",
    "method": "PUT",
    "description": "Edit a WAN Profile Parcel for networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteNfvirtualWANParcel": {
    "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/wan/{wanId}",
    "method": "DELETE",
    "description": "Delete a WAN Profile Parcel for Networks feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getAllNfvirtualSystemFeatureProfiles": {
    "path": "/v1/feature-profile/nfvirtual/system",
    "method": "GET",
    "description": "Get all Nfvirtual System Feature Profiles",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createNfvirtualSystemFeatureProfile": {
    "path": "/v1/feature-profile/nfvirtual/system",
    "method": "POST",
    "description": "Create a nfvirtual System Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNfvirtualSystemFeatureProfileByProfileId": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}",
    "method": "GET",
    "description": "Get a Nfvirtual System Feature Profile with systemId",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editNfvirtualSystemFeatureProfile": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}",
    "method": "PUT",
    "description": "Edit a Nfvirtual System Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteNfvirtualSystemFeatureProfile": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}",
    "method": "DELETE",
    "description": "Delete a Nfvirtual System Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "createNfvirtualAAAParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/aaa",
    "method": "POST",
    "description": "Create AAA Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNfvirtualAAAParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/aaa/{aaaId}",
    "method": "GET",
    "description": "Get AAA Profile Parcels for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editNfvirtualAAAParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/aaa/{aaaId}",
    "method": "PUT",
    "description": "Edit a  AAA Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteNfvirtualAAAParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/aaa/{aaaId}",
    "method": "DELETE",
    "description": "Delete a AAA Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "createNfvirtualBannerParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/banner",
    "method": "POST",
    "description": "Create Banner Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNfvirtualBannerParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/banner/{bannerId}",
    "method": "GET",
    "description": "Get Banner Profile Parcels for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editNfvirtualBannerParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/banner/{bannerId}",
    "method": "PUT",
    "description": "Edit a  Banner Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteNfvirtualBannerParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/banner/{bannerId}",
    "method": "DELETE",
    "description": "Delete a Banner Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "createNfvirtualLoggingParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/logging",
    "method": "POST",
    "description": "Create Logging Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNfvirtualLoggingParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/logging/{loggingId}",
    "method": "GET",
    "description": "Get Logging Profile Parcels for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editNfvirtualLoggingParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/logging/{loggingId}",
    "method": "PUT",
    "description": "Edit a  Logging Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteNfvirtualLoggingParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/logging/{loggingId}",
    "method": "DELETE",
    "description": "Delete a Logging Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "createNfvirtualNTPParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/ntp",
    "method": "POST",
    "description": "Create NTP Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNfvirtualNTPParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/ntp/{ntpId}",
    "method": "GET",
    "description": "Get NTP Profile Parcels for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editNfvirtualNTPParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/ntp/{ntpId}",
    "method": "PUT",
    "description": "Edit a  NTP Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteNfvirtualNTPParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/ntp/{ntpId}",
    "method": "DELETE",
    "description": "Delete a NTP Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "createNfvirtualSNMPParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/snmp",
    "method": "POST",
    "description": "Create SNMP Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNfvirtualSNMPParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/snmp/{snmpId}",
    "method": "GET",
    "description": "Get SNMP Profile Parcels for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editNfvirtualSNMPParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/snmp/{snmpId}",
    "method": "PUT",
    "description": "Edit a  SNMP Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteNfvirtualSNMPParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/snmp/{snmpId}",
    "method": "DELETE",
    "description": "Delete a SNMP Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "createNfvirtualSystemSettingsParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/system-settings",
    "method": "POST",
    "description": "Create System settings  Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNfvirtualSystemSettingsParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/system-settings/{systemSettingsId}",
    "method": "GET",
    "description": "Get System Settings Profile Parcels for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editNfvirtualSystemSettingsParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/system-settings/{systemSettingsId}",
    "method": "PUT",
    "description": "Edit a System Settings Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteNfvirtualSystemSettingsParcel": {
    "path": "/v1/feature-profile/nfvirtual/system/{systemId}/system-settings/{systemSettingsId}",
    "method": "DELETE",
    "description": "Delete System settings Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingFeatureProfiles": {
    "path": "/v1/feature-profile/sd-routing",
    "method": "GET",
    "description": "Get all SD-Routing Feature Profiles",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdroutingCliFeatureProfiles": {
    "path": "/v1/feature-profile/sd-routing/cli",
    "method": "GET",
    "description": "Get all SD-Routing CLI Feature Profiles",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingCliFeatureProfile": {
    "path": "/v1/feature-profile/sd-routing/cli",
    "method": "POST",
    "description": "Create a SD-Routing CLI Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingCliFeatureProfile": {
    "path": "/v1/feature-profile/sd-routing/cli/{cliId}",
    "method": "GET",
    "description": "Get a SD-Routing CLI Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingCliFeatureProfile": {
    "path": "/v1/feature-profile/sd-routing/cli/{cliId}",
    "method": "PUT",
    "description": "Edit a SD-Routing CLI Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingCliFeatureProfile": {
    "path": "/v1/feature-profile/sd-routing/cli/{cliId}",
    "method": "DELETE",
    "description": "Delete a SD-Routing CLI Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingCLIAddOnFeatures": {
    "path": "/v1/feature-profile/sd-routing/cli/{cliId}/config",
    "method": "GET",
    "description": "Get all SD-Routing CLI Add-On Features for CLI Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingCLIAddOnFeature": {
    "path": "/v1/feature-profile/sd-routing/cli/{cliId}/config",
    "method": "POST",
    "description": "Create a SD-Routing CLI Add-On Feature for CLI Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingCLIAddOnFeature": {
    "path": "/v1/feature-profile/sd-routing/cli/{cliId}/config/{configId}",
    "method": "GET",
    "description": "Get a SD-Routing CLI Add-On Feature for CLI Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingCLIAddOnFeature": {
    "path": "/v1/feature-profile/sd-routing/cli/{cliId}/config/{configId}",
    "method": "PUT",
    "description": "Edit a SD-Routing CLI Add-On Feature for CLI Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingCLIAddOnFeature": {
    "path": "/v1/feature-profile/sd-routing/cli/{cliId}/config/{configId}",
    "method": "DELETE",
    "description": "Delete a SD-Routing CLI Add-On Feature for CLI Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingCliConfigGroupFeatures": {
    "path": "/v1/feature-profile/sd-routing/cli/{cliId}/full-config",
    "method": "GET",
    "description": "Get the CLI Configuration by CLI profile ID",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingCliConfigGroupFeature": {
    "path": "/v1/feature-profile/sd-routing/cli/{cliId}/full-config",
    "method": "POST",
    "description": "Create a SD-Routing CLI Configuration Group",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingCliConfigGroupFeature": {
    "path": "/v1/feature-profile/sd-routing/cli/{cliId}/full-config/{fullConfigId}",
    "method": "GET",
    "description": "Get the CLI Configuration by CLI profile ID and Config Feature ID",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingCliConfigGroupFeature": {
    "path": "/v1/feature-profile/sd-routing/cli/{cliId}/full-config/{fullConfigId}",
    "method": "PUT",
    "description": "Edit a SD-Routing CLI Configuration Group",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingCliConfigGroupFeature": {
    "path": "/v1/feature-profile/sd-routing/cli/{cliId}/full-config/{fullConfigId}",
    "method": "DELETE",
    "description": "Delete a SD-Routing CLI Configuration Group",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingIosCLassicCLIAddOnFeatures": {
    "path": "/v1/feature-profile/sd-routing/cli/{cliId}/ios-config",
    "method": "GET",
    "description": "SD-Routing Ios Classic CLI Add-On Features for CLI Feature Profile for GET requests",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingIosClassicCLIAddOnFeature": {
    "path": "/v1/feature-profile/sd-routing/cli/{cliId}/ios-config",
    "method": "POST",
    "description": "SD-Routing Ios Classic CLI Add-On Feature for CLI Feature Profile for POST requests",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingIosClassicCLIAddOnFeature": {
    "path": "/v1/feature-profile/sd-routing/cli/{cliId}/ios-config/{iosConfigId}",
    "method": "GET",
    "description": "SD-Routing Ios Classic CLI Add-On Feature for CLI Feature Profile for GET requests",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingIosClassicCLIAddOnFeature": {
    "path": "/v1/feature-profile/sd-routing/cli/{cliId}/ios-config/{iosConfigId}",
    "method": "PUT",
    "description": "SD-Routing Ios Classic CLI Add-On Feature for CLI Feature Profile for PUT requests",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingIosClassicCLIAddOnFeature": {
    "path": "/v1/feature-profile/sd-routing/cli/{cliId}/ios-config/{iosConfigId}",
    "method": "DELETE",
    "description": "Delete a SD-Routing Ios Classic CLI Add-On Feature for CLI Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdRoutingEmbeddedSecurityFeatureProfiles": {
    "path": "/v1/feature-profile/sd-routing/embedded-security",
    "method": "GET",
    "description": "Get all SD-ROUTING Feature Profiles with giving Family and profile type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdRoutingEmbeddedSecurityFeatureProfile": {
    "path": "/v1/feature-profile/sd-routing/embedded-security",
    "method": "POST",
    "description": "Create a SD-ROUTING Embedded Security Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdRoutingEmbeddedSecurityFeatureProfileByProfileId": {
    "path": "/v1/feature-profile/sd-routing/embedded-security/{embeddedSecurityId}",
    "method": "GET",
    "description": "Get a SD-ROUTING Embedded Security Feature Profile with embeddedSecurityId",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdRoutingEmbeddedSecurityFeatureProfile": {
    "path": "/v1/feature-profile/sd-routing/embedded-security/{embeddedSecurityId}",
    "method": "PUT",
    "description": "Edit a SD-ROUTING Embedded Security Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdRoutingEmbeddedSecurityFeatureProfile": {
    "path": "/v1/feature-profile/sd-routing/embedded-security/{embeddedSecurityId}",
    "method": "DELETE",
    "description": "Delete Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSecurityFeature": {
    "path": "/v1/feature-profile/sd-routing/embedded-security/{securityId}/policy",
    "method": "GET",
    "description": "Get Security Features for a given FeatureType",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createEmbeddedSecurityFeature": {
    "path": "/v1/feature-profile/sd-routing/embedded-security/{securityId}/policy",
    "method": "POST",
    "description": "Create Feature for Security Policy",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSecurityFeatureByFeatureId": {
    "path": "/v1/feature-profile/sd-routing/embedded-security/{securityId}/policy/{securityProfileParcelId}",
    "method": "GET",
    "description": "Get Security Feature by FeatureId",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSecurityFeature": {
    "path": "/v1/feature-profile/sd-routing/embedded-security/{securityId}/policy/{securityProfileParcelId}",
    "method": "PUT",
    "description": "Update a Security Feature",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSecurityFeature": {
    "path": "/v1/feature-profile/sd-routing/embedded-security/{securityId}/policy/{securityProfileParcelId}",
    "method": "DELETE",
    "description": "Delete a Security Feature",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getNgfirewallFeature": {
    "path": "/v1/feature-profile/sd-routing/embedded-security/{securityId}/unified/ngfirewall",
    "method": "GET",
    "description": "Get Ngfirewall Feature",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createNgfirewallFeature": {
    "path": "/v1/feature-profile/sd-routing/embedded-security/{securityId}/unified/ngfirewall",
    "method": "POST",
    "description": "Create Parcel for Ngfirewall Policy",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNgfirewallFeatureByFeatureId": {
    "path": "/v1/feature-profile/sd-routing/embedded-security/{securityId}/unified/ngfirewall/{securityProfileParcelId}",
    "method": "GET",
    "description": "Get Ngfirewall Feature by FeatureId",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editNgfirewallFeature": {
    "path": "/v1/feature-profile/sd-routing/embedded-security/{securityId}/unified/ngfirewall/{securityProfileParcelId}",
    "method": "PUT",
    "description": "Update a Ngfirewall Feature",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteNgfirewallFeature": {
    "path": "/v1/feature-profile/sd-routing/embedded-security/{securityId}/unified/ngfirewall/{securityProfileParcelId}",
    "method": "DELETE",
    "description": "Delete a Ngfirewall Feature",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getCybervisionProfileFeatureForOther": {
    "path": "/v1/feature-profile/sd-routing/other/{otherId}/cybervision",
    "method": "GET",
    "description": "Get Cybervision Profile feature for Other feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createCybervisionProfileFeatureForOther": {
    "path": "/v1/feature-profile/sd-routing/other/{otherId}/cybervision",
    "method": "POST",
    "description": "Create a Cybervision Profile feature for Other feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getCybervisionProfileFeatureByFeatureIdForOther": {
    "path": "/v1/feature-profile/sd-routing/other/{otherId}/cybervision/{cybervisionId}",
    "method": "GET",
    "description": "Get Cybervision Profile feature by FeatureId for Other feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editCybervisionProfileFeatureForOther": {
    "path": "/v1/feature-profile/sd-routing/other/{otherId}/cybervision/{cybervisionId}",
    "method": "PUT",
    "description": "Update a Cybervision Profile feature for Other feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteCybervisionProfileFeatureForOther": {
    "path": "/v1/feature-profile/sd-routing/other/{otherId}/cybervision/{cybervisionId}",
    "method": "DELETE",
    "description": "Delete a Cybervision Profile feature for Other feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingServiceFeatureProfiles": {
    "path": "/v1/feature-profile/sd-routing/service",
    "method": "GET",
    "description": "Get all SD-Routing Service Feature Profiles",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingServiceFeatureProfile": {
    "path": "/v1/feature-profile/sd-routing/service",
    "method": "POST",
    "description": "Create a SD-Routing Service Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingServiceFeatureProfile": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}",
    "method": "GET",
    "description": "Get a SD-Routing Service Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingServiceFeatureProfile": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}",
    "method": "PUT",
    "description": "Edit a SD-Routing Service Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingServiceFeatureProfile": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}",
    "method": "DELETE",
    "description": "Delete a SD-Routing Service Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingDhcpServerProfileParcels": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/dhcp-server",
    "method": "GET",
    "description": "Get all SD-Routing DHCP Server features in service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingDhcpServerProfileParcel": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/dhcp-server",
    "method": "POST",
    "description": "Create a SD-Routing DHCP Server feature in service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingDhcpServerProfileParcel": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/dhcp-server/{dhcpServerId}",
    "method": "GET",
    "description": "Get a SD-Routing DHCP Server feature in service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingDhcpServerProfileParcel": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/dhcp-server/{dhcpServerId}",
    "method": "PUT",
    "description": "Edit a SD-Routing DHCP Server feature in service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingDhcpServerProfileParcel": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/dhcp-server/{dhcpServerId}",
    "method": "DELETE",
    "description": "Delete a SD-Routing DHCP Server feature in service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingServiceIpsecProfileFeatures": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/ipsec-profile",
    "method": "GET",
    "description": "Get all SD-Routing IPSec profile features from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingServiceIpsecProfileFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/ipsec-profile",
    "method": "POST",
    "description": "Create a SD-Routing IPSec profile feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingServiceIpsecProfileFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/ipsec-profile/{ipsecProfileId}",
    "method": "GET",
    "description": "Get the SD-Routing IPSec profile feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingServiceIpsecProfileFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/ipsec-profile/{ipsecProfileId}",
    "method": "PUT",
    "description": "Edit the SD-Routing IPSec profile feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingServiceIpsecProfileFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/ipsec-profile/{ipsecProfileId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing IPSec profile feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingServiceIpv4AclFeatures": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/ipv4-acl",
    "method": "GET",
    "description": "Get all SD-Routing IPv4 ACL features from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingServiceIpv4AclFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/ipv4-acl",
    "method": "POST",
    "description": "Create a SD-Routing IPv4 ACL feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingServiceIpv4AclFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/ipv4-acl/{ipv4AclId}",
    "method": "GET",
    "description": "Get the SD-Routing IPv4 ACL feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingServiceIpv4AclFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/ipv4-acl/{ipv4AclId}",
    "method": "PUT",
    "description": "Edit the SD-Routing IPv4 ACL feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingServiceIpv4AclFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/ipv4-acl/{ipv4AclId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing IPv4 ACL feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getListOfProfileParcels": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ipsec",
    "method": "GET",
    "description": "Get InterfaceIpsec Parcels for Service LanVpn Parcel",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createMultiCloudConnection": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/multicloud-connection",
    "method": "POST",
    "description": "Associate a MultiCloudConnection Parcel for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getMultiCloudConnection": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/multicloud-connection/{multiCloudConnectionId}",
    "method": "GET",
    "description": "Get a multicloud connection parcel",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editMultiCloudConnection": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/multicloud-connection/{multiCloudConnectionId}",
    "method": "PUT",
    "description": "Update a multicloud connection parcel",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteMultiCloudConnectionParcelForService": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/multicloud-connection/{multiCloudConnectionId}",
    "method": "DELETE",
    "description": "Delete a MultiCloud Connection Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingServiceObjectTrackerFeatures": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/objecttracker",
    "method": "GET",
    "description": "Get all SD-Routing object tracker features from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingServiceObjectTrackerFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/objecttracker",
    "method": "POST",
    "description": "Create a SD-Routing object tracker feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingServiceObjectTrackerFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/objecttracker/{objectTrackerId}",
    "method": "GET",
    "description": "Get the SD-Routing object tracker feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingServiceObjectTrackerFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/objecttracker/{objectTrackerId}",
    "method": "PUT",
    "description": "Edit the SD-Routing object tracker feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingServiceObjectTrackerFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/objecttracker/{objectTrackerId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing object tracker feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingServiceObjectTrackerGroupFeatures": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/objecttrackergroup",
    "method": "GET",
    "description": "Get all SD-Routing object tracker group features from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingServiceObjectTrackerGroupFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/objecttrackergroup",
    "method": "POST",
    "description": "Create a SD-Routing object tracker group feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingServiceObjectTrackerGroupFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/objecttrackergroup/{objectTrackerGroupId}",
    "method": "GET",
    "description": "Get the SD-Routing object tracker group feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingServiceObjectTrackerGroupFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/objecttrackergroup/{objectTrackerGroupId}",
    "method": "PUT",
    "description": "Edit the SD-Routing object tracker group feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingServiceObjectTrackerGroupFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/objecttrackergroup/{objectTrackerGroupId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing object tracker group feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingServiceRoutePolicyFeatures": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/route-policy",
    "method": "GET",
    "description": "Get all SD-Routing route policy features from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingServiceRoutePolicyFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/route-policy",
    "method": "POST",
    "description": "Create a SD-Routing route policy feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingServiceRoutePolicyFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/route-policy/{routePolicyId}",
    "method": "GET",
    "description": "Get the SD-Routing route policy feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingServiceRoutePolicyFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/route-policy/{routePolicyId}",
    "method": "PUT",
    "description": "Edit the SD-Routing route policy feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingServiceRoutePolicyFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/route-policy/{routePolicyId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing route policy feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingServiceVrfOspfFeatures": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospf",
    "method": "GET",
    "description": "Get all SD-Routing LAN OSPF features for service VRF from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingServiceVrfOspfFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospf",
    "method": "POST",
    "description": "Create a SD-Routing LAN OSPF feature for service VRF from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingServiceVrfOspfFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospf/{ospfId}",
    "method": "GET",
    "description": "Get the SD-Routing LAN OSPF feature for service VRF from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingServiceVrfOspfFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospf/{ospfId}",
    "method": "PUT",
    "description": "Edit the SD-Routing LAN OSPF feature for service VRF from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingServiceVrfOspfFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospf/{ospfId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing LAN OSPF feature for service VRF from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingServiceVrfOspfv3Ipv4Features": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospfv3/ipv4",
    "method": "GET",
    "description": "Get all SD-Routing LAN OSPFv3 IPv4 features from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingServiceVrfOspfv3Ipv4Feature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospfv3/ipv4",
    "method": "POST",
    "description": "Create a SD-Routing LAN OSPFv3 IPv4 feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingServiceVrfOspfv3Ipv4Feature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "GET",
    "description": "Get the SD-Routing LAN OSPFv3 IPv4 feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingServiceVrfOspfv3Ipv4Feature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "PUT",
    "description": "Edit the SD-Routing LAN OSPFv3 IPv4 feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingServiceVrfOspfv3Ipv4Feature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "DELETE",
    "description": "Delete the SD-Routing LAN OSPFv3 IPv4 feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingServiceVrfOspfv3Ipv6Features": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospfv3/ipv6",
    "method": "GET",
    "description": "Get all SD-Routing LAN OSPFv3 IPv6 features from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingServiceVrfOspfv3Ipv6Feature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospfv3/ipv6",
    "method": "POST",
    "description": "Create a SD-Routing LAN OSPFv3 IPv6 feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingServiceVrfOspfv3Ipv6Feature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "GET",
    "description": "Get the SD-Routing LAN OSPFv3 IPv6 feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingServiceVrfOspfv3Ipv6Feature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "PUT",
    "description": "Edit the SD-Routing LAN OSPFv3 IPv6 feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingServiceVrfOspfv3Ipv6Feature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "DELETE",
    "description": "Delete the SD-Routing LAN OSPFv3 IPv6 feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingServiceVRFFeatures": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf",
    "method": "GET",
    "description": "Get all SD-Routing VRF features from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingServiceVRFFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf",
    "method": "POST",
    "description": "Create a SD-Routing VRF feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingServiceVrfBgpFeatures": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/routing/bgp",
    "method": "GET",
    "description": "Get all SD-Routing LAN BGP features from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingServiceVrfBgpFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/routing/bgp",
    "method": "POST",
    "description": "Create a SD-Routing LAN BGP feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingServiceVrfBgpFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/routing/bgp/{bgpId}",
    "method": "GET",
    "description": "Get the SD-Routing LAN BGP feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingServiceVrfBgpFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/routing/bgp/{bgpId}",
    "method": "PUT",
    "description": "Edit the SD-Routing LAN BGP feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingServiceVrfBgpFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/routing/bgp/{bgpId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing LAN BGP feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingServiceVrfEigrpFeatures": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/routing/eigrp",
    "method": "GET",
    "description": "Get all SD-Routing VRF EIGRP features from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingServiceVrfEigrpFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/routing/eigrp",
    "method": "POST",
    "description": "Create a SD-Routing VRF EIGRP feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingServiceVrfEigrpFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/routing/eigrp/{eigrpId}",
    "method": "GET",
    "description": "Get the SD-Routing VRF EIGRP feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingServiceVrfEigrpFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/routing/eigrp/{eigrpId}",
    "method": "PUT",
    "description": "Edit the SD-Routing VRF EIGRP feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingServiceVrfEigrpFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/routing/eigrp/{eigrpId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing VRF EIGRP feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingServiceVRFFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}",
    "method": "GET",
    "description": "Get the SD-Routing VRF feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingServiceVRFFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}",
    "method": "PUT",
    "description": "Edit the SD-Routing VRF feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingServiceVRFFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing VRF feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingServiceVRFDmvpnTunnelFeatures": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/dmvpn-tunnel",
    "method": "GET",
    "description": "Get all SD-Routing VRF DMVPN Tunnel features from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingServiceVRFDmvpnTunnelFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/dmvpn-tunnel",
    "method": "POST",
    "description": "Create a SD-Routing VRF DMVPN Tunnel feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingServiceVRFDmvpnTunnelFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/dmvpn-tunnel/{tunnelId}",
    "method": "GET",
    "description": "Get the SD-Routing VRF DMVPN Tunnel feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingServiceVRFDmvpnTunnelFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/dmvpn-tunnel/{tunnelId}",
    "method": "PUT",
    "description": "Edit the SD-Routing VRF DMVPN Tunnel feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingServiceVRFDmvpnTunnelFeature": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/dmvpn-tunnel/{tunnelId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing VRF DMVPN Tunnel feature from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingServiceVrfInterfaceEthernetFeaturesForService": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ethernet",
    "method": "GET",
    "description": "Get all ethernet interface features from a specific service VRF feature in service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingServiceVrfInterfaceEthernetFeatureForService": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ethernet",
    "method": "POST",
    "description": "Create a SD-Routing ethernet interface feature from a specific service VRF feature in service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingServiceVrfInterfaceEthernetFeatureByFeatureIdForService": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ethernet/{ethernetId}",
    "method": "GET",
    "description": "Get the SD-Routing ethernet interface feature from a specific service VRF feature by feature ID in service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingServiceVrfInterfaceEthernetFeatureForService": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ethernet/{ethernetId}",
    "method": "PUT",
    "description": "Edit the SD-Routing ethernet interface feature from a specific service VRF feature in service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingServiceVrfInterfaceEthernetFeatureForService": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ethernet/{ethernetId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing ethernet interface feature from a specific service VRF feature in service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getVrfInterfaceEthernetAssociatedDhcpServerParcelsForService": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ethernet/{ethernetId}/dhcp-server",
    "method": "GET",
    "description": "Get the ethernet interface feature associated DHCP server feature in service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createVrfInterfaceEthernetAndDhcpServerParcelAssociationForService": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ethernet/{ethernetId}/dhcp-server",
    "method": "POST",
    "description": "Associate a SD-Routing ethernet interface feature with a DHCP server feature for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getVrfInterfaceEthernetAssociatedDhcpServerParcelByFeatureIdForService": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ethernet/{ethernetId}/dhcp-server/{dhcpServerId}",
    "method": "GET",
    "description": "Get the LAN ethernet interface feature associated DHCP server feature in service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editVrfInterfaceEthernetAndDhcpServerParcelAssociationForService": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ethernet/{ethernetId}/dhcp-server/{dhcpServerId}",
    "method": "PUT",
    "description": "Update a SD-Routing LAN ethernet interface feature and a DHCP server feature association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteVrfInterfaceEthernetAndDhcpServerAssociationForService": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ethernet/{ethernetId}/dhcp-server/{dhcpServerId}",
    "method": "DELETE",
    "description": "Delete a LAN ethernet interface feature and a DHCP server feature association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingServiceVrfInterfaceIpsecFeaturesForService": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ipsec",
    "method": "GET",
    "description": "Get all  IPSec interface features in a specific service VRF from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingServiceVrfInterfaceIpsecFeatureForService": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ipsec",
    "method": "POST",
    "description": "Create a SD-Routing IPSec interface feature in a specific service VRF from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingServiceVrfInterfaceIpsecFeatureByFeatureIdForService": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ipsec/{ipsecId}",
    "method": "GET",
    "description": "Get the SD-Routing IPSec interface feature in a specific service VRF from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingServiceVrfInterfaceIpsecFeatureForService": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ipsec/{ipsecId}",
    "method": "PUT",
    "description": "Edit the SD-Routing IPSec interface feature in a specific service VRF from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingServiceVrfInterfaceIpsecFeatureForService": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ipsec/{ipsecId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing IPSec interface feature in a specific service VRF from a specific service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getServiceVrfAssociatedRoutingBgpFeatures": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/bgp",
    "method": "GET",
    "description": "Get the LAN VRF associated BGP Features for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createServiceVrfAndRoutingBgpFeatureAssociation": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/bgp",
    "method": "POST",
    "description": "Associate a BGP feature with the LAN VRF feature for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getServiceVrfAssociatedRoutingBgpParcelByParcelId": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/bgp/{bgpId}",
    "method": "GET",
    "description": "Get VRF parcel associated RoutingBGP Parcel by bgpId for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editServiceVrfAndRoutingBgpFeatureAssociation": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/bgp/{bgpId}",
    "method": "PUT",
    "description": "Replace the BGP feature for LAN VRF feature in service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteServiceVrfAndRoutingBgpAssociation": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/bgp/{bgpId}",
    "method": "DELETE",
    "description": "Delete the LAN VRF feature and BGP feature association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getServiceVrfAssociatedRoutingEigrpFeatures": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/eigrp",
    "method": "GET",
    "description": "Get the LAN VRF associated EIGRP Features for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createServiceVrfAndRoutingEigrpFeatureAssociation": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/eigrp",
    "method": "POST",
    "description": "Associate a EIGRP feature with the LAN VRF feature for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getServiceVrfAssociatedRoutingEigrpFeatureByFeatureId": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/eigrp/{eigrpId}",
    "method": "GET",
    "description": "Get the LAN VRF associated EIGRP feature by ID for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editServiceVrfAndRoutingEigrpFeatureAssociation": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/eigrp/{eigrpId}",
    "method": "PUT",
    "description": "Replace the EIGRP feature for LAN VRF feature in service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteServiceVrfAndRoutingEigrpAssociation": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/eigrp/{eigrpId}",
    "method": "DELETE",
    "description": "Delete the LAN VRF feature and EIGRP feature association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getServiceVrfAssociatedRoutingOspfFeatures": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospf",
    "method": "GET",
    "description": "Get the VRF associated OSPF features for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createServiceVrfAndRoutingOspfParcelAssociation": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospf",
    "method": "POST",
    "description": "Associate an OSPF feature with the LAN VRF feature for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getServiceVrfAssociatedRoutingOspfFeatureById": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospf/{ospfId}",
    "method": "GET",
    "description": "Get the LAN VRF associated OSPF feature by ID for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editServiceVrfAndRoutingOspfFeatureAssociation": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospf/{ospfId}",
    "method": "PUT",
    "description": "Replace the OSPF feature for LAN VRF feature in service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteServiceVrfAndRoutingOspfAssociation": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospf/{ospfId}",
    "method": "DELETE",
    "description": "Delete the LAN VRF feature and OSPF feature association in service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getServiceVrfAssociatedRoutingOspfv3Ipv4Features": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospfv3/ipv4",
    "method": "GET",
    "description": "Get LAN VRF associated OSPFv3 IPv4 features for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createServiceVrfAndRoutingOspfv3Ipv4FeatureAssociation": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospfv3/ipv4",
    "method": "POST",
    "description": "Associate an OSPFv3 IPv4 feature with the LAN VRF feature for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getServiceVrfAssociatedRoutingOspfv3Ipv4FeatureById": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "GET",
    "description": "Get the VRF feature associated OSPFv3 IPv4 feature by ID for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editServiceVrfAndRoutingOspfv3Ipv4FeatureAssociation": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "PUT",
    "description": "Replace the OSPFv3 IPv4 feature for LAN VRF feature in service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteServiceVrfAndRoutingOspfv3Ipv4Association": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "DELETE",
    "description": "Delete the VRF feature and OSPFv3 IPv4 feature association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getServiceVrfAssociatedRoutingOspfv3Ipv6Parcels": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospfv3/ipv6",
    "method": "GET",
    "description": "Get the LAN VRF associated OSPFv3 IPv6 features for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createServiceVrfAndRoutingOspfv3Ipv6FeatureAssociation": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospfv3/ipv6",
    "method": "POST",
    "description": "Associate an OSPFv3 IPv6 feature with the LAN VRF feature for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getServiceVrfAssociatedRoutingOspfv3Ipv6FeatureById": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "GET",
    "description": "Get LAN VRF associated OSPFv3 IPv6 feature by feature ID for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editServiceVrfAndRoutingOspfv3Ipv6FeatureAssociation": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "PUT",
    "description": "Replace the OSPFv3 IPv6 feature for LAN VRF feature in service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteServiceVrfAndRoutingOspfv3Ipv6Association": {
    "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "DELETE",
    "description": "Delete the VRF feature and OSPFv3 IPv6 feature association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdRoutingSseFeatureProfiles": {
    "path": "/v1/feature-profile/sd-routing/sse",
    "method": "GET",
    "description": "Get all SD-ROUTING Feature Profiles with giving Family and profile type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdRoutingSseFeatureProfile": {
    "path": "/v1/feature-profile/sd-routing/sse",
    "method": "POST",
    "description": "Create a SD-ROUTING SSE Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdRoutingSseFeatureProfileByProfileId": {
    "path": "/v1/feature-profile/sd-routing/sse/{sseId}",
    "method": "GET",
    "description": "Get a SD-ROUTING SSE Feature Profile with sseId",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdRoutingSseFeatureProfile": {
    "path": "/v1/feature-profile/sd-routing/sse/{sseId}",
    "method": "PUT",
    "description": "Edit a SD-ROUTING SSE Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdRoutingSseFeatureProfile": {
    "path": "/v1/feature-profile/sd-routing/sse/{sseId}",
    "method": "DELETE",
    "description": "Delete Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getCiscoSseFeatureForSse": {
    "path": "/v1/feature-profile/sd-routing/sse/{sseId}/cisco",
    "method": "GET",
    "description": "Get Cisco Sse feature list for Sse feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createCiscoSseFeatureForSse": {
    "path": "/v1/feature-profile/sd-routing/sse/{sseId}/cisco",
    "method": "POST",
    "description": "Create Cisco Sse feature for sse feature profile type",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getCiscoSseFeatureByFeatureIdForSSE": {
    "path": "/v1/feature-profile/sd-routing/sse/{sseId}/cisco/{ciscoSseId}",
    "method": "GET",
    "description": "Get Cisco SSE Profile Feature by feature Id",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editCiscoSseFeature": {
    "path": "/v1/feature-profile/sd-routing/sse/{sseId}/cisco/{ciscoSseId}",
    "method": "PUT",
    "description": "Update a Cisco Sse feature",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteCiscoSseFeature": {
    "path": "/v1/feature-profile/sd-routing/sse/{sseId}/cisco/{ciscoSseId}",
    "method": "DELETE",
    "description": "Delete a Cisco Sse Feature",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingSystemFeatureProfiles": {
    "path": "/v1/feature-profile/sd-routing/system",
    "method": "GET",
    "description": "Get all SD-Routing System Feature Profiles",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingSystemFeatureProfile": {
    "path": "/v1/feature-profile/sd-routing/system",
    "method": "POST",
    "description": "Create a SD-Routing System Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingSystemFeatureProfile": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}",
    "method": "GET",
    "description": "Get a SD-Routing System Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingSystemFeatureProfile": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}",
    "method": "PUT",
    "description": "Edit a SD-Routing System Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingSystemFeatureProfile": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}",
    "method": "DELETE",
    "description": "Delete a SD-Routing System Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingAaaFeatures": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/aaa",
    "method": "GET",
    "description": "Get all SD-Routing AAA features from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingAaaFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/aaa",
    "method": "POST",
    "description": "Create a SD-Routing AAA feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingAaaFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/aaa/{aaaId}",
    "method": "GET",
    "description": "Get the SD-Routing AAA feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingAaaFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/aaa/{aaaId}",
    "method": "PUT",
    "description": "Edit the SD-Routing AAA feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingAaaFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/aaa/{aaaId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing AAA feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingBannerFeatures": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/banner",
    "method": "GET",
    "description": "Get all SD-Routing banner features from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingBannerFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/banner",
    "method": "POST",
    "description": "Create a SD-Routing banner feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingBannerFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/banner/{bannerId}",
    "method": "GET",
    "description": "Get the SD-Routing banner feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingBannerFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/banner/{bannerId}",
    "method": "PUT",
    "description": "Edit the SD-Routing banner feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingBannerFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/banner/{bannerId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing banner feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingCertificateFeatures": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/certificate",
    "method": "GET",
    "description": "Get all SD-Routing certificate features from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingCertificateFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/certificate",
    "method": "POST",
    "description": "Create a SD-Routing certificate feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingCertificateFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/certificate/{certificateId}",
    "method": "GET",
    "description": "Get the SD-Routing certificate feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingCertificateFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/certificate/{certificateId}",
    "method": "PUT",
    "description": "Edit the SD-Routing certificate feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingCertificateFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/certificate/{certificateId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing certificate feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingFlexiblePortSpeedFeatures": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/flexible-port-speed",
    "method": "GET",
    "description": "Get all SD-Routing flexible port speed features from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingFlexiblePortSpeedFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/flexible-port-speed",
    "method": "POST",
    "description": "Create a SD-Routing flexible port speed feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingFlexiblePortSpeedFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/flexible-port-speed/{flexiblePortSpeedId}",
    "method": "GET",
    "description": "Get the SD-Routing flexible port speed feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingFlexiblePortSpeedFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/flexible-port-speed/{flexiblePortSpeedId}",
    "method": "PUT",
    "description": "Edit the SD-Routing flexible port speed feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingFlexiblePortSpeedFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/flexible-port-speed/{flexiblePortSpeedId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing flexible port speed feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingGlobalSettingFeatures": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/global",
    "method": "GET",
    "description": "Get all SD-Routing global setting features from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingGlobalSettingFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/global",
    "method": "POST",
    "description": "Create a SD-Routing global setting feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingGlobalSettingFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/global/{globalId}",
    "method": "GET",
    "description": "Get the SD-Routing global setting feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingGlobalSettingFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/global/{globalId}",
    "method": "PUT",
    "description": "Edit the SD-Routing global setting feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingGlobalSettingFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/global/{globalId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing global setting feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingLoggingFeatures": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/logging",
    "method": "GET",
    "description": "Get all SD-Routing Logging features from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingLoggingFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/logging",
    "method": "POST",
    "description": "Create a SD-Routing Logging feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingLoggingFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/logging/{loggingId}",
    "method": "GET",
    "description": "Get the SD-Routing Logging feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingLoggingFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/logging/{loggingId}",
    "method": "PUT",
    "description": "Edit the SD-Routing Logging feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingLoggingFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/logging/{loggingId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing Logging feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingNtpFeatures": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/ntp",
    "method": "GET",
    "description": "Get all SD-Routing NTP features from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingNtpFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/ntp",
    "method": "POST",
    "description": "Create a SD-Routing NTP feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingNtpFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/ntp/{ntpId}",
    "method": "GET",
    "description": "Get the SD-Routing NTP feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingNtpFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/ntp/{ntpId}",
    "method": "PUT",
    "description": "Edit the SD-Routing NTP feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingNtpFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/ntp/{ntpId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing NTP feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingSnmpFeatures": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/snmp",
    "method": "GET",
    "description": "Get all SD-Routing SNMP features from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingSnmpFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/snmp",
    "method": "POST",
    "description": "Create a SD-Routing SNMP feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingSnmpFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/snmp/{snmpId}",
    "method": "GET",
    "description": "Get the SD-Routing SNMP feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingSnmpFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/snmp/{snmpId}",
    "method": "PUT",
    "description": "Edit the SD-Routing SNMP feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingSnmpFeature": {
    "path": "/v1/feature-profile/sd-routing/system/{systemId}/snmp/{snmpId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing SNMP feature from a specific system feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingTransportFeatureProfiles": {
    "path": "/v1/feature-profile/sd-routing/transport",
    "method": "GET",
    "description": "Get all SD-Routing Transport Feature Profiles",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingTransportFeatureProfile": {
    "path": "/v1/feature-profile/sd-routing/transport",
    "method": "POST",
    "description": "Create a SD-Routing Transport Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingTransportFeatureProfile": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}",
    "method": "GET",
    "description": "Get a SD-Routing Transport Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingTransportFeatureProfile": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}",
    "method": "PUT",
    "description": "Edit a SD-Routing Transport Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingTransportFeatureProfile": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}",
    "method": "DELETE",
    "description": "Delete a SD-Routing Transport Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getcellularcontrollerprofileparcelfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller",
    "method": "GET",
    "description": "Get Cellular Controller Profile Features for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createcellularcontrollerprofileparcelfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller",
    "method": "POST",
    "description": "Create a Cellular Controller Profile Feature for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getcellularcontrollerprofileparcelbyparcelidfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}",
    "method": "GET",
    "description": "Get Cellular Controller Profile Feature by parcelId for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editcellularcontrollerprofileparcelfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}",
    "method": "PUT",
    "description": "Update a Cellular Controller Profile Feature for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletecellularcontrollerprofileparcelfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}",
    "method": "DELETE",
    "description": "Delete a Cellular Controller Profile Feature for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getcellularcontrollerassociatedcellularprofileparcelsfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}/cellular-profile",
    "method": "GET",
    "description": "Get CellularController associated Cellular Profile Features for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createcellularcontrollerandcellularprofileparcelassociationfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}/cellular-profile",
    "method": "POST",
    "description": "Associate a cellularcontroller feature with a cellularprofile Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getcellularcontrollerassociatedcellularprofileparcelbyparcelidfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}/cellular-profile/{cellularProfileId}",
    "method": "GET",
    "description": "Get CellularController feature associated CellularProfile Parcel by cellularProfileId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editcellularcontrollerandcellularprofileparcelassociationfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}/cellular-profile/{cellularProfileId}",
    "method": "PUT",
    "description": "Update a CellularController feature and a CellularProfile Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletecellularcontrollerandcellularprofileassociationfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}/cellular-profile/{cellularProfileId}",
    "method": "DELETE",
    "description": "Delete a CellularController feature and a CellularProfile Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getcellularcontrollerassociatedgpsparcelsfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}/gps",
    "method": "GET",
    "description": "Get CellularController associated GPS Features for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createcellularcontrollerandgpsparcelassociationfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}/gps",
    "method": "POST",
    "description": "Associate a cellularcontroller feature with a GPS Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getcellularcontrollerassociatedgpsparcelbyparcelidfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}/gps/{gpsId}",
    "method": "GET",
    "description": "Get CellularController feature associated GPS Feature by gpsId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "deletecellularcontrollerandgpsassociationfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}/gps/{gpsId}",
    "method": "DELETE",
    "description": "Delete a CellularController feature and a GPS Feature association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getCellularProfileParcelForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-profile",
    "method": "GET",
    "description": "Get Cellular Profile Features for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createCellularProfileParcelForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-profile",
    "method": "POST",
    "description": "Create a Cellular Profile Feature for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getCellularProfileParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-profile/{cellularProfileId}",
    "method": "GET",
    "description": "Get Cellular Profile Feature by parcelId for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editCellularProfileParcelForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-profile/{cellularProfileId}",
    "method": "PUT",
    "description": "Update a Cellular Profile Feature for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteCellularProfileParcelForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-profile/{cellularProfileId}",
    "method": "DELETE",
    "description": "Delete a Cellular Profile Feature for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingTransportGlobalVRFFeatures": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf",
    "method": "GET",
    "description": "Get all SD-Routing Global VRF features from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingTransportGlobalVRFFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf",
    "method": "POST",
    "description": "Create a SD-Routing Global VRF feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingTransportGlobalVrfBgpFeatures": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/routing/bgp",
    "method": "GET",
    "description": "Get all SD-Routing WAN BGP features for global VRF from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingTransportGlobalVrfBgpFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/routing/bgp",
    "method": "POST",
    "description": "Create a SD-Routing WAN BGP feature for global VRF from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingTransportGlobalVrfBgpFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/routing/bgp/{bgpId}",
    "method": "GET",
    "description": "Get the SD-Routing WAN BGP feature for global VRF from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingTransportGlobalVrfBgpFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/routing/bgp/{bgpId}",
    "method": "PUT",
    "description": "Edit the SD-Routing WAN BGP feature for global VRF from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingTransportGlobalVrfBgpFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/routing/bgp/{bgpId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing WAN BGP feature for global VRF from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingTransportGlobalVRFFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}",
    "method": "GET",
    "description": "Get the SD-Routing Global VRF feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingTransportGlobalVRFFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}",
    "method": "PUT",
    "description": "Edit the SD-Routing Global VRF feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingTransportGlobalVRFFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing Global VRF feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getGlobalVRFInterfaceCellularParcelsForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular",
    "method": "GET",
    "description": "Get Global VRF Interface Cellular Features for transport Parcel",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createGlobalVRFInterfaceCellularParcelForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular",
    "method": "POST",
    "description": "Create a Global VRF Cellular interface Feature for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getglobalvrfinterfacecellularassociatedtrackerparcelsfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{cellularId}/tracker",
    "method": "GET",
    "description": "Get GlobalVRFInterfaceCellular associated Tracker Parcels for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createglobalvrfinterfacecellularandtrackerparcelassociationfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{cellularId}/tracker",
    "method": "POST",
    "description": "Associate a GlobalVRFInterfaceCellular parcel with a Tracker Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getglobalvrfinterfacecellularassociatedtrackerparcelbyparcelidfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{cellularId}/tracker/{trackerId}",
    "method": "GET",
    "description": "Get GlobalVRFInterfaceCellular associated Tracker Parcel by trackerId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editglobalvrfinterfacecellularandtrackerparcelassociationfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{cellularId}/tracker/{trackerId}",
    "method": "PUT",
    "description": "Update a GlobalVRFInterfaceCellular parcel and a Tracker Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteglobalvrfinterfacecellularandtrackerassociationfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{cellularId}/tracker/{trackerId}",
    "method": "DELETE",
    "description": "Delete a GlobalVRFInterfaceCellular and a Tracker Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getGlobalVRFInterfaceCellularAssociatedTrackerParcelsForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{cellularId}/trackergroup",
    "method": "GET",
    "description": "Get GlobalVRFInterfaceCellular associated Tracker Group Features for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createGlobalVRFInterfaceCellularAndTrackerParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{cellularId}/trackergroup",
    "method": "POST",
    "description": "Associate a GlobalVRFInterfaceCellular feature with a Tracker Group Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getGlobalVRFInterfaceCellularAssociatedTrackerParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{cellularId}/trackergroup/{trackerId}",
    "method": "GET",
    "description": "Get GlobalVRFInterfaceCellular associated Tracker Group Feature by trackerId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editGlobalVRFInterfaceCellularAndTrackerParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{cellularId}/trackergroup/{trackerId}",
    "method": "PUT",
    "description": "Update a GlobalVRFInterfaceCellular feature and a Tracker Group Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteGlobalVRFInterfaceCellularAndTrackerAssociationForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{cellularId}/trackergroup/{trackerId}",
    "method": "DELETE",
    "description": "Delete a GlobalVRFInterfaceCellular and a Tracker Group Feature association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getGlobalVRFInterfaceCellularParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{intfId}",
    "method": "GET",
    "description": "Get Global VRF Cellular interface Feature by intfId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editGlobalVRFInterfaceCellularParcelForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{intfId}",
    "method": "PUT",
    "description": "Update a Global VRF Cellular Interface Feature for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteGlobalVRFInterfaceCellularForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{intfId}",
    "method": "DELETE",
    "description": "Delete a Global VRF Cellular interface Feature for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingTransportGlobalVrfInterfaceEthernetParcelsForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/ethernet",
    "method": "GET",
    "description": "Get all  Ethernet interface profile features from a specific global VRF feature in Transport Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingTransportGlobalVrfInterfaceEthernetParcelForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/ethernet",
    "method": "POST",
    "description": "Create a SD-Routing Ethernet interface profile feature from a specific global VRF feature in Transport Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingTransportGlobalVrfInterfaceEthernetParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/ethernet/{ethernetId}",
    "method": "GET",
    "description": "Get the SD-Routing Ethernet interface profile feature from a specific global VRF feature by ethernetId in Transport Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingTransportGlobalVrfInterfaceEthernetParcelForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/ethernet/{ethernetId}",
    "method": "PUT",
    "description": "Edit the SD-Routing Ethernet interface profile feature from a specific global VRF feature in Transport Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingTransportGlobalVrfInterfaceEthernetParcelForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/ethernet/{ethernetId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing Ethernet interface profile feature from a specific global VRF feature in Transport Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingTransportGlobalVrfInterfaceIpsecFeaturesForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/ipsec",
    "method": "GET",
    "description": "Get all  IPSec interface features in the global VRF from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingTransportGlobalVrfInterfaceIpsecFeatureForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/ipsec",
    "method": "POST",
    "description": "Create a SD-Routing IPSec interface feature in the global VRF from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingTransportGlobalVrfInterfaceIpsecFeatureByFeatureIdForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/ipsec/{ipsecId}",
    "method": "GET",
    "description": "Get the SD-Routing IPSec interface feature in the global VRF from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingTransportGlobalVrfInterfaceIpsecFeatureForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/ipsec/{ipsecId}",
    "method": "PUT",
    "description": "Edit the SD-Routing IPSec interface feature in the global VRF from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingTransportGlobalVrfInterfaceIpsecFeatureForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/ipsec/{ipsecId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing IPSec interface feature in the global VRF from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "createTransportGlobalVrfAndMulticloudConnectionParcelAssociation": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/multicloud-connection",
    "method": "POST",
    "description": "Associate a Global VRF parcel with a Multicloud Connection Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getTransportVrfAssociatedRoutingBgpFeatures": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/bgp",
    "method": "GET",
    "description": "Get the global VRF associated BGP features for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createTransportGlobalVrfAndRoutingBgpFeatureAssociation": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/bgp",
    "method": "POST",
    "description": "Associate a BGP feature with the global VRF feature for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getVrfAssociatedRoutingBgpFeatureById": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/bgp/{bgpId}",
    "method": "GET",
    "description": "Get Global VRF parcel associated BGP feature by ID for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editTransportGlobalVrfAndRoutingBgpFeatureAssociation": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/bgp/{bgpId}",
    "method": "PUT",
    "description": "Replace the BGP feature for the global VRF feature in transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteTransportGlobalVrfAndRoutingBgpAssociation": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/bgp/{bgpId}",
    "method": "DELETE",
    "description": "Delete the global VRF and BGP feature association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getTransportVrfAssociatedRoutingOspfFeatures": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospf",
    "method": "GET",
    "description": "Get the global VRF associated OSPF features for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createTransportGlobalVrfAndRoutingOspfParcelAssociation": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospf",
    "method": "POST",
    "description": "Associate an OSPF feature with the global VRF feature for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getVrfAssociatedRoutingOspfParcelByFeatureId": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospf/{ospfId}",
    "method": "GET",
    "description": "Get the Global VRF feature associated OSPF feature by ID for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editTransportGlobalVrfAndRoutingOspfFeatureAssociation": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospf/{ospfId}",
    "method": "PUT",
    "description": "Replace the OSPF feature for the global VRF feature in transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteTransportGlobalVrfAndRoutingOspfAssociation": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospf/{ospfId}",
    "method": "DELETE",
    "description": "Delete the global VRF and the OSPF feature association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getTransportVrfAssociatedRoutingOspfv3Ipv4Features": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospfv3/ipv4",
    "method": "GET",
    "description": "Get the Global VRF associated OSPFv3 IPv4 features for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createTransportGlobalVrfAndRoutingOspfv3Ipv4FeatureAssociation": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospfv3/ipv4",
    "method": "POST",
    "description": "Associate an OSPFv3 IPv4 feature with the global VRF feature for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getVrfAssociatedRoutingOspfv3Ipv4FeatureById": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "GET",
    "description": "Get the global VRF feature associated OSPFv3 IPv4 feature by ID for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editTransportGlobalVrfAndRoutingOspfv3Ipv4FeatureAssociation": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "PUT",
    "description": "Replace the OSPFv3 IPv4 feature for the global VRF feature in transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteTransportGlobalVrfAndRoutingOspfv3Ipv4Association": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "DELETE",
    "description": "Delete the global VRF and the OSPFv3 IPv4 feature association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getTransportVrfAssociatedRoutingOspfv3Ipv6Features": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospfv3/ipv6",
    "method": "GET",
    "description": "Get the global VRF associated OSPFv3 IPv6 features for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createTransportGlobalVrfAndRoutingOspfv3Ipv6ParcelAssociation": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospfv3/ipv6",
    "method": "POST",
    "description": "Associate an OSPFv3 IPv6 feature with the global VRF feature for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getVrfAssociatedRoutingOspfv3Ipv6FeatureById": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "GET",
    "description": "Get the Global VRF associated OSPFv3 IPv6 feature by ID for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editTransportGlobalVrfAndRoutingOspfv3Ipv6FeatureAssociation": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "PUT",
    "description": "Replace the OSPFv3 IPv6 feature for the global VRF feature in transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteTransportGlobalVrfAndRoutingOspfv3Ipv6Association": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "DELETE",
    "description": "Delete the global VRF feature and the OSPFv3 IPv6 feature association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getGPSProfileParcelForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/gps",
    "method": "GET",
    "description": "Get GPS Profile Features for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createGPSProfileParcelForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/gps",
    "method": "POST",
    "description": "Create a GPS Profile Feature for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getGPSProfileParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/gps/{gpsId}",
    "method": "GET",
    "description": "Get GPS Profile Feature by parcelId for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editGPSProfileParcelForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/gps/{gpsId}",
    "method": "PUT",
    "description": "Update a GPS Profile Feature for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteGPSProfileParcelForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/gps/{gpsId}",
    "method": "DELETE",
    "description": "Delete a GPS Profile Feature for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingTransportIpv4AclFeatures": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/ipv4-acl",
    "method": "GET",
    "description": "Get all SD-Routing IPv4 ACL features from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingTransportIpv4AclFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/ipv4-acl",
    "method": "POST",
    "description": "Create a SD-Routing IPv4 ACL feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingTransportIpv4AclFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/ipv4-acl/{ipv4AclId}",
    "method": "GET",
    "description": "Get the SD-Routing IPv4 ACL feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingTransportIpv4AclFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/ipv4-acl/{ipv4AclId}",
    "method": "PUT",
    "description": "Edit the SD-Routing IPv4 ACL feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingTransportIpv4AclFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/ipv4-acl/{ipv4AclId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing IPv4 ACL feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingManagementVRFFeatures": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/management-vrf",
    "method": "GET",
    "description": "Get all SD-Routing Management VRF features from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingManagementVRFFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/management-vrf",
    "method": "POST",
    "description": "Create a SD-Routing Management VRF feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingManagementVRFFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/management-vrf/{vrfId}",
    "method": "GET",
    "description": "Get the SD-Routing Management VRF feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingManagementVRFFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/management-vrf/{vrfId}",
    "method": "PUT",
    "description": "Edit the SD-Routing Management VRF feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingManagementVRFFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/management-vrf/{vrfId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing Management VRF feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingManagementVrfInterfaceEthernetParcelsForTransportProfile": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/management-vrf/{vrfId}/interface/ethernet",
    "method": "GET",
    "description": "Get all  Management Ethernet interface features from a specific management VRF feature in Transport Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingManagementVrfInterfaceEthernetParcelForTransportProfile": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/management-vrf/{vrfId}/interface/ethernet",
    "method": "POST",
    "description": "Create a SD-Routing Management Ethernet interface feature from a specific management VRF feature in Transport Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingManagementVrfInterfaceEthernetParcelByParcelIdForTransportProfile": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/management-vrf/{vrfId}/interface/ethernet/{ethernetId}",
    "method": "GET",
    "description": "Get the SD-Routing Management Ethernet interface feature from a specific management VRF feature by ethernetId in Transport Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingManagementVrfInterfaceEthernetParcelForTransportProfile": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/management-vrf/{vrfId}/interface/ethernet/{ethernetId}",
    "method": "PUT",
    "description": "Edit the SD-Routing Management Ethernet interface feature from a specific management VRF feature in Transport Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingManagementVrfInterfaceEthernetParcelForTransportProfile": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/management-vrf/{vrfId}/interface/ethernet/{ethernetId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing Management Ethernet interface feature from a specific management VRF feature in Transport Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getlanvpnprofileparcelforservice1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/multicloud-connection",
    "method": "GET",
    "description": "Get Lan Vpn Profile Parcels for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createmulticloudconnection1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/multicloud-connection",
    "method": "POST",
    "description": "Associate a MultiCloudConnection Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getlanvpnprofileparcelbyparcelidforservice1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/multicloud-connection/{multiCloudConnectionId}",
    "method": "GET",
    "description": "Get Lan Vpn Profile Parcel by parcelId for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editmulticloudconnection1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/multicloud-connection/{multiCloudConnectionId}",
    "method": "PUT",
    "description": "Update a multicloud connection parcel",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteMultiCloudConnectionParcelForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/multicloud-connection/{multiCloudConnectionId}",
    "method": "DELETE",
    "description": "Delete a MultiCloud Connection Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingTransportObjectTrackerFeatures": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/objecttracker",
    "method": "GET",
    "description": "Get all SD-Routing object tracker features from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingTransportObjectTrackerFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/objecttracker",
    "method": "POST",
    "description": "Create a SD-Routing object tracker feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingTransportObjectTrackerFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/objecttracker/{objectTrackerId}",
    "method": "GET",
    "description": "Get the SD-Routing object tracker feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingTransportObjectTrackerFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/objecttracker/{objectTrackerId}",
    "method": "PUT",
    "description": "Edit the SD-Routing object tracker feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingTransportObjectTrackerFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/objecttracker/{objectTrackerId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing object tracker feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingTransportObjectTrackerGroupFeatures": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/objecttrackergroup",
    "method": "GET",
    "description": "Get all SD-Routing object tracker group features from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingTransportObjectTrackerGroupFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/objecttrackergroup",
    "method": "POST",
    "description": "Create a SD-Routing object tracker group feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingTransportObjectTrackerGroupFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/objecttrackergroup/{objectTrackerGroupId}",
    "method": "GET",
    "description": "Get the SD-Routing object tracker group feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingTransportObjectTrackerGroupFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/objecttrackergroup/{objectTrackerGroupId}",
    "method": "PUT",
    "description": "Edit the SD-Routing object tracker group feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingTransportObjectTrackerGroupFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/objecttrackergroup/{objectTrackerGroupId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing object tracker group feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingTransportRoutePolicyFeatures": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/route-policy",
    "method": "GET",
    "description": "Get all SD-Routing route policy features from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingTransportRoutePolicyFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/route-policy",
    "method": "POST",
    "description": "Create a SD-Routing route policy feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingTransportRoutePolicyFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/route-policy/{routePolicyId}",
    "method": "GET",
    "description": "Get the SD-Routing route policy feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingTransportRoutePolicyFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/route-policy/{routePolicyId}",
    "method": "PUT",
    "description": "Edit the SD-Routing route policy feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingTransportRoutePolicyFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/route-policy/{routePolicyId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing route policy feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingTransportRoutingOspfFeatures": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospf",
    "method": "GET",
    "description": "Get all SD-Routing WAN OSPF features from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingTransportRoutingOspfFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospf",
    "method": "POST",
    "description": "Create a SD-Routing WAN OSPF feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingTransportRoutingOspfFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospf/{ospfId}",
    "method": "GET",
    "description": "Get the SD-Routing WAN OSPF feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingTransportRoutingOspfFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospf/{ospfId}",
    "method": "PUT",
    "description": "Edit the SD-Routing WAN OSPF feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingTransportRoutingOspfFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospf/{ospfId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing WAN OSPF feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingTransportRoutingOspfv3Ipv4Features": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospfv3/ipv4",
    "method": "GET",
    "description": "Get all SD-Routing WAN OSPFv3 IPv4 features from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingTransportRoutingOspfv3Ipv4Feature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospfv3/ipv4",
    "method": "POST",
    "description": "Create a SD-Routing WAN OSPFv3 IPv4 feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingTransportRoutingOspfv3Ipv4Feature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "GET",
    "description": "Get the SD-Routing WAN OSPFv3 IPv4 feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingTransportRoutingOspfv3Ipv4Feature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "PUT",
    "description": "Edit the SD-Routing WAN OSPFv3 IPv4 feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingTransportRoutingOspfv3Ipv4Feature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "DELETE",
    "description": "Delete the SD-Routing WAN OSPFv3 IPv4 feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingTransportRoutingOspfv3Ipv6Features": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospfv3/ipv6",
    "method": "GET",
    "description": "Get all SD-Routing WAN OSPFv3 IPv6 features from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingTransportRoutingOspfv3Ipv6Feature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospfv3/ipv6",
    "method": "POST",
    "description": "Create a SD-Routing WAN OSPFv3 IPv6 feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingTransportRoutingOspfv3Ipv6Feature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "GET",
    "description": "Get the SD-Routing WAN OSPFv3 IPv6 feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingTransportRoutingOspfv3Ipv6Feature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "PUT",
    "description": "Edit the SD-Routing WAN OSPFv3 IPv6 feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingTransportRoutingOspfv3Ipv6Feature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "DELETE",
    "description": "Delete the SD-Routing WAN OSPFv3 IPv6 feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "gettrackerprofileparcelfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/tracker",
    "method": "GET",
    "description": "Get Tracker Profile Features for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createtrackerprofileparcelfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/tracker",
    "method": "POST",
    "description": "Create a Tracker Profile Feature for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "gettrackerprofileparcelbyparcelidfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/tracker/{trackerId}",
    "method": "GET",
    "description": "Get Tracker Profile Feature by parcelId for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "edittrackerprofileparcelfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/tracker/{trackerId}",
    "method": "PUT",
    "description": "Update a Tracker Profile Feature for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletetrackerprofileparcelfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/tracker/{trackerId}",
    "method": "DELETE",
    "description": "Delete a Tracker Profile Feature for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "gettrackergroupprofileparcelfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/trackergroup",
    "method": "GET",
    "description": "Get TrackerGroup Profile Features for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createtrackergroupprofileparcelfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/trackergroup",
    "method": "POST",
    "description": "Create a TrackerGroup Profile Feature for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "gettrackergroupprofileparcelbyparcelidfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/trackergroup/{trackergroupId}",
    "method": "GET",
    "description": "Get TrackerGroup Profile Feature by parcelId for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "edittrackergroupprofileparcelfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/trackergroup/{trackergroupId}",
    "method": "PUT",
    "description": "Update a TrackerGroup Profile Feature for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletetrackergroupprofileparcelfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/trackergroup/{trackergroupId}",
    "method": "DELETE",
    "description": "Delete a TrackerGroup Profile Feature for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingTransportVRFFeatures": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf",
    "method": "GET",
    "description": "Get all SD-Routing VRF features from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingTransportVRFFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf",
    "method": "POST",
    "description": "Create a SD-Routing VRF feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingTransportVrfBgpFeatures": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/routing/bgp",
    "method": "GET",
    "description": "Get all SD-Routing WAN BGP features for VRF from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingTransportVrfBgpFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/routing/bgp",
    "method": "POST",
    "description": "Create a SD-Routing WAN BGP feature for VRF from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingTransportVrfBgpFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/routing/bgp/{bgpId}",
    "method": "GET",
    "description": "Get the SD-Routing WAN BGP feature for VRF from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingTransportVrfBgpFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/routing/bgp/{bgpId}",
    "method": "PUT",
    "description": "Edit the SD-Routing WAN BGP feature for VRF from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingTransportVrfBgpFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/routing/bgp/{bgpId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing WAN BGP feature for VRF from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingTransportVRFFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}",
    "method": "GET",
    "description": "Get the SD-Routing VRF feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingTransportVRFFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}",
    "method": "PUT",
    "description": "Edit the SD-Routing VRF feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingTransportVRFFeature": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing VRF feature from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingTransportVrfInterfaceEthernetParcelsForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/interface/ethernet",
    "method": "GET",
    "description": "Get all  Ethernet interface features for a specific transport VRF feature in Transport Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingTransportVrfInterfaceEthernetParcelForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/interface/ethernet",
    "method": "POST",
    "description": "Create a SD-Routing Ethernet interface feature from a specific transport VRF feature in Transport Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingTransportVrfInterfaceEthernetParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/interface/ethernet/{ethernetId}",
    "method": "GET",
    "description": "Get the SD-Routing Ethernet interface feature from a specific transport VRF feature by ethernetId in Transport Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingTransportVrfInterfaceEthernetParcelForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/interface/ethernet/{ethernetId}",
    "method": "PUT",
    "description": "Edit the SD-Routing Ethernet interface feature from a specific transport VRF feature in Transport Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingTransportVrfInterfaceEthernetParcelForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/interface/ethernet/{ethernetId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing Ethernet interface feature from a specific transport VRF feature in Transport Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdroutingTransportVrfInterfaceIpsecFeaturesForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/interface/ipsec",
    "method": "GET",
    "description": "Get all  IPSec interface features in a specific transport VRF from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdroutingTransportVrfInterfaceIpsecFeatureForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/interface/ipsec",
    "method": "POST",
    "description": "Create a SD-Routing IPSec interface feature in a specific transport VRF from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdroutingTransportVrfInterfaceIpsecFeatureByFeatureIdForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/interface/ipsec/{ipsecId}",
    "method": "GET",
    "description": "Get the SD-Routing IPSec interface feature in a specific transport VRF from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdroutingTransportVrfInterfaceIpsecFeatureForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/interface/ipsec/{ipsecId}",
    "method": "PUT",
    "description": "Edit the SD-Routing IPSec interface feature in a specific transport VRF from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdroutingTransportVrfInterfaceIpsecFeatureForTransport": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/interface/ipsec/{ipsecId}",
    "method": "DELETE",
    "description": "Delete the SD-Routing IPSec interface feature in a specific transport VRF from a specific transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "gettransportvrfassociatedroutingbgpfeatures1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/bgp",
    "method": "GET",
    "description": "Get the WAN VRF associated BGP features for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createTransportVrfAndRoutingBgpFeatureAssociation": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/bgp",
    "method": "POST",
    "description": "Associate a BGP feature with the WAN VRF feature for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getTransportVrfAssociatedRoutingBgpById": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/bgp/{bgpId}",
    "method": "GET",
    "description": "Get the WAN VRF associated BGP feature by BGP feature ID for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editTransportVrfAndRoutingBgpFeatureAssociation": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/bgp/{bgpId}",
    "method": "PUT",
    "description": "Replace the BGP feature for the WAN VRF feature in transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteTransportVrfAndRoutingBgpAssociation": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/bgp/{bgpId}",
    "method": "DELETE",
    "description": "Delete the WAN VRF and BGP association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "gettransportvrfassociatedroutingospffeatures1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospf",
    "method": "GET",
    "description": "Get the WAN VRF associated OSPF features for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createTransportVrfAndRoutingOspfAssociation": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospf",
    "method": "POST",
    "description": "Associate an OSPF feature with the WAN VRF feature for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getVrfAssociatedRoutingOspfById": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospf/{ospfId}",
    "method": "GET",
    "description": "Get the WAN VRF associated OSPF features by feature ID for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editTransportVrfAndRoutingOspfFeatureAssociation": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospf/{ospfId}",
    "method": "PUT",
    "description": "Replace the OSPF feature for the WAN VRF feature in transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteTransportVrfAndRoutingOspfAssociation": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospf/{ospfId}",
    "method": "DELETE",
    "description": "Delete the VRF and OSPF feature association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "gettransportvrfassociatedroutingospfv3ipv4features1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospfv3/ipv4",
    "method": "GET",
    "description": "Get the VRF associated OSPFv3 IPv4 features for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createTransportVrfAndRoutingOspfv3Ipv4Association": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospfv3/ipv4",
    "method": "POST",
    "description": "Associate an OSPFv3 IPv4 feature with the WAN VRF feature for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getvrfassociatedroutingospfv3ipv4featurebyid1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "GET",
    "description": "Get the VRF associated OSPFv3 IPv4 feature by ID for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editTransportVrfAndRoutingOspfv3Ipv4Association": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "PUT",
    "description": "Replace the OSPFv3 IPv4 feature for the WAN VRF feature in transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteTransportVrfAndRoutingOspfv3Ipv4Association": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "DELETE",
    "description": "Delete the VRF and OSPFv3 IPv4 feature association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "gettransportvrfassociatedroutingospfv3ipv6features1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospfv3/ipv6",
    "method": "GET",
    "description": "Get the WAN VRF associated OSPFv3 IPv6 features for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createTransportVrfAndRoutingOspfv3Ipv6FeatureAssociation": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospfv3/ipv6",
    "method": "POST",
    "description": "Associate an OSPFv3 IPv6 feature with the WAN VRF feature for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getvrfassociatedroutingospfv3ipv6featurebyid1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "GET",
    "description": "Get the WAN VRF feature associated OSPFv3 IPv6 feature by ID for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editTransportVrfAndRoutingOspfv3Ipv6FeatureAssociation": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "PUT",
    "description": "Replace the OSPFv3 IPv6 feature for the WAN VRF feature in transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteTransportVrfAndRoutingOspfv3Ipv6Association": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "DELETE",
    "description": "Delete the WAN VRF feature and OSPFv3 IPv6 feature association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "editcellularcontrollerandgpsparcelassociationfortransport1": {
    "path": "/v1/feature-profile/sd-routing/transport/{transportId}/{cellularControllerId}/gps/{gpsId}",
    "method": "PUT",
    "description": "Update a CellularController feature and a GPS Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "getSdwanFeatureProfileBySdwanFamily": {
    "path": "/v1/feature-profile/sdwan",
    "method": "GET",
    "description": "Get all SDWAN Feature Profiles",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCloudProbeProfileParcelByParcelIdForapplication-priority": {
    "path": "/v1/feature-profile/sdwan/application-priority/{applicationPriorityId}/cloud-probe/{cloudProbeId}",
    "method": "GET",
    "description": "Get Cloud Probe Profile Parcel by parcelId for application-priority feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPolicyApplicationProfileParcel": {
    "path": "/v1/feature-profile/sdwan/application-priority/{applicationPriorityId}/qos-policy",
    "method": "POST",
    "description": "Create QOS Policy feature for application-priority feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getPolicyApplicationProfileParcel": {
    "path": "/v1/feature-profile/sdwan/application-priority/{applicationPriorityId}/qos-policy/{qosPolicyId}",
    "method": "GET",
    "description": "Get QOS Policy feature for application-priority feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editPolicyApplicationProfileParcel": {
    "path": "/v1/feature-profile/sdwan/application-priority/{applicationPriorityId}/qos-policy/{qosPolicyId}",
    "method": "PUT",
    "description": "Edit QOS Policy feature for application-priority feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletePolicyApplicationProfileParcel": {
    "path": "/v1/feature-profile/sdwan/application-priority/{applicationPriorityId}/qos-policy/{qosPolicyId}",
    "method": "DELETE",
    "description": "Delete QOS Policy feature for application-priority feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "createTrafficPolicyProfileParcelForapplication-priority": {
    "path": "/v1/feature-profile/sdwan/application-priority/{applicationPriorityId}/traffic-policy",
    "method": "POST",
    "description": "Create a Traffic Policy Profile Parcel for application-priority feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getTrafficPolicyProfileParcelByParcelIdForapplication-priority": {
    "path": "/v1/feature-profile/sdwan/application-priority/{applicationPriorityId}/traffic-policy/{trafficPolicyId}",
    "method": "GET",
    "description": "Get Traffic Policy Profile Parcel by parcelId for application-priority feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editTrafficPolicyProfileParcelForapplication-priority": {
    "path": "/v1/feature-profile/sdwan/application-priority/{applicationPriorityId}/traffic-policy/{trafficPolicyId}",
    "method": "PUT",
    "description": "Update a Traffic Policy Profile Parcel for application-priority feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteTrafficPolicyProfileParcelForapplication-priority": {
    "path": "/v1/feature-profile/sdwan/application-priority/{applicationPriorityId}/traffic-policy/{trafficPolicyId}",
    "method": "DELETE",
    "description": "Delete a Traffic Policy Profile Parcel for application-priority feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getsdwanfeatureprofilesbyfamilyandtype1": {
    "path": "/v1/feature-profile/sdwan/cli",
    "method": "GET",
    "description": "Get all SDWAN Feature Profiles with giving Family and profile type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdwanFeatureProfile": {
    "path": "/v1/feature-profile/sdwan/cli",
    "method": "POST",
    "description": "Create a SDWAN  Feature Profile with profile type",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdwanCliConfigFeatureSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/cli/config/schema",
    "method": "GET",
    "description": "Get a Sdwan Cli Config feature Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanFeatureProfilesByFamilyAndType": {
    "path": "/v1/feature-profile/sdwan/cli/features",
    "method": "GET",
    "description": "Get all SDWAN Feature Profiles with giving Family and profile type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanFeatureProfileByProfileId": {
    "path": "/v1/feature-profile/sdwan/cli/{cliId}",
    "method": "GET",
    "description": "Get a SDWAN Feature Profile with Cli profile type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdwanFeatureProfile": {
    "path": "/v1/feature-profile/sdwan/cli/{cliId}",
    "method": "PUT",
    "description": "Edit a SDWAN Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdwanFeatureProfileForCli": {
    "path": "/v1/feature-profile/sdwan/cli/{cliId}",
    "method": "DELETE",
    "description": "Delete Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getConfigProfileParcelForCLI": {
    "path": "/v1/feature-profile/sdwan/cli/{cliId}/config",
    "method": "GET",
    "description": "Get config Profile Parcels for cli feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdwanConfigProfileParcelForCli": {
    "path": "/v1/feature-profile/sdwan/cli/{cliId}/config",
    "method": "POST",
    "description": "Create a config Profile Parcel for cli feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getConfigProfileParcelByParcelIdForCLI": {
    "path": "/v1/feature-profile/sdwan/cli/{cliId}/config/{configId}",
    "method": "GET",
    "description": "Get config Profile Parcel by configId for cli feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editConfigProfileParcelForCLI": {
    "path": "/v1/feature-profile/sdwan/cli/{cliId}/config/{configId}",
    "method": "PUT",
    "description": "Update a config Profile Parcel for cli feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteConfigProfileParcelForCLI": {
    "path": "/v1/feature-profile/sdwan/cli/{cliId}/config/{configId}",
    "method": "DELETE",
    "description": "Delete a config Profile Parcel for cli feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdwanDnsSecurityFeatureProfiles": {
    "path": "/v1/feature-profile/sdwan/dns-security",
    "method": "GET",
    "description": "Get all SDWAN Feature Profiles with giving Family and profile type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdwanDnsSecurityFeatureProfile": {
    "path": "/v1/feature-profile/sdwan/dns-security",
    "method": "POST",
    "description": "Create a SDWAN Dns Security Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdwanDnsSecurityFeatureProfileByProfileId": {
    "path": "/v1/feature-profile/sdwan/dns-security/{dnsSecurityId}",
    "method": "GET",
    "description": "Get a SDWAN Dns Security Feature Profile with dnsSecurityId",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdwanDnsSecurityFeatureProfile": {
    "path": "/v1/feature-profile/sdwan/dns-security/{dnsSecurityId}",
    "method": "PUT",
    "description": "Edit a SDWAN Dns Security Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdwanDnsSecurityFeatureProfile": {
    "path": "/v1/feature-profile/sdwan/dns-security/{dnsSecurityId}",
    "method": "DELETE",
    "description": "Delete Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSigSecurityProfileParcel": {
    "path": "/v1/feature-profile/sdwan/dns-security/{dnsSecurityId}/dns",
    "method": "GET",
    "description": "Get Sig Security Profile Parcels for a given ParcelType",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSigSecurityProfileParcel": {
    "path": "/v1/feature-profile/sdwan/dns-security/{dnsSecurityId}/dns",
    "method": "POST",
    "description": "Create Parcel for Sig Security Policy",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSigSecurityProfileParcelByParcelId": {
    "path": "/v1/feature-profile/sdwan/dns-security/{dnsSecurityId}/dns/{dnsSecurityProfileParcelId}",
    "method": "GET",
    "description": "Get SigSecurity Profile Parcel by parcelId",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSigSecurityProfileParcel": {
    "path": "/v1/feature-profile/sdwan/dns-security/{dnsSecurityId}/dns/{dnsSecurityProfileParcelId}",
    "method": "PUT",
    "description": "Update a Sig Security Profile Parcel",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSigSecurityProfileParcel": {
    "path": "/v1/feature-profile/sdwan/dns-security/{dnsSecurityId}/dns/{dnsSecurityProfileParcelId}",
    "method": "DELETE",
    "description": "Delete a SigSecurity Profile Parcel",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getsdwansecurityfeature1": {
    "path": "/v1/feature-profile/sdwan/embedded-security/{securityId}/policy",
    "method": "GET",
    "description": "Get Security Features for a given ParcelType",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdwanEmbeddedSecurityFeature": {
    "path": "/v1/feature-profile/sdwan/embedded-security/{securityId}/policy",
    "method": "POST",
    "description": "Create Feature for Security Policy",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getsdwansecurityfeaturebyfeatureid1": {
    "path": "/v1/feature-profile/sdwan/embedded-security/{securityId}/policy/{securityProfileParcelId}",
    "method": "GET",
    "description": "Get Security Feature by FeatureId",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editsdwansecurityfeature1": {
    "path": "/v1/feature-profile/sdwan/embedded-security/{securityId}/policy/{securityProfileParcelId}",
    "method": "PUT",
    "description": "Update a Security Feature",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletesdwansecurityfeature1": {
    "path": "/v1/feature-profile/sdwan/embedded-security/{securityId}/policy/{securityProfileParcelId}",
    "method": "DELETE",
    "description": "Delete a Security Feature",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdwanNgfirewallFeature": {
    "path": "/v1/feature-profile/sdwan/embedded-security/{securityId}/unified/ngfirewall",
    "method": "GET",
    "description": "Get Ngfirewall Feature",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdwanNgfirewallFeature": {
    "path": "/v1/feature-profile/sdwan/embedded-security/{securityId}/unified/ngfirewall",
    "method": "POST",
    "description": "Create Feature for Ngfirewall Policy",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdwanNgfirewallFeatureByFeatureId": {
    "path": "/v1/feature-profile/sdwan/embedded-security/{securityId}/unified/ngfirewall/{securityProfileParcelId}",
    "method": "GET",
    "description": "Get Ngfirewall Feature by FeatureId",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdwanNgfirewallFeature": {
    "path": "/v1/feature-profile/sdwan/embedded-security/{securityId}/unified/ngfirewall/{securityProfileParcelId}",
    "method": "PUT",
    "description": "Update a Ngfirewall Feature",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdwanNgfirewallFeature": {
    "path": "/v1/feature-profile/sdwan/embedded-security/{securityId}/unified/ngfirewall/{securityProfileParcelId}",
    "method": "DELETE",
    "description": "Delete a Ngfirewall Feature",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdwanOtherFeatureProfiles": {
    "path": "/v1/feature-profile/sdwan/other",
    "method": "GET",
    "description": "Get all SDWAN Feature Profiles with giving Family and profile type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSDWANOtherFeatureProfile": {
    "path": "/v1/feature-profile/sdwan/other",
    "method": "POST",
    "description": "Create a SDWAN Other Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdwanOtherThousandeyesParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/other/thousandeyes/schema",
    "method": "GET",
    "description": "Get a SDWAN Other Thousandeyes Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanOtherFeatureProfileByProfileId": {
    "path": "/v1/feature-profile/sdwan/other/{otherId}",
    "method": "GET",
    "description": "Get a SDWAN Other Feature Profile with otherId",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdwanOtherFeatureProfile": {
    "path": "/v1/feature-profile/sdwan/other/{otherId}",
    "method": "PUT",
    "description": "Edit a SDWAN Other Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdwanOtherFeatureProfile": {
    "path": "/v1/feature-profile/sdwan/other/{otherId}",
    "method": "DELETE",
    "description": "Delete Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getThousandeyesProfileParcelForOther": {
    "path": "/v1/feature-profile/sdwan/other/{otherId}/thousandeyes",
    "method": "GET",
    "description": "Get Thousandeyes Profile Parcels for Other feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createThousandeyesProfileParcelForOther": {
    "path": "/v1/feature-profile/sdwan/other/{otherId}/thousandeyes",
    "method": "POST",
    "description": "Create a Thousandeyes Profile Parcel for Other feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getThousandeyesProfileParcelByParcelIdForOther": {
    "path": "/v1/feature-profile/sdwan/other/{otherId}/thousandeyes/{thousandeyesId}",
    "method": "GET",
    "description": "Get Thousandeyes Profile Parcel by parcelId for Other feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editThousandeyesProfileParcelForOther": {
    "path": "/v1/feature-profile/sdwan/other/{otherId}/thousandeyes/{thousandeyesId}",
    "method": "PUT",
    "description": "Update a Thousandeyes Profile Parcel for Other feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteThousandeyesProfileParcelForOther": {
    "path": "/v1/feature-profile/sdwan/other/{otherId}/thousandeyes/{thousandeyesId}",
    "method": "DELETE",
    "description": "Delete a Thousandeyes Profile Parcel for Other feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getUcseProfileFeatureForOther": {
    "path": "/v1/feature-profile/sdwan/other/{otherId}/ucse",
    "method": "GET",
    "description": "Get Ucse Profile feature for Other feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createUcseProfileFeatureForOther": {
    "path": "/v1/feature-profile/sdwan/other/{otherId}/ucse",
    "method": "POST",
    "description": "Create a Ucse Profile feature for Other feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getUcseProfileFeatureByIdFFeatureForOther": {
    "path": "/v1/feature-profile/sdwan/other/{otherId}/ucse/{ucseId}",
    "method": "GET",
    "description": "Get Ucse Profile feature by FeatureId for Other feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editUcseProfileFeatureForOther": {
    "path": "/v1/feature-profile/sdwan/other/{otherId}/ucse/{ucseId}",
    "method": "PUT",
    "description": "Update a Ucse Profile feature for Other feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteUcseProfileFeatureForOther": {
    "path": "/v1/feature-profile/sdwan/other/{otherId}/ucse/{ucseId}",
    "method": "DELETE",
    "description": "Delete a Ucse Profile feature for Other feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdwanSecurityFeature": {
    "path": "/v1/feature-profile/sdwan/policy-object/{policyObjectId}/unified/{securityProfileParcelType}",
    "method": "GET",
    "description": "Get Security Features for a given ParcelType",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdwanSecurityFeature": {
    "path": "/v1/feature-profile/sdwan/policy-object/{policyObjectId}/unified/{securityProfileParcelType}",
    "method": "POST",
    "description": "Create Feature for Security Policy",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdwanSecurityFeatureByFeatureId": {
    "path": "/v1/feature-profile/sdwan/policy-object/{policyObjectId}/unified/{securityProfileParcelType}/{securityProfileParcelId}",
    "method": "GET",
    "description": "Get Security Feature by FeatureId",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdwanSecurityFeature": {
    "path": "/v1/feature-profile/sdwan/policy-object/{policyObjectId}/unified/{securityProfileParcelType}/{securityProfileParcelId}",
    "method": "PUT",
    "description": "Update a Security Feature",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdwanSecurityFeature": {
    "path": "/v1/feature-profile/sdwan/policy-object/{policyObjectId}/unified/{securityProfileParcelType}/{securityProfileParcelId}",
    "method": "DELETE",
    "description": "Delete a Security Feature",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getDataPrefixProfileParcelForPolicyObject": {
    "path": "/v1/feature-profile/sdwan/policy-object/{policyObjectId}/{policyObjectListType}",
    "method": "GET",
    "description": "Get Data Prefix Profile Parcels for Policy Object feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createDataPrefixProfileParcelForSecurityPolicyObject": {
    "path": "/v1/feature-profile/sdwan/policy-object/{policyObjectId}/{policyObjectListType}",
    "method": "POST",
    "description": "Create a Data Prefix Profile Parcel for Security Policy Object feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDataPrefixProfileParcelByParcelIdForPolicyObject": {
    "path": "/v1/feature-profile/sdwan/policy-object/{policyObjectId}/{policyObjectListType}/{listObjectId}",
    "method": "GET",
    "description": "Get Data Prefix Profile Parcel by parcelId for Policy Object feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editDataPrefixProfileParcelForPolicyObject": {
    "path": "/v1/feature-profile/sdwan/policy-object/{policyObjectId}/{policyObjectListType}/{listObjectId}",
    "method": "PUT",
    "description": "Update a Data Prefix Profile Parcel for Policy Object feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteDataPrefixProfileParcelForPolicyObject": {
    "path": "/v1/feature-profile/sdwan/policy-object/{policyObjectId}/{policyObjectListType}/{listObjectId}",
    "method": "DELETE",
    "description": "Delete a Data Prefix Profile Parcel for Policy Object feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdwanPolicyObjectDataPrefixParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/policy-object/{policyObjectListType}/schema",
    "method": "GET",
    "description": "Get a SDWAN PolicyObject DataPrefix Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanServiceFeatureProfiles": {
    "path": "/v1/feature-profile/sdwan/service",
    "method": "GET",
    "description": "Get all SDWAN Feature Profiles with giving Family and profile type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdwanServiceFeatureProfile": {
    "path": "/v1/feature-profile/sdwan/service",
    "method": "POST",
    "description": "Create a SDWAN Service Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdwanServiceDhcpServerParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/service/dhcp-server/schema",
    "method": "GET",
    "description": "Get a SDWAN Service DhcpServer Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanServiceLanVpnInterfaceEthernetParcelSchemaBySchema": {
    "path": "/v1/feature-profile/sdwan/service/lan/vpn/interface/ethernet/schema",
    "method": "GET",
    "description": "Get a SDWAN Service LanVpn InterfaceEthernet Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCedgeServiceLanVpnInterfaceGreSchemaBySchema": {
    "path": "/v1/feature-profile/sdwan/service/lan/vpn/interface/gre/schema",
    "method": "GET",
    "description": "Get a Cedge Service LanVpn InterfaceGre Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanProfileParcelSchema": {
    "path": "/v1/feature-profile/sdwan/service/lan/vpn/interface/ipsec/schema",
    "method": "GET",
    "description": "Get a SDWAN Service LanVpn InterfaceIpsec Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCedgeServiceLanVpnInterfaceSviParcelSchemaBySchema": {
    "path": "/v1/feature-profile/sdwan/service/lan/vpn/interface/svi/schema",
    "method": "GET",
    "description": "Get a Cedge Service LanVpn InterfaceSvi Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanServiceLanVpnParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/service/lan/vpn/schema",
    "method": "GET",
    "description": "Get a SDWAN Service LanVpn Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanServiceRoutingBgpParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/service/routing/bgp/schema",
    "method": "GET",
    "description": "Get a SDWAN Service RoutingBgp Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanServiceRoutingMulticastParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/service/routing/multicast/schema",
    "method": "GET",
    "description": "Get a Cedge Service RoutingMulticast Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCedgeServiceSwitchportParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/service/switchport/schema",
    "method": "GET",
    "description": "Get a Cedge Service Switchport Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanServiceTrackerParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/service/tracker/schema",
    "method": "GET",
    "description": "Get a SDWAN Service Tracker Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCedgeServiceTrackerGroupParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/service/trackergroup/schema",
    "method": "GET",
    "description": "Get a Cedge Service TrackerGroup Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanServiceWirelesslanParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/service/wirelesslan/schema",
    "method": "GET",
    "description": "Get a sdwan Service Wirelesslan Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanServiceFeatureProfileByProfileId": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}",
    "method": "GET",
    "description": "Get a SDWAN Service Feature Profile with serviceId",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdwanServiceFeatureProfile": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}",
    "method": "PUT",
    "description": "Edit a SDWAN Service Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdwanServiceFeatureProfile": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}",
    "method": "DELETE",
    "description": "Delete Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getAppqoeProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/appqoe",
    "method": "GET",
    "description": "Get Appqoe Profile Parcels for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createAppqoeProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/appqoe",
    "method": "POST",
    "description": "Create a Appqoe Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getAppqoeProfileParcelByParcelIdForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/appqoe/{appqoeId}",
    "method": "GET",
    "description": "Get Appqoe Profile Parcel by parcelId for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editAppqoeProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/appqoe/{appqoeId}",
    "method": "PUT",
    "description": "Update a Appqoe Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteAppqoeProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/appqoe/{appqoeId}",
    "method": "DELETE",
    "description": "Delete a Appqoe Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getDhcpServerProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/dhcp-server",
    "method": "GET",
    "description": "Get Dhcp Server Profile Parcels for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createDhcpServerProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/dhcp-server",
    "method": "POST",
    "description": "Create a Dhcp Server Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getDhcpServerProfileParcelByParcelIdForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/dhcp-server/{dhcpServerId}",
    "method": "GET",
    "description": "Get Dhcp Server Profile Parcel by parcelId for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editDhcpServerProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/dhcp-server/{dhcpServerId}",
    "method": "PUT",
    "description": "Update a Dhcp Server Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteDhcpServerProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/dhcp-server/{dhcpServerId}",
    "method": "DELETE",
    "description": "Delete a Dhcp Server Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getLanVpnProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn",
    "method": "GET",
    "description": "Get Lan Vpn Profile Parcels for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createLanVpnProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn",
    "method": "POST",
    "description": "Create a Lan Vpn Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getLanVpnProfileParcelByParcelIdForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}",
    "method": "GET",
    "description": "Get Lan Vpn Profile Parcel by parcelId for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editLanVpnProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}",
    "method": "PUT",
    "description": "Update a Lan Vpn Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteLanVpnProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}",
    "method": "DELETE",
    "description": "Delete a Lan Vpn Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getInterfaceEthernetParcelsForServiceLanVpn": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet",
    "method": "GET",
    "description": "Get InterfaceEthernet Parcels for service LanVpn Parcel",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createLanVpnInterfaceEthernetParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet",
    "method": "POST",
    "description": "Create a LanVpn InterfaceEthernet parcel for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getLanVpnInterfaceEthernetParcelByParcelIdForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}",
    "method": "GET",
    "description": "Get LanVpn InterfaceEthernet Parcel by ethernetId for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editLanVpnInterfaceEthernetParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}",
    "method": "PUT",
    "description": "Update a LanVpn InterfaceEthernet Parcel for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteLanVpnInterfaceEthernetForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}",
    "method": "DELETE",
    "description": "Delete a  LanVpn InterfaceEthernet Parcel for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getLanVpnInterfaceEthernetAssociatedDhcpServerParcelsForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/dhcp-server",
    "method": "GET",
    "description": "Get LanVpnInterfaceEthernet associated DhcpServer Parcels for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLanVpnInterfaceEthernetAssociatedDhcpServerParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/dhcp-server/{dhcpServerId}",
    "method": "GET",
    "description": "Get LanVpnInterfaceEthernet associated DhcpServer Parcel by dhcpServerId for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editLanVpnInterfaceEthernetAndDhcpServerParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/dhcp-server/{dhcpServerId}",
    "method": "PUT",
    "description": "Update a LanVpnInterfaceEthernet parcel and a DhcpServer Parcel association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteLanVpnInterfaceEthernetAndDhcpServerAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/dhcp-server/{dhcpServerId}",
    "method": "DELETE",
    "description": "Delete a LanVpnInterfaceEthernet and a DhcpServer Parcel association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getLanVpnInterfaceEthernetAssociatedTrackerParcelsForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/tracker",
    "method": "GET",
    "description": "Get LanVpnInterfaceEthernet associated Tracker Parcels for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLanVpnInterfaceEthernetAssociatedTrackerParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/tracker/{trackerId}",
    "method": "GET",
    "description": "Get LanVpnInterfaceEthernet associated Tracker Parcel by trackerId for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editLanVpnInterfaceEthernetAndTrackerParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/tracker/{trackerId}",
    "method": "PUT",
    "description": "Update a LanVpnInterfaceEthernet parcel and a Tracker Parcel association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteLanVpnInterfaceEthernetAndTrackerAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/tracker/{trackerId}",
    "method": "DELETE",
    "description": "Delete a LanVpnInterfaceEthernet and a Tracker Parcel association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getLanVpnInterfaceEthernetAssociatedTrackerGroupParcelsForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/trackergroup",
    "method": "GET",
    "description": "Get LanVpnInterfaceEthernet associated TrackerGroup Parcels for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLanVpnInterfaceEthernetAssociatedTrackerGroupParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/trackergroup/{trackergroupId}",
    "method": "GET",
    "description": "Get LanVpnInterfaceEthernet associated TrackerGroup Parcel by trackergroupId for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editLanVpnInterfaceEthernetAndTrackerGroupParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/trackergroup/{trackergroupId}",
    "method": "PUT",
    "description": "Update a LanVpnInterfaceEthernet parcel and a TrackerGroup Parcel association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteLanVpnInterfaceEthernetAndTrackerGroupAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/trackergroup/{trackergroupId}",
    "method": "DELETE",
    "description": "Delete a LanVpnInterfaceEthernet and a TrackerGroup Parcel association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getInterfaceGresForServiceLanVpn": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/gre",
    "method": "GET",
    "description": "Get InterfaceGre for service LanVpn",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createLanVpnInterfaceGreForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/gre",
    "method": "POST",
    "description": "Create a LanVpn InterfaceGre for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getLanVpnInterfaceGreByIdForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/gre/{greId}",
    "method": "GET",
    "description": "Get LanVpn InterfaceGre by greId for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editLanVpnInterfaceGreForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/gre/{greId}",
    "method": "PUT",
    "description": "Update a LanVpn InterfaceGre Feature for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteLanVpnInterfaceGreForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/gre/{greId}",
    "method": "DELETE",
    "description": "Delete a  LanVpn InterfaceGre for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "createIpSecProfileParcel": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ipsec",
    "method": "POST",
    "description": "Create a LanVpn InterfaceIpsec parcel for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getProfileParcelByParcelId": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ipsec/{ipsecId}",
    "method": "GET",
    "description": "Get LanVpn InterfaceIpsec Parcel by ethernetId for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editProfileParcel": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ipsec/{ipsecId}",
    "method": "PUT",
    "description": "Update a LanVpn Interface Ipsec Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteProfileParcel": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ipsec/{ipsecId}",
    "method": "DELETE",
    "description": "Delete a  LanVpn InterfaceIpsec Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getLanVpnInterfaceIpsecAssociatedDhcpServerParcelsForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ipsec/{ipsecId}/dhcp-server",
    "method": "GET",
    "description": "Get LanVpnInterfaceIpsec associated DhcpServer Parcels for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLanVpnInterfaceIpsecAssociatedDhcpServerParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ipsec/{ipsecId}/dhcp-server/{dhcpServerId}",
    "method": "GET",
    "description": "Get LanVpnInterfaceIpsec associated DhcpServer Parcel by dhcpServerId for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editLanVpnInterfaceIpsecAndDhcpServerParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ipsec/{ipsecId}/dhcp-server/{dhcpServerId}",
    "method": "PUT",
    "description": "Update a LanVpnInterfaceIpsec parcel and a DhcpServer Parcel association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteLanVpnInterfaceIpsecAndDhcpServerAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ipsec/{ipsecId}/dhcp-server/{dhcpServerId}",
    "method": "DELETE",
    "description": "Delete a LanVpnInterfaceIpsec and a DhcpServer Parcel association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getInterfaceSviParcelsForServiceLanVpn": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/svi",
    "method": "GET",
    "description": "Get InterfaceSvi Parcels for service LanVpn Parcel",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createLanVpnInterfaceSviParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/svi",
    "method": "POST",
    "description": "Create a LanVpn InterfaceSvi parcel for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getLanVpnInterfaceSviParcelByParcelIdForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/svi/{sviId}",
    "method": "GET",
    "description": "Get LanVpn InterfaceSvi Parcel by sviId for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editLanVpnInterfaceSviParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/svi/{sviId}",
    "method": "PUT",
    "description": "Update a LanVpn InterfaceSvi Parcel for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteLanVpnInterfaceSviForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/svi/{sviId}",
    "method": "DELETE",
    "description": "Delete a  LanVpn InterfaceSvi Parcel for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getLanVpnInterfaceSviAssociatedDhcpServerParcelsForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/svi/{sviId}/dhcp-server",
    "method": "GET",
    "description": "Get LanVpnInterfaceSvi associated DhcpServer Parcels for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLanVpnInterfaceSviAssociatedDhcpServerParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/svi/{sviId}/dhcp-server/{dhcpServerId}",
    "method": "GET",
    "description": "Get LanVpnInterfaceSvi associated DhcpServer Parcel by dhcpServerId for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editLanVpnInterfaceSviAndDhcpServerParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/svi/{sviId}/dhcp-server/{dhcpServerId}",
    "method": "PUT",
    "description": "Update a LanVpnInterfaceSvi parcel and a DhcpServer Parcel association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteLanVpnInterfaceSviAndDhcpServerAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/svi/{sviId}/dhcp-server/{dhcpServerId}",
    "method": "DELETE",
    "description": "Delete a LanVpnInterfaceSvi and a DhcpServer Parcel association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getLanVpnAssociatedRoutingBgpParcelsForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/bgp",
    "method": "GET",
    "description": "Get LanVpn associated Routing Bgp Parcels for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createLanVpnAndRoutingBgpParcelAssociationForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/bgp",
    "method": "POST",
    "description": "Associate a lanvpn parcel with a routingbgp Parcel for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getLanVpnAssociatedRoutingBgpParcelByParcelIdForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/bgp/{bgpId}",
    "method": "GET",
    "description": "Get LanVpn parcel associated RoutingBgp Parcel by bgpId for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editLanVpnAndRoutingBgpParcelAssociationForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/bgp/{bgpId}",
    "method": "PUT",
    "description": "Update a LanVpn parcel and a RoutingBgp Parcel association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteLanVpnAndRoutingBgpAssociationForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/bgp/{bgpId}",
    "method": "DELETE",
    "description": "Delete a LanVpn parcel and a RoutingBgp Parcel association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getLanVpnAssociatedRoutingEigrpParcelsForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/eigrp",
    "method": "GET",
    "description": "Get LanVpn associated Routing Eigrp Features for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createLanVpnAndRoutingEigrpParcelAssociationForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/eigrp",
    "method": "POST",
    "description": "Associate a lanvpn feature with a routingeigrp Feature for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getLanVpnAssociatedRoutingEigrpParcelByParcelIdForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/eigrp/{eigrpId}",
    "method": "GET",
    "description": "Get LanVpn feature associated RoutingEigrp Feature by eigrpId for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editLanVpnAndRoutingEigrpParcelAssociationForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/eigrp/{eigrpId}",
    "method": "PUT",
    "description": "Update a LanVpn feature and a RoutingEigrp Feature association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteLanVpnAndRoutingEigrpAssociationForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/eigrp/{eigrpId}",
    "method": "DELETE",
    "description": "Delete a LanVpn feature and a RoutingEigrp Feature association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getLanVpnAssociatedRoutingMulticastParcelsForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/multicast",
    "method": "GET",
    "description": "Get LanVpn associated Routing Multicast Parcels for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createLanVpnAndRoutingMulticastParcelAssociationForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/multicast",
    "method": "POST",
    "description": "Associate a lanvpn parcel with a routingmulticast Parcel for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getLanVpnAssociatedRoutingMulticastParcelByParcelIdForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/multicast/{multicastId}",
    "method": "GET",
    "description": "Get LanVpn parcel associated RoutingMulticast Parcel by multicastId for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editLanVpnAndRoutingMulticastParcelAssociationForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/multicast/{multicastId}",
    "method": "PUT",
    "description": "Update a LanVpn parcel and a RoutingMulticast Parcel association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteLanVpnAndRoutingMulticastAssociationForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/multicast/{multicastId}",
    "method": "DELETE",
    "description": "Delete a LanVpn parcel and a RoutingMulticast Parcel association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getLanVpnAssociatedRoutingOspfParcelsForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospf",
    "method": "GET",
    "description": "Get LanVpn associated Routing Ospf Parcels for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createLanVpnAndRoutingOspfParcelAssociationForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospf",
    "method": "POST",
    "description": "Associate a lanvpn parcel with a routingospf Parcel for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getLanVpnAssociatedRoutingOspfParcelByParcelIdForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospf/{ospfId}",
    "method": "GET",
    "description": "Get LanVpn parcel associated RoutingOspf Parcel by ospfId for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editLanVpnAndRoutingOspfParcelAssociationForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospf/{ospfId}",
    "method": "PUT",
    "description": "Update a LanVpn parcel and a RoutingOspf Parcel association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteLanVpnAndRoutingOspfAssociationForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospf/{ospfId}",
    "method": "DELETE",
    "description": "Delete a LanVpn parcel and a RoutingOspf Parcel association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getLanVpnAssociatedRoutingOspfv3IPv4ParcelsForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospfv3/ipv4",
    "method": "GET",
    "description": "Get LanVpn associated IPv4 address family OSPFv3 Parcels for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createLanVpnAndRoutingOspfv3IPv4ParcelAssociationForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospfv3/ipv4",
    "method": "POST",
    "description": "Associate a LAN VPN parcel with a IPv4 address family OSPFv3 Parcel for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getLanVpnAssociatedRoutingOspfv3IPv4ParcelByParcelIdForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "GET",
    "description": "Get LanVpn parcel associated IPv4 address family OSPFv3 IPv4 Parcel by ospfv3Id for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editLanVpnAndRoutingOspfv3IPv4ParcelAssociationForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "PUT",
    "description": "Update a LAN VPN parcel and a routing OSPFv3 IPv4 Parcel association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteLanVpnAndRoutingOspfv3AssociationForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "DELETE",
    "description": "Delete a LAN VPN parcel and a IPv4 OSPFv3 parcel association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getLanVpnAssociatedRoutingOspfv3IPv6ParcelsForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospfv3/ipv6",
    "method": "GET",
    "description": "Get LanVpn associated IPv6 address family OSPFv3 Parcels for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createLanVpnAndRoutingOspfv3IPv6ParcelAssociationForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospfv3/ipv6",
    "method": "POST",
    "description": "Associate a LAN VPN parcel with a IPv6 address family OSPFv3 Parcel for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getLanVpnAssociatedRoutingOspfv3IPv6ParcelByParcelIdForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "GET",
    "description": "Get LanVpn parcel associated IPv6 address family OSPFv3 IPv6 Parcel by ospfv3Id for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editLanVpnAndRoutingOspfv3IPv6ParcelAssociationForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "PUT",
    "description": "Update a LAN VPN parcel and a routing OSPFv3 IPv6 Parcel association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletelanvpnandroutingospfv3associationforservice1": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "DELETE",
    "description": "Delete a LAN VPN parcel and a IPv6 OSPFv3 parcel association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "createLanVpnInterfaceEthernetAndDhcpServerParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnParcelId}/interface/ethernet/{ethernetId}/dhcp-server",
    "method": "POST",
    "description": "Associate a LanVpnInterfaceEthernet parcel with a DhcpServer Parcel for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "createLanVpnInterfaceEthernetAndTrackerParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnParcelId}/interface/ethernet/{ethernetId}/tracker",
    "method": "POST",
    "description": "Associate a LanVpnInterfaceEthernet parcel with a Tracker Parcel for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "createLanVpnInterfaceEthernetAndTrackerGroupParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnParcelId}/interface/ethernet/{ethernetId}/trackergroup",
    "method": "POST",
    "description": "Associate a LanVpnInterfaceEthernet parcel with a TrackerGroup Parcel for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "createLanVpnInterfaceIpsecAndDhcpServerParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnParcelId}/interface/ipsec/{ipsecId}/dhcp-server",
    "method": "POST",
    "description": "Associate a LanVpnInterfaceIpsec parcel with a DhcpServer Parcel for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "createLanVpnInterfaceSviAndDhcpServerParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnParcelId}/interface/svi/{sviId}/dhcp-server",
    "method": "POST",
    "description": "Associate a LanVpnInterfaceSvi parcel with a DhcpServer Parcel for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getRoutingBgpProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/bgp",
    "method": "GET",
    "description": "Get Routing Bgp Profile Parcels for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createRoutingBgpProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/bgp",
    "method": "POST",
    "description": "Create a Routing Bgp Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getRoutingBgpProfileParcelByParcelIdForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/bgp/{bgpId}",
    "method": "GET",
    "description": "Get Routing Bgp Profile Parcel by parcelId for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editRoutingBgpProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/bgp/{bgpId}",
    "method": "PUT",
    "description": "Update a Routing Bgp Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteRoutingBgpProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/bgp/{bgpId}",
    "method": "DELETE",
    "description": "Delete a Routing Bgp Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getRoutingEigrpProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/eigrp",
    "method": "GET",
    "description": "Get Routing Eigrp Profile Features for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createRoutingEigrpProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/eigrp",
    "method": "POST",
    "description": "Create a Routing Eigrp Profile Feature for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getRoutingEigrpProfileParcelByParcelIdForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/eigrp/{eigrpId}",
    "method": "GET",
    "description": "Get Routing Eigrp Profile Feature by parcelId for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editRoutingEigrpProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/eigrp/{eigrpId}",
    "method": "PUT",
    "description": "Update a Routing Eigrp Profile Feature for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteRoutingEigrpProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/eigrp/{eigrpId}",
    "method": "DELETE",
    "description": "Delete a Routing Eigrp Profile Feature for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getRoutingMulticastProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/multicast",
    "method": "GET",
    "description": "Get Routing Multicast Profile Parcels for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createRoutingMulticastProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/multicast",
    "method": "POST",
    "description": "Create a Routing Multicast Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getRoutingMulticastProfileParcelByParcelIdForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/multicast/{multicastId}",
    "method": "GET",
    "description": "Get Routing Multicast Profile Parcel by parcelId for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editRoutingMulticastProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/multicast/{multicastId}",
    "method": "PUT",
    "description": "Update a Routing Multicast Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteRoutingMulticastProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/multicast/{multicastId}",
    "method": "DELETE",
    "description": "Delete a Routing Multicast Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getRoutingOspfProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospf",
    "method": "GET",
    "description": "Get Routing Ospf Profile Parcels for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createRoutingOspfProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospf",
    "method": "POST",
    "description": "Create a Routing Ospf Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getRoutingOspfProfileParcelByParcelIdForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospf/{ospfId}",
    "method": "GET",
    "description": "Get Routing Ospf Profile Parcel by parcelId for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editRoutingOspfProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospf/{ospfId}",
    "method": "PUT",
    "description": "Update a Routing Ospf Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteRoutingOspfProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospf/{ospfId}",
    "method": "DELETE",
    "description": "Delete a Routing Ospf Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getRoutingOspfv3Ipv4AfProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospfv3/ipv4",
    "method": "GET",
    "description": "Get Routing OSPFv3 IPv4 Address Family Profile Parcels for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createRoutingOspfv3Ipv4AfProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospfv3/ipv4",
    "method": "POST",
    "description": "Create a Routing OSPFv3 IPv4 Address Family Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getRoutingOspfv3IPv4AfProfileParcelByParcelIdForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "GET",
    "description": "Get Routing OSPFv3 IPv4 Address Family Profile Parcel by parcelId for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editRoutingOspfv3IPv4AfProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "PUT",
    "description": "Update a Routing OSPFv3 IPv4 Address Family Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteRoutingOspfv3IPv4AfProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "DELETE",
    "description": "Delete a Routing OSPFv3 IPv4 Address Family Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getRoutingOspfv3Ipv6AfProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospfv3/ipv6",
    "method": "GET",
    "description": "Get Routing OSPFv3 IPv6 Address Family Profile Parcels for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createRoutingOspfv3Ipv6AfProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospfv3/ipv6",
    "method": "POST",
    "description": "Create a Routing OSPFv3 IPv6 Address Family Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getRoutingOspfv3IPv6AfProfileParcelByParcelIdForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "GET",
    "description": "Get Routing OSPFv3 IPv6 Address Family Profile Parcel by parcelId for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editRoutingOspfv3IPv6AfProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "PUT",
    "description": "Update a Routing OSPFv3 IPv6 Address Family Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteRoutingOspfv3IPv6AfProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "DELETE",
    "description": "Delete a Routing OSPFv3 IPv6 Address Family Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSwitchportParcelsForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/switchport",
    "method": "GET",
    "description": "Get Switchport Parcels for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "cedgeServiceProfileSwitchportParcelRestfulResource": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/switchport",
    "method": "POST",
    "description": "Create a switchport Parcel to a service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSwitchportParcelByParcelIdForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/switchport/{switchportId}",
    "method": "GET",
    "description": "Get Switchport Parcel by switchportId for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSwitchportParcelAssociationForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/switchport/{switchportId}",
    "method": "PUT",
    "description": "Update a Switchport Parcel association for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSwitchportProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/switchport/{switchportId}",
    "method": "DELETE",
    "description": "Delete a Switchport Parcel for service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getTrackerProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/tracker",
    "method": "GET",
    "description": "Get Tracker Profile Parcels for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createTrackerProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/tracker",
    "method": "POST",
    "description": "Create a Tracker Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getTrackerProfileParcelByParcelIdForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/tracker/{trackerId}",
    "method": "GET",
    "description": "Get Tracker Profile Parcel by parcelId for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editTrackerProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/tracker/{trackerId}",
    "method": "PUT",
    "description": "Update a Tracker Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteTrackerProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/tracker/{trackerId}",
    "method": "DELETE",
    "description": "Delete a Tracker Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getTrackerGroupProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/trackergroup",
    "method": "GET",
    "description": "Get TrackerGroup Profile Parcels for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createTrackerGroupProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/trackergroup",
    "method": "POST",
    "description": "Create a TrackerGroup Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getTrackerGroupProfileParcelByParcelIdForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/trackergroup/{trackergroupId}",
    "method": "GET",
    "description": "Get TrackerGroup Profile Parcel by parcelId for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editTrackerGroupProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/trackergroup/{trackergroupId}",
    "method": "PUT",
    "description": "Update a TrackerGroup Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteTrackerGroupProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/trackergroup/{trackergroupId}",
    "method": "DELETE",
    "description": "Delete a TrackerGroup Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getWirelesslanProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/wirelesslan",
    "method": "GET",
    "description": "Get Wirelesslan Profile Parcels for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createWirelesslanProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/wirelesslan",
    "method": "POST",
    "description": "Create a Wirelesslan Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getWirelesslanProfileParcelByParcelIdForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/wirelesslan/{wirelesslanId}",
    "method": "GET",
    "description": "Get Wirelesslan Profile Parcel by parcelId for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editWirelesslanProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/wirelesslan/{wirelesslanId}",
    "method": "PUT",
    "description": "Update a Wirelesslan Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteWirelesslanProfileParcelForService": {
    "path": "/v1/feature-profile/sdwan/service/{serviceId}/wirelesslan/{wirelesslanId}",
    "method": "DELETE",
    "description": "Delete a Wirelesslan Profile Parcel for Service feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdwanSigSecurityFeatureProfiles": {
    "path": "/v1/feature-profile/sdwan/sig-security",
    "method": "GET",
    "description": "Get all SDWAN Feature Profiles with giving Family and profile type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSdwanSigSecurityFeatureProfile": {
    "path": "/v1/feature-profile/sdwan/sig-security",
    "method": "POST",
    "description": "Create a SDWAN Sig Security Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSdwanSigSecurityFeatureProfileByProfileId": {
    "path": "/v1/feature-profile/sdwan/sig-security/{sigSecurityId}",
    "method": "GET",
    "description": "Get a SDWAN Sig Security Feature Profile with sigSecurityId",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdwanSigSecurityFeatureProfile": {
    "path": "/v1/feature-profile/sdwan/sig-security/{sigSecurityId}",
    "method": "PUT",
    "description": "Edit a SDWAN Sig Security Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdwanSigSecurityFeatureProfile": {
    "path": "/v1/feature-profile/sdwan/sig-security/{sigSecurityId}",
    "method": "DELETE",
    "description": "Delete Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getsigsecurityprofileparcel1": {
    "path": "/v1/feature-profile/sdwan/sig-security/{sigSecurityId}/sig",
    "method": "GET",
    "description": "Get Sig Security Profile Parcels for a given ParcelType",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createsigsecurityprofileparcel1": {
    "path": "/v1/feature-profile/sdwan/sig-security/{sigSecurityId}/sig",
    "method": "POST",
    "description": "Create Parcel for Sig Security Policy",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getsigsecurityprofileparcelbyparcelid1": {
    "path": "/v1/feature-profile/sdwan/sig-security/{sigSecurityId}/sig/{sigSecurityProfileParcelId}",
    "method": "GET",
    "description": "Get SigSecurity Profile Parcel by parcelId",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editsigsecurityprofileparcel1": {
    "path": "/v1/feature-profile/sdwan/sig-security/{sigSecurityId}/sig/{sigSecurityProfileParcelId}",
    "method": "PUT",
    "description": "Update a Sig Security Profile Parcel",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletesigsecurityprofileparcel1": {
    "path": "/v1/feature-profile/sdwan/sig-security/{sigSecurityId}/sig/{sigSecurityProfileParcelId}",
    "method": "DELETE",
    "description": "Delete a SigSecurity Profile Parcel",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdwanSystemFeatureProfiles": {
    "path": "/v1/feature-profile/sdwan/system",
    "method": "GET",
    "description": "Get all SDWAN Feature Profiles with giving Family and profile type",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.feature_profile.sdwan.system",
    "sdk_method": "get_sdwan_system_feature_profiles",
    "use_rest": false
  },
  "createSdwanSystemFeatureProfile": {
    "path": "/v1/feature-profile/sdwan/system",
    "method": "POST",
    "description": "Create a SDWAN System Feature Profile",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.feature_profile.sdwan.system",
    "sdk_method": "create_sdwan_system_feature_profile",
    "use_rest": false
  },
  "getSdwanSystemAaaParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/system/aaa/schema",
    "method": "GET",
    "description": "Get a SDWAN System Aaa Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanSystemBannerParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/system/banner/schema",
    "method": "GET",
    "description": "Get a SDWAN System Banner Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanSystemBasicFeatureSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/system/basic/schema",
    "method": "GET",
    "description": "Get a SDWAN System Basic Feature Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanSystemBfdParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/system/bfd/schema",
    "method": "GET",
    "description": "Get a SDWAN System Bfd Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCedgeSystemGlobalParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/system/global/schema",
    "method": "GET",
    "description": "Get a Cedge System Global Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanSystemLoggingParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/system/logging/schema",
    "method": "GET",
    "description": "Get a SDWAN System Logging Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCedgeSystemMrfParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/system/mrf/schema",
    "method": "GET",
    "description": "Get a Cedge System Mrf Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanSystemNtpParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/system/ntp/schema",
    "method": "GET",
    "description": "Get a SDWAN System Ntp Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanSystemOmpParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/system/omp/schema",
    "method": "GET",
    "description": "Get a SDWAN System Omp Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanSystemSnmpParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/system/snmp/schema",
    "method": "GET",
    "description": "Get a SDWAN System Snmp Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanSystemFeatureProfileByProfileId": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}",
    "method": "GET",
    "description": "Get a SDWAN System Feature Profile with systemId",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdwanSystemFeatureProfile": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}",
    "method": "PUT",
    "description": "Edit a SDWAN System Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdwanSystemFeatureProfile": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}",
    "method": "DELETE",
    "description": "Delete Feature Profile",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.feature_profile.sdwan.system",
    "sdk_method": "delete_sdwan_system_feature_profile",
    "use_rest": false
  },
  "getAaaProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/aaa",
    "method": "GET",
    "description": "Get Aaa Profile Parcels for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createAaaProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/aaa",
    "method": "POST",
    "description": "Create a Aaa Profile Parcel for System feature profile",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.feature_profile.sdwan.system",
    "sdk_method": "create_aaa_profile_parcel_for_system",
    "use_rest": false
  },
  "getAaaProfileParcelByParcelIdForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/aaa/{aaaId}",
    "method": "GET",
    "description": "Get Aaa Profile Parcel by parcelId for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editAaaProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/aaa/{aaaId}",
    "method": "PUT",
    "description": "Update a Aaa Profile Parcel for System feature profile",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.feature_profile.sdwan.system",
    "sdk_method": "edit_aaa_profile_parcel_for_system",
    "use_rest": false
  },
  "deleteAaaProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/aaa/{aaaId}",
    "method": "DELETE",
    "description": "Delete a Aaa Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getBannerProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/banner",
    "method": "GET",
    "description": "Get Banner Profile Parcels for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createBannerProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/banner",
    "method": "POST",
    "description": "Create a Banner Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getBannerProfileParcelByParcelIdForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/banner/{bannerId}",
    "method": "GET",
    "description": "Get Banner Profile Parcel by parcelId for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editBannerProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/banner/{bannerId}",
    "method": "PUT",
    "description": "Update a Banner Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteBannerProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/banner/{bannerId}",
    "method": "DELETE",
    "description": "Delete a Banner Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getBasicProfileFeatureForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/basic",
    "method": "GET",
    "description": "Get Basic Profile Feature for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createBasicProfileFeatureForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/basic",
    "method": "POST",
    "description": "Create a Basic Profile Feature for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getBasicProfileFeatureByFeatureIdForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/basic/{basicId}",
    "method": "GET",
    "description": "Get Basic Profile Feature by FeatureId for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editBasicProfileFeatureForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/basic/{basicId}",
    "method": "PUT",
    "description": "Update a Basic Profile Feature for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteBasicProfileFeatureForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/basic/{basicId}",
    "method": "DELETE",
    "description": "Delete a Basic Profile Feature for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getBfdProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/bfd",
    "method": "GET",
    "description": "Get Bfd Profile Parcels for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createBfdProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/bfd",
    "method": "POST",
    "description": "Create a Bfd Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getBfdProfileParcelByParcelIdForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/bfd/{bfdId}",
    "method": "GET",
    "description": "Get Bfd Profile Parcel by parcelId for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editBfdProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/bfd/{bfdId}",
    "method": "PUT",
    "description": "Update a Bfd Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteBfdProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/bfd/{bfdId}",
    "method": "DELETE",
    "description": "Delete a Bfd Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getGlobalProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/global",
    "method": "GET",
    "description": "Get Global Profile Parcels for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createGlobalProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/global",
    "method": "POST",
    "description": "Create a Global Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getGlobalProfileParcelByParcelIdForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/global/{globalId}",
    "method": "GET",
    "description": "Get Global Profile Parcel by parcelId for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editGlobalProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/global/{globalId}",
    "method": "PUT",
    "description": "Update a Global Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteGlobalProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/global/{globalId}",
    "method": "DELETE",
    "description": "Delete a Global Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getLoggingProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/logging",
    "method": "GET",
    "description": "Get Logging Profile Parcels for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createLoggingProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/logging",
    "method": "POST",
    "description": "Create a Logging Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getLoggingProfileParcelByParcelIdForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/logging/{loggingId}",
    "method": "GET",
    "description": "Get Logging Profile Parcel by parcelId for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editLoggingProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/logging/{loggingId}",
    "method": "PUT",
    "description": "Update a Logging Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteLoggingProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/logging/{loggingId}",
    "method": "DELETE",
    "description": "Delete a Logging Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getMrfProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/mrf",
    "method": "GET",
    "description": "Get Mrf Profile Parcels for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createMrfProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/mrf",
    "method": "POST",
    "description": "Create a Mrf Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getMrfProfileParcelByParcelIdForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/mrf/{mrfId}",
    "method": "GET",
    "description": "Get Mrf Profile Parcel by parcelId for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editMrfProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/mrf/{mrfId}",
    "method": "PUT",
    "description": "Update a Mrf Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteMrfProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/mrf/{mrfId}",
    "method": "DELETE",
    "description": "Delete a Mrf Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getNtpProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/ntp",
    "method": "GET",
    "description": "Get Ntp Profile Parcels for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createNtpProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/ntp",
    "method": "POST",
    "description": "Create a Ntp Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getNtpProfileParcelByParcelIdForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/ntp/{ntpId}",
    "method": "GET",
    "description": "Get Ntp Profile Parcel by parcelId for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editNtpProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/ntp/{ntpId}",
    "method": "PUT",
    "description": "Update a Ntp Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteNtpProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/ntp/{ntpId}",
    "method": "DELETE",
    "description": "Delete a Ntp Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getOmpProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/omp",
    "method": "GET",
    "description": "Get Omp Profile Parcels for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createOmpProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/omp",
    "method": "POST",
    "description": "Create a Omp Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getOmpProfileParcelByParcelIdForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/omp/{ompId}",
    "method": "GET",
    "description": "Get Omp Profile Parcel by parcelId for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editOmpProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/omp/{ompId}",
    "method": "PUT",
    "description": "Update a Omp Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteOmpProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/omp/{ompId}",
    "method": "DELETE",
    "description": "Delete a Omp Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSecurityForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/security",
    "method": "GET",
    "description": "Get Security for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSecurityForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/security",
    "method": "POST",
    "description": "Create Security for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSecurityBySecurityIdForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/security/{securityId}",
    "method": "GET",
    "description": "Get Security by securityId for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSecurityForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/security/{securityId}",
    "method": "PUT",
    "description": "Update Security for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSecurityForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/security/{securityId}",
    "method": "DELETE",
    "description": "Delete Security for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSnmpProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/snmp",
    "method": "GET",
    "description": "Get Snmp Profile Parcels for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createSnmpProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/snmp",
    "method": "POST",
    "description": "Create a Snmp Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getSnmpProfileParcelByParcelIdForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/snmp/{snmpId}",
    "method": "GET",
    "description": "Get Snmp Profile Parcel by parcelId for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSnmpProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/snmp/{snmpId}",
    "method": "PUT",
    "description": "Update a Snmp Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSnmpProfileParcelForSystem": {
    "path": "/v1/feature-profile/sdwan/system/{systemId}/snmp/{snmpId}",
    "method": "DELETE",
    "description": "Delete a Snmp Profile Parcel for System feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getSdwanTransportFeatureProfiles": {
    "path": "/v1/feature-profile/sdwan/transport",
    "method": "GET",
    "description": "Get all SDWAN Feature Profiles with giving Family and profile type",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.feature_profile.sdwan.transport",
    "sdk_method": "get_sdwan_transport_feature_profiles",
    "use_rest": false
  },
  "createSdwanTransportFeatureProfile": {
    "path": "/v1/feature-profile/sdwan/transport",
    "method": "POST",
    "description": "Create a SDWAN Transport Feature Profile",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.feature_profile.sdwan.transport",
    "sdk_method": "create_sdwan_transport_feature_profile",
    "use_rest": false
  },
  "getSdwanTransportCellularControllerParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/transport/cellular-controller/schema",
    "method": "GET",
    "description": "Get a SDWAN Transport CellularController Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanTransportCellularProfileParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/transport/cellular-profile/schema",
    "method": "GET",
    "description": "Get a SDWAN Transport CellularProfile Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanTransportIpv6TrackerParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/transport/ipv6-tracker/schema",
    "method": "GET",
    "description": "Get a SDWAN Transport IPv6 Tracker Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCedgeTransportIpv6TrackerGroupParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/transport/ipv6-trackergroup/schema",
    "method": "GET",
    "description": "Get a Cedge Transport IPv6 TrackerGroup Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanTransportManagementVpnInterfaceEthernetParcelSchemaBySchema": {
    "path": "/v1/feature-profile/sdwan/transport/management/vpn/interface/ethernet/schema",
    "method": "GET",
    "description": "Get a SDWAN Transport ManagementVpn InterfaceEthernet Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanTransportManagementVpnParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/transport/management/vpn/schema",
    "method": "GET",
    "description": "Get a SDWAN Transport ManagementVpn Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanTransportRoutingBgpParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/transport/routing/bgp/schema",
    "method": "GET",
    "description": "Get a SDWAN Transport RoutingBgp Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCedgeTransportT1e1controllerParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/transport/t1-e1-controller/schema",
    "method": "GET",
    "description": "Get a Cedge Transport T1e1controller Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanTransportTrackerParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/transport/tracker/schema",
    "method": "GET",
    "description": "Get a SDWAN Transport Tracker Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCedgeTransportTrackerGroupParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/transport/trackergroup/schema",
    "method": "GET",
    "description": "Get a Cedge Transport TrackerGroup Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanTransportWanVpnCellularInterfaceParcelSchemaBySchema": {
    "path": "/v1/feature-profile/sdwan/transport/wan/vpn/interface/cellular/schema",
    "method": "GET",
    "description": "Get a SDWAN Transport WanVpn CellularInterface Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanTransportWanVpnInterfaceEthernetParcelSchemaBySchema": {
    "path": "/v1/feature-profile/sdwan/transport/wan/vpn/interface/ethernet/schema",
    "method": "GET",
    "description": "Get a SDWAN Transport WanVpn InterfaceEthernet Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCedgeTransportWanVpnInterfaceGreParcelSchemaBySchema": {
    "path": "/v1/feature-profile/sdwan/transport/wan/vpn/interface/gre/schema",
    "method": "GET",
    "description": "Get a Cedge Transport WanVpn InterfaceGre Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getsdwanprofileparcelschema1": {
    "path": "/v1/feature-profile/sdwan/transport/wan/vpn/interface/ipsec/schema",
    "method": "GET",
    "description": "Get a SDWAN Transport WanVpn InterfaceIpsec Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCedgeTransportWanVpnInterfaceSerialParcelSchemaBySchema": {
    "path": "/v1/feature-profile/sdwan/transport/wan/vpn/interface/serial/schema",
    "method": "GET",
    "description": "Get a Cedge Transport WanVpn InterfaceSerial Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanTransportWanVpnParcelSchemaBySchemaType": {
    "path": "/v1/feature-profile/sdwan/transport/wan/vpn/schema",
    "method": "GET",
    "description": "Get a SDWAN Transport WanVpn Parcel Schema by Schema Type",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getSdwanTransportFeatureProfileByProfileId": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}",
    "method": "GET",
    "description": "Get a SDWAN Transport Feature Profile with transportId",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editSdwanTransportFeatureProfile": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}",
    "method": "PUT",
    "description": "Edit a SDWAN Transport Feature Profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteSdwanTransportFeatureProfile": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}",
    "method": "DELETE",
    "description": "Delete Feature Profile",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.feature_profile.sdwan.transport",
    "sdk_method": "delete_sdwan_transport_feature_profile",
    "use_rest": false
  },
  "getCellularControllerProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller",
    "method": "GET",
    "description": "Get Cellular Controller Profile Parcels for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createCellularControllerProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller",
    "method": "POST",
    "description": "Create a Cellular Controller Profile Parcel for Transport feature profile",
    "sdk_endpoint": "admin_tech.session.endpoints.configuration.feature_profile.sdwan.transport",
    "sdk_method": "create_cellular_controller_profile_parcel_for_transport",
    "use_rest": false
  },
  "getCellularControllerProfileParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}",
    "method": "GET",
    "description": "Get Cellular Controller Profile Parcel by parcelId for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editCellularControllerProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}",
    "method": "PUT",
    "description": "Update a Cellular Controller Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteCellularControllerProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}",
    "method": "DELETE",
    "description": "Delete a Cellular Controller Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getCellularControllerAssociatedCellularProfileParcelsForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}/cellular-profile",
    "method": "GET",
    "description": "Get CellularController associated Cellular Profile Parcels for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createCellularControllerAndCellularProfileParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}/cellular-profile",
    "method": "POST",
    "description": "Associate a cellularcontroller parcel with a cellularprofile Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getCellularControllerAssociatedCellularProfileParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}/cellular-profile/{cellularProfileId}",
    "method": "GET",
    "description": "Get CellularController parcel associated CellularProfile Parcel by cellularProfileId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editCellularControllerAndCellularProfileParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}/cellular-profile/{cellularProfileId}",
    "method": "PUT",
    "description": "Update a CellularController parcel and a CellularProfile Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteCellularControllerAndCellularProfileAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}/cellular-profile/{cellularProfileId}",
    "method": "DELETE",
    "description": "Delete a CellularController parcel and a CellularProfile Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getCellularControllerAssociatedGpsParcelsForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}/gps",
    "method": "GET",
    "description": "Get CellularController associated Gps Parcels for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createCellularControllerAndGpsParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}/gps",
    "method": "POST",
    "description": "Associate a cellularcontroller parcel with a gps Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getCellularControllerAssociatedGpsParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}/gps/{gpsId}",
    "method": "GET",
    "description": "Get CellularController parcel associated Gps Parcel by gpsId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editCellularControllerAndGpsParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}/gps/{gpsId}",
    "method": "PUT",
    "description": "Update a CellularController parcel and a Gps Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteCellularControllerAndGpsAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}/gps/{gpsId}",
    "method": "DELETE",
    "description": "Delete a CellularController parcel and a Gps Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getCellularProfileProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-profile",
    "method": "GET",
    "description": "Get Cellular Profile Profile Parcels for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createCellularProfileProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-profile",
    "method": "POST",
    "description": "Create a Cellular Profile Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getCellularProfileProfileParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-profile/{cellularProfileId}",
    "method": "GET",
    "description": "Get Cellular Profile Profile Parcel by parcelId for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editCellularProfileProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-profile/{cellularProfileId}",
    "method": "PUT",
    "description": "Update a Cellular Profile Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteCellularProfileProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-profile/{cellularProfileId}",
    "method": "DELETE",
    "description": "Delete a Cellular Profile Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getEsimCellularControllerProfileFeatureForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/esimcellular-controller",
    "method": "GET",
    "description": "Get eSim Cellular Controller Features for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createEsimCellularControllerProfileFeatureForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/esimcellular-controller",
    "method": "POST",
    "description": "Create a eSim Cellular Controller Feature for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getEsimCellularControllerProfileFeatureByFeatureIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/esimcellular-controller/{esimCellularControllerId}",
    "method": "GET",
    "description": "Get eSim Cellular Controller Feature by Feature Id for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editEsimCellularControllerProfileFeatureForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/esimcellular-controller/{esimCellularControllerId}",
    "method": "PUT",
    "description": "Update a eSim Cellular Controller Feature for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteEsimCellularControllerProfileFeatureForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/esimcellular-controller/{esimCellularControllerId}",
    "method": "DELETE",
    "description": "Delete a eSim Cellular Controller Feature for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getEsimCellularProfileProfileFeatureForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/esimcellular-profile",
    "method": "GET",
    "description": "Get EsimCellular Profile Features for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createEsimCellularProfileProfileFeatureForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/esimcellular-profile",
    "method": "POST",
    "description": "Create a EsimCellular Profile Feature for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getEsimCellularProfileByFeatureIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/esimcellular-profile/{esimCellularProfileId}",
    "method": "GET",
    "description": "Get EsimCellular Profile Feature by Feature Id for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editEsimCellularProfileProfileFeatureForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/esimcellular-profile/{esimCellularProfileId}",
    "method": "PUT",
    "description": "Update a EsimCellular Profile Feature for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteEsimCellularProfileProfileFeatureForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/esimcellular-profile/{esimCellularProfileId}",
    "method": "DELETE",
    "description": "Delete a EsimCellular Profile Feature for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getGpsProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/gps",
    "method": "GET",
    "description": "Get Gps Profile Parcels for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createGpsProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/gps",
    "method": "POST",
    "description": "Create a Gps Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getGpsProfileParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/gps/{gpsId}",
    "method": "GET",
    "description": "Get Gps Profile Parcel by parcelId for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editGpsProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/gps/{gpsId}",
    "method": "PUT",
    "description": "Update a Gps Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteGpsProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/gps/{gpsId}",
    "method": "DELETE",
    "description": "Delete a Gps Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getIpv6TrackerProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/ipv6-tracker",
    "method": "GET",
    "description": "Get IPv6 Tracker Profile Parcels for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createIpv6TrackerProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/ipv6-tracker",
    "method": "POST",
    "description": "Create a IPv6 Tracker Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getIpv6TrackerProfileParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/ipv6-tracker/{ipv6-trackerId}",
    "method": "GET",
    "description": "Get IPv6 Tracker Profile Parcel by parcelId for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editIpv6TrackerProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/ipv6-tracker/{ipv6-trackerId}",
    "method": "PUT",
    "description": "Update a IPv6 Tracker Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteIpv6TrackerProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/ipv6-tracker/{ipv6-trackerId}",
    "method": "DELETE",
    "description": "Delete a IPv6 Tracker Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getIpv6TrackerGroupProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/ipv6-trackergroup",
    "method": "GET",
    "description": "Get IPv6 TrackerGroup Profile Parcels for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createIpv6TrackerGroupProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/ipv6-trackergroup",
    "method": "POST",
    "description": "Create a IPv6 TrackerGroup Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getIpv6TrackerGroupProfileParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/ipv6-trackergroup/{ipv6-trackergroupId}",
    "method": "GET",
    "description": "Get IPv6 TrackerGroup Profile Parcel by parcelId for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editIpv6TrackerGroupProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/ipv6-trackergroup/{ipv6-trackergroupId}",
    "method": "PUT",
    "description": "Update a IPv6 TrackerGroup Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteIpv6TrackerGroupProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/ipv6-trackergroup/{ipv6-trackergroupId}",
    "method": "DELETE",
    "description": "Delete a IPv6 TrackerGroup Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getManagementVpnProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/management/vpn",
    "method": "GET",
    "description": "Get Management Vpn Profile Parcels for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createManagementVpnProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/management/vpn",
    "method": "POST",
    "description": "Create a Management Vpn Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getManagementVpnProfileParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/management/vpn/{vpnId}",
    "method": "GET",
    "description": "Get Management Vpn Profile Parcel by parcelId for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editManagementVpnProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/management/vpn/{vpnId}",
    "method": "PUT",
    "description": "Update a Management Vpn Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteManagementVpnProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/management/vpn/{vpnId}",
    "method": "DELETE",
    "description": "Delete a Management Vpn Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getInterfaceEthernetParcelsForTransportManagementVpn": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/management/vpn/{vpnId}/interface/ethernet",
    "method": "GET",
    "description": "Get InterfaceEthernet Parcels for transport ManagementVpn Parcel",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createManagementVpnInterfaceEthernetParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/management/vpn/{vpnId}/interface/ethernet",
    "method": "POST",
    "description": "Create a ManagementVpn InterfaceEthernet parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getManagementVpnInterfaceEthernetParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/management/vpn/{vpnId}/interface/ethernet/{ethernetId}",
    "method": "GET",
    "description": "Get ManagementVpn InterfaceEthernet Parcel by ethernetId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editManagementVpnInterfaceEthernetParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/management/vpn/{vpnId}/interface/ethernet/{ethernetId}",
    "method": "PUT",
    "description": "Update a ManagementVpn InterfaceEthernet Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteManagementVpnInterfaceEthernetForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/management/vpn/{vpnId}/interface/ethernet/{ethernetId}",
    "method": "DELETE",
    "description": "Delete a  ManagementVpn InterfaceEthernet Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getRoutingBgpProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/bgp",
    "method": "GET",
    "description": "Get Routing Bgp Profile Parcels for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createRoutingBgpProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/bgp",
    "method": "POST",
    "description": "Create a Routing Bgp Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getRoutingBgpProfileParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/bgp/{bgpId}",
    "method": "GET",
    "description": "Get Routing Bgp Profile Parcel by parcelId for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editRoutingBgpProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/bgp/{bgpId}",
    "method": "PUT",
    "description": "Update a Routing Bgp Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteRoutingBgpProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/bgp/{bgpId}",
    "method": "DELETE",
    "description": "Delete a Routing Bgp Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getRoutingOspfProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospf",
    "method": "GET",
    "description": "Get Routing Ospf Profile Parcels for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createRoutingOspfProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospf",
    "method": "POST",
    "description": "Create a Routing Ospf Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getRoutingOspfProfileParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospf/{ospfId}",
    "method": "GET",
    "description": "Get Routing Ospf Profile Parcel by parcelId for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editRoutingOspfProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospf/{ospfId}",
    "method": "PUT",
    "description": "Update a Routing Ospf Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteRoutingOspfProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospf/{ospfId}",
    "method": "DELETE",
    "description": "Delete a Routing Ospf Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getRoutingOspfv3Ipv4AfProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospfv3/ipv4",
    "method": "GET",
    "description": "Get all routing OSPFv3 IPv4 address family profile parcels for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createRoutingOspfv3Ipv4AfProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospfv3/ipv4",
    "method": "POST",
    "description": "Create a routing OSPFv3 IPv4 address family profile parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getRoutingOspfv3Ipv4AfProfileParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "GET",
    "description": "Get the routing OSPFv3 IPv4 address family profile parcel by ID for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editRoutingOspfv3Ipv4AfProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "PUT",
    "description": "Update a routing OSPFv3 IPv4 address family profile parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteRoutingOspfv3Ipv4AfProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "DELETE",
    "description": "Delete the routing OSPFv3 IPv4 address family profile parcel by ID for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getRoutingOspfv3Ipv6AfProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospfv3/ipv6",
    "method": "GET",
    "description": "Get all routing OSPFv3 IPv6 address family profile parcels for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createRoutingOspfv3Ipv6AfProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospfv3/ipv6",
    "method": "POST",
    "description": "Create a routing OSPFv3 IPv6 address family profile parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getRoutingOspfv3Ipv6AfProfileParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "GET",
    "description": "Get the routing OSPFv3 IPv6 address family profile parcel by ID for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editRoutingOspfv3Ipv6AfProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "PUT",
    "description": "Update a routing OSPFv3 IPv6 address family profile parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteRoutingOspfv3Ipv6AfProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "DELETE",
    "description": "Delete the routing OSPFv3 IPv6 address family profile parcel by ID for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getT1e1controllerProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/t1-e1-controller",
    "method": "GET",
    "description": "Get T1e1controller Profile Parcels for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createT1e1controllerProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/t1-e1-controller",
    "method": "POST",
    "description": "Create a T1e1controller Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getT1e1controllerProfileParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/t1-e1-controller/{t1e1controllerId}",
    "method": "GET",
    "description": "Get T1e1controller Profile Parcel by parcelId for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editT1e1controllerProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/t1-e1-controller/{t1e1controllerId}",
    "method": "PUT",
    "description": "Update a T1e1controller Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteT1e1controllerProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/t1-e1-controller/{t1e1controllerId}",
    "method": "DELETE",
    "description": "Delete a T1e1controller Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getTrackerProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/tracker",
    "method": "GET",
    "description": "Get Tracker Profile Parcels for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createTrackerProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/tracker",
    "method": "POST",
    "description": "Create a Tracker Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getTrackerProfileParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/tracker/{trackerId}",
    "method": "GET",
    "description": "Get Tracker Profile Parcel by parcelId for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editTrackerProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/tracker/{trackerId}",
    "method": "PUT",
    "description": "Update a Tracker Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteTrackerProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/tracker/{trackerId}",
    "method": "DELETE",
    "description": "Delete a Tracker Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getTrackerGroupProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/trackergroup",
    "method": "GET",
    "description": "Get TrackerGroup Profile Parcels for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createTrackerGroupProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/trackergroup",
    "method": "POST",
    "description": "Create a TrackerGroup Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getTrackerGroupProfileParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/trackergroup/{trackergroupId}",
    "method": "GET",
    "description": "Get TrackerGroup Profile Parcel by parcelId for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editTrackerGroupProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/trackergroup/{trackergroupId}",
    "method": "PUT",
    "description": "Update a TrackerGroup Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteTrackerGroupProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/trackergroup/{trackergroupId}",
    "method": "DELETE",
    "description": "Delete a TrackerGroup Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getWanVpnProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn",
    "method": "GET",
    "description": "Get Wan Vpn Profile Parcels for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createWanVpnProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn",
    "method": "POST",
    "description": "Create a Wan Vpn Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getWanVpnProfileParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}",
    "method": "GET",
    "description": "Get Wan Vpn Profile Parcel by parcelId for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editWanVpnProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}",
    "method": "PUT",
    "description": "Update a Wan Vpn Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteWanVpnProfileParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}",
    "method": "DELETE",
    "description": "Delete a Wan Vpn Profile Parcel for Transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getInterfaceCellularParcelsForTransportWanVpn": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular",
    "method": "GET",
    "description": "Get Interface Cellular Parcels for transport Wan Vpn Parcel",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createWanVpnInterfaceCellularParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular",
    "method": "POST",
    "description": "Create a wanvpn Cellular interface Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getWanVpnInterfaceCellularAssociatedIpv6TrackerParcelsForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/ipv6-tracker",
    "method": "GET",
    "description": "Get WanVpnInterfaceCellular associated IPv6 Tracker Parcels for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWanVpnInterfaceCellularAssociatedIpv6TrackerParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/ipv6-tracker/{ipv6-trackerId}",
    "method": "GET",
    "description": "Get WanVpnInterfaceCellular associated IPv6 Tracker Parcel by ipv6-trackerId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editWanVpnInterfaceCellularAndIpv6TrackerParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/ipv6-tracker/{ipv6-trackerId}",
    "method": "PUT",
    "description": "Update a WanVpnInterfaceCellular parcel and a IPv6 Tracker Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteWanVpnInterfaceCellularAndIpv6TrackerAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/ipv6-tracker/{ipv6-trackerId}",
    "method": "DELETE",
    "description": "Delete a WanVpnInterfaceCellular and a IPv6 Tracker Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getWanVpnInterfaceCellularAssociatedIpv6TrackerGroupParcelsForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/ipv6-trackergroup",
    "method": "GET",
    "description": "Get WanVpnInterfaceCellular associated IPv6 TrackerGroup Parcels for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWanVpnInterfaceCellularAssociatedIpv6TrackerGroupParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/ipv6-trackergroup/{ipv6-trackergroupId}",
    "method": "GET",
    "description": "Get WanVpnInterfaceCellular associated IPv6 TrackerGroup Parcel by ipv6-trackergroupId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editWanVpnInterfaceCellularAndIpv6TrackerGroupParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/ipv6-trackergroup/{ipv6-trackergroupId}",
    "method": "PUT",
    "description": "Update a WanVpnInterfaceCellular parcel and a IPv6 TrackerGroup Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteWanVpnInterfaceCellularAndIpv6TrackerGroupAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/ipv6-trackergroup/{ipv6-trackergroupId}",
    "method": "DELETE",
    "description": "Delete a WanVpnInterfaceCellular and a IPv6 TrackerGroup Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getWanVpnInterfaceCellularAssociatedTrackerParcelsForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/tracker",
    "method": "GET",
    "description": "Get WanVpnInterfaceCellular associated Tracker Parcels for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWanVpnInterfaceCellularAssociatedTrackerParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/tracker/{trackerId}",
    "method": "GET",
    "description": "Get WanVpnInterfaceCellular associated Tracker Parcel by trackerId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editWanVpnInterfaceCellularAndTrackerParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/tracker/{trackerId}",
    "method": "PUT",
    "description": "Update a WanVpnInterfaceCellular parcel and a Tracker Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteWanVpnInterfaceCellularAndTrackerAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/tracker/{trackerId}",
    "method": "DELETE",
    "description": "Delete a WanVpnInterfaceCellular and a Tracker Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getWanVpnInterfaceCellularAssociatedTrackerGroupParcelsForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/trackergroup",
    "method": "GET",
    "description": "Get WanVpnInterfaceCellular associated Tracker Group Parcels for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWanVpnInterfaceCellularAssociatedTrackerGroupParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/trackergroup/{trackerGroupId}",
    "method": "GET",
    "description": "Get WanVpnInterfaceCellular associated Tracker Group Parcel by trackerId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editWanVpnInterfaceCellularAndTrackerGroupParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/trackergroup/{trackerGroupId}",
    "method": "PUT",
    "description": "Update a WanVpnInterfaceCellular parcel and a Tracker Group Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteWanVpnInterfaceCellularAndTrackerGroupAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/trackergroup/{trackerGroupId}",
    "method": "DELETE",
    "description": "Delete a WanVpnInterfaceCellular and a Tracker Group Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getWanVpnInterfaceCellularParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{intfId}",
    "method": "GET",
    "description": "Get wanvpn Cellular interface Parcel by intfId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editWanVpnInterfaceCellularParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{intfId}",
    "method": "PUT",
    "description": "Update a wanvpn Cellular Interface Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteWanVpnInterfaceCellularForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{intfId}",
    "method": "DELETE",
    "description": "Delete a wanvpn Cellular interface Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getInterfaceEthernetParcelsForTransportWanVpn": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet",
    "method": "GET",
    "description": "Get InterfaceEthernet Parcels for transport WanVpn Parcel",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createWanVpnInterfaceEthernetParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet",
    "method": "POST",
    "description": "Create a WanVpn InterfaceEthernet parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getWanVpnInterfaceEthernetParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}",
    "method": "GET",
    "description": "Get WanVpn InterfaceEthernet Parcel by ethernetId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editWanVpnInterfaceEthernetParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}",
    "method": "PUT",
    "description": "Update a WanVpn InterfaceEthernet Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteWanVpnInterfaceEthernetForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}",
    "method": "DELETE",
    "description": "Delete a  WanVpn InterfaceEthernet Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getWanVpnInterfaceEthernetAssociatedIpv6TrackerParcelsForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/ipv6-tracker",
    "method": "GET",
    "description": "Get WanVpnInterfaceEthernet associated IPv6 Tracker Parcels for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWanVpnInterfaceEthernetAssociatedIpv6TrackerParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/ipv6-tracker/{ipv6-trackerId}",
    "method": "GET",
    "description": "Get WanVpnInterfaceEthernet associated IPv6 Tracker Parcel by ipv6-trackerId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editWanVpnInterfaceEthernetAndIpv6TrackerParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/ipv6-tracker/{ipv6-trackerId}",
    "method": "PUT",
    "description": "Update a WanVpnInterfaceEthernet parcel and a IPv6 Tracker Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteWanVpnInterfaceEthernetAndIpv6TrackerAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/ipv6-tracker/{ipv6-trackerId}",
    "method": "DELETE",
    "description": "Delete a WanVpnInterfaceEthernet and a IPv6 Tracker Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getWanVpnInterfaceEthernetAssociatedIpv6TrackerGroupParcelsForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/ipv6-trackergroup",
    "method": "GET",
    "description": "Get WanVpnInterfaceEthernet associated IPv6 TrackerGroup Parcels for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWanVpnInterfaceEthernetAssociatedIpv6TrackerGroupParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/ipv6-trackergroup/{ipv6-trackergroupId}",
    "method": "GET",
    "description": "Get WanVpnInterfaceEthernet associated IPv6 TrackerGroup Parcel by ipv6-trackergroupId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editWanVpnInterfaceEthernetAndIpv6TrackerGroupParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/ipv6-trackergroup/{ipv6-trackergroupId}",
    "method": "PUT",
    "description": "Update a WanVpnInterfaceEthernet parcel and a IPv6 TrackerGroup Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteWanVpnInterfaceEthernetAndIpv6TrackerGroupAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/ipv6-trackergroup/{ipv6-trackergroupId}",
    "method": "DELETE",
    "description": "Delete a WanVpnInterfaceEthernet and a IPv6 TrackerGroup Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getWanVpnInterfaceEthernetAssociatedTrackerParcelsForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/tracker",
    "method": "GET",
    "description": "Get WanVpnInterfaceEthernet associated Tracker Parcels for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWanVpnInterfaceEthernetAssociatedTrackerParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/tracker/{trackerId}",
    "method": "GET",
    "description": "Get WanVpnInterfaceEthernet associated Tracker Parcel by trackerId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editWanVpnInterfaceEthernetAndTrackerParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/tracker/{trackerId}",
    "method": "PUT",
    "description": "Update a WanVpnInterfaceEthernet parcel and a Tracker Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteWanVpnInterfaceEthernetAndTrackerAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/tracker/{trackerId}",
    "method": "DELETE",
    "description": "Delete a WanVpnInterfaceEthernet and a Tracker Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getWanVpnInterfaceEthernetAssociatedTrackerGroupParcelsForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/trackergroup",
    "method": "GET",
    "description": "Get WanVpnInterfaceEthernet associated TrackerGroup Parcels for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWanVpnInterfaceEthernetAssociatedTrackerGroupParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/trackergroup/{trackergroupId}",
    "method": "GET",
    "description": "Get WanVpnInterfaceEthernet associated TrackerGroup Parcel by trackergroupId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editWanVpnInterfaceEthernetAndTrackerGroupParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/trackergroup/{trackergroupId}",
    "method": "PUT",
    "description": "Update a WanVpnInterfaceEthernet parcel and a TrackerGroup Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteWanVpnInterfaceEthernetAndTrackerGroupAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/trackergroup/{trackergroupId}",
    "method": "DELETE",
    "description": "Delete a WanVpnInterfaceEthernet and a TrackerGroup Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getInterfaceGreParcelsForTransportWanVpn": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/gre",
    "method": "GET",
    "description": "Get InterfaceGre Parcels for transport WanVpn Parcel",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createWanVpnInterfaceGreParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/gre",
    "method": "POST",
    "description": "Create a WanVpn InterfaceGre parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getWanVpnInterfaceGreParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/gre/{greId}",
    "method": "GET",
    "description": "Get WanVpn InterfaceGre Parcel by greId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editWanVpnInterfaceGreParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/gre/{greId}",
    "method": "PUT",
    "description": "Update a WanVpn InterfaceGre Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteWanVpnInterfaceGreForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/gre/{greId}",
    "method": "DELETE",
    "description": "Delete a  WanVpn InterfaceGre Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getWanVpnInterfaceGreAssociatedTrackerParcelsForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/gre/{greId}/tracker",
    "method": "GET",
    "description": "Get WanVpnInterfaceGre associated Tracker Parcels for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createWanVpnInterfaceGreAndTrackerParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/gre/{greId}/tracker",
    "method": "POST",
    "description": "Associate a WanVpnInterfaceGre parcel with a Tracker Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getWanVpnInterfaceGreAssociatedTrackerParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/gre/{greId}/tracker/{trackerId}",
    "method": "GET",
    "description": "Get WanVpnInterfaceGre associated Tracker Parcel by trackerId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editWanVpnInterfaceGreAndTrackerParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/gre/{greId}/tracker/{trackerId}",
    "method": "PUT",
    "description": "Update a WanVpnInterfaceGre parcel and a Tracker Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteWanVpnInterfaceGreAndTrackerAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/gre/{greId}/tracker/{trackerId}",
    "method": "DELETE",
    "description": "Delete a WanVpnInterfaceGre and a Tracker Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getlistofprofileparcels1": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ipsec",
    "method": "GET",
    "description": "Get InterfaceIpsec Parcels for transport WanVpn Parcel",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createipsecprofileparcel1": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ipsec",
    "method": "POST",
    "description": "Create a WanVpn InterfaceIpsec parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getprofileparcelbyparcelid1": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ipsec/{ipsecId}",
    "method": "GET",
    "description": "Get WanVpn InterfaceIpsec Parcel by ethernetId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editprofileparcel1": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ipsec/{ipsecId}",
    "method": "PUT",
    "description": "Update a WanVpn InterfaceIpsec Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteprofileparcel1": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ipsec/{ipsecId}",
    "method": "DELETE",
    "description": "Delete a  WanVpn InterfaceIpsec Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getWanVpnInterfaceIpsecAssociatedTrackerParcelsForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ipsec/{ipsecId}/tracker",
    "method": "GET",
    "description": "Get WanVpnInterfaceIpsec associated Tracker Parcels for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWanVpnInterfaceIpsecAssociatedTrackerParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ipsec/{ipsecId}/tracker/{trackerId}",
    "method": "GET",
    "description": "Get WanVpnInterfaceIpsec associated Tracker Parcel by trackerId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editWanVpnInterfaceIpsecAndTrackerParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ipsec/{ipsecId}/tracker/{trackerId}",
    "method": "PUT",
    "description": "Update a WanVpnInterfaceIpsec parcel and a Tracker Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteWanVpnInterfaceIpsecAndTrackerAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ipsec/{ipsecId}/tracker/{trackerId}",
    "method": "DELETE",
    "description": "Delete a WanVpnInterfaceIpsec and a Tracker Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getInterfaceSerialParcelsForTransportWanVpn": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/serial",
    "method": "GET",
    "description": "Get InterfaceSerial Parcels for transport WanVpn Parcel",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createWanVpnInterfaceSerialParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/serial",
    "method": "POST",
    "description": "Create a WanVpn InterfaceSerial parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getWanVpnInterfaceSerialParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/serial/{serialId}",
    "method": "GET",
    "description": "Get WanVpn InterfaceSerial Parcel by serialId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editWanVpnInterfaceSerialParcelForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/serial/{serialId}",
    "method": "PUT",
    "description": "Update a WanVpn InterfaceSerial Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteWanVpnInterfaceSerialForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/serial/{serialId}",
    "method": "DELETE",
    "description": "Delete a  WanVpn InterfaceSerial Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getWanVpnAssociatedRoutingBgpParcelsForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/bgp",
    "method": "GET",
    "description": "Get WanVpn associated Routing Bgp Parcels for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createWanVpnAndRoutingBgpParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/bgp",
    "method": "POST",
    "description": "Associate a wanvpn parcel with a routingbgp Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getWanVpnAssociatedRoutingBgpParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/bgp/{bgpId}",
    "method": "GET",
    "description": "Get WanVpn parcel associated RoutingBgp Parcel by bgpId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editWanVpnAndRoutingBgpParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/bgp/{bgpId}",
    "method": "PUT",
    "description": "Update a WanVpn parcel and a RoutingBgp Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteWanVpnAndRoutingBgpAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/bgp/{bgpId}",
    "method": "DELETE",
    "description": "Delete a WanVpn parcel and a RoutingBgp Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getWanVpnAssociatedRoutingOspfParcelsForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospf",
    "method": "GET",
    "description": "Get WanVpn associated Routing Ospf Parcels for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createWanVpnAndRoutingOspfParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospf",
    "method": "POST",
    "description": "Associate a wan/vpn parcel with a routing/ospf Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getWanVpnAssociatedRoutingOspfParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospf/{ospfId}",
    "method": "GET",
    "description": "Get WanVpn parcel associated RoutingOspf Parcel by ospfId for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editWanVpnAndRoutingOspfParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospf/{ospfId}",
    "method": "PUT",
    "description": "Update a WanVpn parcel and a RoutingOspf Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteWanVpnAndRoutingOspfAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospf/{ospfId}",
    "method": "DELETE",
    "description": "Delete a WanVpn parcel and a RoutingOspf Parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getWanVpnAssociatedRoutingOspfv3IPv4AfParcelsForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospfv3/ipv4",
    "method": "GET",
    "description": "Get WAN VPN associated routing OSPFv3 IPv4 address family parcels for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createWanVpnAndRoutingOspfv3Ipv4AfParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospfv3/ipv4",
    "method": "POST",
    "description": "Associate a WAN VPN parcel with a routing OSPFv3 parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getWanVpnAssociatedRoutingOspfv3IPv4AfParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "GET",
    "description": "Get WAN VPN parcel associated OSPFv3 IPv4 parcel by ID for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editWanVpnAndRoutingOspfv3IPv4AfParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "PUT",
    "description": "Update a WAN VPN parcel and a routing OSPFv3 parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteWanVpnAndRoutingOspfv3IPv4AssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospfv3/ipv4/{ospfv3Id}",
    "method": "DELETE",
    "description": "Delete a WAN VPN parcel and a routing OSPFv3 parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getWanVpnAssociatedRoutingOspfv3IPv6AfParcelsForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospfv3/ipv6",
    "method": "GET",
    "description": "Get WAN VPN associated routing OSPFv3 IPv6 address family parcels for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createWanVpnAndRoutingOspfv3Ipv6AfParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospfv3/ipv6",
    "method": "POST",
    "description": "Associate a WAN VPN parcel with a routing OSPFv3 parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getWanVpnAssociatedRoutingOspfv3IPv6AfParcelByParcelIdForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "GET",
    "description": "Get WAN VPN parcel associated OSPFv3 IPv6 parcel by ID for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editWanVpnAndRoutingOspfv3IPv6AfParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "PUT",
    "description": "Update a WAN VPN parcel and a routing OSPFv3 parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteWanVpnAndRoutingOspfv3IPv6AssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospfv3/ipv6/{ospfv3Id}",
    "method": "DELETE",
    "description": "Delete a WAN VPN parcel and a routing OSPFv3 parcel association for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "createWanVpnInterfaceCellularAndIpv6TrackerParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnParcelId}/interface/cellular/{cellularId}/ipv6-tracker",
    "method": "POST",
    "description": "Associate a WanVpnInterfaceCellular parcel with a IPv6 Tracker Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "createWanVpnInterfaceCellularAndIpv6TrackerGroupParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnParcelId}/interface/cellular/{cellularId}/ipv6-trackergroup",
    "method": "POST",
    "description": "Associate a WanVpnInterfaceCellular parcel with a IPv6 TrackerGroup Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "createWanVpnInterfaceCellularAndTrackerParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnParcelId}/interface/cellular/{cellularId}/tracker",
    "method": "POST",
    "description": "Associate a WanVpnInterfaceCellular parcel with a Tracker Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "createWanVpnInterfaceCellularAndTrackerGroupParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnParcelId}/interface/cellular/{cellularId}/trackergroup",
    "method": "POST",
    "description": "Associate a WanVpnInterfaceCellular parcel with a TrackerGroup Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "createWanVpnInterfaceEthernetAndIpv6TrackerParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnParcelId}/interface/ethernet/{ethernetId}/ipv6-tracker",
    "method": "POST",
    "description": "Associate a WanVpnInterfaceEthernet parcel with a IPv6 Tracker Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "createWanVpnInterfaceEthernetAndIpv6TrackerGroupParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnParcelId}/interface/ethernet/{ethernetId}/ipv6-trackergroup",
    "method": "POST",
    "description": "Associate a WanVpnInterfaceEthernet parcel with a IPv6 TrackerGroup Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "createWanVpnInterfaceEthernetAndTrackerParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnParcelId}/interface/ethernet/{ethernetId}/tracker",
    "method": "POST",
    "description": "Associate a WanVpnInterfaceEthernet parcel with a Tracker Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "createWanVpnInterfaceEthernetAndTrackerGroupParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnParcelId}/interface/ethernet/{ethernetId}/trackergroup",
    "method": "POST",
    "description": "Associate a WanVpnInterfaceEthernet parcel with a TrackerGroup Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "createWanVpnInterfaceIpsecAndTrackerParcelAssociationForTransport": {
    "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnParcelId}/interface/ipsec/{ipsecId}/tracker",
    "method": "POST",
    "description": "Associate a WanVpnInterfaceIpsec parcel with a Tracker Parcel for transport feature profile",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "assignMSLALicenses": {
    "path": "/v1/licensing/assign-licenses",
    "method": "POST",
    "description": "Assign licenses to devices",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getMSLADevices": {
    "path": "/v1/licensing/devices",
    "method": "GET",
    "description": "Retrieve list of all devices along with license details if assigned",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getLicenseByUuid": {
    "path": "/v1/licensing/edit-licenses/{uuid}",
    "method": "GET",
    "description": "Edit licenses associated to a device",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getMSLALicenses": {
    "path": "/v1/licensing/licenses",
    "method": "POST",
    "description": "Get applicable licenses based on platform class",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "releaseLicenses": {
    "path": "/v1/licensing/release-licenses",
    "method": "PUT",
    "description": "Release licenses assigned to the devices",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "getSAVADistribution": {
    "path": "/v1/licensing/sa-va-distribution",
    "method": "POST",
    "description": "Get Smart account and virtual account distribution of selected licenses",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "updateinterconnectgateway1": {
    "path": "/v1/multicloud/interconnect/gateways/{interconnect-gateway-name}",
    "method": "PUT",
    "description": "Asynchronous API to update the Interconnect Gateway Information in vManage.",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "getPolicyGroupBySolution": {
    "path": "/v1/policy-group",
    "method": "GET",
    "description": "Get a Policy Group by Solution",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPolicyGroup": {
    "path": "/v1/policy-group",
    "method": "POST",
    "description": "Create a new Policy Group",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getPolicyGroup": {
    "path": "/v1/policy-group/{policyGroupId}",
    "method": "GET",
    "description": "Get a Policy Group by ID",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editPolicyGroup": {
    "path": "/v1/policy-group/{policyGroupId}",
    "method": "PUT",
    "description": "Edit a Policy Group",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deletePolicyGroup": {
    "path": "/v1/policy-group/{policyGroupId}",
    "method": "DELETE",
    "description": "Delete Policy Group",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getPolicyGroupAssociation": {
    "path": "/v1/policy-group/{policyGroupId}/device/associate",
    "method": "GET",
    "description": "Get devices association with a policy group",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "updatePolicyGroupAssociation": {
    "path": "/v1/policy-group/{policyGroupId}/device/associate",
    "method": "PUT",
    "description": "Move the devices from one policy group to another",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "createPolicyGroupAssociation": {
    "path": "/v1/policy-group/{policyGroupId}/device/associate",
    "method": "POST",
    "description": "Create associations with device and a policy group",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "deletePolicyGroupAssociation": {
    "path": "/v1/policy-group/{policyGroupId}/device/associate",
    "method": "DELETE",
    "description": "Delete Policy Group Association from devices",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "deployPolicyGroup": {
    "path": "/v1/policy-group/{policyGroupId}/device/deploy",
    "method": "POST",
    "description": "deploy policy group to devices",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getPolicyGroupDeviceVariables": {
    "path": "/v1/policy-group/{policyGroupId}/device/variables",
    "method": "GET",
    "description": "Get device variables",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createPolicyGroupDeviceVariables": {
    "path": "/v1/policy-group/{policyGroupId}/device/variables",
    "method": "PUT",
    "description": "assign values to device variables",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "fetchPolicyGroupDeviceVariables": {
    "path": "/v1/policy-group/{policyGroupId}/device/variables",
    "method": "POST",
    "description": "Fetch device variables",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getPolicyGroupDeviceVariablesSchema": {
    "path": "/v1/policy-group/{policyGroupId}/device/variables/schema",
    "method": "GET",
    "description": "get device variables schema",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPolicyGroupDeviceConfigurationPreview": {
    "path": "/v1/policy-group/{policyGroupId}/device/{deviceId}/preview",
    "method": "POST",
    "description": "Get a preview of the configuration for a device",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getAllReportTemplates": {
    "path": "/v1/reports",
    "method": "GET",
    "description": "Get all reports information",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createReportTemplate": {
    "path": "/v1/reports",
    "method": "POST",
    "description": "create a new report template",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "downloadReportPreviewFile": {
    "path": "/v1/reports/preview/download",
    "method": "GET",
    "description": "Download a report preview file",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getReportTemplateById": {
    "path": "/v1/reports/{reportId}",
    "method": "GET",
    "description": "Get the report template information by report ID",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "updateReportTemplate": {
    "path": "/v1/reports/{reportId}",
    "method": "PUT",
    "description": "Update the report template by report ID",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteReportTemplate": {
    "path": "/v1/reports/{reportId}",
    "method": "DELETE",
    "description": "Delete the report template and all report files associated with it",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "reportAction": {
    "path": "/v1/reports/{reportId}/action/{action}",
    "method": "PUT",
    "description": "User operations for specific report template, which includes activate,deactivate and run immediately",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "getAllReportTasksByReportId": {
    "path": "/v1/reports/{reportId}/tasks",
    "method": "GET",
    "description": "Get all report task detail information by report ID",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "deleteReportTaskByTaskId": {
    "path": "/v1/reports/{reportId}/tasks/{taskId}",
    "method": "DELETE",
    "description": "Delete the report task file by task ID",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "downloadReportDataFile": {
    "path": "/v1/reports/{reportId}/tasks/{taskId}/download",
    "method": "GET",
    "description": "Download a report file",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "fetchSdoToken": {
    "path": "/v1/securedeviceonboarding/fetchSdoToken",
    "method": "POST",
    "description": "POST for fetching Secure Device Onboarding Token needed for Secure Device Onboarding APIs for eSim",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getUrlForSdoIdentityService": {
    "path": "/v1/securedeviceonboarding/getUrlForSdoIdentityService",
    "method": "GET",
    "description": "Get URL for Secure Device Onboarding Identity Service that generates Session ID required for authentication to get Secure Device Onboarding token",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createProviderCredentials": {
    "path": "/v1/securedeviceonboarding/providercredentials",
    "method": "POST",
    "description": "Create service provider credentials",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getAllAccounts": {
    "path": "/v1/securedeviceonboarding/providerscredentials",
    "method": "GET",
    "description": "Get all providers credentials",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getRatePlansByAcctId": {
    "path": "/v1/securedeviceonboarding/rateplans",
    "method": "GET",
    "description": "Get rate plans by account Id",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getProvidersInfo": {
    "path": "/v1/securedeviceonboarding/registeredproviders",
    "method": "GET",
    "description": "Get Registered Providers Info",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCommPlansByAcctId": {
    "path": "/v1/securedeviceonboarding/{accountId}/commplans",
    "method": "GET",
    "description": "Get communication plans by account Id",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "deleteProviderCredentials": {
    "path": "/v1/securedeviceonboarding/{accountId}/providerCredentials",
    "method": "DELETE",
    "description": "Delete provider credentials",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getProviderCredentialsByAccountId": {
    "path": "/v1/securedeviceonboarding/{accountId}/providercredentials",
    "method": "GET",
    "description": "Get provider credentials by account id",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editProviderCredentials": {
    "path": "/v1/securedeviceonboarding/{accountId}/providercredentials",
    "method": "PUT",
    "description": "Edit service provider credentials",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "getDeviceDataUsage": {
    "path": "/v1/securedeviceonboarding/{deviceUUID}/deviceusage",
    "method": "GET",
    "description": "Get device data usage using device uuid",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "serviceChainMapping": {
    "path": "/v1/service-insertion/service-chain-mapping",
    "method": "GET",
    "description": "Gets all the Service Chain Mapping with service chain definition name and service chain number.",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getDevicesForTemplate": {
    "path": "/v1/smart-licensing/association",
    "method": "GET",
    "description": "Get the devices associated with a template",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "license": {
    "path": "/v1/smart-licensing/license",
    "method": "GET",
    "description": "Get licenses from vManage db",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "synclicenses2": {
    "path": "/v1/smart-licensing/sync",
    "method": "POST",
    "description": "Sync licenses from CSSM to vManage db",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "saveTemplate": {
    "path": "/v1/smart-licensing/template",
    "method": "POST",
    "description": "Create and assign license template.",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "deleteTemplate": {
    "path": "/v1/smart-licensing/template/{templateId}",
    "method": "DELETE",
    "description": "Delete a license template",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "getUserSettings": {
    "path": "/v1/smart-licensing/user-settings",
    "method": "GET",
    "description": "Get smart licensing user settings",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "getTopologyGroupBySolution": {
    "path": "/v1/topology-group",
    "method": "GET",
    "description": "Get a Topology Group by Solution",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "createTopologyGroup": {
    "path": "/v1/topology-group",
    "method": "POST",
    "description": "Create a new Topology Group",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getTopologyGroup": {
    "path": "/v1/topology-group/{topologyGroupId}",
    "method": "GET",
    "description": "Get a Topology Group by ID",
    "sdk_endpoint": "v1",
    "sdk_method": "get",
    "use_rest": false
  },
  "editTopologyGroup": {
    "path": "/v1/topology-group/{topologyGroupId}",
    "method": "PUT",
    "description": "Edit a Topology Group",
    "sdk_endpoint": "v1",
    "sdk_method": "update",
    "use_rest": false
  },
  "deleteTopologyGroup": {
    "path": "/v1/topology-group/{topologyGroupId}",
    "method": "DELETE",
    "description": "Delete Topology Group",
    "sdk_endpoint": "v1",
    "sdk_method": "delete",
    "use_rest": false
  },
  "deployTopologyGroup": {
    "path": "/v1/topology-group/{topologyGroupId}/device/deploy",
    "method": "POST",
    "description": "deploy Topology group to devices",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "getTopologyGroupDeviceConfigurationPreview": {
    "path": "/v1/topology-group/{topologyGroupId}/device/{deviceId}/preview",
    "method": "POST",
    "description": "Get a preview of the configuration for a device",
    "sdk_endpoint": "v1",
    "sdk_method": "create",
    "use_rest": false
  },
  "generateDeviceInterfaceStatisticsData": {
    "path": "/v2/data/device/statistics/interfacestatistics",
    "method": "GET",
    "description": "Get device statistics data",
    "sdk_endpoint": "v2",
    "sdk_method": "get",
    "use_rest": false
  },
  "getCountWithInterfaceStatistics": {
    "path": "/v2/data/device/statistics/interfacestatistics/doccount",
    "method": "GET",
    "description": "Get response count of a query",
    "sdk_endpoint": "v2",
    "sdk_method": "get",
    "use_rest": false
  },
  "getStatDataFieldsByInterfaceStatistics": {
    "path": "/v2/data/device/statistics/interfacestatistics/fields",
    "method": "GET",
    "description": "Get statistics fields and types",
    "sdk_endpoint": "v2",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWaniRecommendations": {
    "path": "/wani/recommendations",
    "method": "GET",
    "description": "API to get the recommendations obtained from WANI for a given tenant. This returns only valid recommendations based on expiry. It filters out recommendations that are inactive.",
    "sdk_endpoint": "wani",
    "sdk_method": "get",
    "use_rest": false
  },
  "getAppliedWaniRecommendations": {
    "path": "/wani/recommendations/applied",
    "method": "GET",
    "description": "Per tenant api to check which Wani recommendations have been applied for a given tenant",
    "sdk_endpoint": "wani",
    "sdk_method": "get",
    "use_rest": false
  },
  "getListActivationStatus": {
    "path": "/wani/{listType}/{listId}/listActivationStatus",
    "method": "GET",
    "description": "Get if specified list is apart of a activated centralized policy, if it is the response also gives the centralized policy id, the users original defined centralized policy id, and if current list is apart of a active wani policy.",
    "sdk_endpoint": "wani",
    "sdk_method": "get",
    "use_rest": false
  },
  "getPolicyActivationStatus": {
    "path": "/wani/{policyType}/{policyId}/policyActivationStatus",
    "method": "GET",
    "description": "Get if specified policy is apart of a activated centralized policy, if it is the response also gives the centralized policy id, the users original defined centralized policy id, and if current policy is apart of a active wani policy.",
    "sdk_endpoint": "wani",
    "sdk_method": "get",
    "use_rest": false
  },
  "webexAccessCode": {
    "path": "/webex/accesscode",
    "method": "GET",
    "description": "Webex Access Code Details",
    "sdk_endpoint": "webex",
    "sdk_method": "get",
    "use_rest": false
  },
  "getWebexDataCenters": {
    "path": "/webex/datacenter",
    "method": "POST",
    "description": "TEMP-Insert webex data center details manually for test setup",
    "sdk_endpoint": "webex",
    "sdk_method": "create",
    "use_rest": false
  },
  "deleteWebexDataCenters": {
    "path": "/webex/datacenter",
    "method": "DELETE",
    "description": "Delete webex data center data in DB",
    "sdk_endpoint": "webex",
    "sdk_method": "delete",
    "use_rest": false
  },
  "updateWebexDataCenters": {
    "path": "/webex/datacenter/sync",
    "method": "POST",
    "description": "TEMP-Update webex data center data in DB with data from Webex API",
    "sdk_endpoint": "webex",
    "sdk_method": "create",
    "use_rest": false
  },
  "getWebexDataCentersSyncStatus": {
    "path": "/webex/datacenter/syncstatus",
    "method": "GET",
    "description": "Get webex data center sync status from DB",
    "sdk_endpoint": "webex",
    "sdk_method": "get",
    "use_rest": false
  },
  "setWebexDataCentersSyncStatus": {
    "path": "/webex/datacenter/syncstatus",
    "method": "PUT",
    "description": "Set webex data center sync needed            to false",
    "sdk_endpoint": "webex",
    "sdk_method": "update",
    "use_rest": false
  },
  "redirectWebexDataCenters": {
    "path": "/webex/redirect",
    "method": "GET",
    "description": "Redirect Info",
    "sdk_endpoint": "webex",
    "sdk_method": "get",
    "use_rest": false
  }
}