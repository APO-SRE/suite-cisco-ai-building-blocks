# app/llm/function_dispatcher/intersight_dispatcher.py
import os
from typing import Any
from app.llm.function_dispatcher import register
from app.llm.platform_clients.intersight_client import IntersightClient

@register('GetAaaAuditRecordList')
def GetAaaAuditRecordList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAaaAuditRecordList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAaaAuditRecordByMoid')
def GetAaaAuditRecordByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAaaAuditRecordByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAaaRetentionConfigList')
def GetAaaRetentionConfigList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAaaRetentionConfigList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAaaRetentionConfigByMoid')
def GetAaaRetentionConfigByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAaaRetentionConfigByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAaaRetentionPolicyList')
def GetAaaRetentionPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAaaRetentionPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAaaRetentionPolicyByMoid')
def GetAaaRetentionPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAaaRetentionPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAccessIpAddressList')
def GetAccessIpAddressList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAccessIpAddressList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAccessIpAddressByMoid')
def GetAccessIpAddressByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAccessIpAddressByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAccessPolicyList')
def GetAccessPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAccessPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAccessPolicyByMoid')
def GetAccessPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAccessPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAccessPolicyInventoryList')
def GetAccessPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAccessPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAccessPolicyInventoryByMoid')
def GetAccessPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAccessPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterConfigPolicyList')
def GetAdapterConfigPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAdapterConfigPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterConfigPolicyByMoid')
def GetAdapterConfigPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAdapterConfigPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterExtEthInterfaceList')
def GetAdapterExtEthInterfaceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAdapterExtEthInterfaceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterExtEthInterfaceByMoid')
def GetAdapterExtEthInterfaceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAdapterExtEthInterfaceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterHostEthInterfaceList')
def GetAdapterHostEthInterfaceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAdapterHostEthInterfaceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterHostEthInterfaceByMoid')
def GetAdapterHostEthInterfaceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAdapterHostEthInterfaceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterHostFcInterfaceList')
def GetAdapterHostFcInterfaceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAdapterHostFcInterfaceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterHostFcInterfaceByMoid')
def GetAdapterHostFcInterfaceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAdapterHostFcInterfaceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterHostIscsiInterfaceList')
def GetAdapterHostIscsiInterfaceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAdapterHostIscsiInterfaceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterHostIscsiInterfaceByMoid')
def GetAdapterHostIscsiInterfaceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAdapterHostIscsiInterfaceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterUnitList')
def GetAdapterUnitList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAdapterUnitList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterUnitByMoid')
def GetAdapterUnitByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAdapterUnitByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterUnitExpanderList')
def GetAdapterUnitExpanderList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAdapterUnitExpanderList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterUnitExpanderByMoid')
def GetAdapterUnitExpanderByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAdapterUnitExpanderByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicAciPodList')
def GetApicAciPodList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicAciPodList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicAciPodByMoid')
def GetApicAciPodByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicAciPodByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicApplicationList')
def GetApicApplicationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicApplicationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicApplicationByMoid')
def GetApicApplicationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicApplicationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicApplicationEndpointGroupList')
def GetApicApplicationEndpointGroupList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicApplicationEndpointGroupList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicApplicationEndpointGroupByMoid')
def GetApicApplicationEndpointGroupByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicApplicationEndpointGroupByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicBridgeDomainList')
def GetApicBridgeDomainList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicBridgeDomainList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicBridgeDomainByMoid')
def GetApicBridgeDomainByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicBridgeDomainByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicExternalRoutedLayerThreeDomainList')
def GetApicExternalRoutedLayerThreeDomainList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicExternalRoutedLayerThreeDomainList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicExternalRoutedLayerThreeDomainByMoid')
def GetApicExternalRoutedLayerThreeDomainByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicExternalRoutedLayerThreeDomainByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicFabricLeafNodeList')
def GetApicFabricLeafNodeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicFabricLeafNodeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicFabricLeafNodeByMoid')
def GetApicFabricLeafNodeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicFabricLeafNodeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicFabricLeafNodeInterfaceList')
def GetApicFabricLeafNodeInterfaceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicFabricLeafNodeInterfaceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicFabricLeafNodeInterfaceByMoid')
def GetApicFabricLeafNodeInterfaceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicFabricLeafNodeInterfaceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicOutList')
def GetApicOutList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicOutList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicOutByMoid')
def GetApicOutByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicOutByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicSubnetList')
def GetApicSubnetList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicSubnetList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicSubnetByMoid')
def GetApicSubnetByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicSubnetByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicTenantList')
def GetApicTenantList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicTenantList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicTenantByMoid')
def GetApicTenantByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicTenantByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicVpcGroupList')
def GetApicVpcGroupList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicVpcGroupList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicVpcGroupByMoid')
def GetApicVpcGroupByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicVpcGroupByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicVrfsList')
def GetApicVrfsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicVrfsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicVrfsByMoid')
def GetApicVrfsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApicVrfsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceAppOpStatusList')
def GetApplianceAppOpStatusList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceAppOpStatusList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceAppOpStatusByMoid')
def GetApplianceAppOpStatusByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceAppOpStatusByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceAppStatusList')
def GetApplianceAppStatusList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceAppStatusList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceAppStatusByMoid')
def GetApplianceAppStatusByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceAppStatusByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceAutoRmaPolicyList')
def GetApplianceAutoRmaPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceAutoRmaPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceAutoRmaPolicyByMoid')
def GetApplianceAutoRmaPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceAutoRmaPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceBackupList')
def GetApplianceBackupList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceBackupList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceBackupByMoid')
def GetApplianceBackupByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceBackupByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceBackupMonitorList')
def GetApplianceBackupMonitorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceBackupMonitorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceBackupMonitorByMoid')
def GetApplianceBackupMonitorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceBackupMonitorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceBackupPolicyList')
def GetApplianceBackupPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceBackupPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceBackupPolicyByMoid')
def GetApplianceBackupPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceBackupPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceBackupRotateDataList')
def GetApplianceBackupRotateDataList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceBackupRotateDataList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceBackupRotateDataByMoid')
def GetApplianceBackupRotateDataByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceBackupRotateDataByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceCertificateSettingList')
def GetApplianceCertificateSettingList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceCertificateSettingList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceCertificateSettingByMoid')
def GetApplianceCertificateSettingByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceCertificateSettingByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceClusterInfoList')
def GetApplianceClusterInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceClusterInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceClusterInfoByMoid')
def GetApplianceClusterInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceClusterInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceClusterInstallList')
def GetApplianceClusterInstallList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceClusterInstallList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceClusterInstallByMoid')
def GetApplianceClusterInstallByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceClusterInstallByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceClusterReplaceNodeList')
def GetApplianceClusterReplaceNodeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceClusterReplaceNodeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceClusterReplaceNodeByMoid')
def GetApplianceClusterReplaceNodeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceClusterReplaceNodeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceClusterWorkerNodeList')
def GetApplianceClusterWorkerNodeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceClusterWorkerNodeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceClusterWorkerNodeByMoid')
def GetApplianceClusterWorkerNodeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceClusterWorkerNodeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDataExportPolicyList')
def GetApplianceDataExportPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceDataExportPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDataExportPolicyByMoid')
def GetApplianceDataExportPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceDataExportPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDeviceCertificateList')
def GetApplianceDeviceCertificateList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceDeviceCertificateList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDeviceCertificateByMoid')
def GetApplianceDeviceCertificateByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceDeviceCertificateByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDeviceClaimList')
def GetApplianceDeviceClaimList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceDeviceClaimList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDeviceClaimByMoid')
def GetApplianceDeviceClaimByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceDeviceClaimByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDeviceClusterInstallList')
def GetApplianceDeviceClusterInstallList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceDeviceClusterInstallList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDeviceClusterInstallByMoid')
def GetApplianceDeviceClusterInstallByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceDeviceClusterInstallByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDeviceStateList')
def GetApplianceDeviceStateList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceDeviceStateList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDeviceStateByMoid')
def GetApplianceDeviceStateByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceDeviceStateByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDeviceUpgradePolicyList')
def GetApplianceDeviceUpgradePolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceDeviceUpgradePolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDeviceUpgradePolicyByMoid')
def GetApplianceDeviceUpgradePolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceDeviceUpgradePolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDiagSettingList')
def GetApplianceDiagSettingList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceDiagSettingList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDiagSettingByMoid')
def GetApplianceDiagSettingByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceDiagSettingByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceExternalSyslogSettingList')
def GetApplianceExternalSyslogSettingList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceExternalSyslogSettingList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceExternalSyslogSettingByMoid')
def GetApplianceExternalSyslogSettingByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceExternalSyslogSettingByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceFileGatewayList')
def GetApplianceFileGatewayList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceFileGatewayList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceFileGatewayByMoid')
def GetApplianceFileGatewayByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceFileGatewayByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceFileSystemOpStatusList')
def GetApplianceFileSystemOpStatusList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceFileSystemOpStatusList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceFileSystemOpStatusByMoid')
def GetApplianceFileSystemOpStatusByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceFileSystemOpStatusByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceFileSystemStatusList')
def GetApplianceFileSystemStatusList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceFileSystemStatusList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceFileSystemStatusByMoid')
def GetApplianceFileSystemStatusByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceFileSystemStatusByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceGroupOpStatusList')
def GetApplianceGroupOpStatusList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceGroupOpStatusList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceGroupOpStatusByMoid')
def GetApplianceGroupOpStatusByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceGroupOpStatusByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceGroupStatusList')
def GetApplianceGroupStatusList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceGroupStatusList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceGroupStatusByMoid')
def GetApplianceGroupStatusByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceGroupStatusByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceImageBundleList')
def GetApplianceImageBundleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceImageBundleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceImageBundleByMoid')
def GetApplianceImageBundleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceImageBundleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceMetaManifestList')
def GetApplianceMetaManifestList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceMetaManifestList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceMetaManifestByMoid')
def GetApplianceMetaManifestByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceMetaManifestByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceMetricsConfigList')
def GetApplianceMetricsConfigList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceMetricsConfigList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceMetricsConfigByMoid')
def GetApplianceMetricsConfigByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceMetricsConfigByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceNetworkLinkStatusList')
def GetApplianceNetworkLinkStatusList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceNetworkLinkStatusList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceNetworkLinkStatusByMoid')
def GetApplianceNetworkLinkStatusByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceNetworkLinkStatusByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceNodeInfoList')
def GetApplianceNodeInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceNodeInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceNodeInfoByMoid')
def GetApplianceNodeInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceNodeInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceNodeOpStatusList')
def GetApplianceNodeOpStatusList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceNodeOpStatusList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceNodeOpStatusByMoid')
def GetApplianceNodeOpStatusByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceNodeOpStatusByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceNodeStatusList')
def GetApplianceNodeStatusList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceNodeStatusList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceNodeStatusByMoid')
def GetApplianceNodeStatusByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceNodeStatusByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceReleaseNoteList')
def GetApplianceReleaseNoteList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceReleaseNoteList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceReleaseNoteByMoid')
def GetApplianceReleaseNoteByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceReleaseNoteByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceRemoteFileImportList')
def GetApplianceRemoteFileImportList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceRemoteFileImportList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceRemoteFileImportByMoid')
def GetApplianceRemoteFileImportByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceRemoteFileImportByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceRestoreList')
def GetApplianceRestoreList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceRestoreList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceRestoreByMoid')
def GetApplianceRestoreByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceRestoreByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceSetupInfoList')
def GetApplianceSetupInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceSetupInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceSetupInfoByMoid')
def GetApplianceSetupInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceSetupInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceSystemInfoList')
def GetApplianceSystemInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceSystemInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceSystemInfoByMoid')
def GetApplianceSystemInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceSystemInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceSystemOpStatusList')
def GetApplianceSystemOpStatusList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceSystemOpStatusList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceSystemOpStatusByMoid')
def GetApplianceSystemOpStatusByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceSystemOpStatusByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceSystemStatusList')
def GetApplianceSystemStatusList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceSystemStatusList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceSystemStatusByMoid')
def GetApplianceSystemStatusByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceSystemStatusByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceUpgradeList')
def GetApplianceUpgradeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceUpgradeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceUpgradeByMoid')
def GetApplianceUpgradeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceUpgradeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceUpgradePolicyList')
def GetApplianceUpgradePolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceUpgradePolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceUpgradePolicyByMoid')
def GetApplianceUpgradePolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceUpgradePolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceUpgradeTrackerList')
def GetApplianceUpgradeTrackerList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceUpgradeTrackerList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceUpgradeTrackerByMoid')
def GetApplianceUpgradeTrackerByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetApplianceUpgradeTrackerByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetClusterMemberList')
def GetAssetClusterMemberList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAssetClusterMemberList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetClusterMemberByMoid')
def GetAssetClusterMemberByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAssetClusterMemberByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeploymentList')
def GetAssetDeploymentList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAssetDeploymentList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeploymentByMoid')
def GetAssetDeploymentByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAssetDeploymentByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeploymentDeviceList')
def GetAssetDeploymentDeviceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAssetDeploymentDeviceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeploymentDeviceByMoid')
def GetAssetDeploymentDeviceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAssetDeploymentDeviceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeviceConfigurationList')
def GetAssetDeviceConfigurationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAssetDeviceConfigurationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeviceConfigurationByMoid')
def GetAssetDeviceConfigurationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAssetDeviceConfigurationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeviceConnectorManagerList')
def GetAssetDeviceConnectorManagerList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAssetDeviceConnectorManagerList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeviceConnectorManagerByMoid')
def GetAssetDeviceConnectorManagerByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAssetDeviceConnectorManagerByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeviceContractInformationList')
def GetAssetDeviceContractInformationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAssetDeviceContractInformationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeviceContractInformationByMoid')
def GetAssetDeviceContractInformationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAssetDeviceContractInformationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeviceRegistrationList')
def GetAssetDeviceRegistrationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAssetDeviceRegistrationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeviceRegistrationByMoid')
def GetAssetDeviceRegistrationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAssetDeviceRegistrationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetSubscriptionList')
def GetAssetSubscriptionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAssetSubscriptionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetSubscriptionByMoid')
def GetAssetSubscriptionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAssetSubscriptionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetSubscriptionAccountList')
def GetAssetSubscriptionAccountList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAssetSubscriptionAccountList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetSubscriptionAccountByMoid')
def GetAssetSubscriptionAccountByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAssetSubscriptionAccountByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetSubscriptionDeviceContractInformationList')
def GetAssetSubscriptionDeviceContractInformationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAssetSubscriptionDeviceContractInformationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetSubscriptionDeviceContractInformationByMoid')
def GetAssetSubscriptionDeviceContractInformationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAssetSubscriptionDeviceContractInformationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetTargetList')
def GetAssetTargetList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAssetTargetList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetTargetByMoid')
def GetAssetTargetByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetAssetTargetByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosBootDeviceList')
def GetBiosBootDeviceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBiosBootDeviceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosBootDeviceByMoid')
def GetBiosBootDeviceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBiosBootDeviceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosBootModeList')
def GetBiosBootModeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBiosBootModeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosBootModeByMoid')
def GetBiosBootModeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBiosBootModeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosPolicyList')
def GetBiosPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBiosPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosPolicyByMoid')
def GetBiosPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBiosPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosSystemBootOrderList')
def GetBiosSystemBootOrderList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBiosSystemBootOrderList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosSystemBootOrderByMoid')
def GetBiosSystemBootOrderByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBiosSystemBootOrderByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosTokenSettingsList')
def GetBiosTokenSettingsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBiosTokenSettingsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosTokenSettingsByMoid')
def GetBiosTokenSettingsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBiosTokenSettingsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosUnitList')
def GetBiosUnitList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBiosUnitList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosUnitByMoid')
def GetBiosUnitByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBiosUnitByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosVfSelectMemoryRasConfigurationList')
def GetBiosVfSelectMemoryRasConfigurationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBiosVfSelectMemoryRasConfigurationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosVfSelectMemoryRasConfigurationByMoid')
def GetBiosVfSelectMemoryRasConfigurationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBiosVfSelectMemoryRasConfigurationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootCddDeviceList')
def GetBootCddDeviceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootCddDeviceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootCddDeviceByMoid')
def GetBootCddDeviceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootCddDeviceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootDeviceBootModeList')
def GetBootDeviceBootModeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootDeviceBootModeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootDeviceBootModeByMoid')
def GetBootDeviceBootModeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootDeviceBootModeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootDeviceBootSecurityList')
def GetBootDeviceBootSecurityList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootDeviceBootSecurityList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootDeviceBootSecurityByMoid')
def GetBootDeviceBootSecurityByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootDeviceBootSecurityByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootHddDeviceList')
def GetBootHddDeviceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootHddDeviceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootHddDeviceByMoid')
def GetBootHddDeviceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootHddDeviceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootIscsiDeviceList')
def GetBootIscsiDeviceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootIscsiDeviceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootIscsiDeviceByMoid')
def GetBootIscsiDeviceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootIscsiDeviceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootNvmeDeviceList')
def GetBootNvmeDeviceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootNvmeDeviceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootNvmeDeviceByMoid')
def GetBootNvmeDeviceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootNvmeDeviceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootPchStorageDeviceList')
def GetBootPchStorageDeviceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootPchStorageDeviceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootPchStorageDeviceByMoid')
def GetBootPchStorageDeviceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootPchStorageDeviceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootPrecisionPolicyList')
def GetBootPrecisionPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootPrecisionPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootPrecisionPolicyByMoid')
def GetBootPrecisionPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootPrecisionPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootPxeDeviceList')
def GetBootPxeDeviceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootPxeDeviceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootPxeDeviceByMoid')
def GetBootPxeDeviceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootPxeDeviceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootSanDeviceList')
def GetBootSanDeviceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootSanDeviceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootSanDeviceByMoid')
def GetBootSanDeviceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootSanDeviceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootSdDeviceList')
def GetBootSdDeviceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootSdDeviceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootSdDeviceByMoid')
def GetBootSdDeviceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootSdDeviceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootUefiShellDeviceList')
def GetBootUefiShellDeviceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootUefiShellDeviceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootUefiShellDeviceByMoid')
def GetBootUefiShellDeviceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootUefiShellDeviceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootUsbDeviceList')
def GetBootUsbDeviceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootUsbDeviceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootUsbDeviceByMoid')
def GetBootUsbDeviceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootUsbDeviceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootVmediaDeviceList')
def GetBootVmediaDeviceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootVmediaDeviceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootVmediaDeviceByMoid')
def GetBootVmediaDeviceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBootVmediaDeviceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkExportList')
def GetBulkExportList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBulkExportList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkExportByMoid')
def GetBulkExportByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBulkExportByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkExportedItemList')
def GetBulkExportedItemList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBulkExportedItemList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkExportedItemByMoid')
def GetBulkExportedItemByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBulkExportedItemByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkMoClonerList')
def GetBulkMoClonerList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBulkMoClonerList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkMoClonerByMoid')
def GetBulkMoClonerByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBulkMoClonerByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkMoDeepClonerList')
def GetBulkMoDeepClonerList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBulkMoDeepClonerList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkMoDeepClonerByMoid')
def GetBulkMoDeepClonerByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBulkMoDeepClonerByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkMoMergerList')
def GetBulkMoMergerList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBulkMoMergerList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkMoMergerByMoid')
def GetBulkMoMergerByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBulkMoMergerByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkRequestList')
def GetBulkRequestList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBulkRequestList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkRequestByMoid')
def GetBulkRequestByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBulkRequestByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkResultList')
def GetBulkResultList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBulkResultList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkResultByMoid')
def GetBulkResultByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBulkResultByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkSubRequestObjList')
def GetBulkSubRequestObjList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBulkSubRequestObjList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkSubRequestObjByMoid')
def GetBulkSubRequestObjByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetBulkSubRequestObjByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityActionsMetaDataList')
def GetCapabilityActionsMetaDataList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityActionsMetaDataList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityActionsMetaDataByMoid')
def GetCapabilityActionsMetaDataByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityActionsMetaDataByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityAdapterDeprecatedDefList')
def GetCapabilityAdapterDeprecatedDefList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityAdapterDeprecatedDefList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityAdapterDeprecatedDefByMoid')
def GetCapabilityAdapterDeprecatedDefByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityAdapterDeprecatedDefByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityAdapterFirmwareRequirementList')
def GetCapabilityAdapterFirmwareRequirementList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityAdapterFirmwareRequirementList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityAdapterFirmwareRequirementByMoid')
def GetCapabilityAdapterFirmwareRequirementByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityAdapterFirmwareRequirementByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityAdapterUnitDescriptorList')
def GetCapabilityAdapterUnitDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityAdapterUnitDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityAdapterUnitDescriptorByMoid')
def GetCapabilityAdapterUnitDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityAdapterUnitDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityAdapterUpdateConstraintMetaList')
def GetCapabilityAdapterUpdateConstraintMetaList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityAdapterUpdateConstraintMetaList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityAdapterUpdateConstraintMetaByMoid')
def GetCapabilityAdapterUpdateConstraintMetaByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityAdapterUpdateConstraintMetaByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityAdapterUpgradeSupportMetaList')
def GetCapabilityAdapterUpgradeSupportMetaList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityAdapterUpgradeSupportMetaList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityAdapterUpgradeSupportMetaByMoid')
def GetCapabilityAdapterUpgradeSupportMetaByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityAdapterUpgradeSupportMetaByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityCatalogList')
def GetCapabilityCatalogList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityCatalogList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityCatalogByMoid')
def GetCapabilityCatalogByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityCatalogByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityChassisDescriptorList')
def GetCapabilityChassisDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityChassisDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityChassisDescriptorByMoid')
def GetCapabilityChassisDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityChassisDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityChassisManufacturingDefList')
def GetCapabilityChassisManufacturingDefList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityChassisManufacturingDefList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityChassisManufacturingDefByMoid')
def GetCapabilityChassisManufacturingDefByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityChassisManufacturingDefByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityChassisUpgradeSupportMetaList')
def GetCapabilityChassisUpgradeSupportMetaList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityChassisUpgradeSupportMetaList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityChassisUpgradeSupportMetaByMoid')
def GetCapabilityChassisUpgradeSupportMetaByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityChassisUpgradeSupportMetaByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityCimcFirmwareDescriptorList')
def GetCapabilityCimcFirmwareDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityCimcFirmwareDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityCimcFirmwareDescriptorByMoid')
def GetCapabilityCimcFirmwareDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityCimcFirmwareDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityCpuEndpointDescriptorList')
def GetCapabilityCpuEndpointDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityCpuEndpointDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityCpuEndpointDescriptorByMoid')
def GetCapabilityCpuEndpointDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityCpuEndpointDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityDimmsEndpointDescriptorList')
def GetCapabilityDimmsEndpointDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityDimmsEndpointDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityDimmsEndpointDescriptorByMoid')
def GetCapabilityDimmsEndpointDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityDimmsEndpointDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityDomainPolicyRequirementList')
def GetCapabilityDomainPolicyRequirementList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityDomainPolicyRequirementList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityDomainPolicyRequirementByMoid')
def GetCapabilityDomainPolicyRequirementByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityDomainPolicyRequirementByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityDrivesEndpointDescriptorList')
def GetCapabilityDrivesEndpointDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityDrivesEndpointDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityDrivesEndpointDescriptorByMoid')
def GetCapabilityDrivesEndpointDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityDrivesEndpointDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityEquipmentPhysicalDefList')
def GetCapabilityEquipmentPhysicalDefList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityEquipmentPhysicalDefList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityEquipmentPhysicalDefByMoid')
def GetCapabilityEquipmentPhysicalDefByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityEquipmentPhysicalDefByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityEquipmentSlotArrayList')
def GetCapabilityEquipmentSlotArrayList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityEquipmentSlotArrayList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityEquipmentSlotArrayByMoid')
def GetCapabilityEquipmentSlotArrayByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityEquipmentSlotArrayByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFanModuleDescriptorList')
def GetCapabilityFanModuleDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityFanModuleDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFanModuleDescriptorByMoid')
def GetCapabilityFanModuleDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityFanModuleDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFanModuleManufacturingDefList')
def GetCapabilityFanModuleManufacturingDefList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityFanModuleManufacturingDefList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFanModuleManufacturingDefByMoid')
def GetCapabilityFanModuleManufacturingDefByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityFanModuleManufacturingDefByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFexCapabilityDefList')
def GetCapabilityFexCapabilityDefList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityFexCapabilityDefList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFexCapabilityDefByMoid')
def GetCapabilityFexCapabilityDefByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityFexCapabilityDefByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFexDescriptorList')
def GetCapabilityFexDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityFexDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFexDescriptorByMoid')
def GetCapabilityFexDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityFexDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFexManufacturingDefList')
def GetCapabilityFexManufacturingDefList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityFexManufacturingDefList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFexManufacturingDefByMoid')
def GetCapabilityFexManufacturingDefByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityFexManufacturingDefByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFexSupportMetaList')
def GetCapabilityFexSupportMetaList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityFexSupportMetaList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFexSupportMetaByMoid')
def GetCapabilityFexSupportMetaByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityFexSupportMetaByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityGpuEndpointDescriptorList')
def GetCapabilityGpuEndpointDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityGpuEndpointDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityGpuEndpointDescriptorByMoid')
def GetCapabilityGpuEndpointDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityGpuEndpointDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityHsuIsoFileSupportMetaList')
def GetCapabilityHsuIsoFileSupportMetaList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityHsuIsoFileSupportMetaList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityHsuIsoFileSupportMetaByMoid')
def GetCapabilityHsuIsoFileSupportMetaByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityHsuIsoFileSupportMetaByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityIoCardCapabilityDefList')
def GetCapabilityIoCardCapabilityDefList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityIoCardCapabilityDefList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityIoCardCapabilityDefByMoid')
def GetCapabilityIoCardCapabilityDefByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityIoCardCapabilityDefByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityIoCardDescriptorList')
def GetCapabilityIoCardDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityIoCardDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityIoCardDescriptorByMoid')
def GetCapabilityIoCardDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityIoCardDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityIoCardManufacturingDefList')
def GetCapabilityIoCardManufacturingDefList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityIoCardManufacturingDefList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityIoCardManufacturingDefByMoid')
def GetCapabilityIoCardManufacturingDefByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityIoCardManufacturingDefByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityIomUpgradeSupportMetaList')
def GetCapabilityIomUpgradeSupportMetaList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityIomUpgradeSupportMetaList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityIomUpgradeSupportMetaByMoid')
def GetCapabilityIomUpgradeSupportMetaByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityIomUpgradeSupportMetaByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityPortGroupAggregationDefList')
def GetCapabilityPortGroupAggregationDefList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityPortGroupAggregationDefList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityPortGroupAggregationDefByMoid')
def GetCapabilityPortGroupAggregationDefByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityPortGroupAggregationDefByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityProcessorUnitUpdateConstraintMetaList')
def GetCapabilityProcessorUnitUpdateConstraintMetaList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityProcessorUnitUpdateConstraintMetaList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityProcessorUnitUpdateConstraintMetaByMoid')
def GetCapabilityProcessorUnitUpdateConstraintMetaByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityProcessorUnitUpdateConstraintMetaByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityPsuDescriptorList')
def GetCapabilityPsuDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityPsuDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityPsuDescriptorByMoid')
def GetCapabilityPsuDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityPsuDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityPsuManufacturingDefList')
def GetCapabilityPsuManufacturingDefList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityPsuManufacturingDefList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityPsuManufacturingDefByMoid')
def GetCapabilityPsuManufacturingDefByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityPsuManufacturingDefByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityServerActionsMetaList')
def GetCapabilityServerActionsMetaList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityServerActionsMetaList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityServerActionsMetaByMoid')
def GetCapabilityServerActionsMetaByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityServerActionsMetaByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityServerDescriptorList')
def GetCapabilityServerDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityServerDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityServerDescriptorByMoid')
def GetCapabilityServerDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityServerDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityServerModelsCapabilityDefList')
def GetCapabilityServerModelsCapabilityDefList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityServerModelsCapabilityDefList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityServerModelsCapabilityDefByMoid')
def GetCapabilityServerModelsCapabilityDefByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityServerModelsCapabilityDefByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityServerSchemaDescriptorList')
def GetCapabilityServerSchemaDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityServerSchemaDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityServerSchemaDescriptorByMoid')
def GetCapabilityServerSchemaDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityServerSchemaDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityServerUpgradeSupportMetaList')
def GetCapabilityServerUpgradeSupportMetaList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityServerUpgradeSupportMetaList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityServerUpgradeSupportMetaByMoid')
def GetCapabilityServerUpgradeSupportMetaByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityServerUpgradeSupportMetaByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySiocModuleCapabilityDefList')
def GetCapabilitySiocModuleCapabilityDefList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilitySiocModuleCapabilityDefList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySiocModuleCapabilityDefByMoid')
def GetCapabilitySiocModuleCapabilityDefByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilitySiocModuleCapabilityDefByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySiocModuleDescriptorList')
def GetCapabilitySiocModuleDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilitySiocModuleDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySiocModuleDescriptorByMoid')
def GetCapabilitySiocModuleDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilitySiocModuleDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySiocModuleManufacturingDefList')
def GetCapabilitySiocModuleManufacturingDefList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilitySiocModuleManufacturingDefList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySiocModuleManufacturingDefByMoid')
def GetCapabilitySiocModuleManufacturingDefByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilitySiocModuleManufacturingDefByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityStorageControllerUpdateConstraintMetaList')
def GetCapabilityStorageControllerUpdateConstraintMetaList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityStorageControllerUpdateConstraintMetaList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityStorageControllerUpdateConstraintMetaByMoid')
def GetCapabilityStorageControllerUpdateConstraintMetaByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityStorageControllerUpdateConstraintMetaByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityStorageControllersMetaDataList')
def GetCapabilityStorageControllersMetaDataList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityStorageControllersMetaDataList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityStorageControllersMetaDataByMoid')
def GetCapabilityStorageControllersMetaDataByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityStorageControllersMetaDataByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySwitchCapabilityList')
def GetCapabilitySwitchCapabilityList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilitySwitchCapabilityList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySwitchCapabilityByMoid')
def GetCapabilitySwitchCapabilityByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilitySwitchCapabilityByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySwitchDescriptorList')
def GetCapabilitySwitchDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilitySwitchDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySwitchDescriptorByMoid')
def GetCapabilitySwitchDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilitySwitchDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySwitchEquipmentInfoList')
def GetCapabilitySwitchEquipmentInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilitySwitchEquipmentInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySwitchEquipmentInfoByMoid')
def GetCapabilitySwitchEquipmentInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilitySwitchEquipmentInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySwitchManufacturingDefList')
def GetCapabilitySwitchManufacturingDefList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilitySwitchManufacturingDefList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySwitchManufacturingDefByMoid')
def GetCapabilitySwitchManufacturingDefByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilitySwitchManufacturingDefByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityTemplateCatalogList')
def GetCapabilityTemplateCatalogList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityTemplateCatalogList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityTemplateCatalogByMoid')
def GetCapabilityTemplateCatalogByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityTemplateCatalogByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityUpdateOrderMetaList')
def GetCapabilityUpdateOrderMetaList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityUpdateOrderMetaList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityUpdateOrderMetaByMoid')
def GetCapabilityUpdateOrderMetaByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityUpdateOrderMetaByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityVicDescriptorList')
def GetCapabilityVicDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityVicDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityVicDescriptorByMoid')
def GetCapabilityVicDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCapabilityVicDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCatalystsdwanConfigGroupList')
def GetCatalystsdwanConfigGroupList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCatalystsdwanConfigGroupList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCatalystsdwanConfigGroupByMoid')
def GetCatalystsdwanConfigGroupByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCatalystsdwanConfigGroupByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCatalystsdwanPolicyGroupList')
def GetCatalystsdwanPolicyGroupList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCatalystsdwanPolicyGroupList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCatalystsdwanPolicyGroupByMoid')
def GetCatalystsdwanPolicyGroupByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCatalystsdwanPolicyGroupByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCatalystsdwanVedgeDeviceList')
def GetCatalystsdwanVedgeDeviceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCatalystsdwanVedgeDeviceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCatalystsdwanVedgeDeviceByMoid')
def GetCatalystsdwanVedgeDeviceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCatalystsdwanVedgeDeviceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCertificatemanagementPolicyList')
def GetCertificatemanagementPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCertificatemanagementPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCertificatemanagementPolicyByMoid')
def GetCertificatemanagementPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCertificatemanagementPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCertificatemanagementPolicyInventoryList')
def GetCertificatemanagementPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCertificatemanagementPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCertificatemanagementPolicyInventoryByMoid')
def GetCertificatemanagementPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCertificatemanagementPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChangelogItemList')
def GetChangelogItemList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetChangelogItemList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChangelogItemByMoid')
def GetChangelogItemByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetChangelogItemByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisConfigChangeDetailList')
def GetChassisConfigChangeDetailList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetChassisConfigChangeDetailList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisConfigChangeDetailByMoid')
def GetChassisConfigChangeDetailByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetChassisConfigChangeDetailByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisConfigImportList')
def GetChassisConfigImportList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetChassisConfigImportList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisConfigImportByMoid')
def GetChassisConfigImportByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetChassisConfigImportByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisConfigResultList')
def GetChassisConfigResultList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetChassisConfigResultList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisConfigResultByMoid')
def GetChassisConfigResultByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetChassisConfigResultByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisConfigResultEntryList')
def GetChassisConfigResultEntryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetChassisConfigResultEntryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisConfigResultEntryByMoid')
def GetChassisConfigResultEntryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetChassisConfigResultEntryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisIomProfileList')
def GetChassisIomProfileList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetChassisIomProfileList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisIomProfileByMoid')
def GetChassisIomProfileByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetChassisIomProfileByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisProfileList')
def GetChassisProfileList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetChassisProfileList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisProfileByMoid')
def GetChassisProfileByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetChassisProfileByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisProfileTemplateList')
def GetChassisProfileTemplateList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetChassisProfileTemplateList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisProfileTemplateByMoid')
def GetChassisProfileTemplateByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetChassisProfileTemplateByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCloudTfcAgentpoolList')
def GetCloudTfcAgentpoolList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCloudTfcAgentpoolList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCloudTfcAgentpoolByMoid')
def GetCloudTfcAgentpoolByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCloudTfcAgentpoolByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCloudTfcOrganizationList')
def GetCloudTfcOrganizationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCloudTfcOrganizationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCloudTfcOrganizationByMoid')
def GetCloudTfcOrganizationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCloudTfcOrganizationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCloudTfcWorkspaceList')
def GetCloudTfcWorkspaceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCloudTfcWorkspaceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCloudTfcWorkspaceByMoid')
def GetCloudTfcWorkspaceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCloudTfcWorkspaceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCommHttpProxyPolicyList')
def GetCommHttpProxyPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCommHttpProxyPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCommHttpProxyPolicyByMoid')
def GetCommHttpProxyPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCommHttpProxyPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeBladeList')
def GetComputeBladeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeBladeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeBladeByMoid')
def GetComputeBladeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeBladeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeBladeIdentityList')
def GetComputeBladeIdentityList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeBladeIdentityList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeBladeIdentityByMoid')
def GetComputeBladeIdentityByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeBladeIdentityByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeBoardList')
def GetComputeBoardList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeBoardList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeBoardByMoid')
def GetComputeBoardByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeBoardByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeDownloadStatusList')
def GetComputeDownloadStatusList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeDownloadStatusList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeDownloadStatusByMoid')
def GetComputeDownloadStatusByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeDownloadStatusByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeHostUtilityOperationList')
def GetComputeHostUtilityOperationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeHostUtilityOperationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeHostUtilityOperationByMoid')
def GetComputeHostUtilityOperationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeHostUtilityOperationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeMappingList')
def GetComputeMappingList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeMappingList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeMappingByMoid')
def GetComputeMappingByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeMappingByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputePersonalityList')
def GetComputePersonalityList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputePersonalityList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputePersonalityByMoid')
def GetComputePersonalityByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputePersonalityByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputePhysicalSummaryList')
def GetComputePhysicalSummaryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputePhysicalSummaryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputePhysicalSummaryByMoid')
def GetComputePhysicalSummaryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputePhysicalSummaryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeRackUnitList')
def GetComputeRackUnitList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeRackUnitList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeRackUnitByMoid')
def GetComputeRackUnitByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeRackUnitByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeRackUnitIdentityList')
def GetComputeRackUnitIdentityList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeRackUnitIdentityList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeRackUnitIdentityByMoid')
def GetComputeRackUnitIdentityByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeRackUnitIdentityByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeScrubPolicyList')
def GetComputeScrubPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeScrubPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeScrubPolicyByMoid')
def GetComputeScrubPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeScrubPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeServerIdPoolList')
def GetComputeServerIdPoolList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeServerIdPoolList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeServerIdPoolByMoid')
def GetComputeServerIdPoolByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeServerIdPoolByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeServerPowerPolicyList')
def GetComputeServerPowerPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeServerPowerPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeServerPowerPolicyByMoid')
def GetComputeServerPowerPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeServerPowerPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeServerSettingList')
def GetComputeServerSettingList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeServerSettingList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeServerSettingByMoid')
def GetComputeServerSettingByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeServerSettingByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeVmediaList')
def GetComputeVmediaList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeVmediaList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeVmediaByMoid')
def GetComputeVmediaByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetComputeVmediaByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondAlarmList')
def GetCondAlarmList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCondAlarmList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondAlarmByMoid')
def GetCondAlarmByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCondAlarmByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondAlarmAggregationList')
def GetCondAlarmAggregationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCondAlarmAggregationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondAlarmAggregationByMoid')
def GetCondAlarmAggregationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCondAlarmAggregationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondAlarmClassificationList')
def GetCondAlarmClassificationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCondAlarmClassificationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondAlarmClassificationByMoid')
def GetCondAlarmClassificationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCondAlarmClassificationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondAlarmDefinitionList')
def GetCondAlarmDefinitionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCondAlarmDefinitionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondAlarmDefinitionByMoid')
def GetCondAlarmDefinitionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCondAlarmDefinitionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondAlarmSuppressionList')
def GetCondAlarmSuppressionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCondAlarmSuppressionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondAlarmSuppressionByMoid')
def GetCondAlarmSuppressionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCondAlarmSuppressionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondHclStatusList')
def GetCondHclStatusList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCondHclStatusList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondHclStatusByMoid')
def GetCondHclStatusByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCondHclStatusByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondHclStatusDetailList')
def GetCondHclStatusDetailList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCondHclStatusDetailList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondHclStatusDetailByMoid')
def GetCondHclStatusDetailByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCondHclStatusDetailByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondHclStatusJobList')
def GetCondHclStatusJobList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCondHclStatusJobList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondHclStatusJobByMoid')
def GetCondHclStatusJobByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCondHclStatusJobByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConnectorpackConnectorPackUpgradeList')
def GetConnectorpackConnectorPackUpgradeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetConnectorpackConnectorPackUpgradeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConnectorpackConnectorPackUpgradeByMoid')
def GetConnectorpackConnectorPackUpgradeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetConnectorpackConnectorPackUpgradeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConnectorpackUpgradeImpactList')
def GetConnectorpackUpgradeImpactList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetConnectorpackUpgradeImpactList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConnectorpackUpgradeImpactByMoid')
def GetConnectorpackUpgradeImpactByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetConnectorpackUpgradeImpactByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConsoleConsoleConfigList')
def GetConsoleConsoleConfigList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetConsoleConsoleConfigList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConsoleConsoleConfigByMoid')
def GetConsoleConsoleConfigByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetConsoleConsoleConfigByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraAdapterComplianceDetailsList')
def GetConvergedinfraAdapterComplianceDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetConvergedinfraAdapterComplianceDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraAdapterComplianceDetailsByMoid')
def GetConvergedinfraAdapterComplianceDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetConvergedinfraAdapterComplianceDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraPodList')
def GetConvergedinfraPodList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetConvergedinfraPodList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraPodByMoid')
def GetConvergedinfraPodByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetConvergedinfraPodByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraPodComplianceInfoList')
def GetConvergedinfraPodComplianceInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetConvergedinfraPodComplianceInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraPodComplianceInfoByMoid')
def GetConvergedinfraPodComplianceInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetConvergedinfraPodComplianceInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraServerComplianceDetailsList')
def GetConvergedinfraServerComplianceDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetConvergedinfraServerComplianceDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraServerComplianceDetailsByMoid')
def GetConvergedinfraServerComplianceDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetConvergedinfraServerComplianceDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraStorageComplianceDetailsList')
def GetConvergedinfraStorageComplianceDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetConvergedinfraStorageComplianceDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraStorageComplianceDetailsByMoid')
def GetConvergedinfraStorageComplianceDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetConvergedinfraStorageComplianceDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraSwitchComplianceDetailsList')
def GetConvergedinfraSwitchComplianceDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetConvergedinfraSwitchComplianceDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraSwitchComplianceDetailsByMoid')
def GetConvergedinfraSwitchComplianceDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetConvergedinfraSwitchComplianceDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCrdCustomResourceList')
def GetCrdCustomResourceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCrdCustomResourceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCrdCustomResourceByMoid')
def GetCrdCustomResourceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetCrdCustomResourceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDeviceconnectorPolicyList')
def GetDeviceconnectorPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetDeviceconnectorPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDeviceconnectorPolicyByMoid')
def GetDeviceconnectorPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetDeviceconnectorPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacDeviceList')
def GetDnacDeviceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetDnacDeviceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacDeviceByMoid')
def GetDnacDeviceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetDnacDeviceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacDeviceInterfaceList')
def GetDnacDeviceInterfaceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetDnacDeviceInterfaceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacDeviceInterfaceByMoid')
def GetDnacDeviceInterfaceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetDnacDeviceInterfaceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacExternalBorderNodeList')
def GetDnacExternalBorderNodeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetDnacExternalBorderNodeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacExternalBorderNodeByMoid')
def GetDnacExternalBorderNodeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetDnacExternalBorderNodeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacExternalBorderNodeInterfaceList')
def GetDnacExternalBorderNodeInterfaceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetDnacExternalBorderNodeInterfaceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacExternalBorderNodeInterfaceByMoid')
def GetDnacExternalBorderNodeInterfaceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetDnacExternalBorderNodeInterfaceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacFabricSiteList')
def GetDnacFabricSiteList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetDnacFabricSiteList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacFabricSiteByMoid')
def GetDnacFabricSiteByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetDnacFabricSiteByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacSiteList')
def GetDnacSiteList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetDnacSiteList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacSiteByMoid')
def GetDnacSiteByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetDnacSiteByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacSiteIpPoolList')
def GetDnacSiteIpPoolList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetDnacSiteIpPoolList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacSiteIpPoolByMoid')
def GetDnacSiteIpPoolByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetDnacSiteIpPoolByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacTemplateList')
def GetDnacTemplateList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetDnacTemplateList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacTemplateByMoid')
def GetDnacTemplateByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetDnacTemplateByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacTransitList')
def GetDnacTransitList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetDnacTransitList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacTransitByMoid')
def GetDnacTransitByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetDnacTransitByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacVirtualNetworkFabricSiteList')
def GetDnacVirtualNetworkFabricSiteList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetDnacVirtualNetworkFabricSiteList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacVirtualNetworkFabricSiteByMoid')
def GetDnacVirtualNetworkFabricSiteByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetDnacVirtualNetworkFabricSiteByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentChassisList')
def GetEquipmentChassisList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentChassisList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentChassisByMoid')
def GetEquipmentChassisByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentChassisByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentChassisIdPoolList')
def GetEquipmentChassisIdPoolList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentChassisIdPoolList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentChassisIdPoolByMoid')
def GetEquipmentChassisIdPoolByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentChassisIdPoolByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentChassisIdentityList')
def GetEquipmentChassisIdentityList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentChassisIdentityList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentChassisIdentityByMoid')
def GetEquipmentChassisIdentityByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentChassisIdentityByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentChassisOperationList')
def GetEquipmentChassisOperationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentChassisOperationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentChassisOperationByMoid')
def GetEquipmentChassisOperationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentChassisOperationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentDeviceSummaryList')
def GetEquipmentDeviceSummaryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentDeviceSummaryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentDeviceSummaryByMoid')
def GetEquipmentDeviceSummaryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentDeviceSummaryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentEnclosureElementList')
def GetEquipmentEnclosureElementList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentEnclosureElementList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentEnclosureElementByMoid')
def GetEquipmentEnclosureElementByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentEnclosureElementByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentEndPointLogList')
def GetEquipmentEndPointLogList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentEndPointLogList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentEndPointLogByMoid')
def GetEquipmentEndPointLogByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentEndPointLogByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentExpanderModuleList')
def GetEquipmentExpanderModuleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentExpanderModuleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentExpanderModuleByMoid')
def GetEquipmentExpanderModuleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentExpanderModuleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFanList')
def GetEquipmentFanList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentFanList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFanByMoid')
def GetEquipmentFanByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentFanByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFanControlList')
def GetEquipmentFanControlList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentFanControlList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFanControlByMoid')
def GetEquipmentFanControlByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentFanControlByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFanModuleList')
def GetEquipmentFanModuleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentFanModuleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFanModuleByMoid')
def GetEquipmentFanModuleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentFanModuleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFexList')
def GetEquipmentFexList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentFexList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFexByMoid')
def GetEquipmentFexByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentFexByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFexIdentityList')
def GetEquipmentFexIdentityList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentFexIdentityList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFexIdentityByMoid')
def GetEquipmentFexIdentityByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentFexIdentityByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFexOperationList')
def GetEquipmentFexOperationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentFexOperationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFexOperationByMoid')
def GetEquipmentFexOperationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentFexOperationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFruList')
def GetEquipmentFruList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentFruList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFruByMoid')
def GetEquipmentFruByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentFruByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentHybridDriveSlotList')
def GetEquipmentHybridDriveSlotList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentHybridDriveSlotList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentHybridDriveSlotByMoid')
def GetEquipmentHybridDriveSlotByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentHybridDriveSlotByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentIoCardList')
def GetEquipmentIoCardList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentIoCardList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentIoCardByMoid')
def GetEquipmentIoCardByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentIoCardByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentIoCardOperationList')
def GetEquipmentIoCardOperationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentIoCardOperationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentIoCardOperationByMoid')
def GetEquipmentIoCardOperationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentIoCardOperationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentIoExpanderList')
def GetEquipmentIoExpanderList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentIoExpanderList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentIoExpanderByMoid')
def GetEquipmentIoExpanderByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentIoExpanderByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentLocatorLedList')
def GetEquipmentLocatorLedList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentLocatorLedList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentLocatorLedByMoid')
def GetEquipmentLocatorLedByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentLocatorLedByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentLogDownloadList')
def GetEquipmentLogDownloadList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentLogDownloadList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentLogDownloadByMoid')
def GetEquipmentLogDownloadByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentLogDownloadByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentPsuList')
def GetEquipmentPsuList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentPsuList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentPsuByMoid')
def GetEquipmentPsuByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentPsuByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentPsuControlList')
def GetEquipmentPsuControlList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentPsuControlList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentPsuControlByMoid')
def GetEquipmentPsuControlByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentPsuControlByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentRackEnclosureList')
def GetEquipmentRackEnclosureList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentRackEnclosureList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentRackEnclosureByMoid')
def GetEquipmentRackEnclosureByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentRackEnclosureByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentRackEnclosureSlotList')
def GetEquipmentRackEnclosureSlotList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentRackEnclosureSlotList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentRackEnclosureSlotByMoid')
def GetEquipmentRackEnclosureSlotByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentRackEnclosureSlotByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentSensorList')
def GetEquipmentSensorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentSensorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentSensorByMoid')
def GetEquipmentSensorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentSensorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentSharedIoModuleList')
def GetEquipmentSharedIoModuleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentSharedIoModuleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentSharedIoModuleByMoid')
def GetEquipmentSharedIoModuleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentSharedIoModuleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentSwitchCardList')
def GetEquipmentSwitchCardList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentSwitchCardList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentSwitchCardByMoid')
def GetEquipmentSwitchCardByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentSwitchCardByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentSwitchOperationList')
def GetEquipmentSwitchOperationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentSwitchOperationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentSwitchOperationByMoid')
def GetEquipmentSwitchOperationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentSwitchOperationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentSystemIoControllerList')
def GetEquipmentSystemIoControllerList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentSystemIoControllerList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentSystemIoControllerByMoid')
def GetEquipmentSystemIoControllerByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentSystemIoControllerByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentTpmList')
def GetEquipmentTpmList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentTpmList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentTpmByMoid')
def GetEquipmentTpmByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentTpmByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentTransceiverList')
def GetEquipmentTransceiverList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentTransceiverList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentTransceiverByMoid')
def GetEquipmentTransceiverByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEquipmentTransceiverByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEtherHostPortList')
def GetEtherHostPortList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEtherHostPortList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEtherHostPortByMoid')
def GetEtherHostPortByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEtherHostPortByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEtherNetworkPortList')
def GetEtherNetworkPortList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEtherNetworkPortList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEtherNetworkPortByMoid')
def GetEtherNetworkPortByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEtherNetworkPortByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEtherPhysicalPortList')
def GetEtherPhysicalPortList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEtherPhysicalPortList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEtherPhysicalPortByMoid')
def GetEtherPhysicalPortByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEtherPhysicalPortByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEtherPortChannelList')
def GetEtherPortChannelList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEtherPortChannelList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEtherPortChannelByMoid')
def GetEtherPortChannelByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetEtherPortChannelByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetExternalsiteAuthorizationList')
def GetExternalsiteAuthorizationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetExternalsiteAuthorizationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetExternalsiteAuthorizationByMoid')
def GetExternalsiteAuthorizationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetExternalsiteAuthorizationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricAppliancePcRoleList')
def GetFabricAppliancePcRoleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricAppliancePcRoleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricAppliancePcRoleByMoid')
def GetFabricAppliancePcRoleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricAppliancePcRoleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricApplianceRoleList')
def GetFabricApplianceRoleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricApplianceRoleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricApplianceRoleByMoid')
def GetFabricApplianceRoleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricApplianceRoleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricConfigChangeDetailList')
def GetFabricConfigChangeDetailList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricConfigChangeDetailList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricConfigChangeDetailByMoid')
def GetFabricConfigChangeDetailByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricConfigChangeDetailByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricConfigResultList')
def GetFabricConfigResultList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricConfigResultList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricConfigResultByMoid')
def GetFabricConfigResultByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricConfigResultByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricConfigResultEntryList')
def GetFabricConfigResultEntryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricConfigResultEntryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricConfigResultEntryByMoid')
def GetFabricConfigResultEntryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricConfigResultEntryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricElementIdentityList')
def GetFabricElementIdentityList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricElementIdentityList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricElementIdentityByMoid')
def GetFabricElementIdentityByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricElementIdentityByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricEthNetworkControlPolicyList')
def GetFabricEthNetworkControlPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricEthNetworkControlPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricEthNetworkControlPolicyByMoid')
def GetFabricEthNetworkControlPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricEthNetworkControlPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricEthNetworkControlPolicyInventoryList')
def GetFabricEthNetworkControlPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricEthNetworkControlPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricEthNetworkControlPolicyInventoryByMoid')
def GetFabricEthNetworkControlPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricEthNetworkControlPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricEthNetworkGroupPolicyList')
def GetFabricEthNetworkGroupPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricEthNetworkGroupPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricEthNetworkGroupPolicyByMoid')
def GetFabricEthNetworkGroupPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricEthNetworkGroupPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricEthNetworkGroupPolicyInventoryList')
def GetFabricEthNetworkGroupPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricEthNetworkGroupPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricEthNetworkGroupPolicyInventoryByMoid')
def GetFabricEthNetworkGroupPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricEthNetworkGroupPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricEthNetworkPolicyList')
def GetFabricEthNetworkPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricEthNetworkPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricEthNetworkPolicyByMoid')
def GetFabricEthNetworkPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricEthNetworkPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcNetworkPolicyList')
def GetFabricFcNetworkPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricFcNetworkPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcNetworkPolicyByMoid')
def GetFabricFcNetworkPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricFcNetworkPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcStorageRoleList')
def GetFabricFcStorageRoleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricFcStorageRoleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcStorageRoleByMoid')
def GetFabricFcStorageRoleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricFcStorageRoleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcUplinkPcRoleList')
def GetFabricFcUplinkPcRoleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricFcUplinkPcRoleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcUplinkPcRoleByMoid')
def GetFabricFcUplinkPcRoleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricFcUplinkPcRoleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcUplinkRoleList')
def GetFabricFcUplinkRoleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricFcUplinkRoleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcUplinkRoleByMoid')
def GetFabricFcUplinkRoleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricFcUplinkRoleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcZonePolicyList')
def GetFabricFcZonePolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricFcZonePolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcZonePolicyByMoid')
def GetFabricFcZonePolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricFcZonePolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcoeUplinkPcRoleList')
def GetFabricFcoeUplinkPcRoleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricFcoeUplinkPcRoleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcoeUplinkPcRoleByMoid')
def GetFabricFcoeUplinkPcRoleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricFcoeUplinkPcRoleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcoeUplinkRoleList')
def GetFabricFcoeUplinkRoleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricFcoeUplinkRoleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcoeUplinkRoleByMoid')
def GetFabricFcoeUplinkRoleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricFcoeUplinkRoleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFlowControlPolicyList')
def GetFabricFlowControlPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricFlowControlPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFlowControlPolicyByMoid')
def GetFabricFlowControlPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricFlowControlPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricLanPinGroupList')
def GetFabricLanPinGroupList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricLanPinGroupList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricLanPinGroupByMoid')
def GetFabricLanPinGroupByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricLanPinGroupByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricLinkAggregationPolicyList')
def GetFabricLinkAggregationPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricLinkAggregationPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricLinkAggregationPolicyByMoid')
def GetFabricLinkAggregationPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricLinkAggregationPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricLinkControlPolicyList')
def GetFabricLinkControlPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricLinkControlPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricLinkControlPolicyByMoid')
def GetFabricLinkControlPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricLinkControlPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricMacSecPolicyList')
def GetFabricMacSecPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricMacSecPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricMacSecPolicyByMoid')
def GetFabricMacSecPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricMacSecPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricMulticastPolicyList')
def GetFabricMulticastPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricMulticastPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricMulticastPolicyByMoid')
def GetFabricMulticastPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricMulticastPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricPcMemberList')
def GetFabricPcMemberList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricPcMemberList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricPcMemberByMoid')
def GetFabricPcMemberByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricPcMemberByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricPcOperationList')
def GetFabricPcOperationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricPcOperationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricPcOperationByMoid')
def GetFabricPcOperationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricPcOperationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricPortModeList')
def GetFabricPortModeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricPortModeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricPortModeByMoid')
def GetFabricPortModeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricPortModeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricPortOperationList')
def GetFabricPortOperationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricPortOperationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricPortOperationByMoid')
def GetFabricPortOperationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricPortOperationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricPortPolicyList')
def GetFabricPortPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricPortPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricPortPolicyByMoid')
def GetFabricPortPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricPortPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSanPinGroupList')
def GetFabricSanPinGroupList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSanPinGroupList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSanPinGroupByMoid')
def GetFabricSanPinGroupByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSanPinGroupByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricServerRoleList')
def GetFabricServerRoleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricServerRoleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricServerRoleByMoid')
def GetFabricServerRoleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricServerRoleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanDestEthPortList')
def GetFabricSpanDestEthPortList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSpanDestEthPortList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanDestEthPortByMoid')
def GetFabricSpanDestEthPortByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSpanDestEthPortByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanSessionList')
def GetFabricSpanSessionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSpanSessionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanSessionByMoid')
def GetFabricSpanSessionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSpanSessionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanSourceEthPortList')
def GetFabricSpanSourceEthPortList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSpanSourceEthPortList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanSourceEthPortByMoid')
def GetFabricSpanSourceEthPortByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSpanSourceEthPortByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanSourceEthPortChannelList')
def GetFabricSpanSourceEthPortChannelList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSpanSourceEthPortChannelList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanSourceEthPortChannelByMoid')
def GetFabricSpanSourceEthPortChannelByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSpanSourceEthPortChannelByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanSourceVlanList')
def GetFabricSpanSourceVlanList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSpanSourceVlanList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanSourceVlanByMoid')
def GetFabricSpanSourceVlanByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSpanSourceVlanByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanSourceVnicEthIfList')
def GetFabricSpanSourceVnicEthIfList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSpanSourceVnicEthIfList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanSourceVnicEthIfByMoid')
def GetFabricSpanSourceVnicEthIfByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSpanSourceVnicEthIfByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSwitchClusterProfileList')
def GetFabricSwitchClusterProfileList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSwitchClusterProfileList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSwitchClusterProfileByMoid')
def GetFabricSwitchClusterProfileByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSwitchClusterProfileByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSwitchClusterProfileTemplateList')
def GetFabricSwitchClusterProfileTemplateList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSwitchClusterProfileTemplateList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSwitchClusterProfileTemplateByMoid')
def GetFabricSwitchClusterProfileTemplateByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSwitchClusterProfileTemplateByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSwitchControlPolicyList')
def GetFabricSwitchControlPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSwitchControlPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSwitchControlPolicyByMoid')
def GetFabricSwitchControlPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSwitchControlPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSwitchProfileList')
def GetFabricSwitchProfileList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSwitchProfileList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSwitchProfileByMoid')
def GetFabricSwitchProfileByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSwitchProfileByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSwitchProfileTemplateList')
def GetFabricSwitchProfileTemplateList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSwitchProfileTemplateList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSwitchProfileTemplateByMoid')
def GetFabricSwitchProfileTemplateByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSwitchProfileTemplateByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSystemQosPolicyList')
def GetFabricSystemQosPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSystemQosPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSystemQosPolicyByMoid')
def GetFabricSystemQosPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricSystemQosPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricUplinkPcRoleList')
def GetFabricUplinkPcRoleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricUplinkPcRoleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricUplinkPcRoleByMoid')
def GetFabricUplinkPcRoleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricUplinkPcRoleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricUplinkRoleList')
def GetFabricUplinkRoleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricUplinkRoleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricUplinkRoleByMoid')
def GetFabricUplinkRoleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricUplinkRoleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricVlanList')
def GetFabricVlanList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricVlanList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricVlanByMoid')
def GetFabricVlanByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricVlanByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricVlanInventoryList')
def GetFabricVlanInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricVlanInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricVlanInventoryByMoid')
def GetFabricVlanInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricVlanInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricVlanSetList')
def GetFabricVlanSetList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricVlanSetList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricVlanSetByMoid')
def GetFabricVlanSetByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricVlanSetByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricVsanList')
def GetFabricVsanList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricVsanList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricVsanByMoid')
def GetFabricVsanByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricVsanByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricVsanInventoryList')
def GetFabricVsanInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricVsanInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricVsanInventoryByMoid')
def GetFabricVsanInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFabricVsanInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFaultInstanceList')
def GetFaultInstanceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFaultInstanceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFaultInstanceByMoid')
def GetFaultInstanceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFaultInstanceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcNeighborList')
def GetFcNeighborList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFcNeighborList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcNeighborByMoid')
def GetFcNeighborByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFcNeighborByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcPhysicalPortList')
def GetFcPhysicalPortList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFcPhysicalPortList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcPhysicalPortByMoid')
def GetFcPhysicalPortByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFcPhysicalPortByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcPortChannelList')
def GetFcPortChannelList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFcPortChannelList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcPortChannelByMoid')
def GetFcPortChannelByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFcPortChannelByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolFcBlockList')
def GetFcpoolFcBlockList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFcpoolFcBlockList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolFcBlockByMoid')
def GetFcpoolFcBlockByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFcpoolFcBlockByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolLeaseList')
def GetFcpoolLeaseList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFcpoolLeaseList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolLeaseByMoid')
def GetFcpoolLeaseByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFcpoolLeaseByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolPoolList')
def GetFcpoolPoolList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFcpoolPoolList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolPoolByMoid')
def GetFcpoolPoolByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFcpoolPoolByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolPoolMemberList')
def GetFcpoolPoolMemberList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFcpoolPoolMemberList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolPoolMemberByMoid')
def GetFcpoolPoolMemberByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFcpoolPoolMemberByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolReservationList')
def GetFcpoolReservationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFcpoolReservationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolReservationByMoid')
def GetFcpoolReservationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFcpoolReservationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolUniverseList')
def GetFcpoolUniverseList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFcpoolUniverseList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolUniverseByMoid')
def GetFcpoolUniverseByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFcpoolUniverseByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareBiosDescriptorList')
def GetFirmwareBiosDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareBiosDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareBiosDescriptorByMoid')
def GetFirmwareBiosDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareBiosDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareBoardControllerDescriptorList')
def GetFirmwareBoardControllerDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareBoardControllerDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareBoardControllerDescriptorByMoid')
def GetFirmwareBoardControllerDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareBoardControllerDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareChassisUpgradeList')
def GetFirmwareChassisUpgradeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareChassisUpgradeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareChassisUpgradeByMoid')
def GetFirmwareChassisUpgradeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareChassisUpgradeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareCimcDescriptorList')
def GetFirmwareCimcDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareCimcDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareCimcDescriptorByMoid')
def GetFirmwareCimcDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareCimcDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareDimmDescriptorList')
def GetFirmwareDimmDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareDimmDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareDimmDescriptorByMoid')
def GetFirmwareDimmDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareDimmDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareDistributableList')
def GetFirmwareDistributableList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareDistributableList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareDistributableByMoid')
def GetFirmwareDistributableByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareDistributableByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareDistributableMetaList')
def GetFirmwareDistributableMetaList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareDistributableMetaList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareDistributableMetaByMoid')
def GetFirmwareDistributableMetaByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareDistributableMetaByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareDriveDescriptorList')
def GetFirmwareDriveDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareDriveDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareDriveDescriptorByMoid')
def GetFirmwareDriveDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareDriveDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareDriverDistributableList')
def GetFirmwareDriverDistributableList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareDriverDistributableList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareDriverDistributableByMoid')
def GetFirmwareDriverDistributableByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareDriverDistributableByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareEulaList')
def GetFirmwareEulaList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareEulaList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareEulaByMoid')
def GetFirmwareEulaByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareEulaByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareFirmwareSummaryList')
def GetFirmwareFirmwareSummaryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareFirmwareSummaryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareFirmwareSummaryByMoid')
def GetFirmwareFirmwareSummaryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareFirmwareSummaryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareGpuDescriptorList')
def GetFirmwareGpuDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareGpuDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareGpuDescriptorByMoid')
def GetFirmwareGpuDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareGpuDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareHbaDescriptorList')
def GetFirmwareHbaDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareHbaDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareHbaDescriptorByMoid')
def GetFirmwareHbaDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareHbaDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareIomDescriptorList')
def GetFirmwareIomDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareIomDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareIomDescriptorByMoid')
def GetFirmwareIomDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareIomDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareMswitchDescriptorList')
def GetFirmwareMswitchDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareMswitchDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareMswitchDescriptorByMoid')
def GetFirmwareMswitchDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareMswitchDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareNxosDescriptorList')
def GetFirmwareNxosDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareNxosDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareNxosDescriptorByMoid')
def GetFirmwareNxosDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareNxosDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwarePcieDescriptorList')
def GetFirmwarePcieDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwarePcieDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwarePcieDescriptorByMoid')
def GetFirmwarePcieDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwarePcieDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwarePolicyList')
def GetFirmwarePolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwarePolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwarePolicyByMoid')
def GetFirmwarePolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwarePolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwarePsuDescriptorList')
def GetFirmwarePsuDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwarePsuDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwarePsuDescriptorByMoid')
def GetFirmwarePsuDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwarePsuDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareRunningFirmwareList')
def GetFirmwareRunningFirmwareList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareRunningFirmwareList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareRunningFirmwareByMoid')
def GetFirmwareRunningFirmwareByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareRunningFirmwareByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareSasExpanderDescriptorList')
def GetFirmwareSasExpanderDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareSasExpanderDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareSasExpanderDescriptorByMoid')
def GetFirmwareSasExpanderDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareSasExpanderDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareServerConfigurationUtilityDistributableList')
def GetFirmwareServerConfigurationUtilityDistributableList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareServerConfigurationUtilityDistributableList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareServerConfigurationUtilityDistributableByMoid')
def GetFirmwareServerConfigurationUtilityDistributableByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareServerConfigurationUtilityDistributableByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareStorageControllerDescriptorList')
def GetFirmwareStorageControllerDescriptorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareStorageControllerDescriptorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareStorageControllerDescriptorByMoid')
def GetFirmwareStorageControllerDescriptorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareStorageControllerDescriptorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareSwitchUpgradeList')
def GetFirmwareSwitchUpgradeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareSwitchUpgradeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareSwitchUpgradeByMoid')
def GetFirmwareSwitchUpgradeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareSwitchUpgradeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareUnsupportedVersionUpgradeList')
def GetFirmwareUnsupportedVersionUpgradeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareUnsupportedVersionUpgradeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareUnsupportedVersionUpgradeByMoid')
def GetFirmwareUnsupportedVersionUpgradeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareUnsupportedVersionUpgradeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareUpgradeList')
def GetFirmwareUpgradeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareUpgradeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareUpgradeByMoid')
def GetFirmwareUpgradeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareUpgradeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareUpgradeImpactStatusList')
def GetFirmwareUpgradeImpactStatusList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareUpgradeImpactStatusList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareUpgradeImpactStatusByMoid')
def GetFirmwareUpgradeImpactStatusByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareUpgradeImpactStatusByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareUpgradeStatusList')
def GetFirmwareUpgradeStatusList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareUpgradeStatusList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareUpgradeStatusByMoid')
def GetFirmwareUpgradeStatusByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFirmwareUpgradeStatusByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFmcDeviceList')
def GetFmcDeviceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFmcDeviceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFmcDeviceByMoid')
def GetFmcDeviceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFmcDeviceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFmcDeviceHaPairList')
def GetFmcDeviceHaPairList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFmcDeviceHaPairList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFmcDeviceHaPairByMoid')
def GetFmcDeviceHaPairByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFmcDeviceHaPairByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFmcDomainList')
def GetFmcDomainList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFmcDomainList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFmcDomainByMoid')
def GetFmcDomainByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFmcDomainByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFmcPhysicalInterfaceList')
def GetFmcPhysicalInterfaceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFmcPhysicalInterfaceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFmcPhysicalInterfaceByMoid')
def GetFmcPhysicalInterfaceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFmcPhysicalInterfaceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetForecastCatalogList')
def GetForecastCatalogList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetForecastCatalogList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetForecastCatalogByMoid')
def GetForecastCatalogByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetForecastCatalogByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetForecastDefinitionList')
def GetForecastDefinitionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetForecastDefinitionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetForecastDefinitionByMoid')
def GetForecastDefinitionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetForecastDefinitionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetForecastInstanceList')
def GetForecastInstanceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetForecastInstanceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetForecastInstanceByMoid')
def GetForecastInstanceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetForecastInstanceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFunctionsFunctionList')
def GetFunctionsFunctionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFunctionsFunctionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFunctionsFunctionByMoid')
def GetFunctionsFunctionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFunctionsFunctionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFunctionsFunctionVersionList')
def GetFunctionsFunctionVersionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFunctionsFunctionVersionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFunctionsFunctionVersionByMoid')
def GetFunctionsFunctionVersionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFunctionsFunctionVersionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFunctionsRuntimeList')
def GetFunctionsRuntimeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFunctionsRuntimeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFunctionsRuntimeByMoid')
def GetFunctionsRuntimeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFunctionsRuntimeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFunctionsUploadList')
def GetFunctionsUploadList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFunctionsUploadList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFunctionsUploadByMoid')
def GetFunctionsUploadByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetFunctionsUploadByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetGraphicsCardList')
def GetGraphicsCardList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetGraphicsCardList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetGraphicsCardByMoid')
def GetGraphicsCardByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetGraphicsCardByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetGraphicsControllerList')
def GetGraphicsControllerList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetGraphicsControllerList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetGraphicsControllerByMoid')
def GetGraphicsControllerByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetGraphicsControllerByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciAlarmList')
def GetHciAlarmList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHciAlarmList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciAlarmByMoid')
def GetHciAlarmByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHciAlarmByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciClusterList')
def GetHciClusterList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHciClusterList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciClusterByMoid')
def GetHciClusterByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHciClusterByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciComplianceList')
def GetHciComplianceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHciComplianceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciComplianceByMoid')
def GetHciComplianceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHciComplianceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciDiskList')
def GetHciDiskList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHciDiskList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciDiskByMoid')
def GetHciDiskByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHciDiskByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciDomainManagerList')
def GetHciDomainManagerList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHciDomainManagerList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciDomainManagerByMoid')
def GetHciDomainManagerByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHciDomainManagerByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciEntitlementList')
def GetHciEntitlementList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHciEntitlementList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciEntitlementByMoid')
def GetHciEntitlementByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHciEntitlementByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciGpuList')
def GetHciGpuList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHciGpuList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciGpuByMoid')
def GetHciGpuByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHciGpuByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciLicenseList')
def GetHciLicenseList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHciLicenseList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciLicenseByMoid')
def GetHciLicenseByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHciLicenseByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciNodeList')
def GetHciNodeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHciNodeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciNodeByMoid')
def GetHciNodeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHciNodeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciViolationList')
def GetHciViolationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHciViolationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciViolationByMoid')
def GetHciViolationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHciViolationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclDriverImageList')
def GetHclDriverImageList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHclDriverImageList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclDriverImageByMoid')
def GetHclDriverImageByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHclDriverImageByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclExemptedCatalogList')
def GetHclExemptedCatalogList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHclExemptedCatalogList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclExemptedCatalogByMoid')
def GetHclExemptedCatalogByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHclExemptedCatalogByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclHwCatalogInfoList')
def GetHclHwCatalogInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHclHwCatalogInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclHwCatalogInfoByMoid')
def GetHclHwCatalogInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHclHwCatalogInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclHyperflexSoftwareCompatibilityInfoList')
def GetHclHyperflexSoftwareCompatibilityInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHclHyperflexSoftwareCompatibilityInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclHyperflexSoftwareCompatibilityInfoByMoid')
def GetHclHyperflexSoftwareCompatibilityInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHclHyperflexSoftwareCompatibilityInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclOperatingSystemList')
def GetHclOperatingSystemList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHclOperatingSystemList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclOperatingSystemByMoid')
def GetHclOperatingSystemByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHclOperatingSystemByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclOperatingSystemVendorList')
def GetHclOperatingSystemVendorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHclOperatingSystemVendorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclOperatingSystemVendorByMoid')
def GetHclOperatingSystemVendorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHclOperatingSystemVendorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclServerHwCatalogInfoList')
def GetHclServerHwCatalogInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHclServerHwCatalogInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclServerHwCatalogInfoByMoid')
def GetHclServerHwCatalogInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHclServerHwCatalogInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexAlarmList')
def GetHyperflexAlarmList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexAlarmList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexAlarmByMoid')
def GetHyperflexAlarmByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexAlarmByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexAppCatalogList')
def GetHyperflexAppCatalogList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexAppCatalogList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexAppCatalogByMoid')
def GetHyperflexAppCatalogByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexAppCatalogByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexAutoSupportPolicyList')
def GetHyperflexAutoSupportPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexAutoSupportPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexAutoSupportPolicyByMoid')
def GetHyperflexAutoSupportPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexAutoSupportPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexBackupClusterList')
def GetHyperflexBackupClusterList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexBackupClusterList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexBackupClusterByMoid')
def GetHyperflexBackupClusterByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexBackupClusterByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexCapabilityInfoList')
def GetHyperflexCapabilityInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexCapabilityInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexCapabilityInfoByMoid')
def GetHyperflexCapabilityInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexCapabilityInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterList')
def GetHyperflexClusterList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexClusterList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterByMoid')
def GetHyperflexClusterByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexClusterByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterBackupPolicyList')
def GetHyperflexClusterBackupPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexClusterBackupPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterBackupPolicyByMoid')
def GetHyperflexClusterBackupPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexClusterBackupPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterBackupPolicyDeploymentList')
def GetHyperflexClusterBackupPolicyDeploymentList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexClusterBackupPolicyDeploymentList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterBackupPolicyDeploymentByMoid')
def GetHyperflexClusterBackupPolicyDeploymentByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexClusterBackupPolicyDeploymentByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterBackupPolicyInventoryList')
def GetHyperflexClusterBackupPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexClusterBackupPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterBackupPolicyInventoryByMoid')
def GetHyperflexClusterBackupPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexClusterBackupPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterHealthCheckExecutionSnapshotList')
def GetHyperflexClusterHealthCheckExecutionSnapshotList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexClusterHealthCheckExecutionSnapshotList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterHealthCheckExecutionSnapshotByMoid')
def GetHyperflexClusterHealthCheckExecutionSnapshotByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexClusterHealthCheckExecutionSnapshotByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterNetworkPolicyList')
def GetHyperflexClusterNetworkPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexClusterNetworkPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterNetworkPolicyByMoid')
def GetHyperflexClusterNetworkPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexClusterNetworkPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterProfileList')
def GetHyperflexClusterProfileList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexClusterProfileList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterProfileByMoid')
def GetHyperflexClusterProfileByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexClusterProfileByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterReplicationNetworkPolicyList')
def GetHyperflexClusterReplicationNetworkPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexClusterReplicationNetworkPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterReplicationNetworkPolicyByMoid')
def GetHyperflexClusterReplicationNetworkPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexClusterReplicationNetworkPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterReplicationNetworkPolicyDeploymentList')
def GetHyperflexClusterReplicationNetworkPolicyDeploymentList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexClusterReplicationNetworkPolicyDeploymentList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterReplicationNetworkPolicyDeploymentByMoid')
def GetHyperflexClusterReplicationNetworkPolicyDeploymentByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexClusterReplicationNetworkPolicyDeploymentByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterStoragePolicyList')
def GetHyperflexClusterStoragePolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexClusterStoragePolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterStoragePolicyByMoid')
def GetHyperflexClusterStoragePolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexClusterStoragePolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexConfigResultList')
def GetHyperflexConfigResultList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexConfigResultList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexConfigResultByMoid')
def GetHyperflexConfigResultByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexConfigResultByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexConfigResultEntryList')
def GetHyperflexConfigResultEntryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexConfigResultEntryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexConfigResultEntryByMoid')
def GetHyperflexConfigResultEntryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexConfigResultEntryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexDataProtectionPeerList')
def GetHyperflexDataProtectionPeerList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexDataProtectionPeerList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexDataProtectionPeerByMoid')
def GetHyperflexDataProtectionPeerByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexDataProtectionPeerByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexDatastoreStatisticList')
def GetHyperflexDatastoreStatisticList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexDatastoreStatisticList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexDatastoreStatisticByMoid')
def GetHyperflexDatastoreStatisticByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexDatastoreStatisticByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexDevicePackageDownloadStateList')
def GetHyperflexDevicePackageDownloadStateList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexDevicePackageDownloadStateList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexDevicePackageDownloadStateByMoid')
def GetHyperflexDevicePackageDownloadStateByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexDevicePackageDownloadStateByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexDriveList')
def GetHyperflexDriveList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexDriveList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexDriveByMoid')
def GetHyperflexDriveByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexDriveByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexEncryptionList')
def GetHyperflexEncryptionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexEncryptionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexEncryptionByMoid')
def GetHyperflexEncryptionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexEncryptionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexExtFcStoragePolicyList')
def GetHyperflexExtFcStoragePolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexExtFcStoragePolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexExtFcStoragePolicyByMoid')
def GetHyperflexExtFcStoragePolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexExtFcStoragePolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexExtIscsiStoragePolicyList')
def GetHyperflexExtIscsiStoragePolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexExtIscsiStoragePolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexExtIscsiStoragePolicyByMoid')
def GetHyperflexExtIscsiStoragePolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexExtIscsiStoragePolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexFeatureLimitExternalList')
def GetHyperflexFeatureLimitExternalList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexFeatureLimitExternalList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexFeatureLimitExternalByMoid')
def GetHyperflexFeatureLimitExternalByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexFeatureLimitExternalByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexFeatureLimitInternalList')
def GetHyperflexFeatureLimitInternalList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexFeatureLimitInternalList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexFeatureLimitInternalByMoid')
def GetHyperflexFeatureLimitInternalByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexFeatureLimitInternalByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthList')
def GetHyperflexHealthList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexHealthList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthByMoid')
def GetHyperflexHealthByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexHealthByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthCheckDefinitionList')
def GetHyperflexHealthCheckDefinitionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexHealthCheckDefinitionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthCheckDefinitionByMoid')
def GetHyperflexHealthCheckDefinitionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexHealthCheckDefinitionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthCheckExecutionList')
def GetHyperflexHealthCheckExecutionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexHealthCheckExecutionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthCheckExecutionByMoid')
def GetHyperflexHealthCheckExecutionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexHealthCheckExecutionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthCheckExecutionSnapshotList')
def GetHyperflexHealthCheckExecutionSnapshotList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexHealthCheckExecutionSnapshotList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthCheckExecutionSnapshotByMoid')
def GetHyperflexHealthCheckExecutionSnapshotByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexHealthCheckExecutionSnapshotByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthCheckPackageChecksumList')
def GetHyperflexHealthCheckPackageChecksumList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexHealthCheckPackageChecksumList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthCheckPackageChecksumByMoid')
def GetHyperflexHealthCheckPackageChecksumByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexHealthCheckPackageChecksumByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthCheckSchedulePolicyList')
def GetHyperflexHealthCheckSchedulePolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexHealthCheckSchedulePolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthCheckSchedulePolicyByMoid')
def GetHyperflexHealthCheckSchedulePolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexHealthCheckSchedulePolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHwCatalogList')
def GetHyperflexHwCatalogList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexHwCatalogList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHwCatalogByMoid')
def GetHyperflexHwCatalogByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexHwCatalogByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHxdpVersionList')
def GetHyperflexHxdpVersionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexHxdpVersionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHxdpVersionByMoid')
def GetHyperflexHxdpVersionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexHxdpVersionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHypervisorHostList')
def GetHyperflexHypervisorHostList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexHypervisorHostList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHypervisorHostByMoid')
def GetHyperflexHypervisorHostByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexHypervisorHostByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHypervisorVirtualMachineList')
def GetHyperflexHypervisorVirtualMachineList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexHypervisorVirtualMachineList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHypervisorVirtualMachineByMoid')
def GetHyperflexHypervisorVirtualMachineByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexHypervisorVirtualMachineByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexInitiatorGroupList')
def GetHyperflexInitiatorGroupList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexInitiatorGroupList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexInitiatorGroupByMoid')
def GetHyperflexInitiatorGroupByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexInitiatorGroupByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexIscsiNetworkList')
def GetHyperflexIscsiNetworkList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexIscsiNetworkList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexIscsiNetworkByMoid')
def GetHyperflexIscsiNetworkByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexIscsiNetworkByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexKeyEncryptionKeyList')
def GetHyperflexKeyEncryptionKeyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexKeyEncryptionKeyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexKeyEncryptionKeyByMoid')
def GetHyperflexKeyEncryptionKeyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexKeyEncryptionKeyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexLicenseList')
def GetHyperflexLicenseList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexLicenseList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexLicenseByMoid')
def GetHyperflexLicenseByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexLicenseByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexLocalCredentialPolicyList')
def GetHyperflexLocalCredentialPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexLocalCredentialPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexLocalCredentialPolicyByMoid')
def GetHyperflexLocalCredentialPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexLocalCredentialPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexLunList')
def GetHyperflexLunList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexLunList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexLunByMoid')
def GetHyperflexLunByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexLunByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexNodeList')
def GetHyperflexNodeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexNodeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexNodeByMoid')
def GetHyperflexNodeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexNodeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexNodeConfigPolicyList')
def GetHyperflexNodeConfigPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexNodeConfigPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexNodeConfigPolicyByMoid')
def GetHyperflexNodeConfigPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexNodeConfigPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexNodeProfileList')
def GetHyperflexNodeProfileList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexNodeProfileList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexNodeProfileByMoid')
def GetHyperflexNodeProfileByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexNodeProfileByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexProtectedClusterList')
def GetHyperflexProtectedClusterList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexProtectedClusterList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexProtectedClusterByMoid')
def GetHyperflexProtectedClusterByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexProtectedClusterByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexProxySettingPolicyList')
def GetHyperflexProxySettingPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexProxySettingPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexProxySettingPolicyByMoid')
def GetHyperflexProxySettingPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexProxySettingPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexReduceReSyncList')
def GetHyperflexReduceReSyncList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexReduceReSyncList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexReduceReSyncByMoid')
def GetHyperflexReduceReSyncByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexReduceReSyncByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexServerFirmwareVersionList')
def GetHyperflexServerFirmwareVersionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexServerFirmwareVersionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexServerFirmwareVersionByMoid')
def GetHyperflexServerFirmwareVersionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexServerFirmwareVersionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexServerFirmwareVersionEntryList')
def GetHyperflexServerFirmwareVersionEntryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexServerFirmwareVersionEntryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexServerFirmwareVersionEntryByMoid')
def GetHyperflexServerFirmwareVersionEntryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexServerFirmwareVersionEntryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexServerModelList')
def GetHyperflexServerModelList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexServerModelList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexServerModelByMoid')
def GetHyperflexServerModelByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexServerModelByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexServiceAuthTokenList')
def GetHyperflexServiceAuthTokenList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexServiceAuthTokenList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexServiceAuthTokenByMoid')
def GetHyperflexServiceAuthTokenByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexServiceAuthTokenByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexSoftwareDistributionComponentList')
def GetHyperflexSoftwareDistributionComponentList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexSoftwareDistributionComponentList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexSoftwareDistributionComponentByMoid')
def GetHyperflexSoftwareDistributionComponentByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexSoftwareDistributionComponentByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexSoftwareDistributionEntryList')
def GetHyperflexSoftwareDistributionEntryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexSoftwareDistributionEntryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexSoftwareDistributionEntryByMoid')
def GetHyperflexSoftwareDistributionEntryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexSoftwareDistributionEntryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexSoftwareDistributionVersionList')
def GetHyperflexSoftwareDistributionVersionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexSoftwareDistributionVersionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexSoftwareDistributionVersionByMoid')
def GetHyperflexSoftwareDistributionVersionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexSoftwareDistributionVersionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexSoftwareVersionPolicyList')
def GetHyperflexSoftwareVersionPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexSoftwareVersionPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexSoftwareVersionPolicyByMoid')
def GetHyperflexSoftwareVersionPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexSoftwareVersionPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexStartReduceReSyncList')
def GetHyperflexStartReduceReSyncList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexStartReduceReSyncList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexStartReduceReSyncByMoid')
def GetHyperflexStartReduceReSyncByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexStartReduceReSyncByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexStorageContainerList')
def GetHyperflexStorageContainerList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexStorageContainerList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexStorageContainerByMoid')
def GetHyperflexStorageContainerByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexStorageContainerByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexSysConfigPolicyList')
def GetHyperflexSysConfigPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexSysConfigPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexSysConfigPolicyByMoid')
def GetHyperflexSysConfigPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexSysConfigPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexTargetList')
def GetHyperflexTargetList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexTargetList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexTargetByMoid')
def GetHyperflexTargetByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexTargetByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexUcsmConfigPolicyList')
def GetHyperflexUcsmConfigPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexUcsmConfigPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexUcsmConfigPolicyByMoid')
def GetHyperflexUcsmConfigPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexUcsmConfigPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVcenterConfigPolicyList')
def GetHyperflexVcenterConfigPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexVcenterConfigPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVcenterConfigPolicyByMoid')
def GetHyperflexVcenterConfigPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexVcenterConfigPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVmBackupInfoList')
def GetHyperflexVmBackupInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexVmBackupInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVmBackupInfoByMoid')
def GetHyperflexVmBackupInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexVmBackupInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVmImportOperationList')
def GetHyperflexVmImportOperationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexVmImportOperationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVmImportOperationByMoid')
def GetHyperflexVmImportOperationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexVmImportOperationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVmRestoreOperationList')
def GetHyperflexVmRestoreOperationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexVmRestoreOperationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVmRestoreOperationByMoid')
def GetHyperflexVmRestoreOperationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexVmRestoreOperationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVmSnapshotInfoList')
def GetHyperflexVmSnapshotInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexVmSnapshotInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVmSnapshotInfoByMoid')
def GetHyperflexVmSnapshotInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexVmSnapshotInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVolumeList')
def GetHyperflexVolumeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexVolumeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVolumeByMoid')
def GetHyperflexVolumeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexVolumeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexWitnessConfigurationList')
def GetHyperflexWitnessConfigurationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexWitnessConfigurationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexWitnessConfigurationByMoid')
def GetHyperflexWitnessConfigurationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetHyperflexWitnessConfigurationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasConnectorPackList')
def GetIaasConnectorPackList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIaasConnectorPackList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasConnectorPackByMoid')
def GetIaasConnectorPackByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIaasConnectorPackByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasCustomTaskInfoList')
def GetIaasCustomTaskInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIaasCustomTaskInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasCustomTaskInfoByMoid')
def GetIaasCustomTaskInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIaasCustomTaskInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasDeviceStatusList')
def GetIaasDeviceStatusList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIaasDeviceStatusList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasDeviceStatusByMoid')
def GetIaasDeviceStatusByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIaasDeviceStatusByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasDiagnosticMessagesList')
def GetIaasDiagnosticMessagesList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIaasDiagnosticMessagesList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasDiagnosticMessagesByMoid')
def GetIaasDiagnosticMessagesByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIaasDiagnosticMessagesByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasLicenseInfoList')
def GetIaasLicenseInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIaasLicenseInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasLicenseInfoByMoid')
def GetIaasLicenseInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIaasLicenseInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasMostRunTasksList')
def GetIaasMostRunTasksList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIaasMostRunTasksList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasMostRunTasksByMoid')
def GetIaasMostRunTasksByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIaasMostRunTasksByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasServiceRequestList')
def GetIaasServiceRequestList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIaasServiceRequestList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasServiceRequestByMoid')
def GetIaasServiceRequestByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIaasServiceRequestByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasSystemTaskInfoList')
def GetIaasSystemTaskInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIaasSystemTaskInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasSystemTaskInfoByMoid')
def GetIaasSystemTaskInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIaasSystemTaskInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasUcsdInfoList')
def GetIaasUcsdInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIaasUcsdInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasUcsdInfoByMoid')
def GetIaasUcsdInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIaasUcsdInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasUcsdManagedInfraList')
def GetIaasUcsdManagedInfraList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIaasUcsdManagedInfraList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasUcsdManagedInfraByMoid')
def GetIaasUcsdManagedInfraByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIaasUcsdManagedInfraByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasUcsdMessagesList')
def GetIaasUcsdMessagesList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIaasUcsdMessagesList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasUcsdMessagesByMoid')
def GetIaasUcsdMessagesByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIaasUcsdMessagesByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamAccountList')
def GetIamAccountList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamAccountList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamAccountByMoid')
def GetIamAccountByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamAccountByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamAccountExperienceList')
def GetIamAccountExperienceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamAccountExperienceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamAccountExperienceByMoid')
def GetIamAccountExperienceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamAccountExperienceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamApiKeyList')
def GetIamApiKeyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamApiKeyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamApiKeyByMoid')
def GetIamApiKeyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamApiKeyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamAppRegistrationList')
def GetIamAppRegistrationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamAppRegistrationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamAppRegistrationByMoid')
def GetIamAppRegistrationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamAppRegistrationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamBannerMessageList')
def GetIamBannerMessageList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamBannerMessageList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamBannerMessageByMoid')
def GetIamBannerMessageByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamBannerMessageByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamCertificateList')
def GetIamCertificateList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamCertificateList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamCertificateByMoid')
def GetIamCertificateByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamCertificateByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamCertificateRequestList')
def GetIamCertificateRequestList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamCertificateRequestList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamCertificateRequestByMoid')
def GetIamCertificateRequestByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamCertificateRequestByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamDomainGroupList')
def GetIamDomainGroupList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamDomainGroupList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamDomainGroupByMoid')
def GetIamDomainGroupByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamDomainGroupByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamDomainNameInfoList')
def GetIamDomainNameInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamDomainNameInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamDomainNameInfoByMoid')
def GetIamDomainNameInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamDomainNameInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointPrivilegeList')
def GetIamEndPointPrivilegeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamEndPointPrivilegeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointPrivilegeByMoid')
def GetIamEndPointPrivilegeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamEndPointPrivilegeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointRoleList')
def GetIamEndPointRoleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamEndPointRoleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointRoleByMoid')
def GetIamEndPointRoleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamEndPointRoleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserList')
def GetIamEndPointUserList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamEndPointUserList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserByMoid')
def GetIamEndPointUserByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamEndPointUserByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserInventoryList')
def GetIamEndPointUserInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamEndPointUserInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserInventoryByMoid')
def GetIamEndPointUserInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamEndPointUserInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserPolicyList')
def GetIamEndPointUserPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamEndPointUserPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserPolicyByMoid')
def GetIamEndPointUserPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamEndPointUserPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserPolicyInventoryList')
def GetIamEndPointUserPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamEndPointUserPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserPolicyInventoryByMoid')
def GetIamEndPointUserPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamEndPointUserPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserRoleList')
def GetIamEndPointUserRoleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamEndPointUserRoleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserRoleByMoid')
def GetIamEndPointUserRoleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamEndPointUserRoleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserRoleInventoryList')
def GetIamEndPointUserRoleInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamEndPointUserRoleInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserRoleInventoryByMoid')
def GetIamEndPointUserRoleInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamEndPointUserRoleInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamIdpList')
def GetIamIdpList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamIdpList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamIdpByMoid')
def GetIamIdpByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamIdpByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamIdpReferenceList')
def GetIamIdpReferenceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamIdpReferenceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamIdpReferenceByMoid')
def GetIamIdpReferenceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamIdpReferenceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamIpAccessManagementList')
def GetIamIpAccessManagementList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamIpAccessManagementList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamIpAccessManagementByMoid')
def GetIamIpAccessManagementByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamIpAccessManagementByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamIpAddressList')
def GetIamIpAddressList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamIpAddressList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamIpAddressByMoid')
def GetIamIpAddressByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamIpAddressByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLdapConfigParamsList')
def GetIamLdapConfigParamsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamLdapConfigParamsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLdapConfigParamsByMoid')
def GetIamLdapConfigParamsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamLdapConfigParamsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLdapGroupList')
def GetIamLdapGroupList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamLdapGroupList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLdapGroupByMoid')
def GetIamLdapGroupByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamLdapGroupByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLdapPolicyList')
def GetIamLdapPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamLdapPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLdapPolicyByMoid')
def GetIamLdapPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamLdapPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLdapProviderList')
def GetIamLdapProviderList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamLdapProviderList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLdapProviderByMoid')
def GetIamLdapProviderByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamLdapProviderByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLocalUserPasswordList')
def GetIamLocalUserPasswordList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamLocalUserPasswordList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLocalUserPasswordByMoid')
def GetIamLocalUserPasswordByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamLocalUserPasswordByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLocalUserPasswordPolicyList')
def GetIamLocalUserPasswordPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamLocalUserPasswordPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLocalUserPasswordPolicyByMoid')
def GetIamLocalUserPasswordPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamLocalUserPasswordPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamOAuthTokenList')
def GetIamOAuthTokenList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamOAuthTokenList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamOAuthTokenByMoid')
def GetIamOAuthTokenByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamOAuthTokenByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamPermissionList')
def GetIamPermissionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamPermissionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamPermissionByMoid')
def GetIamPermissionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamPermissionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamPrivateKeySpecList')
def GetIamPrivateKeySpecList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamPrivateKeySpecList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamPrivateKeySpecByMoid')
def GetIamPrivateKeySpecByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamPrivateKeySpecByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamPrivilegeList')
def GetIamPrivilegeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamPrivilegeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamPrivilegeByMoid')
def GetIamPrivilegeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamPrivilegeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamPrivilegeSetList')
def GetIamPrivilegeSetList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamPrivilegeSetList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamPrivilegeSetByMoid')
def GetIamPrivilegeSetByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamPrivilegeSetByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamQualifierList')
def GetIamQualifierList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamQualifierList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamQualifierByMoid')
def GetIamQualifierByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamQualifierByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamResourceLimitsList')
def GetIamResourceLimitsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamResourceLimitsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamResourceLimitsByMoid')
def GetIamResourceLimitsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamResourceLimitsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamResourcePermissionList')
def GetIamResourcePermissionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamResourcePermissionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamResourcePermissionByMoid')
def GetIamResourcePermissionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamResourcePermissionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamResourceRolesList')
def GetIamResourceRolesList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamResourceRolesList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamResourceRolesByMoid')
def GetIamResourceRolesByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamResourceRolesByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamRoleList')
def GetIamRoleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamRoleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamRoleByMoid')
def GetIamRoleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamRoleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamSecurityHolderList')
def GetIamSecurityHolderList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamSecurityHolderList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamSecurityHolderByMoid')
def GetIamSecurityHolderByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamSecurityHolderByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamServiceProviderList')
def GetIamServiceProviderList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamServiceProviderList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamServiceProviderByMoid')
def GetIamServiceProviderByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamServiceProviderByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamSessionList')
def GetIamSessionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamSessionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamSessionByMoid')
def GetIamSessionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamSessionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamSessionLimitsList')
def GetIamSessionLimitsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamSessionLimitsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamSessionLimitsByMoid')
def GetIamSessionLimitsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamSessionLimitsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamSharingRuleList')
def GetIamSharingRuleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamSharingRuleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamSharingRuleByMoid')
def GetIamSharingRuleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamSharingRuleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamSystemList')
def GetIamSystemList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamSystemList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamSystemByMoid')
def GetIamSystemByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamSystemByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamTestIdpConfigurationList')
def GetIamTestIdpConfigurationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamTestIdpConfigurationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamTestIdpConfigurationByMoid')
def GetIamTestIdpConfigurationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamTestIdpConfigurationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamTrustPointList')
def GetIamTrustPointList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamTrustPointList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamTrustPointByMoid')
def GetIamTrustPointByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamTrustPointByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamUserList')
def GetIamUserList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamUserList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamUserByMoid')
def GetIamUserByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamUserByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamUserGroupList')
def GetIamUserGroupList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamUserGroupList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamUserGroupByMoid')
def GetIamUserGroupByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamUserGroupByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamUserPreferenceList')
def GetIamUserPreferenceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamUserPreferenceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamUserPreferenceByMoid')
def GetIamUserPreferenceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamUserPreferenceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamUserSettingList')
def GetIamUserSettingList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamUserSettingList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamUserSettingByMoid')
def GetIamUserSettingByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIamUserSettingByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetInventoryDeviceInfoList')
def GetInventoryDeviceInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetInventoryDeviceInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetInventoryDeviceInfoByMoid')
def GetInventoryDeviceInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetInventoryDeviceInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetInventoryDnMoBindingList')
def GetInventoryDnMoBindingList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetInventoryDnMoBindingList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetInventoryDnMoBindingByMoid')
def GetInventoryDnMoBindingByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetInventoryDnMoBindingByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetInventoryGenericInventoryList')
def GetInventoryGenericInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetInventoryGenericInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetInventoryGenericInventoryByMoid')
def GetInventoryGenericInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetInventoryGenericInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetInventoryGenericInventoryHolderList')
def GetInventoryGenericInventoryHolderList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetInventoryGenericInventoryHolderList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetInventoryGenericInventoryHolderByMoid')
def GetInventoryGenericInventoryHolderByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetInventoryGenericInventoryHolderByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIpmioverlanPolicyList')
def GetIpmioverlanPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIpmioverlanPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIpmioverlanPolicyByMoid')
def GetIpmioverlanPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIpmioverlanPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIpmioverlanPolicyInventoryList')
def GetIpmioverlanPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIpmioverlanPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIpmioverlanPolicyInventoryByMoid')
def GetIpmioverlanPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIpmioverlanPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolBlockLeaseList')
def GetIppoolBlockLeaseList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIppoolBlockLeaseList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolBlockLeaseByMoid')
def GetIppoolBlockLeaseByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIppoolBlockLeaseByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolIpLeaseList')
def GetIppoolIpLeaseList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIppoolIpLeaseList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolIpLeaseByMoid')
def GetIppoolIpLeaseByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIppoolIpLeaseByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolPoolList')
def GetIppoolPoolList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIppoolPoolList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolPoolByMoid')
def GetIppoolPoolByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIppoolPoolByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolPoolMemberList')
def GetIppoolPoolMemberList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIppoolPoolMemberList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolPoolMemberByMoid')
def GetIppoolPoolMemberByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIppoolPoolMemberByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolReservationList')
def GetIppoolReservationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIppoolReservationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolReservationByMoid')
def GetIppoolReservationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIppoolReservationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolShadowBlockList')
def GetIppoolShadowBlockList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIppoolShadowBlockList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolShadowBlockByMoid')
def GetIppoolShadowBlockByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIppoolShadowBlockByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolShadowPoolList')
def GetIppoolShadowPoolList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIppoolShadowPoolList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolShadowPoolByMoid')
def GetIppoolShadowPoolByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIppoolShadowPoolByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolUniverseList')
def GetIppoolUniverseList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIppoolUniverseList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolUniverseByMoid')
def GetIppoolUniverseByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIppoolUniverseByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolBlockList')
def GetIqnpoolBlockList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIqnpoolBlockList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolBlockByMoid')
def GetIqnpoolBlockByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIqnpoolBlockByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolLeaseList')
def GetIqnpoolLeaseList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIqnpoolLeaseList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolLeaseByMoid')
def GetIqnpoolLeaseByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIqnpoolLeaseByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolPoolList')
def GetIqnpoolPoolList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIqnpoolPoolList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolPoolByMoid')
def GetIqnpoolPoolByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIqnpoolPoolByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolPoolMemberList')
def GetIqnpoolPoolMemberList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIqnpoolPoolMemberList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolPoolMemberByMoid')
def GetIqnpoolPoolMemberByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIqnpoolPoolMemberByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolReservationList')
def GetIqnpoolReservationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIqnpoolReservationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolReservationByMoid')
def GetIqnpoolReservationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIqnpoolReservationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolUniverseList')
def GetIqnpoolUniverseList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIqnpoolUniverseList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolUniverseByMoid')
def GetIqnpoolUniverseByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIqnpoolUniverseByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIwotenantMaintenanceNotificationList')
def GetIwotenantMaintenanceNotificationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIwotenantMaintenanceNotificationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIwotenantMaintenanceNotificationByMoid')
def GetIwotenantMaintenanceNotificationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIwotenantMaintenanceNotificationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIwotenantMigrateList')
def GetIwotenantMigrateList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIwotenantMigrateList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIwotenantMigrateByMoid')
def GetIwotenantMigrateByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIwotenantMigrateByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIwotenantTenantCustomizationList')
def GetIwotenantTenantCustomizationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIwotenantTenantCustomizationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIwotenantTenantCustomizationByMoid')
def GetIwotenantTenantCustomizationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIwotenantTenantCustomizationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIwotenantTenantStatusList')
def GetIwotenantTenantStatusList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIwotenantTenantStatusList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIwotenantTenantStatusByMoid')
def GetIwotenantTenantStatusByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetIwotenantTenantStatusByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAciCniApicList')
def GetKubernetesAciCniApicList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesAciCniApicList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAciCniApicByMoid')
def GetKubernetesAciCniApicByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesAciCniApicByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAciCniProfileList')
def GetKubernetesAciCniProfileList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesAciCniProfileList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAciCniProfileByMoid')
def GetKubernetesAciCniProfileByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesAciCniProfileByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAciCniTenantClusterAllocationList')
def GetKubernetesAciCniTenantClusterAllocationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesAciCniTenantClusterAllocationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAciCniTenantClusterAllocationByMoid')
def GetKubernetesAciCniTenantClusterAllocationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesAciCniTenantClusterAllocationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAddonDefinitionList')
def GetKubernetesAddonDefinitionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesAddonDefinitionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAddonDefinitionByMoid')
def GetKubernetesAddonDefinitionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesAddonDefinitionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAddonPolicyList')
def GetKubernetesAddonPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesAddonPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAddonPolicyByMoid')
def GetKubernetesAddonPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesAddonPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAddonRepositoryList')
def GetKubernetesAddonRepositoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesAddonRepositoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAddonRepositoryByMoid')
def GetKubernetesAddonRepositoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesAddonRepositoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesBaremetalNodeProfileList')
def GetKubernetesBaremetalNodeProfileList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesBaremetalNodeProfileList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesBaremetalNodeProfileByMoid')
def GetKubernetesBaremetalNodeProfileByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesBaremetalNodeProfileByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesCatalogList')
def GetKubernetesCatalogList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesCatalogList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesCatalogByMoid')
def GetKubernetesCatalogByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesCatalogByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesClusterList')
def GetKubernetesClusterList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesClusterList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesClusterByMoid')
def GetKubernetesClusterByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesClusterByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesClusterAddonProfileList')
def GetKubernetesClusterAddonProfileList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesClusterAddonProfileList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesClusterAddonProfileByMoid')
def GetKubernetesClusterAddonProfileByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesClusterAddonProfileByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesClusterProfileList')
def GetKubernetesClusterProfileList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesClusterProfileList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesClusterProfileByMoid')
def GetKubernetesClusterProfileByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesClusterProfileByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesConfigResultList')
def GetKubernetesConfigResultList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesConfigResultList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesConfigResultByMoid')
def GetKubernetesConfigResultByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesConfigResultByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesConfigResultEntryList')
def GetKubernetesConfigResultEntryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesConfigResultEntryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesConfigResultEntryByMoid')
def GetKubernetesConfigResultEntryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesConfigResultEntryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesContainerRuntimePolicyList')
def GetKubernetesContainerRuntimePolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesContainerRuntimePolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesContainerRuntimePolicyByMoid')
def GetKubernetesContainerRuntimePolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesContainerRuntimePolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesDaemonSetList')
def GetKubernetesDaemonSetList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesDaemonSetList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesDaemonSetByMoid')
def GetKubernetesDaemonSetByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesDaemonSetByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesDeploymentList')
def GetKubernetesDeploymentList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesDeploymentList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesDeploymentByMoid')
def GetKubernetesDeploymentByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesDeploymentByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesHttpProxyPolicyList')
def GetKubernetesHttpProxyPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesHttpProxyPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesHttpProxyPolicyByMoid')
def GetKubernetesHttpProxyPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesHttpProxyPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesIngressList')
def GetKubernetesIngressList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesIngressList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesIngressByMoid')
def GetKubernetesIngressByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesIngressByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesNetworkPolicyList')
def GetKubernetesNetworkPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesNetworkPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesNetworkPolicyByMoid')
def GetKubernetesNetworkPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesNetworkPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesNodeList')
def GetKubernetesNodeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesNodeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesNodeByMoid')
def GetKubernetesNodeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesNodeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesNodeGroupProfileList')
def GetKubernetesNodeGroupProfileList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesNodeGroupProfileList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesNodeGroupProfileByMoid')
def GetKubernetesNodeGroupProfileByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesNodeGroupProfileByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesNvidiaGpuProductList')
def GetKubernetesNvidiaGpuProductList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesNvidiaGpuProductList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesNvidiaGpuProductByMoid')
def GetKubernetesNvidiaGpuProductByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesNvidiaGpuProductByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesPodList')
def GetKubernetesPodList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesPodList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesPodByMoid')
def GetKubernetesPodByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesPodByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesServiceList')
def GetKubernetesServiceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesServiceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesServiceByMoid')
def GetKubernetesServiceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesServiceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesStatefulSetList')
def GetKubernetesStatefulSetList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesStatefulSetList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesStatefulSetByMoid')
def GetKubernetesStatefulSetByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesStatefulSetByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesSysConfigPolicyList')
def GetKubernetesSysConfigPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesSysConfigPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesSysConfigPolicyByMoid')
def GetKubernetesSysConfigPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesSysConfigPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesTrustedRegistriesPolicyList')
def GetKubernetesTrustedRegistriesPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesTrustedRegistriesPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesTrustedRegistriesPolicyByMoid')
def GetKubernetesTrustedRegistriesPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesTrustedRegistriesPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVersionList')
def GetKubernetesVersionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesVersionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVersionByMoid')
def GetKubernetesVersionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesVersionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVersionPolicyList')
def GetKubernetesVersionPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesVersionPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVersionPolicyByMoid')
def GetKubernetesVersionPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesVersionPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVirtualMachineInfraConfigPolicyList')
def GetKubernetesVirtualMachineInfraConfigPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesVirtualMachineInfraConfigPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVirtualMachineInfraConfigPolicyByMoid')
def GetKubernetesVirtualMachineInfraConfigPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesVirtualMachineInfraConfigPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVirtualMachineInfrastructureProviderList')
def GetKubernetesVirtualMachineInfrastructureProviderList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesVirtualMachineInfrastructureProviderList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVirtualMachineInfrastructureProviderByMoid')
def GetKubernetesVirtualMachineInfrastructureProviderByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesVirtualMachineInfrastructureProviderByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVirtualMachineInstanceTypeList')
def GetKubernetesVirtualMachineInstanceTypeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesVirtualMachineInstanceTypeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVirtualMachineInstanceTypeByMoid')
def GetKubernetesVirtualMachineInstanceTypeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesVirtualMachineInstanceTypeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVirtualMachineNodeProfileList')
def GetKubernetesVirtualMachineNodeProfileList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesVirtualMachineNodeProfileList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVirtualMachineNodeProfileByMoid')
def GetKubernetesVirtualMachineNodeProfileByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKubernetesVirtualMachineNodeProfileByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKvmPolicyList')
def GetKvmPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKvmPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKvmPolicyByMoid')
def GetKvmPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKvmPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKvmPolicyInventoryList')
def GetKvmPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKvmPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKvmPolicyInventoryByMoid')
def GetKvmPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKvmPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKvmSessionList')
def GetKvmSessionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKvmSessionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKvmSessionByMoid')
def GetKvmSessionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKvmSessionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKvmTunnelList')
def GetKvmTunnelList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKvmTunnelList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKvmTunnelByMoid')
def GetKvmTunnelByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKvmTunnelByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKvmTunneledKvmPolicyList')
def GetKvmTunneledKvmPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKvmTunneledKvmPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKvmTunneledKvmPolicyByMoid')
def GetKvmTunneledKvmPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetKvmTunneledKvmPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseAccountLicenseDataList')
def GetLicenseAccountLicenseDataList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseAccountLicenseDataList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseAccountLicenseDataByMoid')
def GetLicenseAccountLicenseDataByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseAccountLicenseDataByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseCustomerOpList')
def GetLicenseCustomerOpList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseCustomerOpList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseCustomerOpByMoid')
def GetLicenseCustomerOpByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseCustomerOpByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseErpCustomerOpList')
def GetLicenseErpCustomerOpList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseErpCustomerOpList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseErpCustomerOpByMoid')
def GetLicenseErpCustomerOpByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseErpCustomerOpByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseErpLicenseCountList')
def GetLicenseErpLicenseCountList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseErpLicenseCountList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseErpLicenseCountByMoid')
def GetLicenseErpLicenseCountByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseErpLicenseCountByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIksCustomerOpList')
def GetLicenseIksCustomerOpList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseIksCustomerOpList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIksCustomerOpByMoid')
def GetLicenseIksCustomerOpByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseIksCustomerOpByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIksLicenseCountList')
def GetLicenseIksLicenseCountList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseIksLicenseCountList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIksLicenseCountByMoid')
def GetLicenseIksLicenseCountByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseIksLicenseCountByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIncCustomerOpList')
def GetLicenseIncCustomerOpList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseIncCustomerOpList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIncCustomerOpByMoid')
def GetLicenseIncCustomerOpByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseIncCustomerOpByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIncLicenseCountList')
def GetLicenseIncLicenseCountList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseIncLicenseCountList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIncLicenseCountByMoid')
def GetLicenseIncLicenseCountByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseIncLicenseCountByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIwoCustomerOpList')
def GetLicenseIwoCustomerOpList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseIwoCustomerOpList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIwoCustomerOpByMoid')
def GetLicenseIwoCustomerOpByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseIwoCustomerOpByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIwoLicenseCountList')
def GetLicenseIwoLicenseCountList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseIwoLicenseCountList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIwoLicenseCountByMoid')
def GetLicenseIwoLicenseCountByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseIwoLicenseCountByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseLicenseInfoList')
def GetLicenseLicenseInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseLicenseInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseLicenseInfoByMoid')
def GetLicenseLicenseInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseLicenseInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseLicenseInfoViewList')
def GetLicenseLicenseInfoViewList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseLicenseInfoViewList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseLicenseInfoViewByMoid')
def GetLicenseLicenseInfoViewByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseLicenseInfoViewByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseLicenseRegistrationStatusList')
def GetLicenseLicenseRegistrationStatusList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseLicenseRegistrationStatusList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseLicenseRegistrationStatusByMoid')
def GetLicenseLicenseRegistrationStatusByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseLicenseRegistrationStatusByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseLicenseReservationOpList')
def GetLicenseLicenseReservationOpList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseLicenseReservationOpList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseLicenseReservationOpByMoid')
def GetLicenseLicenseReservationOpByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseLicenseReservationOpByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseSmartlicenseTokenList')
def GetLicenseSmartlicenseTokenList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseSmartlicenseTokenList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseSmartlicenseTokenByMoid')
def GetLicenseSmartlicenseTokenByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLicenseSmartlicenseTokenByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLsServiceProfileList')
def GetLsServiceProfileList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLsServiceProfileList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLsServiceProfileByMoid')
def GetLsServiceProfileByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetLsServiceProfileByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolIdBlockList')
def GetMacpoolIdBlockList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMacpoolIdBlockList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolIdBlockByMoid')
def GetMacpoolIdBlockByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMacpoolIdBlockByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolLeaseList')
def GetMacpoolLeaseList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMacpoolLeaseList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolLeaseByMoid')
def GetMacpoolLeaseByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMacpoolLeaseByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolPoolList')
def GetMacpoolPoolList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMacpoolPoolList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolPoolByMoid')
def GetMacpoolPoolByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMacpoolPoolByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolPoolMemberList')
def GetMacpoolPoolMemberList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMacpoolPoolMemberList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolPoolMemberByMoid')
def GetMacpoolPoolMemberByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMacpoolPoolMemberByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolReservationList')
def GetMacpoolReservationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMacpoolReservationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolReservationByMoid')
def GetMacpoolReservationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMacpoolReservationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolUniverseList')
def GetMacpoolUniverseList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMacpoolUniverseList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolUniverseByMoid')
def GetMacpoolUniverseByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMacpoolUniverseByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetManagementControllerList')
def GetManagementControllerList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetManagementControllerList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetManagementControllerByMoid')
def GetManagementControllerByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetManagementControllerByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetManagementEntityList')
def GetManagementEntityList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetManagementEntityList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetManagementEntityByMoid')
def GetManagementEntityByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetManagementEntityByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetManagementInterfaceList')
def GetManagementInterfaceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetManagementInterfaceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetManagementInterfaceByMoid')
def GetManagementInterfaceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetManagementInterfaceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMarketplaceUseCaseList')
def GetMarketplaceUseCaseList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMarketplaceUseCaseList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMarketplaceUseCaseByMoid')
def GetMarketplaceUseCaseByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMarketplaceUseCaseByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMarketplaceUseCaseVersionList')
def GetMarketplaceUseCaseVersionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMarketplaceUseCaseVersionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMarketplaceUseCaseVersionByMoid')
def GetMarketplaceUseCaseVersionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMarketplaceUseCaseVersionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryArrayList')
def GetMemoryArrayList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMemoryArrayList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryArrayByMoid')
def GetMemoryArrayByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMemoryArrayByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryConfigResultList')
def GetMemoryPersistentMemoryConfigResultList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMemoryPersistentMemoryConfigResultList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryConfigResultByMoid')
def GetMemoryPersistentMemoryConfigResultByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMemoryPersistentMemoryConfigResultByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryConfigurationList')
def GetMemoryPersistentMemoryConfigurationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMemoryPersistentMemoryConfigurationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryConfigurationByMoid')
def GetMemoryPersistentMemoryConfigurationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMemoryPersistentMemoryConfigurationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryNamespaceList')
def GetMemoryPersistentMemoryNamespaceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMemoryPersistentMemoryNamespaceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryNamespaceByMoid')
def GetMemoryPersistentMemoryNamespaceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMemoryPersistentMemoryNamespaceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryNamespaceConfigResultList')
def GetMemoryPersistentMemoryNamespaceConfigResultList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMemoryPersistentMemoryNamespaceConfigResultList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryNamespaceConfigResultByMoid')
def GetMemoryPersistentMemoryNamespaceConfigResultByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMemoryPersistentMemoryNamespaceConfigResultByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryPolicyList')
def GetMemoryPersistentMemoryPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMemoryPersistentMemoryPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryPolicyByMoid')
def GetMemoryPersistentMemoryPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMemoryPersistentMemoryPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryRegionList')
def GetMemoryPersistentMemoryRegionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMemoryPersistentMemoryRegionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryRegionByMoid')
def GetMemoryPersistentMemoryRegionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMemoryPersistentMemoryRegionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryUnitList')
def GetMemoryPersistentMemoryUnitList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMemoryPersistentMemoryUnitList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryUnitByMoid')
def GetMemoryPersistentMemoryUnitByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMemoryPersistentMemoryUnitByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPolicyList')
def GetMemoryPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMemoryPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPolicyByMoid')
def GetMemoryPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMemoryPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPolicyInventoryList')
def GetMemoryPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMemoryPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPolicyInventoryByMoid')
def GetMemoryPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMemoryPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryUnitList')
def GetMemoryUnitList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMemoryUnitList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryUnitByMoid')
def GetMemoryUnitByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMemoryUnitByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMerakiDeviceList')
def GetMerakiDeviceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMerakiDeviceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMerakiDeviceByMoid')
def GetMerakiDeviceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMerakiDeviceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMerakiNetworkList')
def GetMerakiNetworkList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMerakiNetworkList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMerakiNetworkByMoid')
def GetMerakiNetworkByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMerakiNetworkByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMerakiOrganizationList')
def GetMerakiOrganizationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMerakiOrganizationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMerakiOrganizationByMoid')
def GetMerakiOrganizationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMerakiOrganizationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMerakiPortProfileList')
def GetMerakiPortProfileList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMerakiPortProfileList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMerakiPortProfileByMoid')
def GetMerakiPortProfileByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMerakiPortProfileByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMerakiTagList')
def GetMerakiTagList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMerakiTagList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMerakiTagByMoid')
def GetMerakiTagByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMerakiTagByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMetaDefinitionList')
def GetMetaDefinitionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMetaDefinitionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMetaDefinitionByMoid')
def GetMetaDefinitionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMetaDefinitionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMetricsConfigurationList')
def GetMetricsConfigurationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMetricsConfigurationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMetricsConfigurationByMoid')
def GetMetricsConfigurationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMetricsConfigurationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMetricsMetricsExplorationList')
def GetMetricsMetricsExplorationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMetricsMetricsExplorationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMetricsMetricsExplorationByMoid')
def GetMetricsMetricsExplorationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMetricsMetricsExplorationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMetricsResourceConfigurationList')
def GetMetricsResourceConfigurationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMetricsResourceConfigurationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMetricsResourceConfigurationByMoid')
def GetMetricsResourceConfigurationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMetricsResourceConfigurationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMonitoringHealthStatusList')
def GetMonitoringHealthStatusList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMonitoringHealthStatusList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMonitoringHealthStatusByMoid')
def GetMonitoringHealthStatusByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetMonitoringHealthStatusByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkDiscoveredNeighborList')
def GetNetworkDiscoveredNeighborList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkDiscoveredNeighborList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkDiscoveredNeighborByMoid')
def GetNetworkDiscoveredNeighborByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkDiscoveredNeighborByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkDnsList')
def GetNetworkDnsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkDnsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkDnsByMoid')
def GetNetworkDnsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkDnsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkElementList')
def GetNetworkElementList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkElementList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkElementByMoid')
def GetNetworkElementByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkElementByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkElementSummaryList')
def GetNetworkElementSummaryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkElementSummaryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkElementSummaryByMoid')
def GetNetworkElementSummaryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkElementSummaryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkFcZoneInfoList')
def GetNetworkFcZoneInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkFcZoneInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkFcZoneInfoByMoid')
def GetNetworkFcZoneInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkFcZoneInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkFeatureControlList')
def GetNetworkFeatureControlList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkFeatureControlList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkFeatureControlByMoid')
def GetNetworkFeatureControlByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkFeatureControlByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkInterfaceListList')
def GetNetworkInterfaceListList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkInterfaceListList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkInterfaceListByMoid')
def GetNetworkInterfaceListByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkInterfaceListByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkLicenseFileList')
def GetNetworkLicenseFileList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkLicenseFileList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkLicenseFileByMoid')
def GetNetworkLicenseFileByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkLicenseFileByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkSupervisorCardList')
def GetNetworkSupervisorCardList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkSupervisorCardList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkSupervisorCardByMoid')
def GetNetworkSupervisorCardByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkSupervisorCardByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkTelemetryCheckList')
def GetNetworkTelemetryCheckList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkTelemetryCheckList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkTelemetryCheckByMoid')
def GetNetworkTelemetryCheckByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkTelemetryCheckByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVethernetList')
def GetNetworkVethernetList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkVethernetList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVethernetByMoid')
def GetNetworkVethernetByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkVethernetByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVfcList')
def GetNetworkVfcList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkVfcList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVfcByMoid')
def GetNetworkVfcByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkVfcByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVlanPortInfoList')
def GetNetworkVlanPortInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkVlanPortInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVlanPortInfoByMoid')
def GetNetworkVlanPortInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkVlanPortInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVpcDomainList')
def GetNetworkVpcDomainList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkVpcDomainList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVpcDomainByMoid')
def GetNetworkVpcDomainByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkVpcDomainByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVpcMemberList')
def GetNetworkVpcMemberList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkVpcMemberList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVpcMemberByMoid')
def GetNetworkVpcMemberByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkVpcMemberByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVpcPeerList')
def GetNetworkVpcPeerList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkVpcPeerList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVpcPeerByMoid')
def GetNetworkVpcPeerByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkVpcPeerByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVrfList')
def GetNetworkVrfList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkVrfList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVrfByMoid')
def GetNetworkVrfByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkVrfByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkconfigPolicyList')
def GetNetworkconfigPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkconfigPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkconfigPolicyByMoid')
def GetNetworkconfigPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkconfigPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkconfigPolicyInventoryList')
def GetNetworkconfigPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkconfigPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkconfigPolicyInventoryByMoid')
def GetNetworkconfigPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNetworkconfigPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicCcoPostList')
def GetNiaapiApicCcoPostList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiApicCcoPostList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicCcoPostByMoid')
def GetNiaapiApicCcoPostByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiApicCcoPostByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicFieldNoticeList')
def GetNiaapiApicFieldNoticeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiApicFieldNoticeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicFieldNoticeByMoid')
def GetNiaapiApicFieldNoticeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiApicFieldNoticeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicHweolList')
def GetNiaapiApicHweolList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiApicHweolList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicHweolByMoid')
def GetNiaapiApicHweolByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiApicHweolByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicLatestMaintainedReleaseList')
def GetNiaapiApicLatestMaintainedReleaseList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiApicLatestMaintainedReleaseList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicLatestMaintainedReleaseByMoid')
def GetNiaapiApicLatestMaintainedReleaseByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiApicLatestMaintainedReleaseByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicReleaseRecommendList')
def GetNiaapiApicReleaseRecommendList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiApicReleaseRecommendList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicReleaseRecommendByMoid')
def GetNiaapiApicReleaseRecommendByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiApicReleaseRecommendByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicSweolList')
def GetNiaapiApicSweolList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiApicSweolList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicSweolByMoid')
def GetNiaapiApicSweolByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiApicSweolByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmCcoPostList')
def GetNiaapiDcnmCcoPostList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiDcnmCcoPostList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmCcoPostByMoid')
def GetNiaapiDcnmCcoPostByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiDcnmCcoPostByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmFieldNoticeList')
def GetNiaapiDcnmFieldNoticeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiDcnmFieldNoticeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmFieldNoticeByMoid')
def GetNiaapiDcnmFieldNoticeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiDcnmFieldNoticeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmHweolList')
def GetNiaapiDcnmHweolList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiDcnmHweolList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmHweolByMoid')
def GetNiaapiDcnmHweolByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiDcnmHweolByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmLatestMaintainedReleaseList')
def GetNiaapiDcnmLatestMaintainedReleaseList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiDcnmLatestMaintainedReleaseList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmLatestMaintainedReleaseByMoid')
def GetNiaapiDcnmLatestMaintainedReleaseByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiDcnmLatestMaintainedReleaseByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmReleaseRecommendList')
def GetNiaapiDcnmReleaseRecommendList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiDcnmReleaseRecommendList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmReleaseRecommendByMoid')
def GetNiaapiDcnmReleaseRecommendByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiDcnmReleaseRecommendByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmSweolList')
def GetNiaapiDcnmSweolList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiDcnmSweolList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmSweolByMoid')
def GetNiaapiDcnmSweolByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiDcnmSweolByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiFileDownloaderList')
def GetNiaapiFileDownloaderList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiFileDownloaderList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiFileDownloaderByMoid')
def GetNiaapiFileDownloaderByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiFileDownloaderByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiNiaMetadataList')
def GetNiaapiNiaMetadataList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiNiaMetadataList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiNiaMetadataByMoid')
def GetNiaapiNiaMetadataByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiNiaMetadataByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiNibFileDownloaderList')
def GetNiaapiNibFileDownloaderList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiNibFileDownloaderList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiNibFileDownloaderByMoid')
def GetNiaapiNibFileDownloaderByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiNibFileDownloaderByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiNibMetadataList')
def GetNiaapiNibMetadataList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiNibMetadataList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiNibMetadataByMoid')
def GetNiaapiNibMetadataByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiNibMetadataByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiPuvScriptDownloaderList')
def GetNiaapiPuvScriptDownloaderList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiPuvScriptDownloaderList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiPuvScriptDownloaderByMoid')
def GetNiaapiPuvScriptDownloaderByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiPuvScriptDownloaderByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiSnValidatorMetadataList')
def GetNiaapiSnValidatorMetadataList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiSnValidatorMetadataList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiSnValidatorMetadataByMoid')
def GetNiaapiSnValidatorMetadataByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiSnValidatorMetadataByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiUpgradeAssistFileList')
def GetNiaapiUpgradeAssistFileList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiUpgradeAssistFileList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiUpgradeAssistFileByMoid')
def GetNiaapiUpgradeAssistFileByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiUpgradeAssistFileByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiVersionRegexList')
def GetNiaapiVersionRegexList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiVersionRegexList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiVersionRegexByMoid')
def GetNiaapiVersionRegexByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiaapiVersionRegexByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryAaaLdapProviderDetailsList')
def GetNiatelemetryAaaLdapProviderDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryAaaLdapProviderDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryAaaLdapProviderDetailsByMoid')
def GetNiatelemetryAaaLdapProviderDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryAaaLdapProviderDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryAaaRadiusProviderDetailsList')
def GetNiatelemetryAaaRadiusProviderDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryAaaRadiusProviderDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryAaaRadiusProviderDetailsByMoid')
def GetNiatelemetryAaaRadiusProviderDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryAaaRadiusProviderDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryAaaTacacsProviderDetailsList')
def GetNiatelemetryAaaTacacsProviderDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryAaaTacacsProviderDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryAaaTacacsProviderDetailsByMoid')
def GetNiatelemetryAaaTacacsProviderDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryAaaTacacsProviderDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicAppPluginDetailsList')
def GetNiatelemetryApicAppPluginDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicAppPluginDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicAppPluginDetailsByMoid')
def GetNiatelemetryApicAppPluginDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicAppPluginDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicCoreFileDetailsList')
def GetNiatelemetryApicCoreFileDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicCoreFileDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicCoreFileDetailsByMoid')
def GetNiatelemetryApicCoreFileDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicCoreFileDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicDbgexpRsExportDestList')
def GetNiatelemetryApicDbgexpRsExportDestList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicDbgexpRsExportDestList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicDbgexpRsExportDestByMoid')
def GetNiatelemetryApicDbgexpRsExportDestByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicDbgexpRsExportDestByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicDbgexpRsTsSchedulerList')
def GetNiatelemetryApicDbgexpRsTsSchedulerList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicDbgexpRsTsSchedulerList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicDbgexpRsTsSchedulerByMoid')
def GetNiatelemetryApicDbgexpRsTsSchedulerByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicDbgexpRsTsSchedulerByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicFanDetailsList')
def GetNiatelemetryApicFanDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicFanDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicFanDetailsByMoid')
def GetNiatelemetryApicFanDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicFanDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicFexDetailsList')
def GetNiatelemetryApicFexDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicFexDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicFexDetailsByMoid')
def GetNiatelemetryApicFexDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicFexDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicFlashDetailsList')
def GetNiatelemetryApicFlashDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicFlashDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicFlashDetailsByMoid')
def GetNiatelemetryApicFlashDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicFlashDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicNtpAuthList')
def GetNiatelemetryApicNtpAuthList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicNtpAuthList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicNtpAuthByMoid')
def GetNiatelemetryApicNtpAuthByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicNtpAuthByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicPerformanceDataList')
def GetNiatelemetryApicPerformanceDataList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicPerformanceDataList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicPerformanceDataByMoid')
def GetNiatelemetryApicPerformanceDataByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicPerformanceDataByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicPodDataList')
def GetNiatelemetryApicPodDataList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicPodDataList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicPodDataByMoid')
def GetNiatelemetryApicPodDataByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicPodDataByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicPsuDetailsList')
def GetNiatelemetryApicPsuDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicPsuDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicPsuDetailsByMoid')
def GetNiatelemetryApicPsuDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicPsuDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicRealmDetailsList')
def GetNiatelemetryApicRealmDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicRealmDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicRealmDetailsByMoid')
def GetNiatelemetryApicRealmDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicRealmDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpClientGrpDetailsList')
def GetNiatelemetryApicSnmpClientGrpDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicSnmpClientGrpDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpClientGrpDetailsByMoid')
def GetNiatelemetryApicSnmpClientGrpDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicSnmpClientGrpDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpCommunityAccessDetailsList')
def GetNiatelemetryApicSnmpCommunityAccessDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicSnmpCommunityAccessDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpCommunityAccessDetailsByMoid')
def GetNiatelemetryApicSnmpCommunityAccessDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicSnmpCommunityAccessDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpCommunityDetailsList')
def GetNiatelemetryApicSnmpCommunityDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicSnmpCommunityDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpCommunityDetailsByMoid')
def GetNiatelemetryApicSnmpCommunityDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicSnmpCommunityDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpTrapDetailsList')
def GetNiatelemetryApicSnmpTrapDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicSnmpTrapDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpTrapDetailsByMoid')
def GetNiatelemetryApicSnmpTrapDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicSnmpTrapDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpTrapFwdServerDetailsList')
def GetNiatelemetryApicSnmpTrapFwdServerDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicSnmpTrapFwdServerDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpTrapFwdServerDetailsByMoid')
def GetNiatelemetryApicSnmpTrapFwdServerDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicSnmpTrapFwdServerDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpVersionThreeDetailsList')
def GetNiatelemetryApicSnmpVersionThreeDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicSnmpVersionThreeDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpVersionThreeDetailsByMoid')
def GetNiatelemetryApicSnmpVersionThreeDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicSnmpVersionThreeDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSysLogGrpList')
def GetNiatelemetryApicSysLogGrpList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicSysLogGrpList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSysLogGrpByMoid')
def GetNiatelemetryApicSysLogGrpByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicSysLogGrpByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSysLogSrcList')
def GetNiatelemetryApicSysLogSrcList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicSysLogSrcList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSysLogSrcByMoid')
def GetNiatelemetryApicSysLogSrcByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicSysLogSrcByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicTransceiverDetailsList')
def GetNiatelemetryApicTransceiverDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicTransceiverDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicTransceiverDetailsByMoid')
def GetNiatelemetryApicTransceiverDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicTransceiverDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicUiPageCountsList')
def GetNiatelemetryApicUiPageCountsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicUiPageCountsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicUiPageCountsByMoid')
def GetNiatelemetryApicUiPageCountsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicUiPageCountsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicVisionList')
def GetNiatelemetryApicVisionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicVisionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicVisionByMoid')
def GetNiatelemetryApicVisionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryApicVisionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryAppDetailsList')
def GetNiatelemetryAppDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryAppDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryAppDetailsByMoid')
def GetNiatelemetryAppDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryAppDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryCloudDetailsList')
def GetNiatelemetryCloudDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryCloudDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryCloudDetailsByMoid')
def GetNiatelemetryCloudDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryCloudDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryCommonPoliciesList')
def GetNiatelemetryCommonPoliciesList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryCommonPoliciesList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryCommonPoliciesByMoid')
def GetNiatelemetryCommonPoliciesByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryCommonPoliciesByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDcnmFanDetailsList')
def GetNiatelemetryDcnmFanDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryDcnmFanDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDcnmFanDetailsByMoid')
def GetNiatelemetryDcnmFanDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryDcnmFanDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDcnmFexDetailsList')
def GetNiatelemetryDcnmFexDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryDcnmFexDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDcnmFexDetailsByMoid')
def GetNiatelemetryDcnmFexDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryDcnmFexDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDcnmModuleDetailsList')
def GetNiatelemetryDcnmModuleDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryDcnmModuleDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDcnmModuleDetailsByMoid')
def GetNiatelemetryDcnmModuleDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryDcnmModuleDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDcnmPsuDetailsList')
def GetNiatelemetryDcnmPsuDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryDcnmPsuDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDcnmPsuDetailsByMoid')
def GetNiatelemetryDcnmPsuDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryDcnmPsuDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDcnmTransceiverDetailsList')
def GetNiatelemetryDcnmTransceiverDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryDcnmTransceiverDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDcnmTransceiverDetailsByMoid')
def GetNiatelemetryDcnmTransceiverDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryDcnmTransceiverDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDomInfoObjectList')
def GetNiatelemetryDomInfoObjectList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryDomInfoObjectList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDomInfoObjectByMoid')
def GetNiatelemetryDomInfoObjectByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryDomInfoObjectByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDomThresInfoObjectList')
def GetNiatelemetryDomThresInfoObjectList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryDomThresInfoObjectList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDomThresInfoObjectByMoid')
def GetNiatelemetryDomThresInfoObjectByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryDomThresInfoObjectByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryEpgList')
def GetNiatelemetryEpgList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryEpgList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryEpgByMoid')
def GetNiatelemetryEpgByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryEpgByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryFabricModuleDetailsList')
def GetNiatelemetryFabricModuleDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryFabricModuleDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryFabricModuleDetailsByMoid')
def GetNiatelemetryFabricModuleDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryFabricModuleDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryFabricNodeControlDetailsList')
def GetNiatelemetryFabricNodeControlDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryFabricNodeControlDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryFabricNodeControlDetailsByMoid')
def GetNiatelemetryFabricNodeControlDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryFabricNodeControlDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryFabricPodProfileList')
def GetNiatelemetryFabricPodProfileList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryFabricPodProfileList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryFabricPodProfileByMoid')
def GetNiatelemetryFabricPodProfileByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryFabricPodProfileByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryFabricPodSsList')
def GetNiatelemetryFabricPodSsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryFabricPodSsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryFabricPodSsByMoid')
def GetNiatelemetryFabricPodSsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryFabricPodSsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryFaultList')
def GetNiatelemetryFaultList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryFaultList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryFaultByMoid')
def GetNiatelemetryFaultByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryFaultByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHcloudDetailsList')
def GetNiatelemetryHcloudDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryHcloudDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHcloudDetailsByMoid')
def GetNiatelemetryHcloudDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryHcloudDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHealthInsightsDataList')
def GetNiatelemetryHealthInsightsDataList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryHealthInsightsDataList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHealthInsightsDataByMoid')
def GetNiatelemetryHealthInsightsDataByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryHealthInsightsDataByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHttpsAclContractDetailsList')
def GetNiatelemetryHttpsAclContractDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryHttpsAclContractDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHttpsAclContractDetailsByMoid')
def GetNiatelemetryHttpsAclContractDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryHttpsAclContractDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHttpsAclContractFilterMapList')
def GetNiatelemetryHttpsAclContractFilterMapList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryHttpsAclContractFilterMapList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHttpsAclContractFilterMapByMoid')
def GetNiatelemetryHttpsAclContractFilterMapByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryHttpsAclContractFilterMapByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHttpsAclEpgContractMapList')
def GetNiatelemetryHttpsAclEpgContractMapList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryHttpsAclEpgContractMapList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHttpsAclEpgContractMapByMoid')
def GetNiatelemetryHttpsAclEpgContractMapByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryHttpsAclEpgContractMapByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHttpsAclEpgDetailsList')
def GetNiatelemetryHttpsAclEpgDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryHttpsAclEpgDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHttpsAclEpgDetailsByMoid')
def GetNiatelemetryHttpsAclEpgDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryHttpsAclEpgDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHttpsAclFilterDetailsList')
def GetNiatelemetryHttpsAclFilterDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryHttpsAclFilterDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHttpsAclFilterDetailsByMoid')
def GetNiatelemetryHttpsAclFilterDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryHttpsAclFilterDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryInsightGroupDetailsList')
def GetNiatelemetryInsightGroupDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryInsightGroupDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryInsightGroupDetailsByMoid')
def GetNiatelemetryInsightGroupDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryInsightGroupDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryLcList')
def GetNiatelemetryLcList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryLcList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryLcByMoid')
def GetNiatelemetryLcByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryLcByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryLeafPolGrpDetailsList')
def GetNiatelemetryLeafPolGrpDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryLeafPolGrpDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryLeafPolGrpDetailsByMoid')
def GetNiatelemetryLeafPolGrpDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryLeafPolGrpDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMdsNeighborsList')
def GetNiatelemetryMdsNeighborsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryMdsNeighborsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMdsNeighborsByMoid')
def GetNiatelemetryMdsNeighborsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryMdsNeighborsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMsoContractDetailsList')
def GetNiatelemetryMsoContractDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryMsoContractDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMsoContractDetailsByMoid')
def GetNiatelemetryMsoContractDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryMsoContractDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMsoEpgDetailsList')
def GetNiatelemetryMsoEpgDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryMsoEpgDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMsoEpgDetailsByMoid')
def GetNiatelemetryMsoEpgDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryMsoEpgDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMsoSchemaDetailsList')
def GetNiatelemetryMsoSchemaDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryMsoSchemaDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMsoSchemaDetailsByMoid')
def GetNiatelemetryMsoSchemaDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryMsoSchemaDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMsoSiteDetailsList')
def GetNiatelemetryMsoSiteDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryMsoSiteDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMsoSiteDetailsByMoid')
def GetNiatelemetryMsoSiteDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryMsoSiteDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMsoTenantDetailsList')
def GetNiatelemetryMsoTenantDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryMsoTenantDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMsoTenantDetailsByMoid')
def GetNiatelemetryMsoTenantDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryMsoTenantDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusCloudAccountList')
def GetNiatelemetryNexusCloudAccountList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNexusCloudAccountList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusCloudAccountByMoid')
def GetNiatelemetryNexusCloudAccountByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNexusCloudAccountByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusCloudSiteList')
def GetNiatelemetryNexusCloudSiteList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNexusCloudSiteList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusCloudSiteByMoid')
def GetNiatelemetryNexusCloudSiteByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNexusCloudSiteByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusDashboardControllerDetailsList')
def GetNiatelemetryNexusDashboardControllerDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNexusDashboardControllerDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusDashboardControllerDetailsByMoid')
def GetNiatelemetryNexusDashboardControllerDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNexusDashboardControllerDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusDashboardDetailsList')
def GetNiatelemetryNexusDashboardDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNexusDashboardDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusDashboardDetailsByMoid')
def GetNiatelemetryNexusDashboardDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNexusDashboardDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusDashboardMemoryDetailsList')
def GetNiatelemetryNexusDashboardMemoryDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNexusDashboardMemoryDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusDashboardMemoryDetailsByMoid')
def GetNiatelemetryNexusDashboardMemoryDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNexusDashboardMemoryDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusDashboardsList')
def GetNiatelemetryNexusDashboardsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNexusDashboardsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusDashboardsByMoid')
def GetNiatelemetryNexusDashboardsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNexusDashboardsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiaFeatureUsageList')
def GetNiatelemetryNiaFeatureUsageList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNiaFeatureUsageList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiaFeatureUsageByMoid')
def GetNiatelemetryNiaFeatureUsageByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNiaFeatureUsageByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiaInventoryList')
def GetNiatelemetryNiaInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNiaInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiaInventoryByMoid')
def GetNiatelemetryNiaInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNiaInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiaInventoryDcnmList')
def GetNiatelemetryNiaInventoryDcnmList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNiaInventoryDcnmList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiaInventoryDcnmByMoid')
def GetNiatelemetryNiaInventoryDcnmByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNiaInventoryDcnmByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiaInventoryFabricList')
def GetNiatelemetryNiaInventoryFabricList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNiaInventoryFabricList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiaInventoryFabricByMoid')
def GetNiatelemetryNiaInventoryFabricByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNiaInventoryFabricByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiaLicenseStateList')
def GetNiatelemetryNiaLicenseStateList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNiaLicenseStateList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiaLicenseStateByMoid')
def GetNiatelemetryNiaLicenseStateByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNiaLicenseStateByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiccList')
def GetNiatelemetryNiccList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNiccList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiccByMoid')
def GetNiatelemetryNiccByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryNiccByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryPasswordStrengthCheckList')
def GetNiatelemetryPasswordStrengthCheckList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryPasswordStrengthCheckList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryPasswordStrengthCheckByMoid')
def GetNiatelemetryPasswordStrengthCheckByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryPasswordStrengthCheckByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryPodCommPoliciesList')
def GetNiatelemetryPodCommPoliciesList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryPodCommPoliciesList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryPodCommPoliciesByMoid')
def GetNiatelemetryPodCommPoliciesByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryPodCommPoliciesByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryPodSnmpPoliciesList')
def GetNiatelemetryPodSnmpPoliciesList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryPodSnmpPoliciesList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryPodSnmpPoliciesByMoid')
def GetNiatelemetryPodSnmpPoliciesByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryPodSnmpPoliciesByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryPodTimeServerPoliciesList')
def GetNiatelemetryPodTimeServerPoliciesList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryPodTimeServerPoliciesList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryPodTimeServerPoliciesByMoid')
def GetNiatelemetryPodTimeServerPoliciesByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryPodTimeServerPoliciesByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySiteInventoryList')
def GetNiatelemetrySiteInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetrySiteInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySiteInventoryByMoid')
def GetNiatelemetrySiteInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetrySiteInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySnmpSrcList')
def GetNiatelemetrySnmpSrcList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetrySnmpSrcList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySnmpSrcByMoid')
def GetNiatelemetrySnmpSrcByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetrySnmpSrcByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySpinePolGrpDetailsList')
def GetNiatelemetrySpinePolGrpDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetrySpinePolGrpDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySpinePolGrpDetailsByMoid')
def GetNiatelemetrySpinePolGrpDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetrySpinePolGrpDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySshVersionTwoList')
def GetNiatelemetrySshVersionTwoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetrySshVersionTwoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySshVersionTwoByMoid')
def GetNiatelemetrySshVersionTwoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetrySshVersionTwoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySupervisorModuleDetailsList')
def GetNiatelemetrySupervisorModuleDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetrySupervisorModuleDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySupervisorModuleDetailsByMoid')
def GetNiatelemetrySupervisorModuleDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetrySupervisorModuleDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySyslogRemoteDestList')
def GetNiatelemetrySyslogRemoteDestList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetrySyslogRemoteDestList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySyslogRemoteDestByMoid')
def GetNiatelemetrySyslogRemoteDestByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetrySyslogRemoteDestByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySyslogSysMsgList')
def GetNiatelemetrySyslogSysMsgList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetrySyslogSysMsgList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySyslogSysMsgByMoid')
def GetNiatelemetrySyslogSysMsgByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetrySyslogSysMsgByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySyslogSysMsgFacFilterList')
def GetNiatelemetrySyslogSysMsgFacFilterList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetrySyslogSysMsgFacFilterList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySyslogSysMsgFacFilterByMoid')
def GetNiatelemetrySyslogSysMsgFacFilterByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetrySyslogSysMsgFacFilterByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySystemControllerDetailsList')
def GetNiatelemetrySystemControllerDetailsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetrySystemControllerDetailsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySystemControllerDetailsByMoid')
def GetNiatelemetrySystemControllerDetailsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetrySystemControllerDetailsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryTenantList')
def GetNiatelemetryTenantList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryTenantList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryTenantByMoid')
def GetNiatelemetryTenantByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNiatelemetryTenantByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNotificationAccountSubscriptionList')
def GetNotificationAccountSubscriptionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNotificationAccountSubscriptionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNotificationAccountSubscriptionByMoid')
def GetNotificationAccountSubscriptionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNotificationAccountSubscriptionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNtpNtpServerList')
def GetNtpNtpServerList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNtpNtpServerList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNtpNtpServerByMoid')
def GetNtpNtpServerByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNtpNtpServerByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNtpPolicyList')
def GetNtpPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNtpPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNtpPolicyByMoid')
def GetNtpPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetNtpPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOauthAccessTokenList')
def GetOauthAccessTokenList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOauthAccessTokenList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOauthAccessTokenByMoid')
def GetOauthAccessTokenByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOauthAccessTokenByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOauthAuthorizationList')
def GetOauthAuthorizationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOauthAuthorizationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOauthAuthorizationByMoid')
def GetOauthAuthorizationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOauthAuthorizationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOpenapiApiMethodMetaList')
def GetOpenapiApiMethodMetaList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOpenapiApiMethodMetaList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOpenapiApiMethodMetaByMoid')
def GetOpenapiApiMethodMetaByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOpenapiApiMethodMetaByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOpenapiOpenApiSpecificationList')
def GetOpenapiOpenApiSpecificationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOpenapiOpenApiSpecificationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOpenapiOpenApiSpecificationByMoid')
def GetOpenapiOpenApiSpecificationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOpenapiOpenApiSpecificationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOpenapiProcessFileList')
def GetOpenapiProcessFileList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOpenapiProcessFileList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOpenapiProcessFileByMoid')
def GetOpenapiProcessFileByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOpenapiProcessFileByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOpenapiTaskGenerationRequestList')
def GetOpenapiTaskGenerationRequestList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOpenapiTaskGenerationRequestList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOpenapiTaskGenerationRequestByMoid')
def GetOpenapiTaskGenerationRequestByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOpenapiTaskGenerationRequestByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOpenapiTaskGenerationResultList')
def GetOpenapiTaskGenerationResultList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOpenapiTaskGenerationResultList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOpenapiTaskGenerationResultByMoid')
def GetOpenapiTaskGenerationResultByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOpenapiTaskGenerationResultByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOprsDeploymentList')
def GetOprsDeploymentList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOprsDeploymentList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOprsDeploymentByMoid')
def GetOprsDeploymentByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOprsDeploymentByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOprsSyncTargetListMessageList')
def GetOprsSyncTargetListMessageList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOprsSyncTargetListMessageList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOprsSyncTargetListMessageByMoid')
def GetOprsSyncTargetListMessageByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOprsSyncTargetListMessageByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOrganizationOrganizationList')
def GetOrganizationOrganizationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOrganizationOrganizationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOrganizationOrganizationByMoid')
def GetOrganizationOrganizationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOrganizationOrganizationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsBulkInstallInfoList')
def GetOsBulkInstallInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOsBulkInstallInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsBulkInstallInfoByMoid')
def GetOsBulkInstallInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOsBulkInstallInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsCatalogList')
def GetOsCatalogList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOsCatalogList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsCatalogByMoid')
def GetOsCatalogByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOsCatalogByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsConfigurationFileList')
def GetOsConfigurationFileList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOsConfigurationFileList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsConfigurationFileByMoid')
def GetOsConfigurationFileByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOsConfigurationFileByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsDistributionList')
def GetOsDistributionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOsDistributionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsDistributionByMoid')
def GetOsDistributionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOsDistributionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsInstallList')
def GetOsInstallList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOsInstallList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsInstallByMoid')
def GetOsInstallByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOsInstallByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsSupportedVersionList')
def GetOsSupportedVersionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOsSupportedVersionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsSupportedVersionByMoid')
def GetOsSupportedVersionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOsSupportedVersionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsValidRemoteTargetList')
def GetOsValidRemoteTargetList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOsValidRemoteTargetList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsValidRemoteTargetByMoid')
def GetOsValidRemoteTargetByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetOsValidRemoteTargetByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationDcLogsList')
def GetPartnerintegrationDcLogsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPartnerintegrationDcLogsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationDcLogsByMoid')
def GetPartnerintegrationDcLogsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPartnerintegrationDcLogsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationDeviceConnectorList')
def GetPartnerintegrationDeviceConnectorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPartnerintegrationDeviceConnectorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationDeviceConnectorByMoid')
def GetPartnerintegrationDeviceConnectorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPartnerintegrationDeviceConnectorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationDocIssuesList')
def GetPartnerintegrationDocIssuesList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPartnerintegrationDocIssuesList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationDocIssuesByMoid')
def GetPartnerintegrationDocIssuesByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPartnerintegrationDocIssuesByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationEtlList')
def GetPartnerintegrationEtlList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPartnerintegrationEtlList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationEtlByMoid')
def GetPartnerintegrationEtlByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPartnerintegrationEtlByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationFileList')
def GetPartnerintegrationFileList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPartnerintegrationFileList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationFileByMoid')
def GetPartnerintegrationFileByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPartnerintegrationFileByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationInventoryList')
def GetPartnerintegrationInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPartnerintegrationInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationInventoryByMoid')
def GetPartnerintegrationInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPartnerintegrationInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationLogsList')
def GetPartnerintegrationLogsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPartnerintegrationLogsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationLogsByMoid')
def GetPartnerintegrationLogsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPartnerintegrationLogsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationMetricsList')
def GetPartnerintegrationMetricsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPartnerintegrationMetricsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationMetricsByMoid')
def GetPartnerintegrationMetricsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPartnerintegrationMetricsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationModelList')
def GetPartnerintegrationModelList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPartnerintegrationModelList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationModelByMoid')
def GetPartnerintegrationModelByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPartnerintegrationModelByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPciCoprocessorCardList')
def GetPciCoprocessorCardList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPciCoprocessorCardList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPciCoprocessorCardByMoid')
def GetPciCoprocessorCardByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPciCoprocessorCardByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPciDeviceList')
def GetPciDeviceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPciDeviceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPciDeviceByMoid')
def GetPciDeviceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPciDeviceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPciLinkList')
def GetPciLinkList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPciLinkList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPciLinkByMoid')
def GetPciLinkByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPciLinkByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPciNodeList')
def GetPciNodeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPciNodeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPciNodeByMoid')
def GetPciNodeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPciNodeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPciSwitchList')
def GetPciSwitchList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPciSwitchList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPciSwitchByMoid')
def GetPciSwitchByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPciSwitchByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPortGroupList')
def GetPortGroupList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPortGroupList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPortGroupByMoid')
def GetPortGroupByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPortGroupByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPortMacBindingList')
def GetPortMacBindingList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPortMacBindingList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPortMacBindingByMoid')
def GetPortMacBindingByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPortMacBindingByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPortSubGroupList')
def GetPortSubGroupList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPortSubGroupList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPortSubGroupByMoid')
def GetPortSubGroupByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPortSubGroupByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPowerControlStateList')
def GetPowerControlStateList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPowerControlStateList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPowerControlStateByMoid')
def GetPowerControlStateByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPowerControlStateByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPowerPolicyList')
def GetPowerPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPowerPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPowerPolicyByMoid')
def GetPowerPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPowerPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPowerPolicyInventoryList')
def GetPowerPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPowerPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPowerPolicyInventoryByMoid')
def GetPowerPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetPowerPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetProcessorUnitList')
def GetProcessorUnitList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetProcessorUnitList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetProcessorUnitByMoid')
def GetProcessorUnitByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetProcessorUnitByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRackUnitPersonalityList')
def GetRackUnitPersonalityList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRackUnitPersonalityList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRackUnitPersonalityByMoid')
def GetRackUnitPersonalityByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRackUnitPersonalityByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationCapacityRunwayList')
def GetRecommendationCapacityRunwayList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecommendationCapacityRunwayList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationCapacityRunwayByMoid')
def GetRecommendationCapacityRunwayByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecommendationCapacityRunwayByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationClusterExpansionList')
def GetRecommendationClusterExpansionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecommendationClusterExpansionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationClusterExpansionByMoid')
def GetRecommendationClusterExpansionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecommendationClusterExpansionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationHardwareExpansionRequestList')
def GetRecommendationHardwareExpansionRequestList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecommendationHardwareExpansionRequestList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationHardwareExpansionRequestByMoid')
def GetRecommendationHardwareExpansionRequestByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecommendationHardwareExpansionRequestByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationHardwareExpansionRequestItemList')
def GetRecommendationHardwareExpansionRequestItemList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecommendationHardwareExpansionRequestItemList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationHardwareExpansionRequestItemByMoid')
def GetRecommendationHardwareExpansionRequestItemByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecommendationHardwareExpansionRequestItemByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationPhysicalItemList')
def GetRecommendationPhysicalItemList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecommendationPhysicalItemList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationPhysicalItemByMoid')
def GetRecommendationPhysicalItemByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecommendationPhysicalItemByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationPurchaseOrderEstimateList')
def GetRecommendationPurchaseOrderEstimateList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecommendationPurchaseOrderEstimateList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationPurchaseOrderEstimateByMoid')
def GetRecommendationPurchaseOrderEstimateByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecommendationPurchaseOrderEstimateByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationPurchaseOrderListList')
def GetRecommendationPurchaseOrderListList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecommendationPurchaseOrderListList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationPurchaseOrderListByMoid')
def GetRecommendationPurchaseOrderListByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecommendationPurchaseOrderListByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationSoftwareItemList')
def GetRecommendationSoftwareItemList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecommendationSoftwareItemList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationSoftwareItemByMoid')
def GetRecommendationSoftwareItemByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecommendationSoftwareItemByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryBackupConfigPolicyList')
def GetRecoveryBackupConfigPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecoveryBackupConfigPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryBackupConfigPolicyByMoid')
def GetRecoveryBackupConfigPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecoveryBackupConfigPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryBackupProfileList')
def GetRecoveryBackupProfileList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecoveryBackupProfileList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryBackupProfileByMoid')
def GetRecoveryBackupProfileByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecoveryBackupProfileByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryConfigResultList')
def GetRecoveryConfigResultList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecoveryConfigResultList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryConfigResultByMoid')
def GetRecoveryConfigResultByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecoveryConfigResultByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryConfigResultEntryList')
def GetRecoveryConfigResultEntryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecoveryConfigResultEntryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryConfigResultEntryByMoid')
def GetRecoveryConfigResultEntryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecoveryConfigResultEntryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryOnDemandBackupList')
def GetRecoveryOnDemandBackupList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecoveryOnDemandBackupList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryOnDemandBackupByMoid')
def GetRecoveryOnDemandBackupByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecoveryOnDemandBackupByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryRestoreList')
def GetRecoveryRestoreList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecoveryRestoreList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryRestoreByMoid')
def GetRecoveryRestoreByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecoveryRestoreByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryScheduleConfigPolicyList')
def GetRecoveryScheduleConfigPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecoveryScheduleConfigPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryScheduleConfigPolicyByMoid')
def GetRecoveryScheduleConfigPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetRecoveryScheduleConfigPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceGroupList')
def GetResourceGroupList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourceGroupList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceGroupByMoid')
def GetResourceGroupByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourceGroupByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceGroupMemberList')
def GetResourceGroupMemberList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourceGroupMemberList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceGroupMemberByMoid')
def GetResourceGroupMemberByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourceGroupMemberByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceLicenseResourceCountList')
def GetResourceLicenseResourceCountList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourceLicenseResourceCountList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceLicenseResourceCountByMoid')
def GetResourceLicenseResourceCountByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourceLicenseResourceCountByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceMembershipList')
def GetResourceMembershipList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourceMembershipList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceMembershipByMoid')
def GetResourceMembershipByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourceMembershipByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceMembershipHolderList')
def GetResourceMembershipHolderList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourceMembershipHolderList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceMembershipHolderByMoid')
def GetResourceMembershipHolderByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourceMembershipHolderByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceReservationList')
def GetResourceReservationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourceReservationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceReservationByMoid')
def GetResourceReservationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourceReservationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceSelectionCriteriaList')
def GetResourceSelectionCriteriaList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourceSelectionCriteriaList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceSelectionCriteriaByMoid')
def GetResourceSelectionCriteriaByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourceSelectionCriteriaByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceSharedResourcesInfoHolderList')
def GetResourceSharedResourcesInfoHolderList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourceSharedResourcesInfoHolderList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceSharedResourcesInfoHolderByMoid')
def GetResourceSharedResourcesInfoHolderByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourceSharedResourcesInfoHolderByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolLeaseList')
def GetResourcepoolLeaseList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourcepoolLeaseList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolLeaseByMoid')
def GetResourcepoolLeaseByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourcepoolLeaseByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolLeaseResourceList')
def GetResourcepoolLeaseResourceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourcepoolLeaseResourceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolLeaseResourceByMoid')
def GetResourcepoolLeaseResourceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourcepoolLeaseResourceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolMembershipReservationList')
def GetResourcepoolMembershipReservationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourcepoolMembershipReservationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolMembershipReservationByMoid')
def GetResourcepoolMembershipReservationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourcepoolMembershipReservationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolPoolList')
def GetResourcepoolPoolList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourcepoolPoolList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolPoolByMoid')
def GetResourcepoolPoolByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourcepoolPoolByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolPoolMemberList')
def GetResourcepoolPoolMemberList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourcepoolPoolMemberList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolPoolMemberByMoid')
def GetResourcepoolPoolMemberByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourcepoolPoolMemberByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolQualificationPolicyList')
def GetResourcepoolQualificationPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourcepoolQualificationPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolQualificationPolicyByMoid')
def GetResourcepoolQualificationPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourcepoolQualificationPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolUniverseList')
def GetResourcepoolUniverseList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourcepoolUniverseList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolUniverseByMoid')
def GetResourcepoolUniverseByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetResourcepoolUniverseByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSchedulerTaskResultList')
def GetSchedulerTaskResultList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSchedulerTaskResultList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSchedulerTaskResultByMoid')
def GetSchedulerTaskResultByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSchedulerTaskResultByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSchedulerTaskScheduleList')
def GetSchedulerTaskScheduleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSchedulerTaskScheduleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSchedulerTaskScheduleByMoid')
def GetSchedulerTaskScheduleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSchedulerTaskScheduleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSdaaciConnectionList')
def GetSdaaciConnectionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSdaaciConnectionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSdaaciConnectionByMoid')
def GetSdaaciConnectionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSdaaciConnectionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSdaaciConnectionDetailList')
def GetSdaaciConnectionDetailList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSdaaciConnectionDetailList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSdaaciConnectionDetailByMoid')
def GetSdaaciConnectionDetailByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSdaaciConnectionDetailByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSdcardPolicyList')
def GetSdcardPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSdcardPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSdcardPolicyByMoid')
def GetSdcardPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSdcardPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSdcardPolicyInventoryList')
def GetSdcardPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSdcardPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSdcardPolicyInventoryByMoid')
def GetSdcardPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSdcardPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSearchSearchItemList')
def GetSearchSearchItemList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSearchSearchItemList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSearchSearchItemByMoid')
def GetSearchSearchItemByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSearchSearchItemByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSearchTagItemList')
def GetSearchTagItemList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSearchTagItemList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSearchTagItemByMoid')
def GetSearchTagItemByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSearchTagItemByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSecurityUnitList')
def GetSecurityUnitList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSecurityUnitList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSecurityUnitByMoid')
def GetSecurityUnitByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSecurityUnitByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerConfigChangeDetailList')
def GetServerConfigChangeDetailList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetServerConfigChangeDetailList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerConfigChangeDetailByMoid')
def GetServerConfigChangeDetailByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetServerConfigChangeDetailByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerConfigImportList')
def GetServerConfigImportList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetServerConfigImportList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerConfigImportByMoid')
def GetServerConfigImportByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetServerConfigImportByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerConfigResultList')
def GetServerConfigResultList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetServerConfigResultList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerConfigResultByMoid')
def GetServerConfigResultByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetServerConfigResultByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerConfigResultEntryList')
def GetServerConfigResultEntryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetServerConfigResultEntryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerConfigResultEntryByMoid')
def GetServerConfigResultEntryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetServerConfigResultEntryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerDisruptionList')
def GetServerDisruptionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetServerDisruptionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerDisruptionByMoid')
def GetServerDisruptionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetServerDisruptionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerProfileList')
def GetServerProfileList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetServerProfileList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerProfileByMoid')
def GetServerProfileByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetServerProfileByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerProfileTemplateList')
def GetServerProfileTemplateList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetServerProfileTemplateList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerProfileTemplateByMoid')
def GetServerProfileTemplateByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetServerProfileTemplateByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServicenowChangeRequestList')
def GetServicenowChangeRequestList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetServicenowChangeRequestList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServicenowChangeRequestByMoid')
def GetServicenowChangeRequestByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetServicenowChangeRequestByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServicenowChangeRequestDocList')
def GetServicenowChangeRequestDocList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetServicenowChangeRequestDocList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServicenowChangeRequestDocByMoid')
def GetServicenowChangeRequestDocByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetServicenowChangeRequestDocByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServicenowIncidentList')
def GetServicenowIncidentList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetServicenowIncidentList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServicenowIncidentByMoid')
def GetServicenowIncidentByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetServicenowIncidentByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServicenowIncidentDocList')
def GetServicenowIncidentDocList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetServicenowIncidentDocList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServicenowIncidentDocByMoid')
def GetServicenowIncidentDocByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetServicenowIncidentDocByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSmtpPolicyList')
def GetSmtpPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSmtpPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSmtpPolicyByMoid')
def GetSmtpPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSmtpPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSmtpPolicyTestList')
def GetSmtpPolicyTestList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSmtpPolicyTestList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSmtpPolicyTestByMoid')
def GetSmtpPolicyTestByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSmtpPolicyTestByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSnmpPolicyList')
def GetSnmpPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSnmpPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSnmpPolicyByMoid')
def GetSnmpPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSnmpPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSnmpPolicyInventoryList')
def GetSnmpPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSnmpPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSnmpPolicyInventoryByMoid')
def GetSnmpPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSnmpPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareApplianceDistributableList')
def GetSoftwareApplianceDistributableList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareApplianceDistributableList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareApplianceDistributableByMoid')
def GetSoftwareApplianceDistributableByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareApplianceDistributableByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareDownloadHistoryList')
def GetSoftwareDownloadHistoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareDownloadHistoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareDownloadHistoryByMoid')
def GetSoftwareDownloadHistoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareDownloadHistoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareHciBundleDistributableList')
def GetSoftwareHciBundleDistributableList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareHciBundleDistributableList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareHciBundleDistributableByMoid')
def GetSoftwareHciBundleDistributableByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareHciBundleDistributableByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareHciDistributableList')
def GetSoftwareHciDistributableList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareHciDistributableList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareHciDistributableByMoid')
def GetSoftwareHciDistributableByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareHciDistributableByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareHclMetaList')
def GetSoftwareHclMetaList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareHclMetaList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareHclMetaByMoid')
def GetSoftwareHclMetaByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareHclMetaByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareHyperflexBundleDistributableList')
def GetSoftwareHyperflexBundleDistributableList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareHyperflexBundleDistributableList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareHyperflexBundleDistributableByMoid')
def GetSoftwareHyperflexBundleDistributableByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareHyperflexBundleDistributableByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareHyperflexDistributableList')
def GetSoftwareHyperflexDistributableList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareHyperflexDistributableList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareHyperflexDistributableByMoid')
def GetSoftwareHyperflexDistributableByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareHyperflexDistributableByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareIksBundleDistributableList')
def GetSoftwareIksBundleDistributableList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareIksBundleDistributableList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareIksBundleDistributableByMoid')
def GetSoftwareIksBundleDistributableByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareIksBundleDistributableByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareReleaseMetaList')
def GetSoftwareReleaseMetaList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareReleaseMetaList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareReleaseMetaByMoid')
def GetSoftwareReleaseMetaByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareReleaseMetaByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareSolutionDistributableList')
def GetSoftwareSolutionDistributableList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareSolutionDistributableList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareSolutionDistributableByMoid')
def GetSoftwareSolutionDistributableByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareSolutionDistributableByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareUcsdBundleDistributableList')
def GetSoftwareUcsdBundleDistributableList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareUcsdBundleDistributableList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareUcsdBundleDistributableByMoid')
def GetSoftwareUcsdBundleDistributableByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareUcsdBundleDistributableByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareUcsdDistributableList')
def GetSoftwareUcsdDistributableList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareUcsdDistributableList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareUcsdDistributableByMoid')
def GetSoftwareUcsdDistributableByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwareUcsdDistributableByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryAuthorizationList')
def GetSoftwarerepositoryAuthorizationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwarerepositoryAuthorizationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryAuthorizationByMoid')
def GetSoftwarerepositoryAuthorizationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwarerepositoryAuthorizationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCachedImageList')
def GetSoftwarerepositoryCachedImageList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwarerepositoryCachedImageList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCachedImageByMoid')
def GetSoftwarerepositoryCachedImageByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwarerepositoryCachedImageByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCatalogList')
def GetSoftwarerepositoryCatalogList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwarerepositoryCatalogList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCatalogByMoid')
def GetSoftwarerepositoryCatalogByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwarerepositoryCatalogByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCategoryMapperList')
def GetSoftwarerepositoryCategoryMapperList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwarerepositoryCategoryMapperList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCategoryMapperByMoid')
def GetSoftwarerepositoryCategoryMapperByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwarerepositoryCategoryMapperByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCategoryMapperModelList')
def GetSoftwarerepositoryCategoryMapperModelList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwarerepositoryCategoryMapperModelList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCategoryMapperModelByMoid')
def GetSoftwarerepositoryCategoryMapperModelByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwarerepositoryCategoryMapperModelByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCategorySupportConstraintList')
def GetSoftwarerepositoryCategorySupportConstraintList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwarerepositoryCategorySupportConstraintList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCategorySupportConstraintByMoid')
def GetSoftwarerepositoryCategorySupportConstraintByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwarerepositoryCategorySupportConstraintByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCategoryUnsupportedModelsList')
def GetSoftwarerepositoryCategoryUnsupportedModelsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwarerepositoryCategoryUnsupportedModelsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCategoryUnsupportedModelsByMoid')
def GetSoftwarerepositoryCategoryUnsupportedModelsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwarerepositoryCategoryUnsupportedModelsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryDownloadSpecList')
def GetSoftwarerepositoryDownloadSpecList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwarerepositoryDownloadSpecList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryDownloadSpecByMoid')
def GetSoftwarerepositoryDownloadSpecByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwarerepositoryDownloadSpecByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryOperatingSystemFileList')
def GetSoftwarerepositoryOperatingSystemFileList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwarerepositoryOperatingSystemFileList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryOperatingSystemFileByMoid')
def GetSoftwarerepositoryOperatingSystemFileByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwarerepositoryOperatingSystemFileByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryReleaseList')
def GetSoftwarerepositoryReleaseList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwarerepositoryReleaseList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryReleaseByMoid')
def GetSoftwarerepositoryReleaseByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSoftwarerepositoryReleaseByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSolPolicyList')
def GetSolPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSolPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSolPolicyByMoid')
def GetSolPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSolPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSolPolicyInventoryList')
def GetSolPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSolPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSolPolicyInventoryByMoid')
def GetSolPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSolPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSshPolicyList')
def GetSshPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSshPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSshPolicyByMoid')
def GetSshPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSshPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSshPolicyInventoryList')
def GetSshPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSshPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSshPolicyInventoryByMoid')
def GetSshPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSshPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageBatteryBackupUnitList')
def GetStorageBatteryBackupUnitList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageBatteryBackupUnitList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageBatteryBackupUnitByMoid')
def GetStorageBatteryBackupUnitByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageBatteryBackupUnitByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageControllerList')
def GetStorageControllerList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageControllerList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageControllerByMoid')
def GetStorageControllerByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageControllerByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageControllerDriveList')
def GetStorageControllerDriveList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageControllerDriveList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageControllerDriveByMoid')
def GetStorageControllerDriveByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageControllerDriveByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageDiskGroupList')
def GetStorageDiskGroupList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageDiskGroupList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageDiskGroupByMoid')
def GetStorageDiskGroupByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageDiskGroupByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageDiskSlotList')
def GetStorageDiskSlotList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageDiskSlotList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageDiskSlotByMoid')
def GetStorageDiskSlotByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageDiskSlotByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageDriveGroupList')
def GetStorageDriveGroupList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageDriveGroupList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageDriveGroupByMoid')
def GetStorageDriveGroupByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageDriveGroupByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageDriveSecurityPolicyList')
def GetStorageDriveSecurityPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageDriveSecurityPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageDriveSecurityPolicyByMoid')
def GetStorageDriveSecurityPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageDriveSecurityPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageEnclosureList')
def GetStorageEnclosureList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageEnclosureList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageEnclosureByMoid')
def GetStorageEnclosureByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageEnclosureByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageEnclosureDiskList')
def GetStorageEnclosureDiskList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageEnclosureDiskList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageEnclosureDiskByMoid')
def GetStorageEnclosureDiskByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageEnclosureDiskByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageEnclosureDiskSlotEpList')
def GetStorageEnclosureDiskSlotEpList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageEnclosureDiskSlotEpList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageEnclosureDiskSlotEpByMoid')
def GetStorageEnclosureDiskSlotEpByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageEnclosureDiskSlotEpByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFileItemList')
def GetStorageFileItemList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageFileItemList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFileItemByMoid')
def GetStorageFileItemByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageFileItemByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexFlashControllerList')
def GetStorageFlexFlashControllerList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageFlexFlashControllerList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexFlashControllerByMoid')
def GetStorageFlexFlashControllerByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageFlexFlashControllerByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexFlashControllerPropsList')
def GetStorageFlexFlashControllerPropsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageFlexFlashControllerPropsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexFlashControllerPropsByMoid')
def GetStorageFlexFlashControllerPropsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageFlexFlashControllerPropsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexFlashPhysicalDriveList')
def GetStorageFlexFlashPhysicalDriveList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageFlexFlashPhysicalDriveList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexFlashPhysicalDriveByMoid')
def GetStorageFlexFlashPhysicalDriveByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageFlexFlashPhysicalDriveByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexFlashVirtualDriveList')
def GetStorageFlexFlashVirtualDriveList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageFlexFlashVirtualDriveList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexFlashVirtualDriveByMoid')
def GetStorageFlexFlashVirtualDriveByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageFlexFlashVirtualDriveByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexUtilControllerList')
def GetStorageFlexUtilControllerList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageFlexUtilControllerList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexUtilControllerByMoid')
def GetStorageFlexUtilControllerByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageFlexUtilControllerByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexUtilPhysicalDriveList')
def GetStorageFlexUtilPhysicalDriveList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageFlexUtilPhysicalDriveList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexUtilPhysicalDriveByMoid')
def GetStorageFlexUtilPhysicalDriveByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageFlexUtilPhysicalDriveByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexUtilVirtualDriveList')
def GetStorageFlexUtilVirtualDriveList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageFlexUtilVirtualDriveList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexUtilVirtualDriveByMoid')
def GetStorageFlexUtilVirtualDriveByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageFlexUtilVirtualDriveByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiArrayList')
def GetStorageHitachiArrayList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiArrayList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiArrayByMoid')
def GetStorageHitachiArrayByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiArrayByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiControllerList')
def GetStorageHitachiControllerList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiControllerList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiControllerByMoid')
def GetStorageHitachiControllerByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiControllerByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiDiskList')
def GetStorageHitachiDiskList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiDiskList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiDiskByMoid')
def GetStorageHitachiDiskByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiDiskByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiExternalParityGroupList')
def GetStorageHitachiExternalParityGroupList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiExternalParityGroupList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiExternalParityGroupByMoid')
def GetStorageHitachiExternalParityGroupByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiExternalParityGroupByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiExternalPathGroupList')
def GetStorageHitachiExternalPathGroupList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiExternalPathGroupList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiExternalPathGroupByMoid')
def GetStorageHitachiExternalPathGroupByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiExternalPathGroupByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiExternalStorageLunList')
def GetStorageHitachiExternalStorageLunList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiExternalStorageLunList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiExternalStorageLunByMoid')
def GetStorageHitachiExternalStorageLunByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiExternalStorageLunByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiExternalStoragePortList')
def GetStorageHitachiExternalStoragePortList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiExternalStoragePortList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiExternalStoragePortByMoid')
def GetStorageHitachiExternalStoragePortByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiExternalStoragePortByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiHostList')
def GetStorageHitachiHostList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiHostList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiHostByMoid')
def GetStorageHitachiHostByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiHostByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiHostLunList')
def GetStorageHitachiHostLunList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiHostLunList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiHostLunByMoid')
def GetStorageHitachiHostLunByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiHostLunByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiNvmSubsystemList')
def GetStorageHitachiNvmSubsystemList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiNvmSubsystemList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiNvmSubsystemByMoid')
def GetStorageHitachiNvmSubsystemByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiNvmSubsystemByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiParityGroupList')
def GetStorageHitachiParityGroupList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiParityGroupList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiParityGroupByMoid')
def GetStorageHitachiParityGroupByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiParityGroupByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiPoolList')
def GetStorageHitachiPoolList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiPoolList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiPoolByMoid')
def GetStorageHitachiPoolByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiPoolByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiPortList')
def GetStorageHitachiPortList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiPortList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiPortByMoid')
def GetStorageHitachiPortByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiPortByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiRemoteCopyPairGadList')
def GetStorageHitachiRemoteCopyPairGadList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiRemoteCopyPairGadList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiRemoteCopyPairGadByMoid')
def GetStorageHitachiRemoteCopyPairGadByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiRemoteCopyPairGadByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiRemoteCopyPairTcList')
def GetStorageHitachiRemoteCopyPairTcList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiRemoteCopyPairTcList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiRemoteCopyPairTcByMoid')
def GetStorageHitachiRemoteCopyPairTcByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiRemoteCopyPairTcByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiRemoteCopyPairUrList')
def GetStorageHitachiRemoteCopyPairUrList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiRemoteCopyPairUrList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiRemoteCopyPairUrByMoid')
def GetStorageHitachiRemoteCopyPairUrByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiRemoteCopyPairUrByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiRemoteReplicationList')
def GetStorageHitachiRemoteReplicationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiRemoteReplicationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiRemoteReplicationByMoid')
def GetStorageHitachiRemoteReplicationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiRemoteReplicationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiSnapshotList')
def GetStorageHitachiSnapshotList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiSnapshotList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiSnapshotByMoid')
def GetStorageHitachiSnapshotByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiSnapshotByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiVolumeList')
def GetStorageHitachiVolumeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiVolumeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiVolumeByMoid')
def GetStorageHitachiVolumeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiVolumeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiVolumeMigrationPairList')
def GetStorageHitachiVolumeMigrationPairList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiVolumeMigrationPairList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiVolumeMigrationPairByMoid')
def GetStorageHitachiVolumeMigrationPairByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHitachiVolumeMigrationPairByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHyperFlexStorageContainerList')
def GetStorageHyperFlexStorageContainerList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHyperFlexStorageContainerList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHyperFlexStorageContainerByMoid')
def GetStorageHyperFlexStorageContainerByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHyperFlexStorageContainerByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHyperFlexVolumeList')
def GetStorageHyperFlexVolumeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHyperFlexVolumeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHyperFlexVolumeByMoid')
def GetStorageHyperFlexVolumeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageHyperFlexVolumeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageItemList')
def GetStorageItemList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageItemList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageItemByMoid')
def GetStorageItemByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageItemByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageKnoxSecureDriveConfigurationList')
def GetStorageKnoxSecureDriveConfigurationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageKnoxSecureDriveConfigurationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageKnoxSecureDriveConfigurationByMoid')
def GetStorageKnoxSecureDriveConfigurationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageKnoxSecureDriveConfigurationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppAggregateList')
def GetStorageNetAppAggregateList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppAggregateList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppAggregateByMoid')
def GetStorageNetAppAggregateByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppAggregateByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppAggregateEventList')
def GetStorageNetAppAggregateEventList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppAggregateEventList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppAggregateEventByMoid')
def GetStorageNetAppAggregateEventByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppAggregateEventByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppBaseDiskList')
def GetStorageNetAppBaseDiskList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppBaseDiskList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppBaseDiskByMoid')
def GetStorageNetAppBaseDiskByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppBaseDiskByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppCifsServiceList')
def GetStorageNetAppCifsServiceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppCifsServiceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppCifsServiceByMoid')
def GetStorageNetAppCifsServiceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppCifsServiceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppCifsShareList')
def GetStorageNetAppCifsShareList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppCifsShareList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppCifsShareByMoid')
def GetStorageNetAppCifsShareByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppCifsShareByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppCloudTargetList')
def GetStorageNetAppCloudTargetList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppCloudTargetList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppCloudTargetByMoid')
def GetStorageNetAppCloudTargetByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppCloudTargetByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppClusterList')
def GetStorageNetAppClusterList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppClusterList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppClusterByMoid')
def GetStorageNetAppClusterByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppClusterByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppClusterEventList')
def GetStorageNetAppClusterEventList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppClusterEventList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppClusterEventByMoid')
def GetStorageNetAppClusterEventByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppClusterEventByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppClusterSnapMirrorPolicyList')
def GetStorageNetAppClusterSnapMirrorPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppClusterSnapMirrorPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppClusterSnapMirrorPolicyByMoid')
def GetStorageNetAppClusterSnapMirrorPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppClusterSnapMirrorPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppClusterSnapshotPolicyList')
def GetStorageNetAppClusterSnapshotPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppClusterSnapshotPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppClusterSnapshotPolicyByMoid')
def GetStorageNetAppClusterSnapshotPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppClusterSnapshotPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppDataIpInterfaceList')
def GetStorageNetAppDataIpInterfaceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppDataIpInterfaceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppDataIpInterfaceByMoid')
def GetStorageNetAppDataIpInterfaceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppDataIpInterfaceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppDataIpInterfaceEventList')
def GetStorageNetAppDataIpInterfaceEventList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppDataIpInterfaceEventList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppDataIpInterfaceEventByMoid')
def GetStorageNetAppDataIpInterfaceEventByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppDataIpInterfaceEventByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppDiskEventList')
def GetStorageNetAppDiskEventList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppDiskEventList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppDiskEventByMoid')
def GetStorageNetAppDiskEventByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppDiskEventByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppEthernetPortList')
def GetStorageNetAppEthernetPortList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppEthernetPortList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppEthernetPortByMoid')
def GetStorageNetAppEthernetPortByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppEthernetPortByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppEthernetPortEventList')
def GetStorageNetAppEthernetPortEventList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppEthernetPortEventList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppEthernetPortEventByMoid')
def GetStorageNetAppEthernetPortEventByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppEthernetPortEventByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppExportPolicyList')
def GetStorageNetAppExportPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppExportPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppExportPolicyByMoid')
def GetStorageNetAppExportPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppExportPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppFcInterfaceList')
def GetStorageNetAppFcInterfaceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppFcInterfaceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppFcInterfaceByMoid')
def GetStorageNetAppFcInterfaceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppFcInterfaceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppFcInterfaceEventList')
def GetStorageNetAppFcInterfaceEventList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppFcInterfaceEventList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppFcInterfaceEventByMoid')
def GetStorageNetAppFcInterfaceEventByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppFcInterfaceEventByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppFcPortList')
def GetStorageNetAppFcPortList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppFcPortList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppFcPortByMoid')
def GetStorageNetAppFcPortByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppFcPortByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppFcPortEventList')
def GetStorageNetAppFcPortEventList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppFcPortEventList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppFcPortEventByMoid')
def GetStorageNetAppFcPortEventByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppFcPortEventByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppInitiatorGroupList')
def GetStorageNetAppInitiatorGroupList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppInitiatorGroupList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppInitiatorGroupByMoid')
def GetStorageNetAppInitiatorGroupByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppInitiatorGroupByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppIpInterfaceList')
def GetStorageNetAppIpInterfaceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppIpInterfaceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppIpInterfaceByMoid')
def GetStorageNetAppIpInterfaceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppIpInterfaceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppIpInterfaceEventList')
def GetStorageNetAppIpInterfaceEventList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppIpInterfaceEventList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppIpInterfaceEventByMoid')
def GetStorageNetAppIpInterfaceEventByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppIpInterfaceEventByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppIscsiServiceList')
def GetStorageNetAppIscsiServiceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppIscsiServiceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppIscsiServiceByMoid')
def GetStorageNetAppIscsiServiceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppIscsiServiceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppLicenseList')
def GetStorageNetAppLicenseList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppLicenseList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppLicenseByMoid')
def GetStorageNetAppLicenseByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppLicenseByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppLunList')
def GetStorageNetAppLunList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppLunList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppLunByMoid')
def GetStorageNetAppLunByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppLunByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppLunEventList')
def GetStorageNetAppLunEventList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppLunEventList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppLunEventByMoid')
def GetStorageNetAppLunEventByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppLunEventByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppLunMapList')
def GetStorageNetAppLunMapList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppLunMapList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppLunMapByMoid')
def GetStorageNetAppLunMapByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppLunMapByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNamespaceList')
def GetStorageNetAppNamespaceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppNamespaceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNamespaceByMoid')
def GetStorageNetAppNamespaceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppNamespaceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNfsClientList')
def GetStorageNetAppNfsClientList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppNfsClientList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNfsClientByMoid')
def GetStorageNetAppNfsClientByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppNfsClientByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNfsServiceList')
def GetStorageNetAppNfsServiceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppNfsServiceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNfsServiceByMoid')
def GetStorageNetAppNfsServiceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppNfsServiceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNodeList')
def GetStorageNetAppNodeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppNodeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNodeByMoid')
def GetStorageNetAppNodeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppNodeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNodeCdpNeighborList')
def GetStorageNetAppNodeCdpNeighborList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppNodeCdpNeighborList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNodeCdpNeighborByMoid')
def GetStorageNetAppNodeCdpNeighborByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppNodeCdpNeighborByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNodeEventList')
def GetStorageNetAppNodeEventList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppNodeEventList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNodeEventByMoid')
def GetStorageNetAppNodeEventByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppNodeEventByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNonDataIpInterfaceList')
def GetStorageNetAppNonDataIpInterfaceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppNonDataIpInterfaceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNonDataIpInterfaceByMoid')
def GetStorageNetAppNonDataIpInterfaceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppNonDataIpInterfaceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNonDataIpInterfaceEventList')
def GetStorageNetAppNonDataIpInterfaceEventList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppNonDataIpInterfaceEventList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNonDataIpInterfaceEventByMoid')
def GetStorageNetAppNonDataIpInterfaceEventByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppNonDataIpInterfaceEventByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNtpServerList')
def GetStorageNetAppNtpServerList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppNtpServerList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNtpServerByMoid')
def GetStorageNetAppNtpServerByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppNtpServerByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppQtreeList')
def GetStorageNetAppQtreeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppQtreeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppQtreeByMoid')
def GetStorageNetAppQtreeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppQtreeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppScheduleList')
def GetStorageNetAppScheduleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppScheduleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppScheduleByMoid')
def GetStorageNetAppScheduleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppScheduleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppSensorList')
def GetStorageNetAppSensorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppSensorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppSensorByMoid')
def GetStorageNetAppSensorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppSensorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppSnapMirrorRelationshipList')
def GetStorageNetAppSnapMirrorRelationshipList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppSnapMirrorRelationshipList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppSnapMirrorRelationshipByMoid')
def GetStorageNetAppSnapMirrorRelationshipByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppSnapMirrorRelationshipByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppStorageVmList')
def GetStorageNetAppStorageVmList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppStorageVmList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppStorageVmByMoid')
def GetStorageNetAppStorageVmByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppStorageVmByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppSvmEventList')
def GetStorageNetAppSvmEventList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppSvmEventList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppSvmEventByMoid')
def GetStorageNetAppSvmEventByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppSvmEventByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppSvmSnapMirrorPolicyList')
def GetStorageNetAppSvmSnapMirrorPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppSvmSnapMirrorPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppSvmSnapMirrorPolicyByMoid')
def GetStorageNetAppSvmSnapMirrorPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppSvmSnapMirrorPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppSvmSnapshotPolicyList')
def GetStorageNetAppSvmSnapshotPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppSvmSnapshotPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppSvmSnapshotPolicyByMoid')
def GetStorageNetAppSvmSnapshotPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppSvmSnapshotPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppVolumeList')
def GetStorageNetAppVolumeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppVolumeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppVolumeByMoid')
def GetStorageNetAppVolumeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppVolumeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppVolumeEventList')
def GetStorageNetAppVolumeEventList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppVolumeEventList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppVolumeEventByMoid')
def GetStorageNetAppVolumeEventByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppVolumeEventByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppVolumeSnapshotList')
def GetStorageNetAppVolumeSnapshotList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppVolumeSnapshotList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppVolumeSnapshotByMoid')
def GetStorageNetAppVolumeSnapshotByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNetAppVolumeSnapshotByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNvmeRaidConfigurationList')
def GetStorageNvmeRaidConfigurationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNvmeRaidConfigurationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNvmeRaidConfigurationByMoid')
def GetStorageNvmeRaidConfigurationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageNvmeRaidConfigurationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePhysicalDiskList')
def GetStoragePhysicalDiskList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePhysicalDiskList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePhysicalDiskByMoid')
def GetStoragePhysicalDiskByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePhysicalDiskByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePhysicalDiskExtensionList')
def GetStoragePhysicalDiskExtensionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePhysicalDiskExtensionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePhysicalDiskExtensionByMoid')
def GetStoragePhysicalDiskExtensionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePhysicalDiskExtensionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePhysicalDiskUsageList')
def GetStoragePhysicalDiskUsageList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePhysicalDiskUsageList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePhysicalDiskUsageByMoid')
def GetStoragePhysicalDiskUsageByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePhysicalDiskUsageByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureArrayList')
def GetStoragePureArrayList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureArrayList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureArrayByMoid')
def GetStoragePureArrayByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureArrayByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureArrayAlertsList')
def GetStoragePureArrayAlertsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureArrayAlertsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureArrayAlertsByMoid')
def GetStoragePureArrayAlertsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureArrayAlertsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureControllerList')
def GetStoragePureControllerList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureControllerList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureControllerByMoid')
def GetStoragePureControllerByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureControllerByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureDiskList')
def GetStoragePureDiskList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureDiskList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureDiskByMoid')
def GetStoragePureDiskByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureDiskByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureHostList')
def GetStoragePureHostList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureHostList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureHostByMoid')
def GetStoragePureHostByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureHostByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureHostGroupList')
def GetStoragePureHostGroupList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureHostGroupList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureHostGroupByMoid')
def GetStoragePureHostGroupByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureHostGroupByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureHostLunList')
def GetStoragePureHostLunList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureHostLunList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureHostLunByMoid')
def GetStoragePureHostLunByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureHostLunByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePurePortList')
def GetStoragePurePortList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePurePortList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePurePortByMoid')
def GetStoragePurePortByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePurePortByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureProtectionGroupList')
def GetStoragePureProtectionGroupList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureProtectionGroupList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureProtectionGroupByMoid')
def GetStoragePureProtectionGroupByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureProtectionGroupByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureProtectionGroupSnapshotList')
def GetStoragePureProtectionGroupSnapshotList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureProtectionGroupSnapshotList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureProtectionGroupSnapshotByMoid')
def GetStoragePureProtectionGroupSnapshotByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureProtectionGroupSnapshotByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureReplicationScheduleList')
def GetStoragePureReplicationScheduleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureReplicationScheduleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureReplicationScheduleByMoid')
def GetStoragePureReplicationScheduleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureReplicationScheduleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureSnapshotScheduleList')
def GetStoragePureSnapshotScheduleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureSnapshotScheduleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureSnapshotScheduleByMoid')
def GetStoragePureSnapshotScheduleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureSnapshotScheduleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureTargetArrayList')
def GetStoragePureTargetArrayList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureTargetArrayList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureTargetArrayByMoid')
def GetStoragePureTargetArrayByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureTargetArrayByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureVolumeList')
def GetStoragePureVolumeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureVolumeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureVolumeByMoid')
def GetStoragePureVolumeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureVolumeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureVolumeSnapshotList')
def GetStoragePureVolumeSnapshotList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureVolumeSnapshotList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureVolumeSnapshotByMoid')
def GetStoragePureVolumeSnapshotByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStoragePureVolumeSnapshotByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageSasExpanderList')
def GetStorageSasExpanderList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageSasExpanderList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageSasExpanderByMoid')
def GetStorageSasExpanderByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageSasExpanderByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageSasPortList')
def GetStorageSasPortList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageSasPortList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageSasPortByMoid')
def GetStorageSasPortByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageSasPortByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageSpanList')
def GetStorageSpanList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageSpanList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageSpanByMoid')
def GetStorageSpanByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageSpanByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageStoragePolicyList')
def GetStorageStoragePolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageStoragePolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageStoragePolicyByMoid')
def GetStorageStoragePolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageStoragePolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageVdMemberEpList')
def GetStorageVdMemberEpList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageVdMemberEpList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageVdMemberEpByMoid')
def GetStorageVdMemberEpByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageVdMemberEpByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageVirtualDriveList')
def GetStorageVirtualDriveList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageVirtualDriveList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageVirtualDriveByMoid')
def GetStorageVirtualDriveByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageVirtualDriveByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageVirtualDriveContainerList')
def GetStorageVirtualDriveContainerList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageVirtualDriveContainerList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageVirtualDriveContainerByMoid')
def GetStorageVirtualDriveContainerByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageVirtualDriveContainerByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageVirtualDriveExtensionList')
def GetStorageVirtualDriveExtensionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageVirtualDriveExtensionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageVirtualDriveExtensionByMoid')
def GetStorageVirtualDriveExtensionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageVirtualDriveExtensionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageVirtualDriveIdentityList')
def GetStorageVirtualDriveIdentityList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageVirtualDriveIdentityList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageVirtualDriveIdentityByMoid')
def GetStorageVirtualDriveIdentityByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetStorageVirtualDriveIdentityByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSyslogPolicyList')
def GetSyslogPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSyslogPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSyslogPolicyByMoid')
def GetSyslogPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSyslogPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSyslogPolicyInventoryList')
def GetSyslogPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSyslogPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSyslogPolicyInventoryByMoid')
def GetSyslogPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetSyslogPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTamAdvisoryCountList')
def GetTamAdvisoryCountList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTamAdvisoryCountList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTamAdvisoryCountByMoid')
def GetTamAdvisoryCountByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTamAdvisoryCountByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTamAdvisoryDefinitionList')
def GetTamAdvisoryDefinitionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTamAdvisoryDefinitionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTamAdvisoryDefinitionByMoid')
def GetTamAdvisoryDefinitionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTamAdvisoryDefinitionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTamAdvisoryInfoList')
def GetTamAdvisoryInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTamAdvisoryInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTamAdvisoryInfoByMoid')
def GetTamAdvisoryInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTamAdvisoryInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTamAdvisoryInstanceList')
def GetTamAdvisoryInstanceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTamAdvisoryInstanceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTamAdvisoryInstanceByMoid')
def GetTamAdvisoryInstanceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTamAdvisoryInstanceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTamSecurityAdvisoryList')
def GetTamSecurityAdvisoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTamSecurityAdvisoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTamSecurityAdvisoryByMoid')
def GetTamSecurityAdvisoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTamSecurityAdvisoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTaskWorkflowActionList')
def GetTaskWorkflowActionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTaskWorkflowActionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTaskWorkflowActionByMoid')
def GetTaskWorkflowActionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTaskWorkflowActionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTechsupportmanagementCollectionControlPolicyList')
def GetTechsupportmanagementCollectionControlPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTechsupportmanagementCollectionControlPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTechsupportmanagementCollectionControlPolicyByMoid')
def GetTechsupportmanagementCollectionControlPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTechsupportmanagementCollectionControlPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTechsupportmanagementDownloadList')
def GetTechsupportmanagementDownloadList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTechsupportmanagementDownloadList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTechsupportmanagementDownloadByMoid')
def GetTechsupportmanagementDownloadByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTechsupportmanagementDownloadByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTechsupportmanagementEndPointList')
def GetTechsupportmanagementEndPointList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTechsupportmanagementEndPointList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTechsupportmanagementEndPointByMoid')
def GetTechsupportmanagementEndPointByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTechsupportmanagementEndPointByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTechsupportmanagementTechSupportBundleList')
def GetTechsupportmanagementTechSupportBundleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTechsupportmanagementTechSupportBundleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTechsupportmanagementTechSupportBundleByMoid')
def GetTechsupportmanagementTechSupportBundleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTechsupportmanagementTechSupportBundleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTechsupportmanagementTechSupportStatusList')
def GetTechsupportmanagementTechSupportStatusList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTechsupportmanagementTechSupportStatusList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTechsupportmanagementTechSupportStatusByMoid')
def GetTechsupportmanagementTechSupportStatusByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTechsupportmanagementTechSupportStatusByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTerminalAuditLogList')
def GetTerminalAuditLogList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTerminalAuditLogList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTerminalAuditLogByMoid')
def GetTerminalAuditLogByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTerminalAuditLogByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetThermalPolicyList')
def GetThermalPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetThermalPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetThermalPolicyByMoid')
def GetThermalPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetThermalPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetThermalPolicyInventoryList')
def GetThermalPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetThermalPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetThermalPolicyInventoryByMoid')
def GetThermalPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetThermalPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTopSystemList')
def GetTopSystemList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTopSystemList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTopSystemByMoid')
def GetTopSystemByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetTopSystemByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUcsdBackupInfoList')
def GetUcsdBackupInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetUcsdBackupInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUcsdBackupInfoByMoid')
def GetUcsdBackupInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetUcsdBackupInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolBlockList')
def GetUuidpoolBlockList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetUuidpoolBlockList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolBlockByMoid')
def GetUuidpoolBlockByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetUuidpoolBlockByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolPoolList')
def GetUuidpoolPoolList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetUuidpoolPoolList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolPoolByMoid')
def GetUuidpoolPoolByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetUuidpoolPoolByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolPoolMemberList')
def GetUuidpoolPoolMemberList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetUuidpoolPoolMemberList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolPoolMemberByMoid')
def GetUuidpoolPoolMemberByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetUuidpoolPoolMemberByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolReservationList')
def GetUuidpoolReservationList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetUuidpoolReservationList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolReservationByMoid')
def GetUuidpoolReservationByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetUuidpoolReservationByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolUniverseList')
def GetUuidpoolUniverseList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetUuidpoolUniverseList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolUniverseByMoid')
def GetUuidpoolUniverseByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetUuidpoolUniverseByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolUuidLeaseList')
def GetUuidpoolUuidLeaseList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetUuidpoolUuidLeaseList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolUuidLeaseByMoid')
def GetUuidpoolUuidLeaseByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetUuidpoolUuidLeaseByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationEsxiConsoleList')
def GetVirtualizationEsxiConsoleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationEsxiConsoleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationEsxiConsoleByMoid')
def GetVirtualizationEsxiConsoleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationEsxiConsoleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationHostList')
def GetVirtualizationHostList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationHostList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationHostByMoid')
def GetVirtualizationHostByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationHostByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVirtualMachineList')
def GetVirtualizationVirtualMachineList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVirtualMachineList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVirtualMachineByMoid')
def GetVirtualizationVirtualMachineByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVirtualMachineByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareClusterList')
def GetVirtualizationVmwareClusterList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareClusterList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareClusterByMoid')
def GetVirtualizationVmwareClusterByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareClusterByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareDatacenterList')
def GetVirtualizationVmwareDatacenterList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareDatacenterList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareDatacenterByMoid')
def GetVirtualizationVmwareDatacenterByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareDatacenterByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareDatastoreList')
def GetVirtualizationVmwareDatastoreList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareDatastoreList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareDatastoreByMoid')
def GetVirtualizationVmwareDatastoreByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareDatastoreByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareDatastoreClusterList')
def GetVirtualizationVmwareDatastoreClusterList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareDatastoreClusterList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareDatastoreClusterByMoid')
def GetVirtualizationVmwareDatastoreClusterByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareDatastoreClusterByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareDistributedNetworkList')
def GetVirtualizationVmwareDistributedNetworkList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareDistributedNetworkList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareDistributedNetworkByMoid')
def GetVirtualizationVmwareDistributedNetworkByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareDistributedNetworkByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareDistributedSwitchList')
def GetVirtualizationVmwareDistributedSwitchList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareDistributedSwitchList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareDistributedSwitchByMoid')
def GetVirtualizationVmwareDistributedSwitchByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareDistributedSwitchByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareFolderList')
def GetVirtualizationVmwareFolderList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareFolderList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareFolderByMoid')
def GetVirtualizationVmwareFolderByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareFolderByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareHostList')
def GetVirtualizationVmwareHostList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareHostList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareHostByMoid')
def GetVirtualizationVmwareHostByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareHostByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareHostGpuList')
def GetVirtualizationVmwareHostGpuList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareHostGpuList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareHostGpuByMoid')
def GetVirtualizationVmwareHostGpuByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareHostGpuByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareKernelNetworkList')
def GetVirtualizationVmwareKernelNetworkList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareKernelNetworkList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareKernelNetworkByMoid')
def GetVirtualizationVmwareKernelNetworkByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareKernelNetworkByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareNetworkList')
def GetVirtualizationVmwareNetworkList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareNetworkList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareNetworkByMoid')
def GetVirtualizationVmwareNetworkByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareNetworkByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwarePhysicalNetworkInterfaceList')
def GetVirtualizationVmwarePhysicalNetworkInterfaceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwarePhysicalNetworkInterfaceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwarePhysicalNetworkInterfaceByMoid')
def GetVirtualizationVmwarePhysicalNetworkInterfaceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwarePhysicalNetworkInterfaceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareProactiveHaList')
def GetVirtualizationVmwareProactiveHaList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareProactiveHaList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareProactiveHaByMoid')
def GetVirtualizationVmwareProactiveHaByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareProactiveHaByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareUplinkPortList')
def GetVirtualizationVmwareUplinkPortList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareUplinkPortList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareUplinkPortByMoid')
def GetVirtualizationVmwareUplinkPortByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareUplinkPortByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVcenterList')
def GetVirtualizationVmwareVcenterList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareVcenterList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVcenterByMoid')
def GetVirtualizationVmwareVcenterByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareVcenterByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualDiskList')
def GetVirtualizationVmwareVirtualDiskList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareVirtualDiskList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualDiskByMoid')
def GetVirtualizationVmwareVirtualDiskByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareVirtualDiskByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualMachineList')
def GetVirtualizationVmwareVirtualMachineList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareVirtualMachineList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualMachineByMoid')
def GetVirtualizationVmwareVirtualMachineByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareVirtualMachineByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualMachineGpuList')
def GetVirtualizationVmwareVirtualMachineGpuList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareVirtualMachineGpuList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualMachineGpuByMoid')
def GetVirtualizationVmwareVirtualMachineGpuByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareVirtualMachineGpuByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualMachineSnapshotList')
def GetVirtualizationVmwareVirtualMachineSnapshotList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareVirtualMachineSnapshotList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualMachineSnapshotByMoid')
def GetVirtualizationVmwareVirtualMachineSnapshotByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareVirtualMachineSnapshotByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualNetworkInterfaceList')
def GetVirtualizationVmwareVirtualNetworkInterfaceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareVirtualNetworkInterfaceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualNetworkInterfaceByMoid')
def GetVirtualizationVmwareVirtualNetworkInterfaceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareVirtualNetworkInterfaceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualSwitchList')
def GetVirtualizationVmwareVirtualSwitchList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareVirtualSwitchList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualSwitchByMoid')
def GetVirtualizationVmwareVirtualSwitchByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVirtualizationVmwareVirtualSwitchByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVmediaPolicyList')
def GetVmediaPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVmediaPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVmediaPolicyByMoid')
def GetVmediaPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVmediaPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVmediaPolicyInventoryList')
def GetVmediaPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVmediaPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVmediaPolicyInventoryByMoid')
def GetVmediaPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVmediaPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVmrcConsoleList')
def GetVmrcConsoleList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVmrcConsoleList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVmrcConsoleByMoid')
def GetVmrcConsoleByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVmrcConsoleByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthAdapterPolicyList')
def GetVnicEthAdapterPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicEthAdapterPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthAdapterPolicyByMoid')
def GetVnicEthAdapterPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicEthAdapterPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthAdapterPolicyInventoryList')
def GetVnicEthAdapterPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicEthAdapterPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthAdapterPolicyInventoryByMoid')
def GetVnicEthAdapterPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicEthAdapterPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthIfList')
def GetVnicEthIfList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicEthIfList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthIfByMoid')
def GetVnicEthIfByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicEthIfByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthIfInventoryList')
def GetVnicEthIfInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicEthIfInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthIfInventoryByMoid')
def GetVnicEthIfInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicEthIfInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthNetworkPolicyList')
def GetVnicEthNetworkPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicEthNetworkPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthNetworkPolicyByMoid')
def GetVnicEthNetworkPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicEthNetworkPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthNetworkPolicyInventoryList')
def GetVnicEthNetworkPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicEthNetworkPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthNetworkPolicyInventoryByMoid')
def GetVnicEthNetworkPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicEthNetworkPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthQosPolicyList')
def GetVnicEthQosPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicEthQosPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthQosPolicyByMoid')
def GetVnicEthQosPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicEthQosPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthQosPolicyInventoryList')
def GetVnicEthQosPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicEthQosPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthQosPolicyInventoryByMoid')
def GetVnicEthQosPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicEthQosPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthVethInventoryList')
def GetVnicEthVethInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicEthVethInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthVethInventoryByMoid')
def GetVnicEthVethInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicEthVethInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthVnicInventoryList')
def GetVnicEthVnicInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicEthVnicInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthVnicInventoryByMoid')
def GetVnicEthVnicInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicEthVnicInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcAdapterPolicyList')
def GetVnicFcAdapterPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicFcAdapterPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcAdapterPolicyByMoid')
def GetVnicFcAdapterPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicFcAdapterPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcAdapterPolicyInventoryList')
def GetVnicFcAdapterPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicFcAdapterPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcAdapterPolicyInventoryByMoid')
def GetVnicFcAdapterPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicFcAdapterPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcIfList')
def GetVnicFcIfList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicFcIfList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcIfByMoid')
def GetVnicFcIfByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicFcIfByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcIfInventoryList')
def GetVnicFcIfInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicFcIfInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcIfInventoryByMoid')
def GetVnicFcIfInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicFcIfInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcNetworkPolicyList')
def GetVnicFcNetworkPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicFcNetworkPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcNetworkPolicyByMoid')
def GetVnicFcNetworkPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicFcNetworkPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcNetworkPolicyInventoryList')
def GetVnicFcNetworkPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicFcNetworkPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcNetworkPolicyInventoryByMoid')
def GetVnicFcNetworkPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicFcNetworkPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcQosPolicyList')
def GetVnicFcQosPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicFcQosPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcQosPolicyByMoid')
def GetVnicFcQosPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicFcQosPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcQosPolicyInventoryList')
def GetVnicFcQosPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicFcQosPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcQosPolicyInventoryByMoid')
def GetVnicFcQosPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicFcQosPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcVethInventoryList')
def GetVnicFcVethInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicFcVethInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcVethInventoryByMoid')
def GetVnicFcVethInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicFcVethInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcVhbaPolicyInventoryList')
def GetVnicFcVhbaPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicFcVhbaPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcVhbaPolicyInventoryByMoid')
def GetVnicFcVhbaPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicFcVhbaPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiAdapterPolicyList')
def GetVnicIscsiAdapterPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicIscsiAdapterPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiAdapterPolicyByMoid')
def GetVnicIscsiAdapterPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicIscsiAdapterPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiAdapterPolicyInventoryList')
def GetVnicIscsiAdapterPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicIscsiAdapterPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiAdapterPolicyInventoryByMoid')
def GetVnicIscsiAdapterPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicIscsiAdapterPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiBootPolicyList')
def GetVnicIscsiBootPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicIscsiBootPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiBootPolicyByMoid')
def GetVnicIscsiBootPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicIscsiBootPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiBootPolicyInventoryList')
def GetVnicIscsiBootPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicIscsiBootPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiBootPolicyInventoryByMoid')
def GetVnicIscsiBootPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicIscsiBootPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiStaticTargetPolicyList')
def GetVnicIscsiStaticTargetPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicIscsiStaticTargetPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiStaticTargetPolicyByMoid')
def GetVnicIscsiStaticTargetPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicIscsiStaticTargetPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiStaticTargetPolicyInventoryList')
def GetVnicIscsiStaticTargetPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicIscsiStaticTargetPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiStaticTargetPolicyInventoryByMoid')
def GetVnicIscsiStaticTargetPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicIscsiStaticTargetPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicLanConnectivityPolicyList')
def GetVnicLanConnectivityPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicLanConnectivityPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicLanConnectivityPolicyByMoid')
def GetVnicLanConnectivityPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicLanConnectivityPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicLanConnectivityPolicyInventoryList')
def GetVnicLanConnectivityPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicLanConnectivityPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicLanConnectivityPolicyInventoryByMoid')
def GetVnicLanConnectivityPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicLanConnectivityPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicLanSettingsList')
def GetVnicLanSettingsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicLanSettingsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicLanSettingsByMoid')
def GetVnicLanSettingsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicLanSettingsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicLcpStatusList')
def GetVnicLcpStatusList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicLcpStatusList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicLcpStatusByMoid')
def GetVnicLcpStatusByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicLcpStatusByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicSanConnectivityPolicyList')
def GetVnicSanConnectivityPolicyList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicSanConnectivityPolicyList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicSanConnectivityPolicyByMoid')
def GetVnicSanConnectivityPolicyByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicSanConnectivityPolicyByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicSanConnectivityPolicyInventoryList')
def GetVnicSanConnectivityPolicyInventoryList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicSanConnectivityPolicyInventoryList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicSanConnectivityPolicyInventoryByMoid')
def GetVnicSanConnectivityPolicyInventoryByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicSanConnectivityPolicyInventoryByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicSanSettingsList')
def GetVnicSanSettingsList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicSanSettingsList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicSanSettingsByMoid')
def GetVnicSanSettingsByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicSanSettingsByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicScpStatusList')
def GetVnicScpStatusList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicScpStatusList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicScpStatusByMoid')
def GetVnicScpStatusByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicScpStatusByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicVhbaTemplateList')
def GetVnicVhbaTemplateList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicVhbaTemplateList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicVhbaTemplateByMoid')
def GetVnicVhbaTemplateByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicVhbaTemplateByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicVnicTemplateList')
def GetVnicVnicTemplateList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicVnicTemplateList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicVnicTemplateByMoid')
def GetVnicVnicTemplateByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVnicVnicTemplateByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVrfVrfList')
def GetVrfVrfList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVrfVrfList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVrfVrfByMoid')
def GetVrfVrfByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetVrfVrfByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWebhookEndpointList')
def GetWebhookEndpointList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWebhookEndpointList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWebhookEndpointByMoid')
def GetWebhookEndpointByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWebhookEndpointByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWebhookSchemaList')
def GetWebhookSchemaList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWebhookSchemaList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWebhookSchemaByMoid')
def GetWebhookSchemaByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWebhookSchemaByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowAnsibleBatchExecutorList')
def GetWorkflowAnsibleBatchExecutorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowAnsibleBatchExecutorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowAnsibleBatchExecutorByMoid')
def GetWorkflowAnsibleBatchExecutorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowAnsibleBatchExecutorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowBatchApiExecutorList')
def GetWorkflowBatchApiExecutorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowBatchApiExecutorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowBatchApiExecutorByMoid')
def GetWorkflowBatchApiExecutorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowBatchApiExecutorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowCatalogList')
def GetWorkflowCatalogList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowCatalogList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowCatalogByMoid')
def GetWorkflowCatalogByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowCatalogByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowCatalogItemDefinitionList')
def GetWorkflowCatalogItemDefinitionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowCatalogItemDefinitionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowCatalogItemDefinitionByMoid')
def GetWorkflowCatalogItemDefinitionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowCatalogItemDefinitionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowCatalogServiceRequestList')
def GetWorkflowCatalogServiceRequestList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowCatalogServiceRequestList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowCatalogServiceRequestByMoid')
def GetWorkflowCatalogServiceRequestByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowCatalogServiceRequestByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowCustomDataTypeDefinitionList')
def GetWorkflowCustomDataTypeDefinitionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowCustomDataTypeDefinitionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowCustomDataTypeDefinitionByMoid')
def GetWorkflowCustomDataTypeDefinitionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowCustomDataTypeDefinitionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowErrorResponseHandlerList')
def GetWorkflowErrorResponseHandlerList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowErrorResponseHandlerList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowErrorResponseHandlerByMoid')
def GetWorkflowErrorResponseHandlerByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowErrorResponseHandlerByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowPowerShellBatchApiExecutorList')
def GetWorkflowPowerShellBatchApiExecutorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowPowerShellBatchApiExecutorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowPowerShellBatchApiExecutorByMoid')
def GetWorkflowPowerShellBatchApiExecutorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowPowerShellBatchApiExecutorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowRollbackWorkflowList')
def GetWorkflowRollbackWorkflowList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowRollbackWorkflowList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowRollbackWorkflowByMoid')
def GetWorkflowRollbackWorkflowByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowRollbackWorkflowByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemActionDefinitionList')
def GetWorkflowServiceItemActionDefinitionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowServiceItemActionDefinitionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemActionDefinitionByMoid')
def GetWorkflowServiceItemActionDefinitionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowServiceItemActionDefinitionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemActionInstanceList')
def GetWorkflowServiceItemActionInstanceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowServiceItemActionInstanceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemActionInstanceByMoid')
def GetWorkflowServiceItemActionInstanceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowServiceItemActionInstanceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemAttributeList')
def GetWorkflowServiceItemAttributeList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowServiceItemAttributeList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemAttributeByMoid')
def GetWorkflowServiceItemAttributeByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowServiceItemAttributeByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemDefinitionList')
def GetWorkflowServiceItemDefinitionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowServiceItemDefinitionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemDefinitionByMoid')
def GetWorkflowServiceItemDefinitionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowServiceItemDefinitionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemHealthCheckDefinitionList')
def GetWorkflowServiceItemHealthCheckDefinitionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowServiceItemHealthCheckDefinitionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemHealthCheckDefinitionByMoid')
def GetWorkflowServiceItemHealthCheckDefinitionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowServiceItemHealthCheckDefinitionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemHealthCheckExecutionList')
def GetWorkflowServiceItemHealthCheckExecutionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowServiceItemHealthCheckExecutionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemHealthCheckExecutionByMoid')
def GetWorkflowServiceItemHealthCheckExecutionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowServiceItemHealthCheckExecutionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemInstanceList')
def GetWorkflowServiceItemInstanceList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowServiceItemInstanceList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemInstanceByMoid')
def GetWorkflowServiceItemInstanceByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowServiceItemInstanceByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemOutputList')
def GetWorkflowServiceItemOutputList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowServiceItemOutputList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemOutputByMoid')
def GetWorkflowServiceItemOutputByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowServiceItemOutputByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowSshBatchExecutorList')
def GetWorkflowSshBatchExecutorList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowSshBatchExecutorList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowSshBatchExecutorByMoid')
def GetWorkflowSshBatchExecutorByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowSshBatchExecutorByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowTaskDebugLogList')
def GetWorkflowTaskDebugLogList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowTaskDebugLogList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowTaskDebugLogByMoid')
def GetWorkflowTaskDebugLogByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowTaskDebugLogByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowTaskDefinitionList')
def GetWorkflowTaskDefinitionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowTaskDefinitionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowTaskDefinitionByMoid')
def GetWorkflowTaskDefinitionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowTaskDefinitionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowTaskInfoList')
def GetWorkflowTaskInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowTaskInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowTaskInfoByMoid')
def GetWorkflowTaskInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowTaskInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowTaskMetadataList')
def GetWorkflowTaskMetadataList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowTaskMetadataList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowTaskMetadataByMoid')
def GetWorkflowTaskMetadataByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowTaskMetadataByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowTemplateFunctionMetaList')
def GetWorkflowTemplateFunctionMetaList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowTemplateFunctionMetaList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowTemplateFunctionMetaByMoid')
def GetWorkflowTemplateFunctionMetaByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowTemplateFunctionMetaByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowUiDisplayMetadataList')
def GetWorkflowUiDisplayMetadataList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowUiDisplayMetadataList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowUiDisplayMetadataByMoid')
def GetWorkflowUiDisplayMetadataByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowUiDisplayMetadataByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowVariableList')
def GetWorkflowVariableList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowVariableList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowVariableByMoid')
def GetWorkflowVariableByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowVariableByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowWorkflowDefinitionList')
def GetWorkflowWorkflowDefinitionList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowWorkflowDefinitionList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowWorkflowDefinitionByMoid')
def GetWorkflowWorkflowDefinitionByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowWorkflowDefinitionByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowWorkflowInfoList')
def GetWorkflowWorkflowInfoList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowWorkflowInfoList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowWorkflowInfoByMoid')
def GetWorkflowWorkflowInfoByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowWorkflowInfoByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowWorkflowMetadataList')
def GetWorkflowWorkflowMetadataList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowWorkflowMetadataList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowWorkflowMetadataByMoid')
def GetWorkflowWorkflowMetadataByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkflowWorkflowMetadataByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkspaceFolderList')
def GetWorkspaceFolderList():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkspaceFolderList')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkspaceFolderByMoid')
def GetWorkspaceFolderByMoid():
    """Auto‑generated wrapper (org‑ID injection included)."""
    locals_ = locals()
    body_payload = locals_.pop('body', None) if 'body' in locals_ else None
    final_kwargs = {
        orig: locals_[san]
        for orig, san in {}.items()
        if locals_[san] is not None
    }

    # ── auto‑inject INTERSIGHT_ORGANIZATION_MOID ────────────────
    org_moid = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if org_moid:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = org_moid
        for filt in ('filter', '$filter'):
            if filt in [] and filt not in final_kwargs:
                final_kwargs[filt] = f"Organization.Moid eq '{org_moid}'"

    target = IntersightClient().__getattr__('GetWorkspaceFolderByMoid')
    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)
