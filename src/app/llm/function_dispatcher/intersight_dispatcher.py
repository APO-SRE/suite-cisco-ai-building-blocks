# app/llm/function_dispatcher/intersight_dispatcher.py
import os
from typing import Any
from app.llm.function_dispatcher import register
from app.llm.platform_clients.intersight_client import IntersightClient

@register('GetAaaAuditRecordList')
def GetAaaAuditRecordList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAaaAuditRecordList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAaaAuditRecordByMoid')
def GetAaaAuditRecordByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAaaAuditRecordByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAaaRetentionConfigList')
def GetAaaRetentionConfigList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAaaRetentionConfigList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAaaRetentionConfigByMoid')
def GetAaaRetentionConfigByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAaaRetentionConfigByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAaaRetentionPolicyList')
def GetAaaRetentionPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAaaRetentionPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAaaRetentionPolicyByMoid')
def GetAaaRetentionPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAaaRetentionPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAccessIpAddressList')
def GetAccessIpAddressList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAccessIpAddressList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAccessIpAddressByMoid')
def GetAccessIpAddressByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAccessIpAddressByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAccessPolicyList')
def GetAccessPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAccessPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAccessPolicyByMoid')
def GetAccessPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAccessPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAccessPolicyInventoryList')
def GetAccessPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAccessPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAccessPolicyInventoryByMoid')
def GetAccessPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAccessPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterConfigPolicyList')
def GetAdapterConfigPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAdapterConfigPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterConfigPolicyByMoid')
def GetAdapterConfigPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAdapterConfigPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterExtEthInterfaceList')
def GetAdapterExtEthInterfaceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAdapterExtEthInterfaceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterExtEthInterfaceByMoid')
def GetAdapterExtEthInterfaceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAdapterExtEthInterfaceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterHostEthInterfaceList')
def GetAdapterHostEthInterfaceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAdapterHostEthInterfaceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterHostEthInterfaceByMoid')
def GetAdapterHostEthInterfaceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAdapterHostEthInterfaceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterHostFcInterfaceList')
def GetAdapterHostFcInterfaceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAdapterHostFcInterfaceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterHostFcInterfaceByMoid')
def GetAdapterHostFcInterfaceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAdapterHostFcInterfaceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterHostIscsiInterfaceList')
def GetAdapterHostIscsiInterfaceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAdapterHostIscsiInterfaceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterHostIscsiInterfaceByMoid')
def GetAdapterHostIscsiInterfaceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAdapterHostIscsiInterfaceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterUnitList')
def GetAdapterUnitList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAdapterUnitList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterUnitByMoid')
def GetAdapterUnitByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAdapterUnitByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterUnitExpanderList')
def GetAdapterUnitExpanderList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAdapterUnitExpanderList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAdapterUnitExpanderByMoid')
def GetAdapterUnitExpanderByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAdapterUnitExpanderByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicAciPodList')
def GetApicAciPodList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicAciPodList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicAciPodByMoid')
def GetApicAciPodByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicAciPodByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicApplicationList')
def GetApicApplicationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicApplicationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicApplicationByMoid')
def GetApicApplicationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicApplicationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicApplicationEndpointGroupList')
def GetApicApplicationEndpointGroupList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicApplicationEndpointGroupList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicApplicationEndpointGroupByMoid')
def GetApicApplicationEndpointGroupByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicApplicationEndpointGroupByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicBridgeDomainList')
def GetApicBridgeDomainList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicBridgeDomainList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicBridgeDomainByMoid')
def GetApicBridgeDomainByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicBridgeDomainByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicExternalRoutedLayerThreeDomainList')
def GetApicExternalRoutedLayerThreeDomainList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicExternalRoutedLayerThreeDomainList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicExternalRoutedLayerThreeDomainByMoid')
def GetApicExternalRoutedLayerThreeDomainByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicExternalRoutedLayerThreeDomainByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicFabricLeafNodeList')
def GetApicFabricLeafNodeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicFabricLeafNodeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicFabricLeafNodeByMoid')
def GetApicFabricLeafNodeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicFabricLeafNodeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicFabricLeafNodeInterfaceList')
def GetApicFabricLeafNodeInterfaceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicFabricLeafNodeInterfaceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicFabricLeafNodeInterfaceByMoid')
def GetApicFabricLeafNodeInterfaceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicFabricLeafNodeInterfaceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicOutList')
def GetApicOutList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicOutList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicOutByMoid')
def GetApicOutByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicOutByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicSubnetList')
def GetApicSubnetList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicSubnetList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicSubnetByMoid')
def GetApicSubnetByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicSubnetByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicTenantList')
def GetApicTenantList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicTenantList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicTenantByMoid')
def GetApicTenantByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicTenantByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicVpcGroupList')
def GetApicVpcGroupList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicVpcGroupList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicVpcGroupByMoid')
def GetApicVpcGroupByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicVpcGroupByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicVrfsList')
def GetApicVrfsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicVrfsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApicVrfsByMoid')
def GetApicVrfsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApicVrfsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceAppOpStatusList')
def GetApplianceAppOpStatusList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceAppOpStatusList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceAppOpStatusByMoid')
def GetApplianceAppOpStatusByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceAppOpStatusByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceAppStatusList')
def GetApplianceAppStatusList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceAppStatusList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceAppStatusByMoid')
def GetApplianceAppStatusByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceAppStatusByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceAutoRmaPolicyList')
def GetApplianceAutoRmaPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceAutoRmaPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceAutoRmaPolicyByMoid')
def GetApplianceAutoRmaPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceAutoRmaPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceBackupList')
def GetApplianceBackupList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceBackupList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceBackupByMoid')
def GetApplianceBackupByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceBackupByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceBackupMonitorList')
def GetApplianceBackupMonitorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceBackupMonitorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceBackupMonitorByMoid')
def GetApplianceBackupMonitorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceBackupMonitorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceBackupPolicyList')
def GetApplianceBackupPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceBackupPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceBackupPolicyByMoid')
def GetApplianceBackupPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceBackupPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceBackupRotateDataList')
def GetApplianceBackupRotateDataList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceBackupRotateDataList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceBackupRotateDataByMoid')
def GetApplianceBackupRotateDataByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceBackupRotateDataByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceCertificateSettingList')
def GetApplianceCertificateSettingList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceCertificateSettingList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceCertificateSettingByMoid')
def GetApplianceCertificateSettingByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceCertificateSettingByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceClusterInfoList')
def GetApplianceClusterInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceClusterInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceClusterInfoByMoid')
def GetApplianceClusterInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceClusterInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceClusterInstallList')
def GetApplianceClusterInstallList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceClusterInstallList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceClusterInstallByMoid')
def GetApplianceClusterInstallByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceClusterInstallByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceClusterReplaceNodeList')
def GetApplianceClusterReplaceNodeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceClusterReplaceNodeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceClusterReplaceNodeByMoid')
def GetApplianceClusterReplaceNodeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceClusterReplaceNodeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceClusterWorkerNodeList')
def GetApplianceClusterWorkerNodeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceClusterWorkerNodeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceClusterWorkerNodeByMoid')
def GetApplianceClusterWorkerNodeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceClusterWorkerNodeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDataExportPolicyList')
def GetApplianceDataExportPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceDataExportPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDataExportPolicyByMoid')
def GetApplianceDataExportPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceDataExportPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDeviceCertificateList')
def GetApplianceDeviceCertificateList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceDeviceCertificateList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDeviceCertificateByMoid')
def GetApplianceDeviceCertificateByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceDeviceCertificateByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDeviceClaimList')
def GetApplianceDeviceClaimList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceDeviceClaimList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDeviceClaimByMoid')
def GetApplianceDeviceClaimByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceDeviceClaimByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDeviceClusterInstallList')
def GetApplianceDeviceClusterInstallList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceDeviceClusterInstallList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDeviceClusterInstallByMoid')
def GetApplianceDeviceClusterInstallByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceDeviceClusterInstallByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDeviceStateList')
def GetApplianceDeviceStateList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceDeviceStateList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDeviceStateByMoid')
def GetApplianceDeviceStateByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceDeviceStateByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDeviceUpgradePolicyList')
def GetApplianceDeviceUpgradePolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceDeviceUpgradePolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDeviceUpgradePolicyByMoid')
def GetApplianceDeviceUpgradePolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceDeviceUpgradePolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDiagSettingList')
def GetApplianceDiagSettingList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceDiagSettingList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceDiagSettingByMoid')
def GetApplianceDiagSettingByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceDiagSettingByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceExternalSyslogSettingList')
def GetApplianceExternalSyslogSettingList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceExternalSyslogSettingList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceExternalSyslogSettingByMoid')
def GetApplianceExternalSyslogSettingByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceExternalSyslogSettingByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceFileGatewayList')
def GetApplianceFileGatewayList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceFileGatewayList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceFileGatewayByMoid')
def GetApplianceFileGatewayByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceFileGatewayByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceFileSystemOpStatusList')
def GetApplianceFileSystemOpStatusList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceFileSystemOpStatusList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceFileSystemOpStatusByMoid')
def GetApplianceFileSystemOpStatusByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceFileSystemOpStatusByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceFileSystemStatusList')
def GetApplianceFileSystemStatusList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceFileSystemStatusList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceFileSystemStatusByMoid')
def GetApplianceFileSystemStatusByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceFileSystemStatusByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceGroupOpStatusList')
def GetApplianceGroupOpStatusList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceGroupOpStatusList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceGroupOpStatusByMoid')
def GetApplianceGroupOpStatusByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceGroupOpStatusByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceGroupStatusList')
def GetApplianceGroupStatusList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceGroupStatusList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceGroupStatusByMoid')
def GetApplianceGroupStatusByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceGroupStatusByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceImageBundleList')
def GetApplianceImageBundleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceImageBundleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceImageBundleByMoid')
def GetApplianceImageBundleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceImageBundleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceMetaManifestList')
def GetApplianceMetaManifestList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceMetaManifestList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceMetaManifestByMoid')
def GetApplianceMetaManifestByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceMetaManifestByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceMetricsConfigList')
def GetApplianceMetricsConfigList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceMetricsConfigList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceMetricsConfigByMoid')
def GetApplianceMetricsConfigByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceMetricsConfigByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceNetworkLinkStatusList')
def GetApplianceNetworkLinkStatusList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceNetworkLinkStatusList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceNetworkLinkStatusByMoid')
def GetApplianceNetworkLinkStatusByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceNetworkLinkStatusByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceNodeInfoList')
def GetApplianceNodeInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceNodeInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceNodeInfoByMoid')
def GetApplianceNodeInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceNodeInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceNodeOpStatusList')
def GetApplianceNodeOpStatusList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceNodeOpStatusList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceNodeOpStatusByMoid')
def GetApplianceNodeOpStatusByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceNodeOpStatusByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceNodeStatusList')
def GetApplianceNodeStatusList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceNodeStatusList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceNodeStatusByMoid')
def GetApplianceNodeStatusByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceNodeStatusByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceReleaseNoteList')
def GetApplianceReleaseNoteList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceReleaseNoteList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceReleaseNoteByMoid')
def GetApplianceReleaseNoteByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceReleaseNoteByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceRemoteFileImportList')
def GetApplianceRemoteFileImportList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceRemoteFileImportList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceRemoteFileImportByMoid')
def GetApplianceRemoteFileImportByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceRemoteFileImportByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceRestoreList')
def GetApplianceRestoreList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceRestoreList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceRestoreByMoid')
def GetApplianceRestoreByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceRestoreByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceSetupInfoList')
def GetApplianceSetupInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceSetupInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceSetupInfoByMoid')
def GetApplianceSetupInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceSetupInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceSystemInfoList')
def GetApplianceSystemInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceSystemInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceSystemInfoByMoid')
def GetApplianceSystemInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceSystemInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceSystemOpStatusList')
def GetApplianceSystemOpStatusList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceSystemOpStatusList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceSystemOpStatusByMoid')
def GetApplianceSystemOpStatusByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceSystemOpStatusByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceSystemStatusList')
def GetApplianceSystemStatusList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceSystemStatusList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceSystemStatusByMoid')
def GetApplianceSystemStatusByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceSystemStatusByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceUpgradeList')
def GetApplianceUpgradeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceUpgradeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceUpgradeByMoid')
def GetApplianceUpgradeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceUpgradeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceUpgradePolicyList')
def GetApplianceUpgradePolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceUpgradePolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceUpgradePolicyByMoid')
def GetApplianceUpgradePolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceUpgradePolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceUpgradeTrackerList')
def GetApplianceUpgradeTrackerList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceUpgradeTrackerList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetApplianceUpgradeTrackerByMoid')
def GetApplianceUpgradeTrackerByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetApplianceUpgradeTrackerByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetClusterMemberList')
def GetAssetClusterMemberList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAssetClusterMemberList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetClusterMemberByMoid')
def GetAssetClusterMemberByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAssetClusterMemberByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeploymentList')
def GetAssetDeploymentList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAssetDeploymentList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeploymentByMoid')
def GetAssetDeploymentByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAssetDeploymentByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeploymentDeviceList')
def GetAssetDeploymentDeviceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAssetDeploymentDeviceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeploymentDeviceByMoid')
def GetAssetDeploymentDeviceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAssetDeploymentDeviceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeviceConfigurationList')
def GetAssetDeviceConfigurationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAssetDeviceConfigurationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeviceConfigurationByMoid')
def GetAssetDeviceConfigurationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAssetDeviceConfigurationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeviceConnectorManagerList')
def GetAssetDeviceConnectorManagerList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAssetDeviceConnectorManagerList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeviceConnectorManagerByMoid')
def GetAssetDeviceConnectorManagerByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAssetDeviceConnectorManagerByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeviceContractInformationList')
def GetAssetDeviceContractInformationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAssetDeviceContractInformationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeviceContractInformationByMoid')
def GetAssetDeviceContractInformationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAssetDeviceContractInformationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeviceRegistrationList')
def GetAssetDeviceRegistrationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAssetDeviceRegistrationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetDeviceRegistrationByMoid')
def GetAssetDeviceRegistrationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAssetDeviceRegistrationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetSubscriptionList')
def GetAssetSubscriptionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAssetSubscriptionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetSubscriptionByMoid')
def GetAssetSubscriptionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAssetSubscriptionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetSubscriptionAccountList')
def GetAssetSubscriptionAccountList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAssetSubscriptionAccountList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetSubscriptionAccountByMoid')
def GetAssetSubscriptionAccountByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAssetSubscriptionAccountByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetSubscriptionDeviceContractInformationList')
def GetAssetSubscriptionDeviceContractInformationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAssetSubscriptionDeviceContractInformationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetSubscriptionDeviceContractInformationByMoid')
def GetAssetSubscriptionDeviceContractInformationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAssetSubscriptionDeviceContractInformationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetTargetList')
def GetAssetTargetList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAssetTargetList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetAssetTargetByMoid')
def GetAssetTargetByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetAssetTargetByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosBootDeviceList')
def GetBiosBootDeviceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBiosBootDeviceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosBootDeviceByMoid')
def GetBiosBootDeviceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBiosBootDeviceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosBootModeList')
def GetBiosBootModeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBiosBootModeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosBootModeByMoid')
def GetBiosBootModeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBiosBootModeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosPolicyList')
def GetBiosPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBiosPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosPolicyByMoid')
def GetBiosPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBiosPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosSystemBootOrderList')
def GetBiosSystemBootOrderList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBiosSystemBootOrderList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosSystemBootOrderByMoid')
def GetBiosSystemBootOrderByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBiosSystemBootOrderByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosTokenSettingsList')
def GetBiosTokenSettingsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBiosTokenSettingsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosTokenSettingsByMoid')
def GetBiosTokenSettingsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBiosTokenSettingsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosUnitList')
def GetBiosUnitList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBiosUnitList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosUnitByMoid')
def GetBiosUnitByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBiosUnitByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosVfSelectMemoryRasConfigurationList')
def GetBiosVfSelectMemoryRasConfigurationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBiosVfSelectMemoryRasConfigurationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBiosVfSelectMemoryRasConfigurationByMoid')
def GetBiosVfSelectMemoryRasConfigurationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBiosVfSelectMemoryRasConfigurationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootCddDeviceList')
def GetBootCddDeviceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootCddDeviceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootCddDeviceByMoid')
def GetBootCddDeviceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootCddDeviceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootDeviceBootModeList')
def GetBootDeviceBootModeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootDeviceBootModeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootDeviceBootModeByMoid')
def GetBootDeviceBootModeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootDeviceBootModeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootDeviceBootSecurityList')
def GetBootDeviceBootSecurityList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootDeviceBootSecurityList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootDeviceBootSecurityByMoid')
def GetBootDeviceBootSecurityByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootDeviceBootSecurityByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootHddDeviceList')
def GetBootHddDeviceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootHddDeviceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootHddDeviceByMoid')
def GetBootHddDeviceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootHddDeviceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootIscsiDeviceList')
def GetBootIscsiDeviceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootIscsiDeviceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootIscsiDeviceByMoid')
def GetBootIscsiDeviceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootIscsiDeviceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootNvmeDeviceList')
def GetBootNvmeDeviceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootNvmeDeviceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootNvmeDeviceByMoid')
def GetBootNvmeDeviceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootNvmeDeviceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootPchStorageDeviceList')
def GetBootPchStorageDeviceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootPchStorageDeviceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootPchStorageDeviceByMoid')
def GetBootPchStorageDeviceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootPchStorageDeviceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootPrecisionPolicyList')
def GetBootPrecisionPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootPrecisionPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootPrecisionPolicyByMoid')
def GetBootPrecisionPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootPrecisionPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootPxeDeviceList')
def GetBootPxeDeviceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootPxeDeviceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootPxeDeviceByMoid')
def GetBootPxeDeviceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootPxeDeviceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootSanDeviceList')
def GetBootSanDeviceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootSanDeviceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootSanDeviceByMoid')
def GetBootSanDeviceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootSanDeviceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootSdDeviceList')
def GetBootSdDeviceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootSdDeviceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootSdDeviceByMoid')
def GetBootSdDeviceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootSdDeviceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootUefiShellDeviceList')
def GetBootUefiShellDeviceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootUefiShellDeviceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootUefiShellDeviceByMoid')
def GetBootUefiShellDeviceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootUefiShellDeviceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootUsbDeviceList')
def GetBootUsbDeviceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootUsbDeviceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootUsbDeviceByMoid')
def GetBootUsbDeviceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootUsbDeviceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootVmediaDeviceList')
def GetBootVmediaDeviceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootVmediaDeviceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBootVmediaDeviceByMoid')
def GetBootVmediaDeviceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBootVmediaDeviceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkExportList')
def GetBulkExportList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBulkExportList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkExportByMoid')
def GetBulkExportByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBulkExportByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkExportedItemList')
def GetBulkExportedItemList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBulkExportedItemList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkExportedItemByMoid')
def GetBulkExportedItemByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBulkExportedItemByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkMoClonerList')
def GetBulkMoClonerList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBulkMoClonerList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkMoClonerByMoid')
def GetBulkMoClonerByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBulkMoClonerByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkMoDeepClonerList')
def GetBulkMoDeepClonerList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBulkMoDeepClonerList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkMoDeepClonerByMoid')
def GetBulkMoDeepClonerByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBulkMoDeepClonerByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkMoMergerList')
def GetBulkMoMergerList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBulkMoMergerList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkMoMergerByMoid')
def GetBulkMoMergerByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBulkMoMergerByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkRequestList')
def GetBulkRequestList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBulkRequestList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkRequestByMoid')
def GetBulkRequestByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBulkRequestByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkResultList')
def GetBulkResultList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBulkResultList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkResultByMoid')
def GetBulkResultByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBulkResultByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkSubRequestObjList')
def GetBulkSubRequestObjList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBulkSubRequestObjList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetBulkSubRequestObjByMoid')
def GetBulkSubRequestObjByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetBulkSubRequestObjByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityActionsMetaDataList')
def GetCapabilityActionsMetaDataList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityActionsMetaDataList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityActionsMetaDataByMoid')
def GetCapabilityActionsMetaDataByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityActionsMetaDataByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityAdapterDeprecatedDefList')
def GetCapabilityAdapterDeprecatedDefList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityAdapterDeprecatedDefList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityAdapterDeprecatedDefByMoid')
def GetCapabilityAdapterDeprecatedDefByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityAdapterDeprecatedDefByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityAdapterFirmwareRequirementList')
def GetCapabilityAdapterFirmwareRequirementList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityAdapterFirmwareRequirementList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityAdapterFirmwareRequirementByMoid')
def GetCapabilityAdapterFirmwareRequirementByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityAdapterFirmwareRequirementByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityAdapterUnitDescriptorList')
def GetCapabilityAdapterUnitDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityAdapterUnitDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityAdapterUnitDescriptorByMoid')
def GetCapabilityAdapterUnitDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityAdapterUnitDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityAdapterUpdateConstraintMetaList')
def GetCapabilityAdapterUpdateConstraintMetaList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityAdapterUpdateConstraintMetaList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityAdapterUpdateConstraintMetaByMoid')
def GetCapabilityAdapterUpdateConstraintMetaByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityAdapterUpdateConstraintMetaByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityAdapterUpgradeSupportMetaList')
def GetCapabilityAdapterUpgradeSupportMetaList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityAdapterUpgradeSupportMetaList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityAdapterUpgradeSupportMetaByMoid')
def GetCapabilityAdapterUpgradeSupportMetaByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityAdapterUpgradeSupportMetaByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityCatalogList')
def GetCapabilityCatalogList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityCatalogList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityCatalogByMoid')
def GetCapabilityCatalogByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityCatalogByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityChassisDescriptorList')
def GetCapabilityChassisDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityChassisDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityChassisDescriptorByMoid')
def GetCapabilityChassisDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityChassisDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityChassisManufacturingDefList')
def GetCapabilityChassisManufacturingDefList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityChassisManufacturingDefList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityChassisManufacturingDefByMoid')
def GetCapabilityChassisManufacturingDefByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityChassisManufacturingDefByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityChassisUpgradeSupportMetaList')
def GetCapabilityChassisUpgradeSupportMetaList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityChassisUpgradeSupportMetaList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityChassisUpgradeSupportMetaByMoid')
def GetCapabilityChassisUpgradeSupportMetaByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityChassisUpgradeSupportMetaByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityCimcFirmwareDescriptorList')
def GetCapabilityCimcFirmwareDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityCimcFirmwareDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityCimcFirmwareDescriptorByMoid')
def GetCapabilityCimcFirmwareDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityCimcFirmwareDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityCpuEndpointDescriptorList')
def GetCapabilityCpuEndpointDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityCpuEndpointDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityCpuEndpointDescriptorByMoid')
def GetCapabilityCpuEndpointDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityCpuEndpointDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityDimmsEndpointDescriptorList')
def GetCapabilityDimmsEndpointDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityDimmsEndpointDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityDimmsEndpointDescriptorByMoid')
def GetCapabilityDimmsEndpointDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityDimmsEndpointDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityDomainPolicyRequirementList')
def GetCapabilityDomainPolicyRequirementList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityDomainPolicyRequirementList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityDomainPolicyRequirementByMoid')
def GetCapabilityDomainPolicyRequirementByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityDomainPolicyRequirementByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityDrivesEndpointDescriptorList')
def GetCapabilityDrivesEndpointDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityDrivesEndpointDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityDrivesEndpointDescriptorByMoid')
def GetCapabilityDrivesEndpointDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityDrivesEndpointDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityEquipmentPhysicalDefList')
def GetCapabilityEquipmentPhysicalDefList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityEquipmentPhysicalDefList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityEquipmentPhysicalDefByMoid')
def GetCapabilityEquipmentPhysicalDefByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityEquipmentPhysicalDefByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityEquipmentSlotArrayList')
def GetCapabilityEquipmentSlotArrayList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityEquipmentSlotArrayList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityEquipmentSlotArrayByMoid')
def GetCapabilityEquipmentSlotArrayByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityEquipmentSlotArrayByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFanModuleDescriptorList')
def GetCapabilityFanModuleDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityFanModuleDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFanModuleDescriptorByMoid')
def GetCapabilityFanModuleDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityFanModuleDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFanModuleManufacturingDefList')
def GetCapabilityFanModuleManufacturingDefList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityFanModuleManufacturingDefList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFanModuleManufacturingDefByMoid')
def GetCapabilityFanModuleManufacturingDefByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityFanModuleManufacturingDefByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFexCapabilityDefList')
def GetCapabilityFexCapabilityDefList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityFexCapabilityDefList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFexCapabilityDefByMoid')
def GetCapabilityFexCapabilityDefByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityFexCapabilityDefByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFexDescriptorList')
def GetCapabilityFexDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityFexDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFexDescriptorByMoid')
def GetCapabilityFexDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityFexDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFexManufacturingDefList')
def GetCapabilityFexManufacturingDefList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityFexManufacturingDefList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFexManufacturingDefByMoid')
def GetCapabilityFexManufacturingDefByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityFexManufacturingDefByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFexSupportMetaList')
def GetCapabilityFexSupportMetaList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityFexSupportMetaList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityFexSupportMetaByMoid')
def GetCapabilityFexSupportMetaByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityFexSupportMetaByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityGpuEndpointDescriptorList')
def GetCapabilityGpuEndpointDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityGpuEndpointDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityGpuEndpointDescriptorByMoid')
def GetCapabilityGpuEndpointDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityGpuEndpointDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityHsuIsoFileSupportMetaList')
def GetCapabilityHsuIsoFileSupportMetaList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityHsuIsoFileSupportMetaList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityHsuIsoFileSupportMetaByMoid')
def GetCapabilityHsuIsoFileSupportMetaByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityHsuIsoFileSupportMetaByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityIoCardCapabilityDefList')
def GetCapabilityIoCardCapabilityDefList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityIoCardCapabilityDefList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityIoCardCapabilityDefByMoid')
def GetCapabilityIoCardCapabilityDefByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityIoCardCapabilityDefByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityIoCardDescriptorList')
def GetCapabilityIoCardDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityIoCardDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityIoCardDescriptorByMoid')
def GetCapabilityIoCardDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityIoCardDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityIoCardManufacturingDefList')
def GetCapabilityIoCardManufacturingDefList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityIoCardManufacturingDefList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityIoCardManufacturingDefByMoid')
def GetCapabilityIoCardManufacturingDefByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityIoCardManufacturingDefByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityIomUpgradeSupportMetaList')
def GetCapabilityIomUpgradeSupportMetaList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityIomUpgradeSupportMetaList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityIomUpgradeSupportMetaByMoid')
def GetCapabilityIomUpgradeSupportMetaByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityIomUpgradeSupportMetaByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityPortGroupAggregationDefList')
def GetCapabilityPortGroupAggregationDefList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityPortGroupAggregationDefList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityPortGroupAggregationDefByMoid')
def GetCapabilityPortGroupAggregationDefByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityPortGroupAggregationDefByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityProcessorUnitUpdateConstraintMetaList')
def GetCapabilityProcessorUnitUpdateConstraintMetaList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityProcessorUnitUpdateConstraintMetaList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityProcessorUnitUpdateConstraintMetaByMoid')
def GetCapabilityProcessorUnitUpdateConstraintMetaByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityProcessorUnitUpdateConstraintMetaByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityPsuDescriptorList')
def GetCapabilityPsuDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityPsuDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityPsuDescriptorByMoid')
def GetCapabilityPsuDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityPsuDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityPsuManufacturingDefList')
def GetCapabilityPsuManufacturingDefList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityPsuManufacturingDefList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityPsuManufacturingDefByMoid')
def GetCapabilityPsuManufacturingDefByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityPsuManufacturingDefByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityServerActionsMetaList')
def GetCapabilityServerActionsMetaList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityServerActionsMetaList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityServerActionsMetaByMoid')
def GetCapabilityServerActionsMetaByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityServerActionsMetaByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityServerDescriptorList')
def GetCapabilityServerDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityServerDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityServerDescriptorByMoid')
def GetCapabilityServerDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityServerDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityServerModelsCapabilityDefList')
def GetCapabilityServerModelsCapabilityDefList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityServerModelsCapabilityDefList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityServerModelsCapabilityDefByMoid')
def GetCapabilityServerModelsCapabilityDefByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityServerModelsCapabilityDefByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityServerSchemaDescriptorList')
def GetCapabilityServerSchemaDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityServerSchemaDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityServerSchemaDescriptorByMoid')
def GetCapabilityServerSchemaDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityServerSchemaDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityServerUpgradeSupportMetaList')
def GetCapabilityServerUpgradeSupportMetaList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityServerUpgradeSupportMetaList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityServerUpgradeSupportMetaByMoid')
def GetCapabilityServerUpgradeSupportMetaByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityServerUpgradeSupportMetaByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySiocModuleCapabilityDefList')
def GetCapabilitySiocModuleCapabilityDefList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilitySiocModuleCapabilityDefList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySiocModuleCapabilityDefByMoid')
def GetCapabilitySiocModuleCapabilityDefByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilitySiocModuleCapabilityDefByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySiocModuleDescriptorList')
def GetCapabilitySiocModuleDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilitySiocModuleDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySiocModuleDescriptorByMoid')
def GetCapabilitySiocModuleDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilitySiocModuleDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySiocModuleManufacturingDefList')
def GetCapabilitySiocModuleManufacturingDefList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilitySiocModuleManufacturingDefList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySiocModuleManufacturingDefByMoid')
def GetCapabilitySiocModuleManufacturingDefByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilitySiocModuleManufacturingDefByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityStorageControllerUpdateConstraintMetaList')
def GetCapabilityStorageControllerUpdateConstraintMetaList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityStorageControllerUpdateConstraintMetaList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityStorageControllerUpdateConstraintMetaByMoid')
def GetCapabilityStorageControllerUpdateConstraintMetaByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityStorageControllerUpdateConstraintMetaByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityStorageControllersMetaDataList')
def GetCapabilityStorageControllersMetaDataList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityStorageControllersMetaDataList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityStorageControllersMetaDataByMoid')
def GetCapabilityStorageControllersMetaDataByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityStorageControllersMetaDataByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySwitchCapabilityList')
def GetCapabilitySwitchCapabilityList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilitySwitchCapabilityList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySwitchCapabilityByMoid')
def GetCapabilitySwitchCapabilityByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilitySwitchCapabilityByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySwitchDescriptorList')
def GetCapabilitySwitchDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilitySwitchDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySwitchDescriptorByMoid')
def GetCapabilitySwitchDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilitySwitchDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySwitchEquipmentInfoList')
def GetCapabilitySwitchEquipmentInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilitySwitchEquipmentInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySwitchEquipmentInfoByMoid')
def GetCapabilitySwitchEquipmentInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilitySwitchEquipmentInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySwitchManufacturingDefList')
def GetCapabilitySwitchManufacturingDefList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilitySwitchManufacturingDefList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilitySwitchManufacturingDefByMoid')
def GetCapabilitySwitchManufacturingDefByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilitySwitchManufacturingDefByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityTemplateCatalogList')
def GetCapabilityTemplateCatalogList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityTemplateCatalogList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityTemplateCatalogByMoid')
def GetCapabilityTemplateCatalogByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityTemplateCatalogByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityUpdateOrderMetaList')
def GetCapabilityUpdateOrderMetaList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityUpdateOrderMetaList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityUpdateOrderMetaByMoid')
def GetCapabilityUpdateOrderMetaByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityUpdateOrderMetaByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityVicDescriptorList')
def GetCapabilityVicDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityVicDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCapabilityVicDescriptorByMoid')
def GetCapabilityVicDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCapabilityVicDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCatalystsdwanConfigGroupList')
def GetCatalystsdwanConfigGroupList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCatalystsdwanConfigGroupList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCatalystsdwanConfigGroupByMoid')
def GetCatalystsdwanConfigGroupByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCatalystsdwanConfigGroupByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCatalystsdwanPolicyGroupList')
def GetCatalystsdwanPolicyGroupList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCatalystsdwanPolicyGroupList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCatalystsdwanPolicyGroupByMoid')
def GetCatalystsdwanPolicyGroupByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCatalystsdwanPolicyGroupByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCatalystsdwanVedgeDeviceList')
def GetCatalystsdwanVedgeDeviceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCatalystsdwanVedgeDeviceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCatalystsdwanVedgeDeviceByMoid')
def GetCatalystsdwanVedgeDeviceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCatalystsdwanVedgeDeviceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCertificatemanagementPolicyList')
def GetCertificatemanagementPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCertificatemanagementPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCertificatemanagementPolicyByMoid')
def GetCertificatemanagementPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCertificatemanagementPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCertificatemanagementPolicyInventoryList')
def GetCertificatemanagementPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCertificatemanagementPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCertificatemanagementPolicyInventoryByMoid')
def GetCertificatemanagementPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCertificatemanagementPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChangelogItemList')
def GetChangelogItemList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetChangelogItemList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChangelogItemByMoid')
def GetChangelogItemByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetChangelogItemByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisConfigChangeDetailList')
def GetChassisConfigChangeDetailList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetChassisConfigChangeDetailList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisConfigChangeDetailByMoid')
def GetChassisConfigChangeDetailByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetChassisConfigChangeDetailByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisConfigImportList')
def GetChassisConfigImportList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetChassisConfigImportList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisConfigImportByMoid')
def GetChassisConfigImportByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetChassisConfigImportByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisConfigResultList')
def GetChassisConfigResultList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetChassisConfigResultList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisConfigResultByMoid')
def GetChassisConfigResultByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetChassisConfigResultByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisConfigResultEntryList')
def GetChassisConfigResultEntryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetChassisConfigResultEntryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisConfigResultEntryByMoid')
def GetChassisConfigResultEntryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetChassisConfigResultEntryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisIomProfileList')
def GetChassisIomProfileList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetChassisIomProfileList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisIomProfileByMoid')
def GetChassisIomProfileByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetChassisIomProfileByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisProfileList')
def GetChassisProfileList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetChassisProfileList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisProfileByMoid')
def GetChassisProfileByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetChassisProfileByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisProfileTemplateList')
def GetChassisProfileTemplateList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetChassisProfileTemplateList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetChassisProfileTemplateByMoid')
def GetChassisProfileTemplateByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetChassisProfileTemplateByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCloudTfcAgentpoolList')
def GetCloudTfcAgentpoolList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCloudTfcAgentpoolList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCloudTfcAgentpoolByMoid')
def GetCloudTfcAgentpoolByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCloudTfcAgentpoolByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCloudTfcOrganizationList')
def GetCloudTfcOrganizationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCloudTfcOrganizationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCloudTfcOrganizationByMoid')
def GetCloudTfcOrganizationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCloudTfcOrganizationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCloudTfcWorkspaceList')
def GetCloudTfcWorkspaceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCloudTfcWorkspaceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCloudTfcWorkspaceByMoid')
def GetCloudTfcWorkspaceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCloudTfcWorkspaceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCommHttpProxyPolicyList')
def GetCommHttpProxyPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCommHttpProxyPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCommHttpProxyPolicyByMoid')
def GetCommHttpProxyPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCommHttpProxyPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeBladeList')
def GetComputeBladeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeBladeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeBladeByMoid')
def GetComputeBladeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeBladeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeBladeIdentityList')
def GetComputeBladeIdentityList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeBladeIdentityList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeBladeIdentityByMoid')
def GetComputeBladeIdentityByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeBladeIdentityByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeBoardList')
def GetComputeBoardList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeBoardList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeBoardByMoid')
def GetComputeBoardByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeBoardByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeDownloadStatusList')
def GetComputeDownloadStatusList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeDownloadStatusList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeDownloadStatusByMoid')
def GetComputeDownloadStatusByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeDownloadStatusByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeHostUtilityOperationList')
def GetComputeHostUtilityOperationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeHostUtilityOperationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeHostUtilityOperationByMoid')
def GetComputeHostUtilityOperationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeHostUtilityOperationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeMappingList')
def GetComputeMappingList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeMappingList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeMappingByMoid')
def GetComputeMappingByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeMappingByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputePersonalityList')
def GetComputePersonalityList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputePersonalityList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputePersonalityByMoid')
def GetComputePersonalityByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputePersonalityByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputePhysicalSummaryList')
def GetComputePhysicalSummaryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputePhysicalSummaryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputePhysicalSummaryByMoid')
def GetComputePhysicalSummaryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputePhysicalSummaryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeRackUnitList')
def GetComputeRackUnitList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeRackUnitList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeRackUnitByMoid')
def GetComputeRackUnitByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeRackUnitByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeRackUnitIdentityList')
def GetComputeRackUnitIdentityList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeRackUnitIdentityList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeRackUnitIdentityByMoid')
def GetComputeRackUnitIdentityByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeRackUnitIdentityByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeScrubPolicyList')
def GetComputeScrubPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeScrubPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeScrubPolicyByMoid')
def GetComputeScrubPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeScrubPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeServerIdPoolList')
def GetComputeServerIdPoolList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeServerIdPoolList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeServerIdPoolByMoid')
def GetComputeServerIdPoolByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeServerIdPoolByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeServerPowerPolicyList')
def GetComputeServerPowerPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeServerPowerPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeServerPowerPolicyByMoid')
def GetComputeServerPowerPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeServerPowerPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeServerSettingList')
def GetComputeServerSettingList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeServerSettingList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeServerSettingByMoid')
def GetComputeServerSettingByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeServerSettingByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeVmediaList')
def GetComputeVmediaList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeVmediaList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetComputeVmediaByMoid')
def GetComputeVmediaByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetComputeVmediaByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondAlarmList')
def GetCondAlarmList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCondAlarmList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondAlarmByMoid')
def GetCondAlarmByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCondAlarmByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondAlarmAggregationList')
def GetCondAlarmAggregationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCondAlarmAggregationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondAlarmAggregationByMoid')
def GetCondAlarmAggregationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCondAlarmAggregationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondAlarmClassificationList')
def GetCondAlarmClassificationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCondAlarmClassificationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondAlarmClassificationByMoid')
def GetCondAlarmClassificationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCondAlarmClassificationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondAlarmDefinitionList')
def GetCondAlarmDefinitionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCondAlarmDefinitionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondAlarmDefinitionByMoid')
def GetCondAlarmDefinitionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCondAlarmDefinitionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondAlarmSuppressionList')
def GetCondAlarmSuppressionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCondAlarmSuppressionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondAlarmSuppressionByMoid')
def GetCondAlarmSuppressionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCondAlarmSuppressionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondHclStatusList')
def GetCondHclStatusList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCondHclStatusList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondHclStatusByMoid')
def GetCondHclStatusByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCondHclStatusByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondHclStatusDetailList')
def GetCondHclStatusDetailList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCondHclStatusDetailList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondHclStatusDetailByMoid')
def GetCondHclStatusDetailByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCondHclStatusDetailByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondHclStatusJobList')
def GetCondHclStatusJobList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCondHclStatusJobList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCondHclStatusJobByMoid')
def GetCondHclStatusJobByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCondHclStatusJobByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConnectorpackConnectorPackUpgradeList')
def GetConnectorpackConnectorPackUpgradeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetConnectorpackConnectorPackUpgradeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConnectorpackConnectorPackUpgradeByMoid')
def GetConnectorpackConnectorPackUpgradeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetConnectorpackConnectorPackUpgradeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConnectorpackUpgradeImpactList')
def GetConnectorpackUpgradeImpactList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetConnectorpackUpgradeImpactList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConnectorpackUpgradeImpactByMoid')
def GetConnectorpackUpgradeImpactByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetConnectorpackUpgradeImpactByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConsoleConsoleConfigList')
def GetConsoleConsoleConfigList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetConsoleConsoleConfigList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConsoleConsoleConfigByMoid')
def GetConsoleConsoleConfigByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetConsoleConsoleConfigByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraAdapterComplianceDetailsList')
def GetConvergedinfraAdapterComplianceDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetConvergedinfraAdapterComplianceDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraAdapterComplianceDetailsByMoid')
def GetConvergedinfraAdapterComplianceDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetConvergedinfraAdapterComplianceDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraPodList')
def GetConvergedinfraPodList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetConvergedinfraPodList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraPodByMoid')
def GetConvergedinfraPodByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetConvergedinfraPodByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraPodComplianceInfoList')
def GetConvergedinfraPodComplianceInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetConvergedinfraPodComplianceInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraPodComplianceInfoByMoid')
def GetConvergedinfraPodComplianceInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetConvergedinfraPodComplianceInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraServerComplianceDetailsList')
def GetConvergedinfraServerComplianceDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetConvergedinfraServerComplianceDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraServerComplianceDetailsByMoid')
def GetConvergedinfraServerComplianceDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetConvergedinfraServerComplianceDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraStorageComplianceDetailsList')
def GetConvergedinfraStorageComplianceDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetConvergedinfraStorageComplianceDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraStorageComplianceDetailsByMoid')
def GetConvergedinfraStorageComplianceDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetConvergedinfraStorageComplianceDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraSwitchComplianceDetailsList')
def GetConvergedinfraSwitchComplianceDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetConvergedinfraSwitchComplianceDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetConvergedinfraSwitchComplianceDetailsByMoid')
def GetConvergedinfraSwitchComplianceDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetConvergedinfraSwitchComplianceDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCrdCustomResourceList')
def GetCrdCustomResourceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCrdCustomResourceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetCrdCustomResourceByMoid')
def GetCrdCustomResourceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetCrdCustomResourceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDeviceconnectorPolicyList')
def GetDeviceconnectorPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetDeviceconnectorPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDeviceconnectorPolicyByMoid')
def GetDeviceconnectorPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetDeviceconnectorPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacDeviceList')
def GetDnacDeviceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetDnacDeviceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacDeviceByMoid')
def GetDnacDeviceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetDnacDeviceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacDeviceInterfaceList')
def GetDnacDeviceInterfaceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetDnacDeviceInterfaceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacDeviceInterfaceByMoid')
def GetDnacDeviceInterfaceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetDnacDeviceInterfaceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacExternalBorderNodeList')
def GetDnacExternalBorderNodeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetDnacExternalBorderNodeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacExternalBorderNodeByMoid')
def GetDnacExternalBorderNodeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetDnacExternalBorderNodeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacExternalBorderNodeInterfaceList')
def GetDnacExternalBorderNodeInterfaceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetDnacExternalBorderNodeInterfaceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacExternalBorderNodeInterfaceByMoid')
def GetDnacExternalBorderNodeInterfaceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetDnacExternalBorderNodeInterfaceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacFabricSiteList')
def GetDnacFabricSiteList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetDnacFabricSiteList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacFabricSiteByMoid')
def GetDnacFabricSiteByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetDnacFabricSiteByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacSiteList')
def GetDnacSiteList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetDnacSiteList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacSiteByMoid')
def GetDnacSiteByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetDnacSiteByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacSiteIpPoolList')
def GetDnacSiteIpPoolList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetDnacSiteIpPoolList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacSiteIpPoolByMoid')
def GetDnacSiteIpPoolByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetDnacSiteIpPoolByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacTemplateList')
def GetDnacTemplateList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetDnacTemplateList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacTemplateByMoid')
def GetDnacTemplateByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetDnacTemplateByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacTransitList')
def GetDnacTransitList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetDnacTransitList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacTransitByMoid')
def GetDnacTransitByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetDnacTransitByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacVirtualNetworkFabricSiteList')
def GetDnacVirtualNetworkFabricSiteList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetDnacVirtualNetworkFabricSiteList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetDnacVirtualNetworkFabricSiteByMoid')
def GetDnacVirtualNetworkFabricSiteByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetDnacVirtualNetworkFabricSiteByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentChassisList')
def GetEquipmentChassisList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentChassisList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentChassisByMoid')
def GetEquipmentChassisByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentChassisByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentChassisIdPoolList')
def GetEquipmentChassisIdPoolList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentChassisIdPoolList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentChassisIdPoolByMoid')
def GetEquipmentChassisIdPoolByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentChassisIdPoolByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentChassisIdentityList')
def GetEquipmentChassisIdentityList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentChassisIdentityList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentChassisIdentityByMoid')
def GetEquipmentChassisIdentityByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentChassisIdentityByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentChassisOperationList')
def GetEquipmentChassisOperationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentChassisOperationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentChassisOperationByMoid')
def GetEquipmentChassisOperationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentChassisOperationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentDeviceSummaryList')
def GetEquipmentDeviceSummaryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentDeviceSummaryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentDeviceSummaryByMoid')
def GetEquipmentDeviceSummaryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentDeviceSummaryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentEnclosureElementList')
def GetEquipmentEnclosureElementList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentEnclosureElementList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentEnclosureElementByMoid')
def GetEquipmentEnclosureElementByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentEnclosureElementByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentEndPointLogList')
def GetEquipmentEndPointLogList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentEndPointLogList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentEndPointLogByMoid')
def GetEquipmentEndPointLogByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentEndPointLogByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentExpanderModuleList')
def GetEquipmentExpanderModuleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentExpanderModuleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentExpanderModuleByMoid')
def GetEquipmentExpanderModuleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentExpanderModuleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFanList')
def GetEquipmentFanList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentFanList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFanByMoid')
def GetEquipmentFanByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentFanByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFanControlList')
def GetEquipmentFanControlList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentFanControlList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFanControlByMoid')
def GetEquipmentFanControlByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentFanControlByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFanModuleList')
def GetEquipmentFanModuleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentFanModuleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFanModuleByMoid')
def GetEquipmentFanModuleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentFanModuleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFexList')
def GetEquipmentFexList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentFexList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFexByMoid')
def GetEquipmentFexByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentFexByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFexIdentityList')
def GetEquipmentFexIdentityList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentFexIdentityList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFexIdentityByMoid')
def GetEquipmentFexIdentityByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentFexIdentityByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFexOperationList')
def GetEquipmentFexOperationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentFexOperationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFexOperationByMoid')
def GetEquipmentFexOperationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentFexOperationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFruList')
def GetEquipmentFruList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentFruList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentFruByMoid')
def GetEquipmentFruByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentFruByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentHybridDriveSlotList')
def GetEquipmentHybridDriveSlotList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentHybridDriveSlotList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentHybridDriveSlotByMoid')
def GetEquipmentHybridDriveSlotByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentHybridDriveSlotByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentIoCardList')
def GetEquipmentIoCardList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentIoCardList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentIoCardByMoid')
def GetEquipmentIoCardByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentIoCardByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentIoCardOperationList')
def GetEquipmentIoCardOperationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentIoCardOperationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentIoCardOperationByMoid')
def GetEquipmentIoCardOperationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentIoCardOperationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentIoExpanderList')
def GetEquipmentIoExpanderList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentIoExpanderList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentIoExpanderByMoid')
def GetEquipmentIoExpanderByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentIoExpanderByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentLocatorLedList')
def GetEquipmentLocatorLedList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentLocatorLedList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentLocatorLedByMoid')
def GetEquipmentLocatorLedByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentLocatorLedByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentLogDownloadList')
def GetEquipmentLogDownloadList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentLogDownloadList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentLogDownloadByMoid')
def GetEquipmentLogDownloadByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentLogDownloadByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentPsuList')
def GetEquipmentPsuList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentPsuList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentPsuByMoid')
def GetEquipmentPsuByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentPsuByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentPsuControlList')
def GetEquipmentPsuControlList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentPsuControlList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentPsuControlByMoid')
def GetEquipmentPsuControlByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentPsuControlByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentRackEnclosureList')
def GetEquipmentRackEnclosureList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentRackEnclosureList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentRackEnclosureByMoid')
def GetEquipmentRackEnclosureByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentRackEnclosureByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentRackEnclosureSlotList')
def GetEquipmentRackEnclosureSlotList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentRackEnclosureSlotList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentRackEnclosureSlotByMoid')
def GetEquipmentRackEnclosureSlotByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentRackEnclosureSlotByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentSensorList')
def GetEquipmentSensorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentSensorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentSensorByMoid')
def GetEquipmentSensorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentSensorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentSharedIoModuleList')
def GetEquipmentSharedIoModuleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentSharedIoModuleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentSharedIoModuleByMoid')
def GetEquipmentSharedIoModuleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentSharedIoModuleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentSwitchCardList')
def GetEquipmentSwitchCardList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentSwitchCardList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentSwitchCardByMoid')
def GetEquipmentSwitchCardByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentSwitchCardByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentSwitchOperationList')
def GetEquipmentSwitchOperationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentSwitchOperationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentSwitchOperationByMoid')
def GetEquipmentSwitchOperationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentSwitchOperationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentSystemIoControllerList')
def GetEquipmentSystemIoControllerList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentSystemIoControllerList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentSystemIoControllerByMoid')
def GetEquipmentSystemIoControllerByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentSystemIoControllerByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentTpmList')
def GetEquipmentTpmList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentTpmList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentTpmByMoid')
def GetEquipmentTpmByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentTpmByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentTransceiverList')
def GetEquipmentTransceiverList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentTransceiverList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEquipmentTransceiverByMoid')
def GetEquipmentTransceiverByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEquipmentTransceiverByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEtherHostPortList')
def GetEtherHostPortList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEtherHostPortList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEtherHostPortByMoid')
def GetEtherHostPortByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEtherHostPortByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEtherNetworkPortList')
def GetEtherNetworkPortList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEtherNetworkPortList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEtherNetworkPortByMoid')
def GetEtherNetworkPortByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEtherNetworkPortByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEtherPhysicalPortList')
def GetEtherPhysicalPortList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEtherPhysicalPortList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEtherPhysicalPortByMoid')
def GetEtherPhysicalPortByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEtherPhysicalPortByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEtherPortChannelList')
def GetEtherPortChannelList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEtherPortChannelList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetEtherPortChannelByMoid')
def GetEtherPortChannelByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetEtherPortChannelByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetExternalsiteAuthorizationList')
def GetExternalsiteAuthorizationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetExternalsiteAuthorizationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetExternalsiteAuthorizationByMoid')
def GetExternalsiteAuthorizationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetExternalsiteAuthorizationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricAppliancePcRoleList')
def GetFabricAppliancePcRoleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricAppliancePcRoleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricAppliancePcRoleByMoid')
def GetFabricAppliancePcRoleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricAppliancePcRoleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricApplianceRoleList')
def GetFabricApplianceRoleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricApplianceRoleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricApplianceRoleByMoid')
def GetFabricApplianceRoleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricApplianceRoleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricConfigChangeDetailList')
def GetFabricConfigChangeDetailList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricConfigChangeDetailList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricConfigChangeDetailByMoid')
def GetFabricConfigChangeDetailByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricConfigChangeDetailByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricConfigResultList')
def GetFabricConfigResultList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricConfigResultList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricConfigResultByMoid')
def GetFabricConfigResultByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricConfigResultByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricConfigResultEntryList')
def GetFabricConfigResultEntryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricConfigResultEntryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricConfigResultEntryByMoid')
def GetFabricConfigResultEntryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricConfigResultEntryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricElementIdentityList')
def GetFabricElementIdentityList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricElementIdentityList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricElementIdentityByMoid')
def GetFabricElementIdentityByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricElementIdentityByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricEthNetworkControlPolicyList')
def GetFabricEthNetworkControlPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricEthNetworkControlPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricEthNetworkControlPolicyByMoid')
def GetFabricEthNetworkControlPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricEthNetworkControlPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricEthNetworkControlPolicyInventoryList')
def GetFabricEthNetworkControlPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricEthNetworkControlPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricEthNetworkControlPolicyInventoryByMoid')
def GetFabricEthNetworkControlPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricEthNetworkControlPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricEthNetworkGroupPolicyList')
def GetFabricEthNetworkGroupPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricEthNetworkGroupPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricEthNetworkGroupPolicyByMoid')
def GetFabricEthNetworkGroupPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricEthNetworkGroupPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricEthNetworkGroupPolicyInventoryList')
def GetFabricEthNetworkGroupPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricEthNetworkGroupPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricEthNetworkGroupPolicyInventoryByMoid')
def GetFabricEthNetworkGroupPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricEthNetworkGroupPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricEthNetworkPolicyList')
def GetFabricEthNetworkPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricEthNetworkPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricEthNetworkPolicyByMoid')
def GetFabricEthNetworkPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricEthNetworkPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcNetworkPolicyList')
def GetFabricFcNetworkPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricFcNetworkPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcNetworkPolicyByMoid')
def GetFabricFcNetworkPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricFcNetworkPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcStorageRoleList')
def GetFabricFcStorageRoleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricFcStorageRoleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcStorageRoleByMoid')
def GetFabricFcStorageRoleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricFcStorageRoleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcUplinkPcRoleList')
def GetFabricFcUplinkPcRoleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricFcUplinkPcRoleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcUplinkPcRoleByMoid')
def GetFabricFcUplinkPcRoleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricFcUplinkPcRoleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcUplinkRoleList')
def GetFabricFcUplinkRoleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricFcUplinkRoleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcUplinkRoleByMoid')
def GetFabricFcUplinkRoleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricFcUplinkRoleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcZonePolicyList')
def GetFabricFcZonePolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricFcZonePolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcZonePolicyByMoid')
def GetFabricFcZonePolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricFcZonePolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcoeUplinkPcRoleList')
def GetFabricFcoeUplinkPcRoleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricFcoeUplinkPcRoleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcoeUplinkPcRoleByMoid')
def GetFabricFcoeUplinkPcRoleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricFcoeUplinkPcRoleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcoeUplinkRoleList')
def GetFabricFcoeUplinkRoleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricFcoeUplinkRoleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFcoeUplinkRoleByMoid')
def GetFabricFcoeUplinkRoleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricFcoeUplinkRoleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFlowControlPolicyList')
def GetFabricFlowControlPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricFlowControlPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricFlowControlPolicyByMoid')
def GetFabricFlowControlPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricFlowControlPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricLanPinGroupList')
def GetFabricLanPinGroupList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricLanPinGroupList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricLanPinGroupByMoid')
def GetFabricLanPinGroupByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricLanPinGroupByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricLinkAggregationPolicyList')
def GetFabricLinkAggregationPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricLinkAggregationPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricLinkAggregationPolicyByMoid')
def GetFabricLinkAggregationPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricLinkAggregationPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricLinkControlPolicyList')
def GetFabricLinkControlPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricLinkControlPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricLinkControlPolicyByMoid')
def GetFabricLinkControlPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricLinkControlPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricMacSecPolicyList')
def GetFabricMacSecPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricMacSecPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricMacSecPolicyByMoid')
def GetFabricMacSecPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricMacSecPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricMulticastPolicyList')
def GetFabricMulticastPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricMulticastPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricMulticastPolicyByMoid')
def GetFabricMulticastPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricMulticastPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricPcMemberList')
def GetFabricPcMemberList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricPcMemberList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricPcMemberByMoid')
def GetFabricPcMemberByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricPcMemberByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricPcOperationList')
def GetFabricPcOperationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricPcOperationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricPcOperationByMoid')
def GetFabricPcOperationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricPcOperationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricPortModeList')
def GetFabricPortModeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricPortModeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricPortModeByMoid')
def GetFabricPortModeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricPortModeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricPortOperationList')
def GetFabricPortOperationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricPortOperationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricPortOperationByMoid')
def GetFabricPortOperationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricPortOperationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricPortPolicyList')
def GetFabricPortPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricPortPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricPortPolicyByMoid')
def GetFabricPortPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricPortPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSanPinGroupList')
def GetFabricSanPinGroupList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSanPinGroupList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSanPinGroupByMoid')
def GetFabricSanPinGroupByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSanPinGroupByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricServerRoleList')
def GetFabricServerRoleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricServerRoleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricServerRoleByMoid')
def GetFabricServerRoleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricServerRoleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanDestEthPortList')
def GetFabricSpanDestEthPortList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSpanDestEthPortList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanDestEthPortByMoid')
def GetFabricSpanDestEthPortByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSpanDestEthPortByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanSessionList')
def GetFabricSpanSessionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSpanSessionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanSessionByMoid')
def GetFabricSpanSessionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSpanSessionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanSourceEthPortList')
def GetFabricSpanSourceEthPortList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSpanSourceEthPortList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanSourceEthPortByMoid')
def GetFabricSpanSourceEthPortByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSpanSourceEthPortByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanSourceEthPortChannelList')
def GetFabricSpanSourceEthPortChannelList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSpanSourceEthPortChannelList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanSourceEthPortChannelByMoid')
def GetFabricSpanSourceEthPortChannelByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSpanSourceEthPortChannelByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanSourceVlanList')
def GetFabricSpanSourceVlanList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSpanSourceVlanList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanSourceVlanByMoid')
def GetFabricSpanSourceVlanByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSpanSourceVlanByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanSourceVnicEthIfList')
def GetFabricSpanSourceVnicEthIfList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSpanSourceVnicEthIfList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSpanSourceVnicEthIfByMoid')
def GetFabricSpanSourceVnicEthIfByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSpanSourceVnicEthIfByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSwitchClusterProfileList')
def GetFabricSwitchClusterProfileList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSwitchClusterProfileList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSwitchClusterProfileByMoid')
def GetFabricSwitchClusterProfileByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSwitchClusterProfileByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSwitchClusterProfileTemplateList')
def GetFabricSwitchClusterProfileTemplateList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSwitchClusterProfileTemplateList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSwitchClusterProfileTemplateByMoid')
def GetFabricSwitchClusterProfileTemplateByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSwitchClusterProfileTemplateByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSwitchControlPolicyList')
def GetFabricSwitchControlPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSwitchControlPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSwitchControlPolicyByMoid')
def GetFabricSwitchControlPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSwitchControlPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSwitchProfileList')
def GetFabricSwitchProfileList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSwitchProfileList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSwitchProfileByMoid')
def GetFabricSwitchProfileByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSwitchProfileByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSwitchProfileTemplateList')
def GetFabricSwitchProfileTemplateList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSwitchProfileTemplateList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSwitchProfileTemplateByMoid')
def GetFabricSwitchProfileTemplateByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSwitchProfileTemplateByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSystemQosPolicyList')
def GetFabricSystemQosPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSystemQosPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricSystemQosPolicyByMoid')
def GetFabricSystemQosPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricSystemQosPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricUplinkPcRoleList')
def GetFabricUplinkPcRoleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricUplinkPcRoleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricUplinkPcRoleByMoid')
def GetFabricUplinkPcRoleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricUplinkPcRoleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricUplinkRoleList')
def GetFabricUplinkRoleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricUplinkRoleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricUplinkRoleByMoid')
def GetFabricUplinkRoleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricUplinkRoleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricVlanList')
def GetFabricVlanList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricVlanList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricVlanByMoid')
def GetFabricVlanByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricVlanByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricVlanInventoryList')
def GetFabricVlanInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricVlanInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricVlanInventoryByMoid')
def GetFabricVlanInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricVlanInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricVlanSetList')
def GetFabricVlanSetList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricVlanSetList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricVlanSetByMoid')
def GetFabricVlanSetByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricVlanSetByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricVsanList')
def GetFabricVsanList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricVsanList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricVsanByMoid')
def GetFabricVsanByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricVsanByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricVsanInventoryList')
def GetFabricVsanInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricVsanInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFabricVsanInventoryByMoid')
def GetFabricVsanInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFabricVsanInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFaultInstanceList')
def GetFaultInstanceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFaultInstanceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFaultInstanceByMoid')
def GetFaultInstanceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFaultInstanceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcNeighborList')
def GetFcNeighborList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFcNeighborList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcNeighborByMoid')
def GetFcNeighborByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFcNeighborByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcPhysicalPortList')
def GetFcPhysicalPortList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFcPhysicalPortList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcPhysicalPortByMoid')
def GetFcPhysicalPortByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFcPhysicalPortByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcPortChannelList')
def GetFcPortChannelList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFcPortChannelList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcPortChannelByMoid')
def GetFcPortChannelByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFcPortChannelByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolFcBlockList')
def GetFcpoolFcBlockList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFcpoolFcBlockList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolFcBlockByMoid')
def GetFcpoolFcBlockByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFcpoolFcBlockByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolLeaseList')
def GetFcpoolLeaseList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFcpoolLeaseList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolLeaseByMoid')
def GetFcpoolLeaseByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFcpoolLeaseByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolPoolList')
def GetFcpoolPoolList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFcpoolPoolList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolPoolByMoid')
def GetFcpoolPoolByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFcpoolPoolByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolPoolMemberList')
def GetFcpoolPoolMemberList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFcpoolPoolMemberList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolPoolMemberByMoid')
def GetFcpoolPoolMemberByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFcpoolPoolMemberByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolReservationList')
def GetFcpoolReservationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFcpoolReservationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolReservationByMoid')
def GetFcpoolReservationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFcpoolReservationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolUniverseList')
def GetFcpoolUniverseList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFcpoolUniverseList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFcpoolUniverseByMoid')
def GetFcpoolUniverseByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFcpoolUniverseByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareBiosDescriptorList')
def GetFirmwareBiosDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareBiosDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareBiosDescriptorByMoid')
def GetFirmwareBiosDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareBiosDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareBoardControllerDescriptorList')
def GetFirmwareBoardControllerDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareBoardControllerDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareBoardControllerDescriptorByMoid')
def GetFirmwareBoardControllerDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareBoardControllerDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareChassisUpgradeList')
def GetFirmwareChassisUpgradeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareChassisUpgradeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareChassisUpgradeByMoid')
def GetFirmwareChassisUpgradeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareChassisUpgradeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareCimcDescriptorList')
def GetFirmwareCimcDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareCimcDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareCimcDescriptorByMoid')
def GetFirmwareCimcDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareCimcDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareDimmDescriptorList')
def GetFirmwareDimmDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareDimmDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareDimmDescriptorByMoid')
def GetFirmwareDimmDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareDimmDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareDistributableList')
def GetFirmwareDistributableList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareDistributableList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareDistributableByMoid')
def GetFirmwareDistributableByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareDistributableByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareDistributableMetaList')
def GetFirmwareDistributableMetaList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareDistributableMetaList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareDistributableMetaByMoid')
def GetFirmwareDistributableMetaByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareDistributableMetaByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareDriveDescriptorList')
def GetFirmwareDriveDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareDriveDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareDriveDescriptorByMoid')
def GetFirmwareDriveDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareDriveDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareDriverDistributableList')
def GetFirmwareDriverDistributableList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareDriverDistributableList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareDriverDistributableByMoid')
def GetFirmwareDriverDistributableByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareDriverDistributableByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareEulaList')
def GetFirmwareEulaList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareEulaList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareEulaByMoid')
def GetFirmwareEulaByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareEulaByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareFirmwareSummaryList')
def GetFirmwareFirmwareSummaryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareFirmwareSummaryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareFirmwareSummaryByMoid')
def GetFirmwareFirmwareSummaryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareFirmwareSummaryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareGpuDescriptorList')
def GetFirmwareGpuDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareGpuDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareGpuDescriptorByMoid')
def GetFirmwareGpuDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareGpuDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareHbaDescriptorList')
def GetFirmwareHbaDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareHbaDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareHbaDescriptorByMoid')
def GetFirmwareHbaDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareHbaDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareIomDescriptorList')
def GetFirmwareIomDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareIomDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareIomDescriptorByMoid')
def GetFirmwareIomDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareIomDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareMswitchDescriptorList')
def GetFirmwareMswitchDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareMswitchDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareMswitchDescriptorByMoid')
def GetFirmwareMswitchDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareMswitchDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareNxosDescriptorList')
def GetFirmwareNxosDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareNxosDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareNxosDescriptorByMoid')
def GetFirmwareNxosDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareNxosDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwarePcieDescriptorList')
def GetFirmwarePcieDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwarePcieDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwarePcieDescriptorByMoid')
def GetFirmwarePcieDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwarePcieDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwarePolicyList')
def GetFirmwarePolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwarePolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwarePolicyByMoid')
def GetFirmwarePolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwarePolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwarePsuDescriptorList')
def GetFirmwarePsuDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwarePsuDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwarePsuDescriptorByMoid')
def GetFirmwarePsuDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwarePsuDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareRunningFirmwareList')
def GetFirmwareRunningFirmwareList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareRunningFirmwareList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareRunningFirmwareByMoid')
def GetFirmwareRunningFirmwareByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareRunningFirmwareByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareSasExpanderDescriptorList')
def GetFirmwareSasExpanderDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareSasExpanderDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareSasExpanderDescriptorByMoid')
def GetFirmwareSasExpanderDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareSasExpanderDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareServerConfigurationUtilityDistributableList')
def GetFirmwareServerConfigurationUtilityDistributableList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareServerConfigurationUtilityDistributableList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareServerConfigurationUtilityDistributableByMoid')
def GetFirmwareServerConfigurationUtilityDistributableByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareServerConfigurationUtilityDistributableByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareStorageControllerDescriptorList')
def GetFirmwareStorageControllerDescriptorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareStorageControllerDescriptorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareStorageControllerDescriptorByMoid')
def GetFirmwareStorageControllerDescriptorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareStorageControllerDescriptorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareSwitchUpgradeList')
def GetFirmwareSwitchUpgradeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareSwitchUpgradeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareSwitchUpgradeByMoid')
def GetFirmwareSwitchUpgradeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareSwitchUpgradeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareUnsupportedVersionUpgradeList')
def GetFirmwareUnsupportedVersionUpgradeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareUnsupportedVersionUpgradeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareUnsupportedVersionUpgradeByMoid')
def GetFirmwareUnsupportedVersionUpgradeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareUnsupportedVersionUpgradeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareUpgradeList')
def GetFirmwareUpgradeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareUpgradeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareUpgradeByMoid')
def GetFirmwareUpgradeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareUpgradeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareUpgradeImpactStatusList')
def GetFirmwareUpgradeImpactStatusList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareUpgradeImpactStatusList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareUpgradeImpactStatusByMoid')
def GetFirmwareUpgradeImpactStatusByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareUpgradeImpactStatusByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareUpgradeStatusList')
def GetFirmwareUpgradeStatusList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareUpgradeStatusList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFirmwareUpgradeStatusByMoid')
def GetFirmwareUpgradeStatusByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFirmwareUpgradeStatusByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFmcDeviceList')
def GetFmcDeviceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFmcDeviceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFmcDeviceByMoid')
def GetFmcDeviceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFmcDeviceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFmcDeviceHaPairList')
def GetFmcDeviceHaPairList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFmcDeviceHaPairList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFmcDeviceHaPairByMoid')
def GetFmcDeviceHaPairByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFmcDeviceHaPairByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFmcDomainList')
def GetFmcDomainList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFmcDomainList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFmcDomainByMoid')
def GetFmcDomainByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFmcDomainByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFmcPhysicalInterfaceList')
def GetFmcPhysicalInterfaceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFmcPhysicalInterfaceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFmcPhysicalInterfaceByMoid')
def GetFmcPhysicalInterfaceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFmcPhysicalInterfaceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetForecastCatalogList')
def GetForecastCatalogList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetForecastCatalogList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetForecastCatalogByMoid')
def GetForecastCatalogByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetForecastCatalogByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetForecastDefinitionList')
def GetForecastDefinitionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetForecastDefinitionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetForecastDefinitionByMoid')
def GetForecastDefinitionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetForecastDefinitionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetForecastInstanceList')
def GetForecastInstanceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetForecastInstanceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetForecastInstanceByMoid')
def GetForecastInstanceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetForecastInstanceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFunctionsFunctionList')
def GetFunctionsFunctionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFunctionsFunctionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFunctionsFunctionByMoid')
def GetFunctionsFunctionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFunctionsFunctionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFunctionsFunctionVersionList')
def GetFunctionsFunctionVersionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFunctionsFunctionVersionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFunctionsFunctionVersionByMoid')
def GetFunctionsFunctionVersionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFunctionsFunctionVersionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFunctionsRuntimeList')
def GetFunctionsRuntimeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFunctionsRuntimeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFunctionsRuntimeByMoid')
def GetFunctionsRuntimeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFunctionsRuntimeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFunctionsUploadList')
def GetFunctionsUploadList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFunctionsUploadList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetFunctionsUploadByMoid')
def GetFunctionsUploadByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetFunctionsUploadByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetGraphicsCardList')
def GetGraphicsCardList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetGraphicsCardList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetGraphicsCardByMoid')
def GetGraphicsCardByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetGraphicsCardByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetGraphicsControllerList')
def GetGraphicsControllerList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetGraphicsControllerList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetGraphicsControllerByMoid')
def GetGraphicsControllerByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetGraphicsControllerByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciAlarmList')
def GetHciAlarmList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHciAlarmList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciAlarmByMoid')
def GetHciAlarmByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHciAlarmByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciClusterList')
def GetHciClusterList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHciClusterList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciClusterByMoid')
def GetHciClusterByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHciClusterByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciComplianceList')
def GetHciComplianceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHciComplianceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciComplianceByMoid')
def GetHciComplianceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHciComplianceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciDiskList')
def GetHciDiskList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHciDiskList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciDiskByMoid')
def GetHciDiskByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHciDiskByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciDomainManagerList')
def GetHciDomainManagerList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHciDomainManagerList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciDomainManagerByMoid')
def GetHciDomainManagerByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHciDomainManagerByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciEntitlementList')
def GetHciEntitlementList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHciEntitlementList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciEntitlementByMoid')
def GetHciEntitlementByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHciEntitlementByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciGpuList')
def GetHciGpuList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHciGpuList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciGpuByMoid')
def GetHciGpuByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHciGpuByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciLicenseList')
def GetHciLicenseList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHciLicenseList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciLicenseByMoid')
def GetHciLicenseByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHciLicenseByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciNodeList')
def GetHciNodeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHciNodeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciNodeByMoid')
def GetHciNodeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHciNodeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciViolationList')
def GetHciViolationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHciViolationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHciViolationByMoid')
def GetHciViolationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHciViolationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclDriverImageList')
def GetHclDriverImageList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHclDriverImageList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclDriverImageByMoid')
def GetHclDriverImageByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHclDriverImageByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclExemptedCatalogList')
def GetHclExemptedCatalogList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHclExemptedCatalogList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclExemptedCatalogByMoid')
def GetHclExemptedCatalogByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHclExemptedCatalogByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclHwCatalogInfoList')
def GetHclHwCatalogInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHclHwCatalogInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclHwCatalogInfoByMoid')
def GetHclHwCatalogInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHclHwCatalogInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclHyperflexSoftwareCompatibilityInfoList')
def GetHclHyperflexSoftwareCompatibilityInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHclHyperflexSoftwareCompatibilityInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclHyperflexSoftwareCompatibilityInfoByMoid')
def GetHclHyperflexSoftwareCompatibilityInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHclHyperflexSoftwareCompatibilityInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclOperatingSystemList')
def GetHclOperatingSystemList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHclOperatingSystemList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclOperatingSystemByMoid')
def GetHclOperatingSystemByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHclOperatingSystemByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclOperatingSystemVendorList')
def GetHclOperatingSystemVendorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHclOperatingSystemVendorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclOperatingSystemVendorByMoid')
def GetHclOperatingSystemVendorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHclOperatingSystemVendorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclServerHwCatalogInfoList')
def GetHclServerHwCatalogInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHclServerHwCatalogInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHclServerHwCatalogInfoByMoid')
def GetHclServerHwCatalogInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHclServerHwCatalogInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexAlarmList')
def GetHyperflexAlarmList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexAlarmList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexAlarmByMoid')
def GetHyperflexAlarmByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexAlarmByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexAppCatalogList')
def GetHyperflexAppCatalogList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexAppCatalogList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexAppCatalogByMoid')
def GetHyperflexAppCatalogByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexAppCatalogByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexAutoSupportPolicyList')
def GetHyperflexAutoSupportPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexAutoSupportPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexAutoSupportPolicyByMoid')
def GetHyperflexAutoSupportPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexAutoSupportPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexBackupClusterList')
def GetHyperflexBackupClusterList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexBackupClusterList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexBackupClusterByMoid')
def GetHyperflexBackupClusterByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexBackupClusterByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexCapabilityInfoList')
def GetHyperflexCapabilityInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexCapabilityInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexCapabilityInfoByMoid')
def GetHyperflexCapabilityInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexCapabilityInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterList')
def GetHyperflexClusterList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexClusterList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterByMoid')
def GetHyperflexClusterByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexClusterByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterBackupPolicyList')
def GetHyperflexClusterBackupPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexClusterBackupPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterBackupPolicyByMoid')
def GetHyperflexClusterBackupPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexClusterBackupPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterBackupPolicyDeploymentList')
def GetHyperflexClusterBackupPolicyDeploymentList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexClusterBackupPolicyDeploymentList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterBackupPolicyDeploymentByMoid')
def GetHyperflexClusterBackupPolicyDeploymentByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexClusterBackupPolicyDeploymentByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterBackupPolicyInventoryList')
def GetHyperflexClusterBackupPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexClusterBackupPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterBackupPolicyInventoryByMoid')
def GetHyperflexClusterBackupPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexClusterBackupPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterHealthCheckExecutionSnapshotList')
def GetHyperflexClusterHealthCheckExecutionSnapshotList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexClusterHealthCheckExecutionSnapshotList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterHealthCheckExecutionSnapshotByMoid')
def GetHyperflexClusterHealthCheckExecutionSnapshotByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexClusterHealthCheckExecutionSnapshotByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterNetworkPolicyList')
def GetHyperflexClusterNetworkPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexClusterNetworkPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterNetworkPolicyByMoid')
def GetHyperflexClusterNetworkPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexClusterNetworkPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterProfileList')
def GetHyperflexClusterProfileList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexClusterProfileList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterProfileByMoid')
def GetHyperflexClusterProfileByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexClusterProfileByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterReplicationNetworkPolicyList')
def GetHyperflexClusterReplicationNetworkPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexClusterReplicationNetworkPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterReplicationNetworkPolicyByMoid')
def GetHyperflexClusterReplicationNetworkPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexClusterReplicationNetworkPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterReplicationNetworkPolicyDeploymentList')
def GetHyperflexClusterReplicationNetworkPolicyDeploymentList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexClusterReplicationNetworkPolicyDeploymentList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterReplicationNetworkPolicyDeploymentByMoid')
def GetHyperflexClusterReplicationNetworkPolicyDeploymentByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexClusterReplicationNetworkPolicyDeploymentByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterStoragePolicyList')
def GetHyperflexClusterStoragePolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexClusterStoragePolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexClusterStoragePolicyByMoid')
def GetHyperflexClusterStoragePolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexClusterStoragePolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexConfigResultList')
def GetHyperflexConfigResultList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexConfigResultList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexConfigResultByMoid')
def GetHyperflexConfigResultByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexConfigResultByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexConfigResultEntryList')
def GetHyperflexConfigResultEntryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexConfigResultEntryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexConfigResultEntryByMoid')
def GetHyperflexConfigResultEntryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexConfigResultEntryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexDataProtectionPeerList')
def GetHyperflexDataProtectionPeerList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexDataProtectionPeerList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexDataProtectionPeerByMoid')
def GetHyperflexDataProtectionPeerByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexDataProtectionPeerByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexDatastoreStatisticList')
def GetHyperflexDatastoreStatisticList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexDatastoreStatisticList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexDatastoreStatisticByMoid')
def GetHyperflexDatastoreStatisticByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexDatastoreStatisticByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexDevicePackageDownloadStateList')
def GetHyperflexDevicePackageDownloadStateList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexDevicePackageDownloadStateList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexDevicePackageDownloadStateByMoid')
def GetHyperflexDevicePackageDownloadStateByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexDevicePackageDownloadStateByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexDriveList')
def GetHyperflexDriveList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexDriveList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexDriveByMoid')
def GetHyperflexDriveByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexDriveByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexEncryptionList')
def GetHyperflexEncryptionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexEncryptionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexEncryptionByMoid')
def GetHyperflexEncryptionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexEncryptionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexExtFcStoragePolicyList')
def GetHyperflexExtFcStoragePolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexExtFcStoragePolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexExtFcStoragePolicyByMoid')
def GetHyperflexExtFcStoragePolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexExtFcStoragePolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexExtIscsiStoragePolicyList')
def GetHyperflexExtIscsiStoragePolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexExtIscsiStoragePolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexExtIscsiStoragePolicyByMoid')
def GetHyperflexExtIscsiStoragePolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexExtIscsiStoragePolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexFeatureLimitExternalList')
def GetHyperflexFeatureLimitExternalList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexFeatureLimitExternalList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexFeatureLimitExternalByMoid')
def GetHyperflexFeatureLimitExternalByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexFeatureLimitExternalByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexFeatureLimitInternalList')
def GetHyperflexFeatureLimitInternalList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexFeatureLimitInternalList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexFeatureLimitInternalByMoid')
def GetHyperflexFeatureLimitInternalByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexFeatureLimitInternalByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthList')
def GetHyperflexHealthList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexHealthList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthByMoid')
def GetHyperflexHealthByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexHealthByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthCheckDefinitionList')
def GetHyperflexHealthCheckDefinitionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexHealthCheckDefinitionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthCheckDefinitionByMoid')
def GetHyperflexHealthCheckDefinitionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexHealthCheckDefinitionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthCheckExecutionList')
def GetHyperflexHealthCheckExecutionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexHealthCheckExecutionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthCheckExecutionByMoid')
def GetHyperflexHealthCheckExecutionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexHealthCheckExecutionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthCheckExecutionSnapshotList')
def GetHyperflexHealthCheckExecutionSnapshotList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexHealthCheckExecutionSnapshotList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthCheckExecutionSnapshotByMoid')
def GetHyperflexHealthCheckExecutionSnapshotByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexHealthCheckExecutionSnapshotByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthCheckPackageChecksumList')
def GetHyperflexHealthCheckPackageChecksumList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexHealthCheckPackageChecksumList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthCheckPackageChecksumByMoid')
def GetHyperflexHealthCheckPackageChecksumByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexHealthCheckPackageChecksumByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthCheckSchedulePolicyList')
def GetHyperflexHealthCheckSchedulePolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexHealthCheckSchedulePolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHealthCheckSchedulePolicyByMoid')
def GetHyperflexHealthCheckSchedulePolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexHealthCheckSchedulePolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHwCatalogList')
def GetHyperflexHwCatalogList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexHwCatalogList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHwCatalogByMoid')
def GetHyperflexHwCatalogByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexHwCatalogByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHxdpVersionList')
def GetHyperflexHxdpVersionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexHxdpVersionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHxdpVersionByMoid')
def GetHyperflexHxdpVersionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexHxdpVersionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHypervisorHostList')
def GetHyperflexHypervisorHostList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexHypervisorHostList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHypervisorHostByMoid')
def GetHyperflexHypervisorHostByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexHypervisorHostByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHypervisorVirtualMachineList')
def GetHyperflexHypervisorVirtualMachineList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexHypervisorVirtualMachineList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexHypervisorVirtualMachineByMoid')
def GetHyperflexHypervisorVirtualMachineByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexHypervisorVirtualMachineByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexInitiatorGroupList')
def GetHyperflexInitiatorGroupList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexInitiatorGroupList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexInitiatorGroupByMoid')
def GetHyperflexInitiatorGroupByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexInitiatorGroupByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexIscsiNetworkList')
def GetHyperflexIscsiNetworkList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexIscsiNetworkList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexIscsiNetworkByMoid')
def GetHyperflexIscsiNetworkByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexIscsiNetworkByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexKeyEncryptionKeyList')
def GetHyperflexKeyEncryptionKeyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexKeyEncryptionKeyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexKeyEncryptionKeyByMoid')
def GetHyperflexKeyEncryptionKeyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexKeyEncryptionKeyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexLicenseList')
def GetHyperflexLicenseList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexLicenseList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexLicenseByMoid')
def GetHyperflexLicenseByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexLicenseByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexLocalCredentialPolicyList')
def GetHyperflexLocalCredentialPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexLocalCredentialPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexLocalCredentialPolicyByMoid')
def GetHyperflexLocalCredentialPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexLocalCredentialPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexLunList')
def GetHyperflexLunList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexLunList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexLunByMoid')
def GetHyperflexLunByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexLunByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexNodeList')
def GetHyperflexNodeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexNodeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexNodeByMoid')
def GetHyperflexNodeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexNodeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexNodeConfigPolicyList')
def GetHyperflexNodeConfigPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexNodeConfigPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexNodeConfigPolicyByMoid')
def GetHyperflexNodeConfigPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexNodeConfigPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexNodeProfileList')
def GetHyperflexNodeProfileList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexNodeProfileList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexNodeProfileByMoid')
def GetHyperflexNodeProfileByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexNodeProfileByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexProtectedClusterList')
def GetHyperflexProtectedClusterList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexProtectedClusterList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexProtectedClusterByMoid')
def GetHyperflexProtectedClusterByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexProtectedClusterByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexProxySettingPolicyList')
def GetHyperflexProxySettingPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexProxySettingPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexProxySettingPolicyByMoid')
def GetHyperflexProxySettingPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexProxySettingPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexReduceReSyncList')
def GetHyperflexReduceReSyncList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexReduceReSyncList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexReduceReSyncByMoid')
def GetHyperflexReduceReSyncByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexReduceReSyncByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexServerFirmwareVersionList')
def GetHyperflexServerFirmwareVersionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexServerFirmwareVersionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexServerFirmwareVersionByMoid')
def GetHyperflexServerFirmwareVersionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexServerFirmwareVersionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexServerFirmwareVersionEntryList')
def GetHyperflexServerFirmwareVersionEntryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexServerFirmwareVersionEntryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexServerFirmwareVersionEntryByMoid')
def GetHyperflexServerFirmwareVersionEntryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexServerFirmwareVersionEntryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexServerModelList')
def GetHyperflexServerModelList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexServerModelList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexServerModelByMoid')
def GetHyperflexServerModelByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexServerModelByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexServiceAuthTokenList')
def GetHyperflexServiceAuthTokenList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexServiceAuthTokenList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexServiceAuthTokenByMoid')
def GetHyperflexServiceAuthTokenByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexServiceAuthTokenByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexSoftwareDistributionComponentList')
def GetHyperflexSoftwareDistributionComponentList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexSoftwareDistributionComponentList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexSoftwareDistributionComponentByMoid')
def GetHyperflexSoftwareDistributionComponentByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexSoftwareDistributionComponentByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexSoftwareDistributionEntryList')
def GetHyperflexSoftwareDistributionEntryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexSoftwareDistributionEntryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexSoftwareDistributionEntryByMoid')
def GetHyperflexSoftwareDistributionEntryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexSoftwareDistributionEntryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexSoftwareDistributionVersionList')
def GetHyperflexSoftwareDistributionVersionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexSoftwareDistributionVersionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexSoftwareDistributionVersionByMoid')
def GetHyperflexSoftwareDistributionVersionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexSoftwareDistributionVersionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexSoftwareVersionPolicyList')
def GetHyperflexSoftwareVersionPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexSoftwareVersionPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexSoftwareVersionPolicyByMoid')
def GetHyperflexSoftwareVersionPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexSoftwareVersionPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexStartReduceReSyncList')
def GetHyperflexStartReduceReSyncList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexStartReduceReSyncList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexStartReduceReSyncByMoid')
def GetHyperflexStartReduceReSyncByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexStartReduceReSyncByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexStorageContainerList')
def GetHyperflexStorageContainerList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexStorageContainerList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexStorageContainerByMoid')
def GetHyperflexStorageContainerByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexStorageContainerByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexSysConfigPolicyList')
def GetHyperflexSysConfigPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexSysConfigPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexSysConfigPolicyByMoid')
def GetHyperflexSysConfigPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexSysConfigPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexTargetList')
def GetHyperflexTargetList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexTargetList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexTargetByMoid')
def GetHyperflexTargetByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexTargetByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexUcsmConfigPolicyList')
def GetHyperflexUcsmConfigPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexUcsmConfigPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexUcsmConfigPolicyByMoid')
def GetHyperflexUcsmConfigPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexUcsmConfigPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVcenterConfigPolicyList')
def GetHyperflexVcenterConfigPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexVcenterConfigPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVcenterConfigPolicyByMoid')
def GetHyperflexVcenterConfigPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexVcenterConfigPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVmBackupInfoList')
def GetHyperflexVmBackupInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexVmBackupInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVmBackupInfoByMoid')
def GetHyperflexVmBackupInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexVmBackupInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVmImportOperationList')
def GetHyperflexVmImportOperationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexVmImportOperationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVmImportOperationByMoid')
def GetHyperflexVmImportOperationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexVmImportOperationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVmRestoreOperationList')
def GetHyperflexVmRestoreOperationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexVmRestoreOperationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVmRestoreOperationByMoid')
def GetHyperflexVmRestoreOperationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexVmRestoreOperationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVmSnapshotInfoList')
def GetHyperflexVmSnapshotInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexVmSnapshotInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVmSnapshotInfoByMoid')
def GetHyperflexVmSnapshotInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexVmSnapshotInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVolumeList')
def GetHyperflexVolumeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexVolumeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexVolumeByMoid')
def GetHyperflexVolumeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexVolumeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexWitnessConfigurationList')
def GetHyperflexWitnessConfigurationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexWitnessConfigurationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetHyperflexWitnessConfigurationByMoid')
def GetHyperflexWitnessConfigurationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetHyperflexWitnessConfigurationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasConnectorPackList')
def GetIaasConnectorPackList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIaasConnectorPackList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasConnectorPackByMoid')
def GetIaasConnectorPackByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIaasConnectorPackByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasCustomTaskInfoList')
def GetIaasCustomTaskInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIaasCustomTaskInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasCustomTaskInfoByMoid')
def GetIaasCustomTaskInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIaasCustomTaskInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasDeviceStatusList')
def GetIaasDeviceStatusList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIaasDeviceStatusList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasDeviceStatusByMoid')
def GetIaasDeviceStatusByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIaasDeviceStatusByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasDiagnosticMessagesList')
def GetIaasDiagnosticMessagesList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIaasDiagnosticMessagesList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasDiagnosticMessagesByMoid')
def GetIaasDiagnosticMessagesByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIaasDiagnosticMessagesByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasLicenseInfoList')
def GetIaasLicenseInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIaasLicenseInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasLicenseInfoByMoid')
def GetIaasLicenseInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIaasLicenseInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasMostRunTasksList')
def GetIaasMostRunTasksList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIaasMostRunTasksList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasMostRunTasksByMoid')
def GetIaasMostRunTasksByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIaasMostRunTasksByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasServiceRequestList')
def GetIaasServiceRequestList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIaasServiceRequestList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasServiceRequestByMoid')
def GetIaasServiceRequestByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIaasServiceRequestByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasSystemTaskInfoList')
def GetIaasSystemTaskInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIaasSystemTaskInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasSystemTaskInfoByMoid')
def GetIaasSystemTaskInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIaasSystemTaskInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasUcsdInfoList')
def GetIaasUcsdInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIaasUcsdInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasUcsdInfoByMoid')
def GetIaasUcsdInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIaasUcsdInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasUcsdManagedInfraList')
def GetIaasUcsdManagedInfraList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIaasUcsdManagedInfraList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasUcsdManagedInfraByMoid')
def GetIaasUcsdManagedInfraByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIaasUcsdManagedInfraByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasUcsdMessagesList')
def GetIaasUcsdMessagesList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIaasUcsdMessagesList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIaasUcsdMessagesByMoid')
def GetIaasUcsdMessagesByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIaasUcsdMessagesByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamAccountList')
def GetIamAccountList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamAccountList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamAccountByMoid')
def GetIamAccountByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamAccountByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamAccountExperienceList')
def GetIamAccountExperienceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamAccountExperienceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamAccountExperienceByMoid')
def GetIamAccountExperienceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamAccountExperienceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamApiKeyList')
def GetIamApiKeyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamApiKeyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamApiKeyByMoid')
def GetIamApiKeyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamApiKeyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamAppRegistrationList')
def GetIamAppRegistrationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamAppRegistrationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamAppRegistrationByMoid')
def GetIamAppRegistrationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamAppRegistrationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamBannerMessageList')
def GetIamBannerMessageList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamBannerMessageList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamBannerMessageByMoid')
def GetIamBannerMessageByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamBannerMessageByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamCertificateList')
def GetIamCertificateList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamCertificateList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamCertificateByMoid')
def GetIamCertificateByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamCertificateByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamCertificateRequestList')
def GetIamCertificateRequestList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamCertificateRequestList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamCertificateRequestByMoid')
def GetIamCertificateRequestByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamCertificateRequestByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamDomainGroupList')
def GetIamDomainGroupList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamDomainGroupList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamDomainGroupByMoid')
def GetIamDomainGroupByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamDomainGroupByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamDomainNameInfoList')
def GetIamDomainNameInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamDomainNameInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamDomainNameInfoByMoid')
def GetIamDomainNameInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamDomainNameInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointPrivilegeList')
def GetIamEndPointPrivilegeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamEndPointPrivilegeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointPrivilegeByMoid')
def GetIamEndPointPrivilegeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamEndPointPrivilegeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointRoleList')
def GetIamEndPointRoleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamEndPointRoleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointRoleByMoid')
def GetIamEndPointRoleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamEndPointRoleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserList')
def GetIamEndPointUserList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamEndPointUserList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserByMoid')
def GetIamEndPointUserByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamEndPointUserByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserInventoryList')
def GetIamEndPointUserInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamEndPointUserInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserInventoryByMoid')
def GetIamEndPointUserInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamEndPointUserInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserPolicyList')
def GetIamEndPointUserPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamEndPointUserPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserPolicyByMoid')
def GetIamEndPointUserPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamEndPointUserPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserPolicyInventoryList')
def GetIamEndPointUserPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamEndPointUserPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserPolicyInventoryByMoid')
def GetIamEndPointUserPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamEndPointUserPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserRoleList')
def GetIamEndPointUserRoleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamEndPointUserRoleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserRoleByMoid')
def GetIamEndPointUserRoleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamEndPointUserRoleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserRoleInventoryList')
def GetIamEndPointUserRoleInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamEndPointUserRoleInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamEndPointUserRoleInventoryByMoid')
def GetIamEndPointUserRoleInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamEndPointUserRoleInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamIdpList')
def GetIamIdpList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamIdpList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamIdpByMoid')
def GetIamIdpByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamIdpByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamIdpReferenceList')
def GetIamIdpReferenceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamIdpReferenceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamIdpReferenceByMoid')
def GetIamIdpReferenceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamIdpReferenceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamIpAccessManagementList')
def GetIamIpAccessManagementList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamIpAccessManagementList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamIpAccessManagementByMoid')
def GetIamIpAccessManagementByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamIpAccessManagementByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamIpAddressList')
def GetIamIpAddressList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamIpAddressList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamIpAddressByMoid')
def GetIamIpAddressByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamIpAddressByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLdapConfigParamsList')
def GetIamLdapConfigParamsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamLdapConfigParamsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLdapConfigParamsByMoid')
def GetIamLdapConfigParamsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamLdapConfigParamsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLdapGroupList')
def GetIamLdapGroupList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamLdapGroupList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLdapGroupByMoid')
def GetIamLdapGroupByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamLdapGroupByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLdapPolicyList')
def GetIamLdapPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamLdapPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLdapPolicyByMoid')
def GetIamLdapPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamLdapPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLdapProviderList')
def GetIamLdapProviderList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamLdapProviderList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLdapProviderByMoid')
def GetIamLdapProviderByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamLdapProviderByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLocalUserPasswordList')
def GetIamLocalUserPasswordList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamLocalUserPasswordList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLocalUserPasswordByMoid')
def GetIamLocalUserPasswordByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamLocalUserPasswordByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLocalUserPasswordPolicyList')
def GetIamLocalUserPasswordPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamLocalUserPasswordPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamLocalUserPasswordPolicyByMoid')
def GetIamLocalUserPasswordPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamLocalUserPasswordPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamOAuthTokenList')
def GetIamOAuthTokenList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamOAuthTokenList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamOAuthTokenByMoid')
def GetIamOAuthTokenByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamOAuthTokenByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamPermissionList')
def GetIamPermissionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamPermissionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamPermissionByMoid')
def GetIamPermissionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamPermissionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamPrivateKeySpecList')
def GetIamPrivateKeySpecList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamPrivateKeySpecList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamPrivateKeySpecByMoid')
def GetIamPrivateKeySpecByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamPrivateKeySpecByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamPrivilegeList')
def GetIamPrivilegeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamPrivilegeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamPrivilegeByMoid')
def GetIamPrivilegeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamPrivilegeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamPrivilegeSetList')
def GetIamPrivilegeSetList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamPrivilegeSetList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamPrivilegeSetByMoid')
def GetIamPrivilegeSetByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamPrivilegeSetByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamQualifierList')
def GetIamQualifierList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamQualifierList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamQualifierByMoid')
def GetIamQualifierByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamQualifierByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamResourceLimitsList')
def GetIamResourceLimitsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamResourceLimitsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamResourceLimitsByMoid')
def GetIamResourceLimitsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamResourceLimitsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamResourcePermissionList')
def GetIamResourcePermissionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamResourcePermissionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamResourcePermissionByMoid')
def GetIamResourcePermissionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamResourcePermissionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamResourceRolesList')
def GetIamResourceRolesList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamResourceRolesList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamResourceRolesByMoid')
def GetIamResourceRolesByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamResourceRolesByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamRoleList')
def GetIamRoleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamRoleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamRoleByMoid')
def GetIamRoleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamRoleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamSecurityHolderList')
def GetIamSecurityHolderList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamSecurityHolderList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamSecurityHolderByMoid')
def GetIamSecurityHolderByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamSecurityHolderByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamServiceProviderList')
def GetIamServiceProviderList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamServiceProviderList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamServiceProviderByMoid')
def GetIamServiceProviderByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamServiceProviderByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamSessionList')
def GetIamSessionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamSessionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamSessionByMoid')
def GetIamSessionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamSessionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamSessionLimitsList')
def GetIamSessionLimitsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamSessionLimitsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamSessionLimitsByMoid')
def GetIamSessionLimitsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamSessionLimitsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamSharingRuleList')
def GetIamSharingRuleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamSharingRuleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamSharingRuleByMoid')
def GetIamSharingRuleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamSharingRuleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamSystemList')
def GetIamSystemList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamSystemList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamSystemByMoid')
def GetIamSystemByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamSystemByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamTestIdpConfigurationList')
def GetIamTestIdpConfigurationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamTestIdpConfigurationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamTestIdpConfigurationByMoid')
def GetIamTestIdpConfigurationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamTestIdpConfigurationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamTrustPointList')
def GetIamTrustPointList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamTrustPointList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamTrustPointByMoid')
def GetIamTrustPointByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamTrustPointByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamUserList')
def GetIamUserList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamUserList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamUserByMoid')
def GetIamUserByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamUserByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamUserGroupList')
def GetIamUserGroupList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamUserGroupList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamUserGroupByMoid')
def GetIamUserGroupByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamUserGroupByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamUserPreferenceList')
def GetIamUserPreferenceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamUserPreferenceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamUserPreferenceByMoid')
def GetIamUserPreferenceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamUserPreferenceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamUserSettingList')
def GetIamUserSettingList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamUserSettingList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIamUserSettingByMoid')
def GetIamUserSettingByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIamUserSettingByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetInventoryDeviceInfoList')
def GetInventoryDeviceInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetInventoryDeviceInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetInventoryDeviceInfoByMoid')
def GetInventoryDeviceInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetInventoryDeviceInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetInventoryDnMoBindingList')
def GetInventoryDnMoBindingList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetInventoryDnMoBindingList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetInventoryDnMoBindingByMoid')
def GetInventoryDnMoBindingByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetInventoryDnMoBindingByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetInventoryGenericInventoryList')
def GetInventoryGenericInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetInventoryGenericInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetInventoryGenericInventoryByMoid')
def GetInventoryGenericInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetInventoryGenericInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetInventoryGenericInventoryHolderList')
def GetInventoryGenericInventoryHolderList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetInventoryGenericInventoryHolderList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetInventoryGenericInventoryHolderByMoid')
def GetInventoryGenericInventoryHolderByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetInventoryGenericInventoryHolderByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIpmioverlanPolicyList')
def GetIpmioverlanPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIpmioverlanPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIpmioverlanPolicyByMoid')
def GetIpmioverlanPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIpmioverlanPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIpmioverlanPolicyInventoryList')
def GetIpmioverlanPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIpmioverlanPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIpmioverlanPolicyInventoryByMoid')
def GetIpmioverlanPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIpmioverlanPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolBlockLeaseList')
def GetIppoolBlockLeaseList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIppoolBlockLeaseList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolBlockLeaseByMoid')
def GetIppoolBlockLeaseByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIppoolBlockLeaseByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolIpLeaseList')
def GetIppoolIpLeaseList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIppoolIpLeaseList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolIpLeaseByMoid')
def GetIppoolIpLeaseByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIppoolIpLeaseByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolPoolList')
def GetIppoolPoolList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIppoolPoolList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolPoolByMoid')
def GetIppoolPoolByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIppoolPoolByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolPoolMemberList')
def GetIppoolPoolMemberList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIppoolPoolMemberList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolPoolMemberByMoid')
def GetIppoolPoolMemberByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIppoolPoolMemberByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolReservationList')
def GetIppoolReservationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIppoolReservationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolReservationByMoid')
def GetIppoolReservationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIppoolReservationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolShadowBlockList')
def GetIppoolShadowBlockList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIppoolShadowBlockList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolShadowBlockByMoid')
def GetIppoolShadowBlockByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIppoolShadowBlockByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolShadowPoolList')
def GetIppoolShadowPoolList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIppoolShadowPoolList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolShadowPoolByMoid')
def GetIppoolShadowPoolByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIppoolShadowPoolByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolUniverseList')
def GetIppoolUniverseList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIppoolUniverseList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIppoolUniverseByMoid')
def GetIppoolUniverseByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIppoolUniverseByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolBlockList')
def GetIqnpoolBlockList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIqnpoolBlockList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolBlockByMoid')
def GetIqnpoolBlockByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIqnpoolBlockByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolLeaseList')
def GetIqnpoolLeaseList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIqnpoolLeaseList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolLeaseByMoid')
def GetIqnpoolLeaseByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIqnpoolLeaseByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolPoolList')
def GetIqnpoolPoolList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIqnpoolPoolList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolPoolByMoid')
def GetIqnpoolPoolByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIqnpoolPoolByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolPoolMemberList')
def GetIqnpoolPoolMemberList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIqnpoolPoolMemberList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolPoolMemberByMoid')
def GetIqnpoolPoolMemberByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIqnpoolPoolMemberByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolReservationList')
def GetIqnpoolReservationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIqnpoolReservationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolReservationByMoid')
def GetIqnpoolReservationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIqnpoolReservationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolUniverseList')
def GetIqnpoolUniverseList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIqnpoolUniverseList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIqnpoolUniverseByMoid')
def GetIqnpoolUniverseByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIqnpoolUniverseByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIwotenantMaintenanceNotificationList')
def GetIwotenantMaintenanceNotificationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIwotenantMaintenanceNotificationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIwotenantMaintenanceNotificationByMoid')
def GetIwotenantMaintenanceNotificationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIwotenantMaintenanceNotificationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIwotenantMigrateList')
def GetIwotenantMigrateList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIwotenantMigrateList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIwotenantMigrateByMoid')
def GetIwotenantMigrateByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIwotenantMigrateByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIwotenantTenantCustomizationList')
def GetIwotenantTenantCustomizationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIwotenantTenantCustomizationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIwotenantTenantCustomizationByMoid')
def GetIwotenantTenantCustomizationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIwotenantTenantCustomizationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIwotenantTenantStatusList')
def GetIwotenantTenantStatusList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIwotenantTenantStatusList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetIwotenantTenantStatusByMoid')
def GetIwotenantTenantStatusByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetIwotenantTenantStatusByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAciCniApicList')
def GetKubernetesAciCniApicList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesAciCniApicList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAciCniApicByMoid')
def GetKubernetesAciCniApicByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesAciCniApicByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAciCniProfileList')
def GetKubernetesAciCniProfileList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesAciCniProfileList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAciCniProfileByMoid')
def GetKubernetesAciCniProfileByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesAciCniProfileByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAciCniTenantClusterAllocationList')
def GetKubernetesAciCniTenantClusterAllocationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesAciCniTenantClusterAllocationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAciCniTenantClusterAllocationByMoid')
def GetKubernetesAciCniTenantClusterAllocationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesAciCniTenantClusterAllocationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAddonDefinitionList')
def GetKubernetesAddonDefinitionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesAddonDefinitionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAddonDefinitionByMoid')
def GetKubernetesAddonDefinitionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesAddonDefinitionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAddonPolicyList')
def GetKubernetesAddonPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesAddonPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAddonPolicyByMoid')
def GetKubernetesAddonPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesAddonPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAddonRepositoryList')
def GetKubernetesAddonRepositoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesAddonRepositoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesAddonRepositoryByMoid')
def GetKubernetesAddonRepositoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesAddonRepositoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesBaremetalNodeProfileList')
def GetKubernetesBaremetalNodeProfileList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesBaremetalNodeProfileList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesBaremetalNodeProfileByMoid')
def GetKubernetesBaremetalNodeProfileByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesBaremetalNodeProfileByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesCatalogList')
def GetKubernetesCatalogList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesCatalogList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesCatalogByMoid')
def GetKubernetesCatalogByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesCatalogByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesClusterList')
def GetKubernetesClusterList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesClusterList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesClusterByMoid')
def GetKubernetesClusterByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesClusterByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesClusterAddonProfileList')
def GetKubernetesClusterAddonProfileList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesClusterAddonProfileList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesClusterAddonProfileByMoid')
def GetKubernetesClusterAddonProfileByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesClusterAddonProfileByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesClusterProfileList')
def GetKubernetesClusterProfileList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesClusterProfileList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesClusterProfileByMoid')
def GetKubernetesClusterProfileByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesClusterProfileByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesConfigResultList')
def GetKubernetesConfigResultList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesConfigResultList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesConfigResultByMoid')
def GetKubernetesConfigResultByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesConfigResultByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesConfigResultEntryList')
def GetKubernetesConfigResultEntryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesConfigResultEntryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesConfigResultEntryByMoid')
def GetKubernetesConfigResultEntryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesConfigResultEntryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesContainerRuntimePolicyList')
def GetKubernetesContainerRuntimePolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesContainerRuntimePolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesContainerRuntimePolicyByMoid')
def GetKubernetesContainerRuntimePolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesContainerRuntimePolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesDaemonSetList')
def GetKubernetesDaemonSetList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesDaemonSetList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesDaemonSetByMoid')
def GetKubernetesDaemonSetByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesDaemonSetByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesDeploymentList')
def GetKubernetesDeploymentList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesDeploymentList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesDeploymentByMoid')
def GetKubernetesDeploymentByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesDeploymentByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesHttpProxyPolicyList')
def GetKubernetesHttpProxyPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesHttpProxyPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesHttpProxyPolicyByMoid')
def GetKubernetesHttpProxyPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesHttpProxyPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesIngressList')
def GetKubernetesIngressList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesIngressList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesIngressByMoid')
def GetKubernetesIngressByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesIngressByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesNetworkPolicyList')
def GetKubernetesNetworkPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesNetworkPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesNetworkPolicyByMoid')
def GetKubernetesNetworkPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesNetworkPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesNodeList')
def GetKubernetesNodeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesNodeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesNodeByMoid')
def GetKubernetesNodeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesNodeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesNodeGroupProfileList')
def GetKubernetesNodeGroupProfileList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesNodeGroupProfileList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesNodeGroupProfileByMoid')
def GetKubernetesNodeGroupProfileByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesNodeGroupProfileByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesNvidiaGpuProductList')
def GetKubernetesNvidiaGpuProductList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesNvidiaGpuProductList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesNvidiaGpuProductByMoid')
def GetKubernetesNvidiaGpuProductByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesNvidiaGpuProductByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesPodList')
def GetKubernetesPodList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesPodList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesPodByMoid')
def GetKubernetesPodByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesPodByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesServiceList')
def GetKubernetesServiceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesServiceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesServiceByMoid')
def GetKubernetesServiceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesServiceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesStatefulSetList')
def GetKubernetesStatefulSetList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesStatefulSetList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesStatefulSetByMoid')
def GetKubernetesStatefulSetByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesStatefulSetByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesSysConfigPolicyList')
def GetKubernetesSysConfigPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesSysConfigPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesSysConfigPolicyByMoid')
def GetKubernetesSysConfigPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesSysConfigPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesTrustedRegistriesPolicyList')
def GetKubernetesTrustedRegistriesPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesTrustedRegistriesPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesTrustedRegistriesPolicyByMoid')
def GetKubernetesTrustedRegistriesPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesTrustedRegistriesPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVersionList')
def GetKubernetesVersionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesVersionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVersionByMoid')
def GetKubernetesVersionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesVersionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVersionPolicyList')
def GetKubernetesVersionPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesVersionPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVersionPolicyByMoid')
def GetKubernetesVersionPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesVersionPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVirtualMachineInfraConfigPolicyList')
def GetKubernetesVirtualMachineInfraConfigPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesVirtualMachineInfraConfigPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVirtualMachineInfraConfigPolicyByMoid')
def GetKubernetesVirtualMachineInfraConfigPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesVirtualMachineInfraConfigPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVirtualMachineInfrastructureProviderList')
def GetKubernetesVirtualMachineInfrastructureProviderList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesVirtualMachineInfrastructureProviderList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVirtualMachineInfrastructureProviderByMoid')
def GetKubernetesVirtualMachineInfrastructureProviderByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesVirtualMachineInfrastructureProviderByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVirtualMachineInstanceTypeList')
def GetKubernetesVirtualMachineInstanceTypeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesVirtualMachineInstanceTypeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVirtualMachineInstanceTypeByMoid')
def GetKubernetesVirtualMachineInstanceTypeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesVirtualMachineInstanceTypeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVirtualMachineNodeProfileList')
def GetKubernetesVirtualMachineNodeProfileList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesVirtualMachineNodeProfileList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKubernetesVirtualMachineNodeProfileByMoid')
def GetKubernetesVirtualMachineNodeProfileByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKubernetesVirtualMachineNodeProfileByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKvmPolicyList')
def GetKvmPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKvmPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKvmPolicyByMoid')
def GetKvmPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKvmPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKvmPolicyInventoryList')
def GetKvmPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKvmPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKvmPolicyInventoryByMoid')
def GetKvmPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKvmPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKvmSessionList')
def GetKvmSessionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKvmSessionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKvmSessionByMoid')
def GetKvmSessionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKvmSessionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKvmTunnelList')
def GetKvmTunnelList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKvmTunnelList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKvmTunnelByMoid')
def GetKvmTunnelByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKvmTunnelByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKvmTunneledKvmPolicyList')
def GetKvmTunneledKvmPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKvmTunneledKvmPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetKvmTunneledKvmPolicyByMoid')
def GetKvmTunneledKvmPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetKvmTunneledKvmPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseAccountLicenseDataList')
def GetLicenseAccountLicenseDataList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseAccountLicenseDataList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseAccountLicenseDataByMoid')
def GetLicenseAccountLicenseDataByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseAccountLicenseDataByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseCustomerOpList')
def GetLicenseCustomerOpList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseCustomerOpList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseCustomerOpByMoid')
def GetLicenseCustomerOpByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseCustomerOpByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseErpCustomerOpList')
def GetLicenseErpCustomerOpList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseErpCustomerOpList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseErpCustomerOpByMoid')
def GetLicenseErpCustomerOpByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseErpCustomerOpByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseErpLicenseCountList')
def GetLicenseErpLicenseCountList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseErpLicenseCountList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseErpLicenseCountByMoid')
def GetLicenseErpLicenseCountByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseErpLicenseCountByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIksCustomerOpList')
def GetLicenseIksCustomerOpList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseIksCustomerOpList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIksCustomerOpByMoid')
def GetLicenseIksCustomerOpByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseIksCustomerOpByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIksLicenseCountList')
def GetLicenseIksLicenseCountList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseIksLicenseCountList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIksLicenseCountByMoid')
def GetLicenseIksLicenseCountByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseIksLicenseCountByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIncCustomerOpList')
def GetLicenseIncCustomerOpList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseIncCustomerOpList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIncCustomerOpByMoid')
def GetLicenseIncCustomerOpByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseIncCustomerOpByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIncLicenseCountList')
def GetLicenseIncLicenseCountList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseIncLicenseCountList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIncLicenseCountByMoid')
def GetLicenseIncLicenseCountByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseIncLicenseCountByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIwoCustomerOpList')
def GetLicenseIwoCustomerOpList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseIwoCustomerOpList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIwoCustomerOpByMoid')
def GetLicenseIwoCustomerOpByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseIwoCustomerOpByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIwoLicenseCountList')
def GetLicenseIwoLicenseCountList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseIwoLicenseCountList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseIwoLicenseCountByMoid')
def GetLicenseIwoLicenseCountByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseIwoLicenseCountByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseLicenseInfoList')
def GetLicenseLicenseInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseLicenseInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseLicenseInfoByMoid')
def GetLicenseLicenseInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseLicenseInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseLicenseInfoViewList')
def GetLicenseLicenseInfoViewList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseLicenseInfoViewList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseLicenseInfoViewByMoid')
def GetLicenseLicenseInfoViewByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseLicenseInfoViewByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseLicenseRegistrationStatusList')
def GetLicenseLicenseRegistrationStatusList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseLicenseRegistrationStatusList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseLicenseRegistrationStatusByMoid')
def GetLicenseLicenseRegistrationStatusByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseLicenseRegistrationStatusByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseLicenseReservationOpList')
def GetLicenseLicenseReservationOpList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseLicenseReservationOpList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseLicenseReservationOpByMoid')
def GetLicenseLicenseReservationOpByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseLicenseReservationOpByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseSmartlicenseTokenList')
def GetLicenseSmartlicenseTokenList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseSmartlicenseTokenList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLicenseSmartlicenseTokenByMoid')
def GetLicenseSmartlicenseTokenByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLicenseSmartlicenseTokenByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLsServiceProfileList')
def GetLsServiceProfileList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLsServiceProfileList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetLsServiceProfileByMoid')
def GetLsServiceProfileByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetLsServiceProfileByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolIdBlockList')
def GetMacpoolIdBlockList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMacpoolIdBlockList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolIdBlockByMoid')
def GetMacpoolIdBlockByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMacpoolIdBlockByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolLeaseList')
def GetMacpoolLeaseList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMacpoolLeaseList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolLeaseByMoid')
def GetMacpoolLeaseByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMacpoolLeaseByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolPoolList')
def GetMacpoolPoolList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMacpoolPoolList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolPoolByMoid')
def GetMacpoolPoolByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMacpoolPoolByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolPoolMemberList')
def GetMacpoolPoolMemberList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMacpoolPoolMemberList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolPoolMemberByMoid')
def GetMacpoolPoolMemberByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMacpoolPoolMemberByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolReservationList')
def GetMacpoolReservationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMacpoolReservationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolReservationByMoid')
def GetMacpoolReservationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMacpoolReservationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolUniverseList')
def GetMacpoolUniverseList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMacpoolUniverseList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMacpoolUniverseByMoid')
def GetMacpoolUniverseByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMacpoolUniverseByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetManagementControllerList')
def GetManagementControllerList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetManagementControllerList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetManagementControllerByMoid')
def GetManagementControllerByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetManagementControllerByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetManagementEntityList')
def GetManagementEntityList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetManagementEntityList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetManagementEntityByMoid')
def GetManagementEntityByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetManagementEntityByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetManagementInterfaceList')
def GetManagementInterfaceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetManagementInterfaceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetManagementInterfaceByMoid')
def GetManagementInterfaceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetManagementInterfaceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMarketplaceUseCaseList')
def GetMarketplaceUseCaseList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMarketplaceUseCaseList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMarketplaceUseCaseByMoid')
def GetMarketplaceUseCaseByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMarketplaceUseCaseByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMarketplaceUseCaseVersionList')
def GetMarketplaceUseCaseVersionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMarketplaceUseCaseVersionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMarketplaceUseCaseVersionByMoid')
def GetMarketplaceUseCaseVersionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMarketplaceUseCaseVersionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryArrayList')
def GetMemoryArrayList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMemoryArrayList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryArrayByMoid')
def GetMemoryArrayByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMemoryArrayByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryConfigResultList')
def GetMemoryPersistentMemoryConfigResultList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMemoryPersistentMemoryConfigResultList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryConfigResultByMoid')
def GetMemoryPersistentMemoryConfigResultByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMemoryPersistentMemoryConfigResultByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryConfigurationList')
def GetMemoryPersistentMemoryConfigurationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMemoryPersistentMemoryConfigurationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryConfigurationByMoid')
def GetMemoryPersistentMemoryConfigurationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMemoryPersistentMemoryConfigurationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryNamespaceList')
def GetMemoryPersistentMemoryNamespaceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMemoryPersistentMemoryNamespaceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryNamespaceByMoid')
def GetMemoryPersistentMemoryNamespaceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMemoryPersistentMemoryNamespaceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryNamespaceConfigResultList')
def GetMemoryPersistentMemoryNamespaceConfigResultList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMemoryPersistentMemoryNamespaceConfigResultList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryNamespaceConfigResultByMoid')
def GetMemoryPersistentMemoryNamespaceConfigResultByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMemoryPersistentMemoryNamespaceConfigResultByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryPolicyList')
def GetMemoryPersistentMemoryPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMemoryPersistentMemoryPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryPolicyByMoid')
def GetMemoryPersistentMemoryPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMemoryPersistentMemoryPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryRegionList')
def GetMemoryPersistentMemoryRegionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMemoryPersistentMemoryRegionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryRegionByMoid')
def GetMemoryPersistentMemoryRegionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMemoryPersistentMemoryRegionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryUnitList')
def GetMemoryPersistentMemoryUnitList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMemoryPersistentMemoryUnitList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPersistentMemoryUnitByMoid')
def GetMemoryPersistentMemoryUnitByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMemoryPersistentMemoryUnitByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPolicyList')
def GetMemoryPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMemoryPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPolicyByMoid')
def GetMemoryPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMemoryPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPolicyInventoryList')
def GetMemoryPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMemoryPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryPolicyInventoryByMoid')
def GetMemoryPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMemoryPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryUnitList')
def GetMemoryUnitList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMemoryUnitList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMemoryUnitByMoid')
def GetMemoryUnitByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMemoryUnitByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMerakiDeviceList')
def GetMerakiDeviceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMerakiDeviceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMerakiDeviceByMoid')
def GetMerakiDeviceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMerakiDeviceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMerakiNetworkList')
def GetMerakiNetworkList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMerakiNetworkList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMerakiNetworkByMoid')
def GetMerakiNetworkByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMerakiNetworkByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMerakiOrganizationList')
def GetMerakiOrganizationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMerakiOrganizationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMerakiOrganizationByMoid')
def GetMerakiOrganizationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMerakiOrganizationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMerakiPortProfileList')
def GetMerakiPortProfileList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMerakiPortProfileList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMerakiPortProfileByMoid')
def GetMerakiPortProfileByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMerakiPortProfileByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMerakiTagList')
def GetMerakiTagList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMerakiTagList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMerakiTagByMoid')
def GetMerakiTagByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMerakiTagByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMetaDefinitionList')
def GetMetaDefinitionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMetaDefinitionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMetaDefinitionByMoid')
def GetMetaDefinitionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMetaDefinitionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMetricsConfigurationList')
def GetMetricsConfigurationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMetricsConfigurationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMetricsConfigurationByMoid')
def GetMetricsConfigurationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMetricsConfigurationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMetricsMetricsExplorationList')
def GetMetricsMetricsExplorationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMetricsMetricsExplorationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMetricsMetricsExplorationByMoid')
def GetMetricsMetricsExplorationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMetricsMetricsExplorationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMetricsResourceConfigurationList')
def GetMetricsResourceConfigurationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMetricsResourceConfigurationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMetricsResourceConfigurationByMoid')
def GetMetricsResourceConfigurationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMetricsResourceConfigurationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMonitoringHealthStatusList')
def GetMonitoringHealthStatusList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMonitoringHealthStatusList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetMonitoringHealthStatusByMoid')
def GetMonitoringHealthStatusByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetMonitoringHealthStatusByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkDiscoveredNeighborList')
def GetNetworkDiscoveredNeighborList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkDiscoveredNeighborList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkDiscoveredNeighborByMoid')
def GetNetworkDiscoveredNeighborByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkDiscoveredNeighborByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkDnsList')
def GetNetworkDnsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkDnsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkDnsByMoid')
def GetNetworkDnsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkDnsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkElementList')
def GetNetworkElementList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkElementList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkElementByMoid')
def GetNetworkElementByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkElementByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkElementSummaryList')
def GetNetworkElementSummaryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkElementSummaryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkElementSummaryByMoid')
def GetNetworkElementSummaryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkElementSummaryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkFcZoneInfoList')
def GetNetworkFcZoneInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkFcZoneInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkFcZoneInfoByMoid')
def GetNetworkFcZoneInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkFcZoneInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkFeatureControlList')
def GetNetworkFeatureControlList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkFeatureControlList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkFeatureControlByMoid')
def GetNetworkFeatureControlByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkFeatureControlByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkInterfaceListList')
def GetNetworkInterfaceListList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkInterfaceListList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkInterfaceListByMoid')
def GetNetworkInterfaceListByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkInterfaceListByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkLicenseFileList')
def GetNetworkLicenseFileList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkLicenseFileList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkLicenseFileByMoid')
def GetNetworkLicenseFileByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkLicenseFileByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkSupervisorCardList')
def GetNetworkSupervisorCardList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkSupervisorCardList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkSupervisorCardByMoid')
def GetNetworkSupervisorCardByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkSupervisorCardByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkTelemetryCheckList')
def GetNetworkTelemetryCheckList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkTelemetryCheckList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkTelemetryCheckByMoid')
def GetNetworkTelemetryCheckByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkTelemetryCheckByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVethernetList')
def GetNetworkVethernetList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkVethernetList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVethernetByMoid')
def GetNetworkVethernetByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkVethernetByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVfcList')
def GetNetworkVfcList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkVfcList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVfcByMoid')
def GetNetworkVfcByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkVfcByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVlanPortInfoList')
def GetNetworkVlanPortInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkVlanPortInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVlanPortInfoByMoid')
def GetNetworkVlanPortInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkVlanPortInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVpcDomainList')
def GetNetworkVpcDomainList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkVpcDomainList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVpcDomainByMoid')
def GetNetworkVpcDomainByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkVpcDomainByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVpcMemberList')
def GetNetworkVpcMemberList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkVpcMemberList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVpcMemberByMoid')
def GetNetworkVpcMemberByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkVpcMemberByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVpcPeerList')
def GetNetworkVpcPeerList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkVpcPeerList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVpcPeerByMoid')
def GetNetworkVpcPeerByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkVpcPeerByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVrfList')
def GetNetworkVrfList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkVrfList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkVrfByMoid')
def GetNetworkVrfByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkVrfByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkconfigPolicyList')
def GetNetworkconfigPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkconfigPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkconfigPolicyByMoid')
def GetNetworkconfigPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkconfigPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkconfigPolicyInventoryList')
def GetNetworkconfigPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkconfigPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNetworkconfigPolicyInventoryByMoid')
def GetNetworkconfigPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNetworkconfigPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicCcoPostList')
def GetNiaapiApicCcoPostList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiApicCcoPostList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicCcoPostByMoid')
def GetNiaapiApicCcoPostByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiApicCcoPostByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicFieldNoticeList')
def GetNiaapiApicFieldNoticeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiApicFieldNoticeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicFieldNoticeByMoid')
def GetNiaapiApicFieldNoticeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiApicFieldNoticeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicHweolList')
def GetNiaapiApicHweolList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiApicHweolList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicHweolByMoid')
def GetNiaapiApicHweolByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiApicHweolByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicLatestMaintainedReleaseList')
def GetNiaapiApicLatestMaintainedReleaseList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiApicLatestMaintainedReleaseList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicLatestMaintainedReleaseByMoid')
def GetNiaapiApicLatestMaintainedReleaseByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiApicLatestMaintainedReleaseByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicReleaseRecommendList')
def GetNiaapiApicReleaseRecommendList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiApicReleaseRecommendList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicReleaseRecommendByMoid')
def GetNiaapiApicReleaseRecommendByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiApicReleaseRecommendByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicSweolList')
def GetNiaapiApicSweolList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiApicSweolList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiApicSweolByMoid')
def GetNiaapiApicSweolByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiApicSweolByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmCcoPostList')
def GetNiaapiDcnmCcoPostList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiDcnmCcoPostList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmCcoPostByMoid')
def GetNiaapiDcnmCcoPostByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiDcnmCcoPostByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmFieldNoticeList')
def GetNiaapiDcnmFieldNoticeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiDcnmFieldNoticeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmFieldNoticeByMoid')
def GetNiaapiDcnmFieldNoticeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiDcnmFieldNoticeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmHweolList')
def GetNiaapiDcnmHweolList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiDcnmHweolList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmHweolByMoid')
def GetNiaapiDcnmHweolByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiDcnmHweolByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmLatestMaintainedReleaseList')
def GetNiaapiDcnmLatestMaintainedReleaseList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiDcnmLatestMaintainedReleaseList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmLatestMaintainedReleaseByMoid')
def GetNiaapiDcnmLatestMaintainedReleaseByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiDcnmLatestMaintainedReleaseByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmReleaseRecommendList')
def GetNiaapiDcnmReleaseRecommendList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiDcnmReleaseRecommendList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmReleaseRecommendByMoid')
def GetNiaapiDcnmReleaseRecommendByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiDcnmReleaseRecommendByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmSweolList')
def GetNiaapiDcnmSweolList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiDcnmSweolList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiDcnmSweolByMoid')
def GetNiaapiDcnmSweolByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiDcnmSweolByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiFileDownloaderList')
def GetNiaapiFileDownloaderList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiFileDownloaderList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiFileDownloaderByMoid')
def GetNiaapiFileDownloaderByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiFileDownloaderByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiNiaMetadataList')
def GetNiaapiNiaMetadataList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiNiaMetadataList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiNiaMetadataByMoid')
def GetNiaapiNiaMetadataByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiNiaMetadataByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiNibFileDownloaderList')
def GetNiaapiNibFileDownloaderList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiNibFileDownloaderList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiNibFileDownloaderByMoid')
def GetNiaapiNibFileDownloaderByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiNibFileDownloaderByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiNibMetadataList')
def GetNiaapiNibMetadataList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiNibMetadataList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiNibMetadataByMoid')
def GetNiaapiNibMetadataByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiNibMetadataByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiPuvScriptDownloaderList')
def GetNiaapiPuvScriptDownloaderList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiPuvScriptDownloaderList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiPuvScriptDownloaderByMoid')
def GetNiaapiPuvScriptDownloaderByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiPuvScriptDownloaderByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiSnValidatorMetadataList')
def GetNiaapiSnValidatorMetadataList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiSnValidatorMetadataList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiSnValidatorMetadataByMoid')
def GetNiaapiSnValidatorMetadataByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiSnValidatorMetadataByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiUpgradeAssistFileList')
def GetNiaapiUpgradeAssistFileList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiUpgradeAssistFileList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiUpgradeAssistFileByMoid')
def GetNiaapiUpgradeAssistFileByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiUpgradeAssistFileByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiVersionRegexList')
def GetNiaapiVersionRegexList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiVersionRegexList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiaapiVersionRegexByMoid')
def GetNiaapiVersionRegexByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiaapiVersionRegexByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryAaaLdapProviderDetailsList')
def GetNiatelemetryAaaLdapProviderDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryAaaLdapProviderDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryAaaLdapProviderDetailsByMoid')
def GetNiatelemetryAaaLdapProviderDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryAaaLdapProviderDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryAaaRadiusProviderDetailsList')
def GetNiatelemetryAaaRadiusProviderDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryAaaRadiusProviderDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryAaaRadiusProviderDetailsByMoid')
def GetNiatelemetryAaaRadiusProviderDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryAaaRadiusProviderDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryAaaTacacsProviderDetailsList')
def GetNiatelemetryAaaTacacsProviderDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryAaaTacacsProviderDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryAaaTacacsProviderDetailsByMoid')
def GetNiatelemetryAaaTacacsProviderDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryAaaTacacsProviderDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicAppPluginDetailsList')
def GetNiatelemetryApicAppPluginDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicAppPluginDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicAppPluginDetailsByMoid')
def GetNiatelemetryApicAppPluginDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicAppPluginDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicCoreFileDetailsList')
def GetNiatelemetryApicCoreFileDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicCoreFileDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicCoreFileDetailsByMoid')
def GetNiatelemetryApicCoreFileDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicCoreFileDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicDbgexpRsExportDestList')
def GetNiatelemetryApicDbgexpRsExportDestList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicDbgexpRsExportDestList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicDbgexpRsExportDestByMoid')
def GetNiatelemetryApicDbgexpRsExportDestByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicDbgexpRsExportDestByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicDbgexpRsTsSchedulerList')
def GetNiatelemetryApicDbgexpRsTsSchedulerList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicDbgexpRsTsSchedulerList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicDbgexpRsTsSchedulerByMoid')
def GetNiatelemetryApicDbgexpRsTsSchedulerByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicDbgexpRsTsSchedulerByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicFanDetailsList')
def GetNiatelemetryApicFanDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicFanDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicFanDetailsByMoid')
def GetNiatelemetryApicFanDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicFanDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicFexDetailsList')
def GetNiatelemetryApicFexDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicFexDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicFexDetailsByMoid')
def GetNiatelemetryApicFexDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicFexDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicFlashDetailsList')
def GetNiatelemetryApicFlashDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicFlashDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicFlashDetailsByMoid')
def GetNiatelemetryApicFlashDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicFlashDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicNtpAuthList')
def GetNiatelemetryApicNtpAuthList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicNtpAuthList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicNtpAuthByMoid')
def GetNiatelemetryApicNtpAuthByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicNtpAuthByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicPerformanceDataList')
def GetNiatelemetryApicPerformanceDataList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicPerformanceDataList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicPerformanceDataByMoid')
def GetNiatelemetryApicPerformanceDataByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicPerformanceDataByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicPodDataList')
def GetNiatelemetryApicPodDataList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicPodDataList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicPodDataByMoid')
def GetNiatelemetryApicPodDataByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicPodDataByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicPsuDetailsList')
def GetNiatelemetryApicPsuDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicPsuDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicPsuDetailsByMoid')
def GetNiatelemetryApicPsuDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicPsuDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicRealmDetailsList')
def GetNiatelemetryApicRealmDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicRealmDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicRealmDetailsByMoid')
def GetNiatelemetryApicRealmDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicRealmDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpClientGrpDetailsList')
def GetNiatelemetryApicSnmpClientGrpDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicSnmpClientGrpDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpClientGrpDetailsByMoid')
def GetNiatelemetryApicSnmpClientGrpDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicSnmpClientGrpDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpCommunityAccessDetailsList')
def GetNiatelemetryApicSnmpCommunityAccessDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicSnmpCommunityAccessDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpCommunityAccessDetailsByMoid')
def GetNiatelemetryApicSnmpCommunityAccessDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicSnmpCommunityAccessDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpCommunityDetailsList')
def GetNiatelemetryApicSnmpCommunityDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicSnmpCommunityDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpCommunityDetailsByMoid')
def GetNiatelemetryApicSnmpCommunityDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicSnmpCommunityDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpTrapDetailsList')
def GetNiatelemetryApicSnmpTrapDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicSnmpTrapDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpTrapDetailsByMoid')
def GetNiatelemetryApicSnmpTrapDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicSnmpTrapDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpTrapFwdServerDetailsList')
def GetNiatelemetryApicSnmpTrapFwdServerDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicSnmpTrapFwdServerDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpTrapFwdServerDetailsByMoid')
def GetNiatelemetryApicSnmpTrapFwdServerDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicSnmpTrapFwdServerDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpVersionThreeDetailsList')
def GetNiatelemetryApicSnmpVersionThreeDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicSnmpVersionThreeDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSnmpVersionThreeDetailsByMoid')
def GetNiatelemetryApicSnmpVersionThreeDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicSnmpVersionThreeDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSysLogGrpList')
def GetNiatelemetryApicSysLogGrpList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicSysLogGrpList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSysLogGrpByMoid')
def GetNiatelemetryApicSysLogGrpByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicSysLogGrpByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSysLogSrcList')
def GetNiatelemetryApicSysLogSrcList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicSysLogSrcList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicSysLogSrcByMoid')
def GetNiatelemetryApicSysLogSrcByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicSysLogSrcByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicTransceiverDetailsList')
def GetNiatelemetryApicTransceiverDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicTransceiverDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicTransceiverDetailsByMoid')
def GetNiatelemetryApicTransceiverDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicTransceiverDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicUiPageCountsList')
def GetNiatelemetryApicUiPageCountsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicUiPageCountsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicUiPageCountsByMoid')
def GetNiatelemetryApicUiPageCountsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicUiPageCountsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicVisionList')
def GetNiatelemetryApicVisionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicVisionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryApicVisionByMoid')
def GetNiatelemetryApicVisionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryApicVisionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryAppDetailsList')
def GetNiatelemetryAppDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryAppDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryAppDetailsByMoid')
def GetNiatelemetryAppDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryAppDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryCloudDetailsList')
def GetNiatelemetryCloudDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryCloudDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryCloudDetailsByMoid')
def GetNiatelemetryCloudDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryCloudDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryCommonPoliciesList')
def GetNiatelemetryCommonPoliciesList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryCommonPoliciesList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryCommonPoliciesByMoid')
def GetNiatelemetryCommonPoliciesByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryCommonPoliciesByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDcnmFanDetailsList')
def GetNiatelemetryDcnmFanDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryDcnmFanDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDcnmFanDetailsByMoid')
def GetNiatelemetryDcnmFanDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryDcnmFanDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDcnmFexDetailsList')
def GetNiatelemetryDcnmFexDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryDcnmFexDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDcnmFexDetailsByMoid')
def GetNiatelemetryDcnmFexDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryDcnmFexDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDcnmModuleDetailsList')
def GetNiatelemetryDcnmModuleDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryDcnmModuleDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDcnmModuleDetailsByMoid')
def GetNiatelemetryDcnmModuleDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryDcnmModuleDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDcnmPsuDetailsList')
def GetNiatelemetryDcnmPsuDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryDcnmPsuDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDcnmPsuDetailsByMoid')
def GetNiatelemetryDcnmPsuDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryDcnmPsuDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDcnmTransceiverDetailsList')
def GetNiatelemetryDcnmTransceiverDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryDcnmTransceiverDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDcnmTransceiverDetailsByMoid')
def GetNiatelemetryDcnmTransceiverDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryDcnmTransceiverDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDomInfoObjectList')
def GetNiatelemetryDomInfoObjectList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryDomInfoObjectList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDomInfoObjectByMoid')
def GetNiatelemetryDomInfoObjectByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryDomInfoObjectByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDomThresInfoObjectList')
def GetNiatelemetryDomThresInfoObjectList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryDomThresInfoObjectList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryDomThresInfoObjectByMoid')
def GetNiatelemetryDomThresInfoObjectByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryDomThresInfoObjectByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryEpgList')
def GetNiatelemetryEpgList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryEpgList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryEpgByMoid')
def GetNiatelemetryEpgByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryEpgByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryFabricModuleDetailsList')
def GetNiatelemetryFabricModuleDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryFabricModuleDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryFabricModuleDetailsByMoid')
def GetNiatelemetryFabricModuleDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryFabricModuleDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryFabricNodeControlDetailsList')
def GetNiatelemetryFabricNodeControlDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryFabricNodeControlDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryFabricNodeControlDetailsByMoid')
def GetNiatelemetryFabricNodeControlDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryFabricNodeControlDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryFabricPodProfileList')
def GetNiatelemetryFabricPodProfileList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryFabricPodProfileList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryFabricPodProfileByMoid')
def GetNiatelemetryFabricPodProfileByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryFabricPodProfileByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryFabricPodSsList')
def GetNiatelemetryFabricPodSsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryFabricPodSsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryFabricPodSsByMoid')
def GetNiatelemetryFabricPodSsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryFabricPodSsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryFaultList')
def GetNiatelemetryFaultList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryFaultList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryFaultByMoid')
def GetNiatelemetryFaultByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryFaultByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHcloudDetailsList')
def GetNiatelemetryHcloudDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryHcloudDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHcloudDetailsByMoid')
def GetNiatelemetryHcloudDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryHcloudDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHealthInsightsDataList')
def GetNiatelemetryHealthInsightsDataList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryHealthInsightsDataList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHealthInsightsDataByMoid')
def GetNiatelemetryHealthInsightsDataByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryHealthInsightsDataByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHttpsAclContractDetailsList')
def GetNiatelemetryHttpsAclContractDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryHttpsAclContractDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHttpsAclContractDetailsByMoid')
def GetNiatelemetryHttpsAclContractDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryHttpsAclContractDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHttpsAclContractFilterMapList')
def GetNiatelemetryHttpsAclContractFilterMapList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryHttpsAclContractFilterMapList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHttpsAclContractFilterMapByMoid')
def GetNiatelemetryHttpsAclContractFilterMapByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryHttpsAclContractFilterMapByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHttpsAclEpgContractMapList')
def GetNiatelemetryHttpsAclEpgContractMapList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryHttpsAclEpgContractMapList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHttpsAclEpgContractMapByMoid')
def GetNiatelemetryHttpsAclEpgContractMapByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryHttpsAclEpgContractMapByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHttpsAclEpgDetailsList')
def GetNiatelemetryHttpsAclEpgDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryHttpsAclEpgDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHttpsAclEpgDetailsByMoid')
def GetNiatelemetryHttpsAclEpgDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryHttpsAclEpgDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHttpsAclFilterDetailsList')
def GetNiatelemetryHttpsAclFilterDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryHttpsAclFilterDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryHttpsAclFilterDetailsByMoid')
def GetNiatelemetryHttpsAclFilterDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryHttpsAclFilterDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryInsightGroupDetailsList')
def GetNiatelemetryInsightGroupDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryInsightGroupDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryInsightGroupDetailsByMoid')
def GetNiatelemetryInsightGroupDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryInsightGroupDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryLcList')
def GetNiatelemetryLcList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryLcList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryLcByMoid')
def GetNiatelemetryLcByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryLcByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryLeafPolGrpDetailsList')
def GetNiatelemetryLeafPolGrpDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryLeafPolGrpDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryLeafPolGrpDetailsByMoid')
def GetNiatelemetryLeafPolGrpDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryLeafPolGrpDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMdsNeighborsList')
def GetNiatelemetryMdsNeighborsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryMdsNeighborsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMdsNeighborsByMoid')
def GetNiatelemetryMdsNeighborsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryMdsNeighborsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMsoContractDetailsList')
def GetNiatelemetryMsoContractDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryMsoContractDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMsoContractDetailsByMoid')
def GetNiatelemetryMsoContractDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryMsoContractDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMsoEpgDetailsList')
def GetNiatelemetryMsoEpgDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryMsoEpgDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMsoEpgDetailsByMoid')
def GetNiatelemetryMsoEpgDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryMsoEpgDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMsoSchemaDetailsList')
def GetNiatelemetryMsoSchemaDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryMsoSchemaDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMsoSchemaDetailsByMoid')
def GetNiatelemetryMsoSchemaDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryMsoSchemaDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMsoSiteDetailsList')
def GetNiatelemetryMsoSiteDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryMsoSiteDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMsoSiteDetailsByMoid')
def GetNiatelemetryMsoSiteDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryMsoSiteDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMsoTenantDetailsList')
def GetNiatelemetryMsoTenantDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryMsoTenantDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryMsoTenantDetailsByMoid')
def GetNiatelemetryMsoTenantDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryMsoTenantDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusCloudAccountList')
def GetNiatelemetryNexusCloudAccountList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNexusCloudAccountList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusCloudAccountByMoid')
def GetNiatelemetryNexusCloudAccountByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNexusCloudAccountByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusCloudSiteList')
def GetNiatelemetryNexusCloudSiteList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNexusCloudSiteList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusCloudSiteByMoid')
def GetNiatelemetryNexusCloudSiteByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNexusCloudSiteByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusDashboardControllerDetailsList')
def GetNiatelemetryNexusDashboardControllerDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNexusDashboardControllerDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusDashboardControllerDetailsByMoid')
def GetNiatelemetryNexusDashboardControllerDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNexusDashboardControllerDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusDashboardDetailsList')
def GetNiatelemetryNexusDashboardDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNexusDashboardDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusDashboardDetailsByMoid')
def GetNiatelemetryNexusDashboardDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNexusDashboardDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusDashboardMemoryDetailsList')
def GetNiatelemetryNexusDashboardMemoryDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNexusDashboardMemoryDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusDashboardMemoryDetailsByMoid')
def GetNiatelemetryNexusDashboardMemoryDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNexusDashboardMemoryDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusDashboardsList')
def GetNiatelemetryNexusDashboardsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNexusDashboardsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNexusDashboardsByMoid')
def GetNiatelemetryNexusDashboardsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNexusDashboardsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiaFeatureUsageList')
def GetNiatelemetryNiaFeatureUsageList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNiaFeatureUsageList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiaFeatureUsageByMoid')
def GetNiatelemetryNiaFeatureUsageByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNiaFeatureUsageByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiaInventoryList')
def GetNiatelemetryNiaInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNiaInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiaInventoryByMoid')
def GetNiatelemetryNiaInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNiaInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiaInventoryDcnmList')
def GetNiatelemetryNiaInventoryDcnmList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNiaInventoryDcnmList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiaInventoryDcnmByMoid')
def GetNiatelemetryNiaInventoryDcnmByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNiaInventoryDcnmByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiaInventoryFabricList')
def GetNiatelemetryNiaInventoryFabricList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNiaInventoryFabricList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiaInventoryFabricByMoid')
def GetNiatelemetryNiaInventoryFabricByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNiaInventoryFabricByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiaLicenseStateList')
def GetNiatelemetryNiaLicenseStateList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNiaLicenseStateList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiaLicenseStateByMoid')
def GetNiatelemetryNiaLicenseStateByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNiaLicenseStateByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiccList')
def GetNiatelemetryNiccList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNiccList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryNiccByMoid')
def GetNiatelemetryNiccByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryNiccByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryPasswordStrengthCheckList')
def GetNiatelemetryPasswordStrengthCheckList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryPasswordStrengthCheckList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryPasswordStrengthCheckByMoid')
def GetNiatelemetryPasswordStrengthCheckByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryPasswordStrengthCheckByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryPodCommPoliciesList')
def GetNiatelemetryPodCommPoliciesList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryPodCommPoliciesList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryPodCommPoliciesByMoid')
def GetNiatelemetryPodCommPoliciesByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryPodCommPoliciesByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryPodSnmpPoliciesList')
def GetNiatelemetryPodSnmpPoliciesList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryPodSnmpPoliciesList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryPodSnmpPoliciesByMoid')
def GetNiatelemetryPodSnmpPoliciesByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryPodSnmpPoliciesByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryPodTimeServerPoliciesList')
def GetNiatelemetryPodTimeServerPoliciesList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryPodTimeServerPoliciesList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryPodTimeServerPoliciesByMoid')
def GetNiatelemetryPodTimeServerPoliciesByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryPodTimeServerPoliciesByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySiteInventoryList')
def GetNiatelemetrySiteInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetrySiteInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySiteInventoryByMoid')
def GetNiatelemetrySiteInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetrySiteInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySnmpSrcList')
def GetNiatelemetrySnmpSrcList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetrySnmpSrcList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySnmpSrcByMoid')
def GetNiatelemetrySnmpSrcByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetrySnmpSrcByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySpinePolGrpDetailsList')
def GetNiatelemetrySpinePolGrpDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetrySpinePolGrpDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySpinePolGrpDetailsByMoid')
def GetNiatelemetrySpinePolGrpDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetrySpinePolGrpDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySshVersionTwoList')
def GetNiatelemetrySshVersionTwoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetrySshVersionTwoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySshVersionTwoByMoid')
def GetNiatelemetrySshVersionTwoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetrySshVersionTwoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySupervisorModuleDetailsList')
def GetNiatelemetrySupervisorModuleDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetrySupervisorModuleDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySupervisorModuleDetailsByMoid')
def GetNiatelemetrySupervisorModuleDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetrySupervisorModuleDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySyslogRemoteDestList')
def GetNiatelemetrySyslogRemoteDestList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetrySyslogRemoteDestList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySyslogRemoteDestByMoid')
def GetNiatelemetrySyslogRemoteDestByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetrySyslogRemoteDestByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySyslogSysMsgList')
def GetNiatelemetrySyslogSysMsgList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetrySyslogSysMsgList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySyslogSysMsgByMoid')
def GetNiatelemetrySyslogSysMsgByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetrySyslogSysMsgByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySyslogSysMsgFacFilterList')
def GetNiatelemetrySyslogSysMsgFacFilterList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetrySyslogSysMsgFacFilterList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySyslogSysMsgFacFilterByMoid')
def GetNiatelemetrySyslogSysMsgFacFilterByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetrySyslogSysMsgFacFilterByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySystemControllerDetailsList')
def GetNiatelemetrySystemControllerDetailsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetrySystemControllerDetailsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetrySystemControllerDetailsByMoid')
def GetNiatelemetrySystemControllerDetailsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetrySystemControllerDetailsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryTenantList')
def GetNiatelemetryTenantList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryTenantList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNiatelemetryTenantByMoid')
def GetNiatelemetryTenantByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNiatelemetryTenantByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNotificationAccountSubscriptionList')
def GetNotificationAccountSubscriptionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNotificationAccountSubscriptionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNotificationAccountSubscriptionByMoid')
def GetNotificationAccountSubscriptionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNotificationAccountSubscriptionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNtpNtpServerList')
def GetNtpNtpServerList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNtpNtpServerList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNtpNtpServerByMoid')
def GetNtpNtpServerByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNtpNtpServerByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNtpPolicyList')
def GetNtpPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNtpPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetNtpPolicyByMoid')
def GetNtpPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetNtpPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOauthAccessTokenList')
def GetOauthAccessTokenList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOauthAccessTokenList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOauthAccessTokenByMoid')
def GetOauthAccessTokenByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOauthAccessTokenByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOauthAuthorizationList')
def GetOauthAuthorizationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOauthAuthorizationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOauthAuthorizationByMoid')
def GetOauthAuthorizationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOauthAuthorizationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOpenapiApiMethodMetaList')
def GetOpenapiApiMethodMetaList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOpenapiApiMethodMetaList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOpenapiApiMethodMetaByMoid')
def GetOpenapiApiMethodMetaByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOpenapiApiMethodMetaByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOpenapiOpenApiSpecificationList')
def GetOpenapiOpenApiSpecificationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOpenapiOpenApiSpecificationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOpenapiOpenApiSpecificationByMoid')
def GetOpenapiOpenApiSpecificationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOpenapiOpenApiSpecificationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOpenapiProcessFileList')
def GetOpenapiProcessFileList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOpenapiProcessFileList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOpenapiProcessFileByMoid')
def GetOpenapiProcessFileByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOpenapiProcessFileByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOpenapiTaskGenerationRequestList')
def GetOpenapiTaskGenerationRequestList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOpenapiTaskGenerationRequestList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOpenapiTaskGenerationRequestByMoid')
def GetOpenapiTaskGenerationRequestByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOpenapiTaskGenerationRequestByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOpenapiTaskGenerationResultList')
def GetOpenapiTaskGenerationResultList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOpenapiTaskGenerationResultList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOpenapiTaskGenerationResultByMoid')
def GetOpenapiTaskGenerationResultByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOpenapiTaskGenerationResultByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOprsDeploymentList')
def GetOprsDeploymentList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOprsDeploymentList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOprsDeploymentByMoid')
def GetOprsDeploymentByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOprsDeploymentByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOprsSyncTargetListMessageList')
def GetOprsSyncTargetListMessageList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOprsSyncTargetListMessageList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOprsSyncTargetListMessageByMoid')
def GetOprsSyncTargetListMessageByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOprsSyncTargetListMessageByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOrganizationOrganizationList')
def GetOrganizationOrganizationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOrganizationOrganizationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOrganizationOrganizationByMoid')
def GetOrganizationOrganizationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOrganizationOrganizationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsBulkInstallInfoList')
def GetOsBulkInstallInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOsBulkInstallInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsBulkInstallInfoByMoid')
def GetOsBulkInstallInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOsBulkInstallInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsCatalogList')
def GetOsCatalogList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOsCatalogList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsCatalogByMoid')
def GetOsCatalogByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOsCatalogByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsConfigurationFileList')
def GetOsConfigurationFileList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOsConfigurationFileList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsConfigurationFileByMoid')
def GetOsConfigurationFileByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOsConfigurationFileByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsDistributionList')
def GetOsDistributionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOsDistributionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsDistributionByMoid')
def GetOsDistributionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOsDistributionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsInstallList')
def GetOsInstallList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOsInstallList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsInstallByMoid')
def GetOsInstallByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOsInstallByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsSupportedVersionList')
def GetOsSupportedVersionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOsSupportedVersionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsSupportedVersionByMoid')
def GetOsSupportedVersionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOsSupportedVersionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsValidRemoteTargetList')
def GetOsValidRemoteTargetList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOsValidRemoteTargetList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetOsValidRemoteTargetByMoid')
def GetOsValidRemoteTargetByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetOsValidRemoteTargetByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationDcLogsList')
def GetPartnerintegrationDcLogsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPartnerintegrationDcLogsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationDcLogsByMoid')
def GetPartnerintegrationDcLogsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPartnerintegrationDcLogsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationDeviceConnectorList')
def GetPartnerintegrationDeviceConnectorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPartnerintegrationDeviceConnectorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationDeviceConnectorByMoid')
def GetPartnerintegrationDeviceConnectorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPartnerintegrationDeviceConnectorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationDocIssuesList')
def GetPartnerintegrationDocIssuesList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPartnerintegrationDocIssuesList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationDocIssuesByMoid')
def GetPartnerintegrationDocIssuesByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPartnerintegrationDocIssuesByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationEtlList')
def GetPartnerintegrationEtlList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPartnerintegrationEtlList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationEtlByMoid')
def GetPartnerintegrationEtlByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPartnerintegrationEtlByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationFileList')
def GetPartnerintegrationFileList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPartnerintegrationFileList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationFileByMoid')
def GetPartnerintegrationFileByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPartnerintegrationFileByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationInventoryList')
def GetPartnerintegrationInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPartnerintegrationInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationInventoryByMoid')
def GetPartnerintegrationInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPartnerintegrationInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationLogsList')
def GetPartnerintegrationLogsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPartnerintegrationLogsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationLogsByMoid')
def GetPartnerintegrationLogsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPartnerintegrationLogsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationMetricsList')
def GetPartnerintegrationMetricsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPartnerintegrationMetricsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationMetricsByMoid')
def GetPartnerintegrationMetricsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPartnerintegrationMetricsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationModelList')
def GetPartnerintegrationModelList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPartnerintegrationModelList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPartnerintegrationModelByMoid')
def GetPartnerintegrationModelByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPartnerintegrationModelByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPciCoprocessorCardList')
def GetPciCoprocessorCardList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPciCoprocessorCardList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPciCoprocessorCardByMoid')
def GetPciCoprocessorCardByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPciCoprocessorCardByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPciDeviceList')
def GetPciDeviceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPciDeviceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPciDeviceByMoid')
def GetPciDeviceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPciDeviceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPciLinkList')
def GetPciLinkList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPciLinkList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPciLinkByMoid')
def GetPciLinkByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPciLinkByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPciNodeList')
def GetPciNodeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPciNodeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPciNodeByMoid')
def GetPciNodeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPciNodeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPciSwitchList')
def GetPciSwitchList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPciSwitchList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPciSwitchByMoid')
def GetPciSwitchByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPciSwitchByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPortGroupList')
def GetPortGroupList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPortGroupList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPortGroupByMoid')
def GetPortGroupByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPortGroupByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPortMacBindingList')
def GetPortMacBindingList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPortMacBindingList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPortMacBindingByMoid')
def GetPortMacBindingByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPortMacBindingByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPortSubGroupList')
def GetPortSubGroupList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPortSubGroupList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPortSubGroupByMoid')
def GetPortSubGroupByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPortSubGroupByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPowerControlStateList')
def GetPowerControlStateList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPowerControlStateList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPowerControlStateByMoid')
def GetPowerControlStateByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPowerControlStateByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPowerPolicyList')
def GetPowerPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPowerPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPowerPolicyByMoid')
def GetPowerPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPowerPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPowerPolicyInventoryList')
def GetPowerPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPowerPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetPowerPolicyInventoryByMoid')
def GetPowerPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetPowerPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetProcessorUnitList')
def GetProcessorUnitList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetProcessorUnitList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetProcessorUnitByMoid')
def GetProcessorUnitByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetProcessorUnitByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRackUnitPersonalityList')
def GetRackUnitPersonalityList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRackUnitPersonalityList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRackUnitPersonalityByMoid')
def GetRackUnitPersonalityByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRackUnitPersonalityByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationCapacityRunwayList')
def GetRecommendationCapacityRunwayList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecommendationCapacityRunwayList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationCapacityRunwayByMoid')
def GetRecommendationCapacityRunwayByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecommendationCapacityRunwayByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationClusterExpansionList')
def GetRecommendationClusterExpansionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecommendationClusterExpansionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationClusterExpansionByMoid')
def GetRecommendationClusterExpansionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecommendationClusterExpansionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationHardwareExpansionRequestList')
def GetRecommendationHardwareExpansionRequestList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecommendationHardwareExpansionRequestList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationHardwareExpansionRequestByMoid')
def GetRecommendationHardwareExpansionRequestByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecommendationHardwareExpansionRequestByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationHardwareExpansionRequestItemList')
def GetRecommendationHardwareExpansionRequestItemList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecommendationHardwareExpansionRequestItemList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationHardwareExpansionRequestItemByMoid')
def GetRecommendationHardwareExpansionRequestItemByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecommendationHardwareExpansionRequestItemByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationPhysicalItemList')
def GetRecommendationPhysicalItemList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecommendationPhysicalItemList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationPhysicalItemByMoid')
def GetRecommendationPhysicalItemByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecommendationPhysicalItemByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationPurchaseOrderEstimateList')
def GetRecommendationPurchaseOrderEstimateList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecommendationPurchaseOrderEstimateList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationPurchaseOrderEstimateByMoid')
def GetRecommendationPurchaseOrderEstimateByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecommendationPurchaseOrderEstimateByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationPurchaseOrderListList')
def GetRecommendationPurchaseOrderListList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecommendationPurchaseOrderListList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationPurchaseOrderListByMoid')
def GetRecommendationPurchaseOrderListByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecommendationPurchaseOrderListByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationSoftwareItemList')
def GetRecommendationSoftwareItemList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecommendationSoftwareItemList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecommendationSoftwareItemByMoid')
def GetRecommendationSoftwareItemByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecommendationSoftwareItemByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryBackupConfigPolicyList')
def GetRecoveryBackupConfigPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecoveryBackupConfigPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryBackupConfigPolicyByMoid')
def GetRecoveryBackupConfigPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecoveryBackupConfigPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryBackupProfileList')
def GetRecoveryBackupProfileList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecoveryBackupProfileList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryBackupProfileByMoid')
def GetRecoveryBackupProfileByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecoveryBackupProfileByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryConfigResultList')
def GetRecoveryConfigResultList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecoveryConfigResultList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryConfigResultByMoid')
def GetRecoveryConfigResultByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecoveryConfigResultByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryConfigResultEntryList')
def GetRecoveryConfigResultEntryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecoveryConfigResultEntryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryConfigResultEntryByMoid')
def GetRecoveryConfigResultEntryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecoveryConfigResultEntryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryOnDemandBackupList')
def GetRecoveryOnDemandBackupList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecoveryOnDemandBackupList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryOnDemandBackupByMoid')
def GetRecoveryOnDemandBackupByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecoveryOnDemandBackupByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryRestoreList')
def GetRecoveryRestoreList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecoveryRestoreList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryRestoreByMoid')
def GetRecoveryRestoreByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecoveryRestoreByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryScheduleConfigPolicyList')
def GetRecoveryScheduleConfigPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecoveryScheduleConfigPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetRecoveryScheduleConfigPolicyByMoid')
def GetRecoveryScheduleConfigPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetRecoveryScheduleConfigPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceGroupList')
def GetResourceGroupList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourceGroupList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceGroupByMoid')
def GetResourceGroupByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourceGroupByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceGroupMemberList')
def GetResourceGroupMemberList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourceGroupMemberList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceGroupMemberByMoid')
def GetResourceGroupMemberByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourceGroupMemberByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceLicenseResourceCountList')
def GetResourceLicenseResourceCountList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourceLicenseResourceCountList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceLicenseResourceCountByMoid')
def GetResourceLicenseResourceCountByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourceLicenseResourceCountByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceMembershipList')
def GetResourceMembershipList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourceMembershipList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceMembershipByMoid')
def GetResourceMembershipByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourceMembershipByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceMembershipHolderList')
def GetResourceMembershipHolderList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourceMembershipHolderList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceMembershipHolderByMoid')
def GetResourceMembershipHolderByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourceMembershipHolderByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceReservationList')
def GetResourceReservationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourceReservationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceReservationByMoid')
def GetResourceReservationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourceReservationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceSelectionCriteriaList')
def GetResourceSelectionCriteriaList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourceSelectionCriteriaList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceSelectionCriteriaByMoid')
def GetResourceSelectionCriteriaByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourceSelectionCriteriaByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceSharedResourcesInfoHolderList')
def GetResourceSharedResourcesInfoHolderList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourceSharedResourcesInfoHolderList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourceSharedResourcesInfoHolderByMoid')
def GetResourceSharedResourcesInfoHolderByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourceSharedResourcesInfoHolderByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolLeaseList')
def GetResourcepoolLeaseList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourcepoolLeaseList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolLeaseByMoid')
def GetResourcepoolLeaseByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourcepoolLeaseByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolLeaseResourceList')
def GetResourcepoolLeaseResourceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourcepoolLeaseResourceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolLeaseResourceByMoid')
def GetResourcepoolLeaseResourceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourcepoolLeaseResourceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolMembershipReservationList')
def GetResourcepoolMembershipReservationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourcepoolMembershipReservationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolMembershipReservationByMoid')
def GetResourcepoolMembershipReservationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourcepoolMembershipReservationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolPoolList')
def GetResourcepoolPoolList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourcepoolPoolList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolPoolByMoid')
def GetResourcepoolPoolByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourcepoolPoolByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolPoolMemberList')
def GetResourcepoolPoolMemberList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourcepoolPoolMemberList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolPoolMemberByMoid')
def GetResourcepoolPoolMemberByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourcepoolPoolMemberByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolQualificationPolicyList')
def GetResourcepoolQualificationPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourcepoolQualificationPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolQualificationPolicyByMoid')
def GetResourcepoolQualificationPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourcepoolQualificationPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolUniverseList')
def GetResourcepoolUniverseList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourcepoolUniverseList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetResourcepoolUniverseByMoid')
def GetResourcepoolUniverseByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetResourcepoolUniverseByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSchedulerTaskResultList')
def GetSchedulerTaskResultList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSchedulerTaskResultList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSchedulerTaskResultByMoid')
def GetSchedulerTaskResultByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSchedulerTaskResultByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSchedulerTaskScheduleList')
def GetSchedulerTaskScheduleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSchedulerTaskScheduleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSchedulerTaskScheduleByMoid')
def GetSchedulerTaskScheduleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSchedulerTaskScheduleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSdaaciConnectionList')
def GetSdaaciConnectionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSdaaciConnectionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSdaaciConnectionByMoid')
def GetSdaaciConnectionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSdaaciConnectionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSdaaciConnectionDetailList')
def GetSdaaciConnectionDetailList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSdaaciConnectionDetailList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSdaaciConnectionDetailByMoid')
def GetSdaaciConnectionDetailByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSdaaciConnectionDetailByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSdcardPolicyList')
def GetSdcardPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSdcardPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSdcardPolicyByMoid')
def GetSdcardPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSdcardPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSdcardPolicyInventoryList')
def GetSdcardPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSdcardPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSdcardPolicyInventoryByMoid')
def GetSdcardPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSdcardPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSearchSearchItemList')
def GetSearchSearchItemList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSearchSearchItemList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSearchSearchItemByMoid')
def GetSearchSearchItemByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSearchSearchItemByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSearchTagItemList')
def GetSearchTagItemList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSearchTagItemList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSearchTagItemByMoid')
def GetSearchTagItemByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSearchTagItemByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSecurityUnitList')
def GetSecurityUnitList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSecurityUnitList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSecurityUnitByMoid')
def GetSecurityUnitByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSecurityUnitByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerConfigChangeDetailList')
def GetServerConfigChangeDetailList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetServerConfigChangeDetailList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerConfigChangeDetailByMoid')
def GetServerConfigChangeDetailByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetServerConfigChangeDetailByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerConfigImportList')
def GetServerConfigImportList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetServerConfigImportList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerConfigImportByMoid')
def GetServerConfigImportByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetServerConfigImportByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerConfigResultList')
def GetServerConfigResultList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetServerConfigResultList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerConfigResultByMoid')
def GetServerConfigResultByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetServerConfigResultByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerConfigResultEntryList')
def GetServerConfigResultEntryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetServerConfigResultEntryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerConfigResultEntryByMoid')
def GetServerConfigResultEntryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetServerConfigResultEntryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerDisruptionList')
def GetServerDisruptionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetServerDisruptionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerDisruptionByMoid')
def GetServerDisruptionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetServerDisruptionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerProfileList')
def GetServerProfileList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetServerProfileList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerProfileByMoid')
def GetServerProfileByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetServerProfileByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerProfileTemplateList')
def GetServerProfileTemplateList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetServerProfileTemplateList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServerProfileTemplateByMoid')
def GetServerProfileTemplateByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetServerProfileTemplateByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServicenowChangeRequestList')
def GetServicenowChangeRequestList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetServicenowChangeRequestList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServicenowChangeRequestByMoid')
def GetServicenowChangeRequestByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetServicenowChangeRequestByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServicenowChangeRequestDocList')
def GetServicenowChangeRequestDocList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetServicenowChangeRequestDocList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServicenowChangeRequestDocByMoid')
def GetServicenowChangeRequestDocByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetServicenowChangeRequestDocByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServicenowIncidentList')
def GetServicenowIncidentList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetServicenowIncidentList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServicenowIncidentByMoid')
def GetServicenowIncidentByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetServicenowIncidentByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServicenowIncidentDocList')
def GetServicenowIncidentDocList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetServicenowIncidentDocList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetServicenowIncidentDocByMoid')
def GetServicenowIncidentDocByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetServicenowIncidentDocByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSmtpPolicyList')
def GetSmtpPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSmtpPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSmtpPolicyByMoid')
def GetSmtpPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSmtpPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSmtpPolicyTestList')
def GetSmtpPolicyTestList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSmtpPolicyTestList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSmtpPolicyTestByMoid')
def GetSmtpPolicyTestByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSmtpPolicyTestByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSnmpPolicyList')
def GetSnmpPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSnmpPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSnmpPolicyByMoid')
def GetSnmpPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSnmpPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSnmpPolicyInventoryList')
def GetSnmpPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSnmpPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSnmpPolicyInventoryByMoid')
def GetSnmpPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSnmpPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareApplianceDistributableList')
def GetSoftwareApplianceDistributableList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareApplianceDistributableList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareApplianceDistributableByMoid')
def GetSoftwareApplianceDistributableByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareApplianceDistributableByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareDownloadHistoryList')
def GetSoftwareDownloadHistoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareDownloadHistoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareDownloadHistoryByMoid')
def GetSoftwareDownloadHistoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareDownloadHistoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareHciBundleDistributableList')
def GetSoftwareHciBundleDistributableList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareHciBundleDistributableList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareHciBundleDistributableByMoid')
def GetSoftwareHciBundleDistributableByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareHciBundleDistributableByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareHciDistributableList')
def GetSoftwareHciDistributableList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareHciDistributableList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareHciDistributableByMoid')
def GetSoftwareHciDistributableByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareHciDistributableByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareHclMetaList')
def GetSoftwareHclMetaList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareHclMetaList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareHclMetaByMoid')
def GetSoftwareHclMetaByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareHclMetaByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareHyperflexBundleDistributableList')
def GetSoftwareHyperflexBundleDistributableList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareHyperflexBundleDistributableList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareHyperflexBundleDistributableByMoid')
def GetSoftwareHyperflexBundleDistributableByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareHyperflexBundleDistributableByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareHyperflexDistributableList')
def GetSoftwareHyperflexDistributableList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareHyperflexDistributableList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareHyperflexDistributableByMoid')
def GetSoftwareHyperflexDistributableByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareHyperflexDistributableByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareIksBundleDistributableList')
def GetSoftwareIksBundleDistributableList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareIksBundleDistributableList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareIksBundleDistributableByMoid')
def GetSoftwareIksBundleDistributableByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareIksBundleDistributableByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareReleaseMetaList')
def GetSoftwareReleaseMetaList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareReleaseMetaList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareReleaseMetaByMoid')
def GetSoftwareReleaseMetaByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareReleaseMetaByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareSolutionDistributableList')
def GetSoftwareSolutionDistributableList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareSolutionDistributableList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareSolutionDistributableByMoid')
def GetSoftwareSolutionDistributableByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareSolutionDistributableByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareUcsdBundleDistributableList')
def GetSoftwareUcsdBundleDistributableList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareUcsdBundleDistributableList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareUcsdBundleDistributableByMoid')
def GetSoftwareUcsdBundleDistributableByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareUcsdBundleDistributableByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareUcsdDistributableList')
def GetSoftwareUcsdDistributableList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareUcsdDistributableList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwareUcsdDistributableByMoid')
def GetSoftwareUcsdDistributableByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwareUcsdDistributableByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryAuthorizationList')
def GetSoftwarerepositoryAuthorizationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwarerepositoryAuthorizationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryAuthorizationByMoid')
def GetSoftwarerepositoryAuthorizationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwarerepositoryAuthorizationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCachedImageList')
def GetSoftwarerepositoryCachedImageList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwarerepositoryCachedImageList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCachedImageByMoid')
def GetSoftwarerepositoryCachedImageByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwarerepositoryCachedImageByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCatalogList')
def GetSoftwarerepositoryCatalogList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwarerepositoryCatalogList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCatalogByMoid')
def GetSoftwarerepositoryCatalogByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwarerepositoryCatalogByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCategoryMapperList')
def GetSoftwarerepositoryCategoryMapperList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwarerepositoryCategoryMapperList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCategoryMapperByMoid')
def GetSoftwarerepositoryCategoryMapperByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwarerepositoryCategoryMapperByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCategoryMapperModelList')
def GetSoftwarerepositoryCategoryMapperModelList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwarerepositoryCategoryMapperModelList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCategoryMapperModelByMoid')
def GetSoftwarerepositoryCategoryMapperModelByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwarerepositoryCategoryMapperModelByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCategorySupportConstraintList')
def GetSoftwarerepositoryCategorySupportConstraintList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwarerepositoryCategorySupportConstraintList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCategorySupportConstraintByMoid')
def GetSoftwarerepositoryCategorySupportConstraintByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwarerepositoryCategorySupportConstraintByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCategoryUnsupportedModelsList')
def GetSoftwarerepositoryCategoryUnsupportedModelsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwarerepositoryCategoryUnsupportedModelsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryCategoryUnsupportedModelsByMoid')
def GetSoftwarerepositoryCategoryUnsupportedModelsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwarerepositoryCategoryUnsupportedModelsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryDownloadSpecList')
def GetSoftwarerepositoryDownloadSpecList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwarerepositoryDownloadSpecList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryDownloadSpecByMoid')
def GetSoftwarerepositoryDownloadSpecByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwarerepositoryDownloadSpecByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryOperatingSystemFileList')
def GetSoftwarerepositoryOperatingSystemFileList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwarerepositoryOperatingSystemFileList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryOperatingSystemFileByMoid')
def GetSoftwarerepositoryOperatingSystemFileByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwarerepositoryOperatingSystemFileByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryReleaseList')
def GetSoftwarerepositoryReleaseList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwarerepositoryReleaseList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSoftwarerepositoryReleaseByMoid')
def GetSoftwarerepositoryReleaseByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSoftwarerepositoryReleaseByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSolPolicyList')
def GetSolPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSolPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSolPolicyByMoid')
def GetSolPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSolPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSolPolicyInventoryList')
def GetSolPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSolPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSolPolicyInventoryByMoid')
def GetSolPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSolPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSshPolicyList')
def GetSshPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSshPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSshPolicyByMoid')
def GetSshPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSshPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSshPolicyInventoryList')
def GetSshPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSshPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSshPolicyInventoryByMoid')
def GetSshPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSshPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageBatteryBackupUnitList')
def GetStorageBatteryBackupUnitList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageBatteryBackupUnitList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageBatteryBackupUnitByMoid')
def GetStorageBatteryBackupUnitByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageBatteryBackupUnitByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageControllerList')
def GetStorageControllerList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageControllerList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageControllerByMoid')
def GetStorageControllerByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageControllerByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageControllerDriveList')
def GetStorageControllerDriveList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageControllerDriveList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageControllerDriveByMoid')
def GetStorageControllerDriveByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageControllerDriveByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageDiskGroupList')
def GetStorageDiskGroupList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageDiskGroupList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageDiskGroupByMoid')
def GetStorageDiskGroupByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageDiskGroupByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageDiskSlotList')
def GetStorageDiskSlotList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageDiskSlotList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageDiskSlotByMoid')
def GetStorageDiskSlotByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageDiskSlotByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageDriveGroupList')
def GetStorageDriveGroupList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageDriveGroupList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageDriveGroupByMoid')
def GetStorageDriveGroupByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageDriveGroupByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageDriveSecurityPolicyList')
def GetStorageDriveSecurityPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageDriveSecurityPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageDriveSecurityPolicyByMoid')
def GetStorageDriveSecurityPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageDriveSecurityPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageEnclosureList')
def GetStorageEnclosureList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageEnclosureList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageEnclosureByMoid')
def GetStorageEnclosureByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageEnclosureByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageEnclosureDiskList')
def GetStorageEnclosureDiskList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageEnclosureDiskList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageEnclosureDiskByMoid')
def GetStorageEnclosureDiskByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageEnclosureDiskByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageEnclosureDiskSlotEpList')
def GetStorageEnclosureDiskSlotEpList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageEnclosureDiskSlotEpList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageEnclosureDiskSlotEpByMoid')
def GetStorageEnclosureDiskSlotEpByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageEnclosureDiskSlotEpByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFileItemList')
def GetStorageFileItemList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageFileItemList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFileItemByMoid')
def GetStorageFileItemByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageFileItemByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexFlashControllerList')
def GetStorageFlexFlashControllerList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageFlexFlashControllerList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexFlashControllerByMoid')
def GetStorageFlexFlashControllerByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageFlexFlashControllerByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexFlashControllerPropsList')
def GetStorageFlexFlashControllerPropsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageFlexFlashControllerPropsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexFlashControllerPropsByMoid')
def GetStorageFlexFlashControllerPropsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageFlexFlashControllerPropsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexFlashPhysicalDriveList')
def GetStorageFlexFlashPhysicalDriveList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageFlexFlashPhysicalDriveList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexFlashPhysicalDriveByMoid')
def GetStorageFlexFlashPhysicalDriveByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageFlexFlashPhysicalDriveByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexFlashVirtualDriveList')
def GetStorageFlexFlashVirtualDriveList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageFlexFlashVirtualDriveList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexFlashVirtualDriveByMoid')
def GetStorageFlexFlashVirtualDriveByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageFlexFlashVirtualDriveByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexUtilControllerList')
def GetStorageFlexUtilControllerList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageFlexUtilControllerList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexUtilControllerByMoid')
def GetStorageFlexUtilControllerByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageFlexUtilControllerByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexUtilPhysicalDriveList')
def GetStorageFlexUtilPhysicalDriveList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageFlexUtilPhysicalDriveList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexUtilPhysicalDriveByMoid')
def GetStorageFlexUtilPhysicalDriveByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageFlexUtilPhysicalDriveByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexUtilVirtualDriveList')
def GetStorageFlexUtilVirtualDriveList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageFlexUtilVirtualDriveList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageFlexUtilVirtualDriveByMoid')
def GetStorageFlexUtilVirtualDriveByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageFlexUtilVirtualDriveByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiArrayList')
def GetStorageHitachiArrayList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiArrayList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiArrayByMoid')
def GetStorageHitachiArrayByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiArrayByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiControllerList')
def GetStorageHitachiControllerList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiControllerList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiControllerByMoid')
def GetStorageHitachiControllerByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiControllerByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiDiskList')
def GetStorageHitachiDiskList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiDiskList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiDiskByMoid')
def GetStorageHitachiDiskByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiDiskByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiExternalParityGroupList')
def GetStorageHitachiExternalParityGroupList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiExternalParityGroupList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiExternalParityGroupByMoid')
def GetStorageHitachiExternalParityGroupByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiExternalParityGroupByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiExternalPathGroupList')
def GetStorageHitachiExternalPathGroupList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiExternalPathGroupList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiExternalPathGroupByMoid')
def GetStorageHitachiExternalPathGroupByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiExternalPathGroupByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiExternalStorageLunList')
def GetStorageHitachiExternalStorageLunList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiExternalStorageLunList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiExternalStorageLunByMoid')
def GetStorageHitachiExternalStorageLunByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiExternalStorageLunByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiExternalStoragePortList')
def GetStorageHitachiExternalStoragePortList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiExternalStoragePortList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiExternalStoragePortByMoid')
def GetStorageHitachiExternalStoragePortByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiExternalStoragePortByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiHostList')
def GetStorageHitachiHostList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiHostList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiHostByMoid')
def GetStorageHitachiHostByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiHostByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiHostLunList')
def GetStorageHitachiHostLunList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiHostLunList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiHostLunByMoid')
def GetStorageHitachiHostLunByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiHostLunByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiNvmSubsystemList')
def GetStorageHitachiNvmSubsystemList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiNvmSubsystemList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiNvmSubsystemByMoid')
def GetStorageHitachiNvmSubsystemByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiNvmSubsystemByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiParityGroupList')
def GetStorageHitachiParityGroupList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiParityGroupList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiParityGroupByMoid')
def GetStorageHitachiParityGroupByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiParityGroupByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiPoolList')
def GetStorageHitachiPoolList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiPoolList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiPoolByMoid')
def GetStorageHitachiPoolByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiPoolByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiPortList')
def GetStorageHitachiPortList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiPortList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiPortByMoid')
def GetStorageHitachiPortByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiPortByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiRemoteCopyPairGadList')
def GetStorageHitachiRemoteCopyPairGadList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiRemoteCopyPairGadList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiRemoteCopyPairGadByMoid')
def GetStorageHitachiRemoteCopyPairGadByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiRemoteCopyPairGadByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiRemoteCopyPairTcList')
def GetStorageHitachiRemoteCopyPairTcList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiRemoteCopyPairTcList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiRemoteCopyPairTcByMoid')
def GetStorageHitachiRemoteCopyPairTcByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiRemoteCopyPairTcByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiRemoteCopyPairUrList')
def GetStorageHitachiRemoteCopyPairUrList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiRemoteCopyPairUrList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiRemoteCopyPairUrByMoid')
def GetStorageHitachiRemoteCopyPairUrByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiRemoteCopyPairUrByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiRemoteReplicationList')
def GetStorageHitachiRemoteReplicationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiRemoteReplicationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiRemoteReplicationByMoid')
def GetStorageHitachiRemoteReplicationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiRemoteReplicationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiSnapshotList')
def GetStorageHitachiSnapshotList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiSnapshotList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiSnapshotByMoid')
def GetStorageHitachiSnapshotByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiSnapshotByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiVolumeList')
def GetStorageHitachiVolumeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiVolumeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiVolumeByMoid')
def GetStorageHitachiVolumeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiVolumeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiVolumeMigrationPairList')
def GetStorageHitachiVolumeMigrationPairList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiVolumeMigrationPairList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHitachiVolumeMigrationPairByMoid')
def GetStorageHitachiVolumeMigrationPairByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHitachiVolumeMigrationPairByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHyperFlexStorageContainerList')
def GetStorageHyperFlexStorageContainerList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHyperFlexStorageContainerList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHyperFlexStorageContainerByMoid')
def GetStorageHyperFlexStorageContainerByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHyperFlexStorageContainerByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHyperFlexVolumeList')
def GetStorageHyperFlexVolumeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHyperFlexVolumeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageHyperFlexVolumeByMoid')
def GetStorageHyperFlexVolumeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageHyperFlexVolumeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageItemList')
def GetStorageItemList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageItemList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageItemByMoid')
def GetStorageItemByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageItemByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageKnoxSecureDriveConfigurationList')
def GetStorageKnoxSecureDriveConfigurationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageKnoxSecureDriveConfigurationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageKnoxSecureDriveConfigurationByMoid')
def GetStorageKnoxSecureDriveConfigurationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageKnoxSecureDriveConfigurationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppAggregateList')
def GetStorageNetAppAggregateList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppAggregateList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppAggregateByMoid')
def GetStorageNetAppAggregateByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppAggregateByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppAggregateEventList')
def GetStorageNetAppAggregateEventList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppAggregateEventList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppAggregateEventByMoid')
def GetStorageNetAppAggregateEventByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppAggregateEventByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppBaseDiskList')
def GetStorageNetAppBaseDiskList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppBaseDiskList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppBaseDiskByMoid')
def GetStorageNetAppBaseDiskByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppBaseDiskByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppCifsServiceList')
def GetStorageNetAppCifsServiceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppCifsServiceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppCifsServiceByMoid')
def GetStorageNetAppCifsServiceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppCifsServiceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppCifsShareList')
def GetStorageNetAppCifsShareList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppCifsShareList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppCifsShareByMoid')
def GetStorageNetAppCifsShareByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppCifsShareByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppCloudTargetList')
def GetStorageNetAppCloudTargetList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppCloudTargetList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppCloudTargetByMoid')
def GetStorageNetAppCloudTargetByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppCloudTargetByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppClusterList')
def GetStorageNetAppClusterList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppClusterList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppClusterByMoid')
def GetStorageNetAppClusterByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppClusterByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppClusterEventList')
def GetStorageNetAppClusterEventList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppClusterEventList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppClusterEventByMoid')
def GetStorageNetAppClusterEventByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppClusterEventByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppClusterSnapMirrorPolicyList')
def GetStorageNetAppClusterSnapMirrorPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppClusterSnapMirrorPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppClusterSnapMirrorPolicyByMoid')
def GetStorageNetAppClusterSnapMirrorPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppClusterSnapMirrorPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppClusterSnapshotPolicyList')
def GetStorageNetAppClusterSnapshotPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppClusterSnapshotPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppClusterSnapshotPolicyByMoid')
def GetStorageNetAppClusterSnapshotPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppClusterSnapshotPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppDataIpInterfaceList')
def GetStorageNetAppDataIpInterfaceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppDataIpInterfaceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppDataIpInterfaceByMoid')
def GetStorageNetAppDataIpInterfaceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppDataIpInterfaceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppDataIpInterfaceEventList')
def GetStorageNetAppDataIpInterfaceEventList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppDataIpInterfaceEventList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppDataIpInterfaceEventByMoid')
def GetStorageNetAppDataIpInterfaceEventByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppDataIpInterfaceEventByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppDiskEventList')
def GetStorageNetAppDiskEventList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppDiskEventList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppDiskEventByMoid')
def GetStorageNetAppDiskEventByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppDiskEventByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppEthernetPortList')
def GetStorageNetAppEthernetPortList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppEthernetPortList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppEthernetPortByMoid')
def GetStorageNetAppEthernetPortByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppEthernetPortByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppEthernetPortEventList')
def GetStorageNetAppEthernetPortEventList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppEthernetPortEventList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppEthernetPortEventByMoid')
def GetStorageNetAppEthernetPortEventByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppEthernetPortEventByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppExportPolicyList')
def GetStorageNetAppExportPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppExportPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppExportPolicyByMoid')
def GetStorageNetAppExportPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppExportPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppFcInterfaceList')
def GetStorageNetAppFcInterfaceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppFcInterfaceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppFcInterfaceByMoid')
def GetStorageNetAppFcInterfaceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppFcInterfaceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppFcInterfaceEventList')
def GetStorageNetAppFcInterfaceEventList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppFcInterfaceEventList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppFcInterfaceEventByMoid')
def GetStorageNetAppFcInterfaceEventByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppFcInterfaceEventByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppFcPortList')
def GetStorageNetAppFcPortList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppFcPortList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppFcPortByMoid')
def GetStorageNetAppFcPortByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppFcPortByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppFcPortEventList')
def GetStorageNetAppFcPortEventList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppFcPortEventList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppFcPortEventByMoid')
def GetStorageNetAppFcPortEventByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppFcPortEventByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppInitiatorGroupList')
def GetStorageNetAppInitiatorGroupList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppInitiatorGroupList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppInitiatorGroupByMoid')
def GetStorageNetAppInitiatorGroupByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppInitiatorGroupByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppIpInterfaceList')
def GetStorageNetAppIpInterfaceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppIpInterfaceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppIpInterfaceByMoid')
def GetStorageNetAppIpInterfaceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppIpInterfaceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppIpInterfaceEventList')
def GetStorageNetAppIpInterfaceEventList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppIpInterfaceEventList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppIpInterfaceEventByMoid')
def GetStorageNetAppIpInterfaceEventByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppIpInterfaceEventByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppIscsiServiceList')
def GetStorageNetAppIscsiServiceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppIscsiServiceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppIscsiServiceByMoid')
def GetStorageNetAppIscsiServiceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppIscsiServiceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppLicenseList')
def GetStorageNetAppLicenseList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppLicenseList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppLicenseByMoid')
def GetStorageNetAppLicenseByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppLicenseByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppLunList')
def GetStorageNetAppLunList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppLunList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppLunByMoid')
def GetStorageNetAppLunByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppLunByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppLunEventList')
def GetStorageNetAppLunEventList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppLunEventList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppLunEventByMoid')
def GetStorageNetAppLunEventByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppLunEventByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppLunMapList')
def GetStorageNetAppLunMapList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppLunMapList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppLunMapByMoid')
def GetStorageNetAppLunMapByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppLunMapByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNamespaceList')
def GetStorageNetAppNamespaceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppNamespaceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNamespaceByMoid')
def GetStorageNetAppNamespaceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppNamespaceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNfsClientList')
def GetStorageNetAppNfsClientList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppNfsClientList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNfsClientByMoid')
def GetStorageNetAppNfsClientByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppNfsClientByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNfsServiceList')
def GetStorageNetAppNfsServiceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppNfsServiceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNfsServiceByMoid')
def GetStorageNetAppNfsServiceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppNfsServiceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNodeList')
def GetStorageNetAppNodeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppNodeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNodeByMoid')
def GetStorageNetAppNodeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppNodeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNodeCdpNeighborList')
def GetStorageNetAppNodeCdpNeighborList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppNodeCdpNeighborList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNodeCdpNeighborByMoid')
def GetStorageNetAppNodeCdpNeighborByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppNodeCdpNeighborByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNodeEventList')
def GetStorageNetAppNodeEventList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppNodeEventList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNodeEventByMoid')
def GetStorageNetAppNodeEventByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppNodeEventByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNonDataIpInterfaceList')
def GetStorageNetAppNonDataIpInterfaceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppNonDataIpInterfaceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNonDataIpInterfaceByMoid')
def GetStorageNetAppNonDataIpInterfaceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppNonDataIpInterfaceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNonDataIpInterfaceEventList')
def GetStorageNetAppNonDataIpInterfaceEventList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppNonDataIpInterfaceEventList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNonDataIpInterfaceEventByMoid')
def GetStorageNetAppNonDataIpInterfaceEventByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppNonDataIpInterfaceEventByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNtpServerList')
def GetStorageNetAppNtpServerList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppNtpServerList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppNtpServerByMoid')
def GetStorageNetAppNtpServerByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppNtpServerByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppQtreeList')
def GetStorageNetAppQtreeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppQtreeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppQtreeByMoid')
def GetStorageNetAppQtreeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppQtreeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppScheduleList')
def GetStorageNetAppScheduleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppScheduleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppScheduleByMoid')
def GetStorageNetAppScheduleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppScheduleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppSensorList')
def GetStorageNetAppSensorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppSensorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppSensorByMoid')
def GetStorageNetAppSensorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppSensorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppSnapMirrorRelationshipList')
def GetStorageNetAppSnapMirrorRelationshipList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppSnapMirrorRelationshipList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppSnapMirrorRelationshipByMoid')
def GetStorageNetAppSnapMirrorRelationshipByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppSnapMirrorRelationshipByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppStorageVmList')
def GetStorageNetAppStorageVmList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppStorageVmList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppStorageVmByMoid')
def GetStorageNetAppStorageVmByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppStorageVmByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppSvmEventList')
def GetStorageNetAppSvmEventList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppSvmEventList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppSvmEventByMoid')
def GetStorageNetAppSvmEventByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppSvmEventByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppSvmSnapMirrorPolicyList')
def GetStorageNetAppSvmSnapMirrorPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppSvmSnapMirrorPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppSvmSnapMirrorPolicyByMoid')
def GetStorageNetAppSvmSnapMirrorPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppSvmSnapMirrorPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppSvmSnapshotPolicyList')
def GetStorageNetAppSvmSnapshotPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppSvmSnapshotPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppSvmSnapshotPolicyByMoid')
def GetStorageNetAppSvmSnapshotPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppSvmSnapshotPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppVolumeList')
def GetStorageNetAppVolumeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppVolumeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppVolumeByMoid')
def GetStorageNetAppVolumeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppVolumeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppVolumeEventList')
def GetStorageNetAppVolumeEventList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppVolumeEventList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppVolumeEventByMoid')
def GetStorageNetAppVolumeEventByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppVolumeEventByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppVolumeSnapshotList')
def GetStorageNetAppVolumeSnapshotList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppVolumeSnapshotList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNetAppVolumeSnapshotByMoid')
def GetStorageNetAppVolumeSnapshotByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNetAppVolumeSnapshotByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNvmeRaidConfigurationList')
def GetStorageNvmeRaidConfigurationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNvmeRaidConfigurationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageNvmeRaidConfigurationByMoid')
def GetStorageNvmeRaidConfigurationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageNvmeRaidConfigurationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePhysicalDiskList')
def GetStoragePhysicalDiskList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePhysicalDiskList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePhysicalDiskByMoid')
def GetStoragePhysicalDiskByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePhysicalDiskByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePhysicalDiskExtensionList')
def GetStoragePhysicalDiskExtensionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePhysicalDiskExtensionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePhysicalDiskExtensionByMoid')
def GetStoragePhysicalDiskExtensionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePhysicalDiskExtensionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePhysicalDiskUsageList')
def GetStoragePhysicalDiskUsageList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePhysicalDiskUsageList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePhysicalDiskUsageByMoid')
def GetStoragePhysicalDiskUsageByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePhysicalDiskUsageByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureArrayList')
def GetStoragePureArrayList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureArrayList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureArrayByMoid')
def GetStoragePureArrayByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureArrayByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureArrayAlertsList')
def GetStoragePureArrayAlertsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureArrayAlertsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureArrayAlertsByMoid')
def GetStoragePureArrayAlertsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureArrayAlertsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureControllerList')
def GetStoragePureControllerList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureControllerList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureControllerByMoid')
def GetStoragePureControllerByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureControllerByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureDiskList')
def GetStoragePureDiskList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureDiskList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureDiskByMoid')
def GetStoragePureDiskByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureDiskByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureHostList')
def GetStoragePureHostList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureHostList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureHostByMoid')
def GetStoragePureHostByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureHostByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureHostGroupList')
def GetStoragePureHostGroupList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureHostGroupList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureHostGroupByMoid')
def GetStoragePureHostGroupByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureHostGroupByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureHostLunList')
def GetStoragePureHostLunList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureHostLunList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureHostLunByMoid')
def GetStoragePureHostLunByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureHostLunByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePurePortList')
def GetStoragePurePortList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePurePortList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePurePortByMoid')
def GetStoragePurePortByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePurePortByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureProtectionGroupList')
def GetStoragePureProtectionGroupList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureProtectionGroupList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureProtectionGroupByMoid')
def GetStoragePureProtectionGroupByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureProtectionGroupByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureProtectionGroupSnapshotList')
def GetStoragePureProtectionGroupSnapshotList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureProtectionGroupSnapshotList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureProtectionGroupSnapshotByMoid')
def GetStoragePureProtectionGroupSnapshotByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureProtectionGroupSnapshotByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureReplicationScheduleList')
def GetStoragePureReplicationScheduleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureReplicationScheduleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureReplicationScheduleByMoid')
def GetStoragePureReplicationScheduleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureReplicationScheduleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureSnapshotScheduleList')
def GetStoragePureSnapshotScheduleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureSnapshotScheduleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureSnapshotScheduleByMoid')
def GetStoragePureSnapshotScheduleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureSnapshotScheduleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureTargetArrayList')
def GetStoragePureTargetArrayList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureTargetArrayList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureTargetArrayByMoid')
def GetStoragePureTargetArrayByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureTargetArrayByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureVolumeList')
def GetStoragePureVolumeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureVolumeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureVolumeByMoid')
def GetStoragePureVolumeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureVolumeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureVolumeSnapshotList')
def GetStoragePureVolumeSnapshotList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureVolumeSnapshotList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStoragePureVolumeSnapshotByMoid')
def GetStoragePureVolumeSnapshotByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStoragePureVolumeSnapshotByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageSasExpanderList')
def GetStorageSasExpanderList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageSasExpanderList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageSasExpanderByMoid')
def GetStorageSasExpanderByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageSasExpanderByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageSasPortList')
def GetStorageSasPortList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageSasPortList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageSasPortByMoid')
def GetStorageSasPortByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageSasPortByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageSpanList')
def GetStorageSpanList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageSpanList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageSpanByMoid')
def GetStorageSpanByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageSpanByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageStoragePolicyList')
def GetStorageStoragePolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageStoragePolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageStoragePolicyByMoid')
def GetStorageStoragePolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageStoragePolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageVdMemberEpList')
def GetStorageVdMemberEpList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageVdMemberEpList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageVdMemberEpByMoid')
def GetStorageVdMemberEpByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageVdMemberEpByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageVirtualDriveList')
def GetStorageVirtualDriveList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageVirtualDriveList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageVirtualDriveByMoid')
def GetStorageVirtualDriveByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageVirtualDriveByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageVirtualDriveContainerList')
def GetStorageVirtualDriveContainerList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageVirtualDriveContainerList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageVirtualDriveContainerByMoid')
def GetStorageVirtualDriveContainerByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageVirtualDriveContainerByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageVirtualDriveExtensionList')
def GetStorageVirtualDriveExtensionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageVirtualDriveExtensionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageVirtualDriveExtensionByMoid')
def GetStorageVirtualDriveExtensionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageVirtualDriveExtensionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageVirtualDriveIdentityList')
def GetStorageVirtualDriveIdentityList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageVirtualDriveIdentityList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetStorageVirtualDriveIdentityByMoid')
def GetStorageVirtualDriveIdentityByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetStorageVirtualDriveIdentityByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSyslogPolicyList')
def GetSyslogPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSyslogPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSyslogPolicyByMoid')
def GetSyslogPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSyslogPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSyslogPolicyInventoryList')
def GetSyslogPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSyslogPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetSyslogPolicyInventoryByMoid')
def GetSyslogPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetSyslogPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTamAdvisoryCountList')
def GetTamAdvisoryCountList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTamAdvisoryCountList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTamAdvisoryCountByMoid')
def GetTamAdvisoryCountByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTamAdvisoryCountByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTamAdvisoryDefinitionList')
def GetTamAdvisoryDefinitionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTamAdvisoryDefinitionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTamAdvisoryDefinitionByMoid')
def GetTamAdvisoryDefinitionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTamAdvisoryDefinitionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTamAdvisoryInfoList')
def GetTamAdvisoryInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTamAdvisoryInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTamAdvisoryInfoByMoid')
def GetTamAdvisoryInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTamAdvisoryInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTamAdvisoryInstanceList')
def GetTamAdvisoryInstanceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTamAdvisoryInstanceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTamAdvisoryInstanceByMoid')
def GetTamAdvisoryInstanceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTamAdvisoryInstanceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTamSecurityAdvisoryList')
def GetTamSecurityAdvisoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTamSecurityAdvisoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTamSecurityAdvisoryByMoid')
def GetTamSecurityAdvisoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTamSecurityAdvisoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTaskWorkflowActionList')
def GetTaskWorkflowActionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTaskWorkflowActionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTaskWorkflowActionByMoid')
def GetTaskWorkflowActionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTaskWorkflowActionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTechsupportmanagementCollectionControlPolicyList')
def GetTechsupportmanagementCollectionControlPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTechsupportmanagementCollectionControlPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTechsupportmanagementCollectionControlPolicyByMoid')
def GetTechsupportmanagementCollectionControlPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTechsupportmanagementCollectionControlPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTechsupportmanagementDownloadList')
def GetTechsupportmanagementDownloadList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTechsupportmanagementDownloadList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTechsupportmanagementDownloadByMoid')
def GetTechsupportmanagementDownloadByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTechsupportmanagementDownloadByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTechsupportmanagementEndPointList')
def GetTechsupportmanagementEndPointList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTechsupportmanagementEndPointList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTechsupportmanagementEndPointByMoid')
def GetTechsupportmanagementEndPointByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTechsupportmanagementEndPointByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTechsupportmanagementTechSupportBundleList')
def GetTechsupportmanagementTechSupportBundleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTechsupportmanagementTechSupportBundleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTechsupportmanagementTechSupportBundleByMoid')
def GetTechsupportmanagementTechSupportBundleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTechsupportmanagementTechSupportBundleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTechsupportmanagementTechSupportStatusList')
def GetTechsupportmanagementTechSupportStatusList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTechsupportmanagementTechSupportStatusList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTechsupportmanagementTechSupportStatusByMoid')
def GetTechsupportmanagementTechSupportStatusByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTechsupportmanagementTechSupportStatusByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTerminalAuditLogList')
def GetTerminalAuditLogList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTerminalAuditLogList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTerminalAuditLogByMoid')
def GetTerminalAuditLogByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTerminalAuditLogByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetThermalPolicyList')
def GetThermalPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetThermalPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetThermalPolicyByMoid')
def GetThermalPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetThermalPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetThermalPolicyInventoryList')
def GetThermalPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetThermalPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetThermalPolicyInventoryByMoid')
def GetThermalPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetThermalPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTopSystemList')
def GetTopSystemList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTopSystemList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetTopSystemByMoid')
def GetTopSystemByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetTopSystemByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUcsdBackupInfoList')
def GetUcsdBackupInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetUcsdBackupInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUcsdBackupInfoByMoid')
def GetUcsdBackupInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetUcsdBackupInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolBlockList')
def GetUuidpoolBlockList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetUuidpoolBlockList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolBlockByMoid')
def GetUuidpoolBlockByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetUuidpoolBlockByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolPoolList')
def GetUuidpoolPoolList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetUuidpoolPoolList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolPoolByMoid')
def GetUuidpoolPoolByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetUuidpoolPoolByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolPoolMemberList')
def GetUuidpoolPoolMemberList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetUuidpoolPoolMemberList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolPoolMemberByMoid')
def GetUuidpoolPoolMemberByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetUuidpoolPoolMemberByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolReservationList')
def GetUuidpoolReservationList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetUuidpoolReservationList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolReservationByMoid')
def GetUuidpoolReservationByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetUuidpoolReservationByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolUniverseList')
def GetUuidpoolUniverseList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetUuidpoolUniverseList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolUniverseByMoid')
def GetUuidpoolUniverseByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetUuidpoolUniverseByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolUuidLeaseList')
def GetUuidpoolUuidLeaseList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetUuidpoolUuidLeaseList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetUuidpoolUuidLeaseByMoid')
def GetUuidpoolUuidLeaseByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetUuidpoolUuidLeaseByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationEsxiConsoleList')
def GetVirtualizationEsxiConsoleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationEsxiConsoleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationEsxiConsoleByMoid')
def GetVirtualizationEsxiConsoleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationEsxiConsoleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationHostList')
def GetVirtualizationHostList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationHostList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationHostByMoid')
def GetVirtualizationHostByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationHostByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVirtualMachineList')
def GetVirtualizationVirtualMachineList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVirtualMachineList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVirtualMachineByMoid')
def GetVirtualizationVirtualMachineByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVirtualMachineByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareClusterList')
def GetVirtualizationVmwareClusterList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareClusterList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareClusterByMoid')
def GetVirtualizationVmwareClusterByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareClusterByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareDatacenterList')
def GetVirtualizationVmwareDatacenterList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareDatacenterList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareDatacenterByMoid')
def GetVirtualizationVmwareDatacenterByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareDatacenterByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareDatastoreList')
def GetVirtualizationVmwareDatastoreList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareDatastoreList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareDatastoreByMoid')
def GetVirtualizationVmwareDatastoreByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareDatastoreByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareDatastoreClusterList')
def GetVirtualizationVmwareDatastoreClusterList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareDatastoreClusterList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareDatastoreClusterByMoid')
def GetVirtualizationVmwareDatastoreClusterByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareDatastoreClusterByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareDistributedNetworkList')
def GetVirtualizationVmwareDistributedNetworkList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareDistributedNetworkList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareDistributedNetworkByMoid')
def GetVirtualizationVmwareDistributedNetworkByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareDistributedNetworkByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareDistributedSwitchList')
def GetVirtualizationVmwareDistributedSwitchList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareDistributedSwitchList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareDistributedSwitchByMoid')
def GetVirtualizationVmwareDistributedSwitchByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareDistributedSwitchByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareFolderList')
def GetVirtualizationVmwareFolderList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareFolderList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareFolderByMoid')
def GetVirtualizationVmwareFolderByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareFolderByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareHostList')
def GetVirtualizationVmwareHostList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareHostList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareHostByMoid')
def GetVirtualizationVmwareHostByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareHostByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareHostGpuList')
def GetVirtualizationVmwareHostGpuList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareHostGpuList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareHostGpuByMoid')
def GetVirtualizationVmwareHostGpuByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareHostGpuByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareKernelNetworkList')
def GetVirtualizationVmwareKernelNetworkList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareKernelNetworkList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareKernelNetworkByMoid')
def GetVirtualizationVmwareKernelNetworkByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareKernelNetworkByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareNetworkList')
def GetVirtualizationVmwareNetworkList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareNetworkList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareNetworkByMoid')
def GetVirtualizationVmwareNetworkByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareNetworkByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwarePhysicalNetworkInterfaceList')
def GetVirtualizationVmwarePhysicalNetworkInterfaceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwarePhysicalNetworkInterfaceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwarePhysicalNetworkInterfaceByMoid')
def GetVirtualizationVmwarePhysicalNetworkInterfaceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwarePhysicalNetworkInterfaceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareProactiveHaList')
def GetVirtualizationVmwareProactiveHaList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareProactiveHaList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareProactiveHaByMoid')
def GetVirtualizationVmwareProactiveHaByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareProactiveHaByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareUplinkPortList')
def GetVirtualizationVmwareUplinkPortList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareUplinkPortList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareUplinkPortByMoid')
def GetVirtualizationVmwareUplinkPortByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareUplinkPortByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVcenterList')
def GetVirtualizationVmwareVcenterList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareVcenterList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVcenterByMoid')
def GetVirtualizationVmwareVcenterByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareVcenterByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualDiskList')
def GetVirtualizationVmwareVirtualDiskList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareVirtualDiskList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualDiskByMoid')
def GetVirtualizationVmwareVirtualDiskByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareVirtualDiskByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualMachineList')
def GetVirtualizationVmwareVirtualMachineList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareVirtualMachineList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualMachineByMoid')
def GetVirtualizationVmwareVirtualMachineByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareVirtualMachineByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualMachineGpuList')
def GetVirtualizationVmwareVirtualMachineGpuList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareVirtualMachineGpuList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualMachineGpuByMoid')
def GetVirtualizationVmwareVirtualMachineGpuByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareVirtualMachineGpuByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualMachineSnapshotList')
def GetVirtualizationVmwareVirtualMachineSnapshotList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareVirtualMachineSnapshotList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualMachineSnapshotByMoid')
def GetVirtualizationVmwareVirtualMachineSnapshotByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareVirtualMachineSnapshotByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualNetworkInterfaceList')
def GetVirtualizationVmwareVirtualNetworkInterfaceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareVirtualNetworkInterfaceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualNetworkInterfaceByMoid')
def GetVirtualizationVmwareVirtualNetworkInterfaceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareVirtualNetworkInterfaceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualSwitchList')
def GetVirtualizationVmwareVirtualSwitchList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareVirtualSwitchList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVirtualizationVmwareVirtualSwitchByMoid')
def GetVirtualizationVmwareVirtualSwitchByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVirtualizationVmwareVirtualSwitchByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVmediaPolicyList')
def GetVmediaPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVmediaPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVmediaPolicyByMoid')
def GetVmediaPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVmediaPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVmediaPolicyInventoryList')
def GetVmediaPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVmediaPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVmediaPolicyInventoryByMoid')
def GetVmediaPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVmediaPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVmrcConsoleList')
def GetVmrcConsoleList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVmrcConsoleList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVmrcConsoleByMoid')
def GetVmrcConsoleByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVmrcConsoleByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthAdapterPolicyList')
def GetVnicEthAdapterPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicEthAdapterPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthAdapterPolicyByMoid')
def GetVnicEthAdapterPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicEthAdapterPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthAdapterPolicyInventoryList')
def GetVnicEthAdapterPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicEthAdapterPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthAdapterPolicyInventoryByMoid')
def GetVnicEthAdapterPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicEthAdapterPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthIfList')
def GetVnicEthIfList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicEthIfList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthIfByMoid')
def GetVnicEthIfByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicEthIfByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthIfInventoryList')
def GetVnicEthIfInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicEthIfInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthIfInventoryByMoid')
def GetVnicEthIfInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicEthIfInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthNetworkPolicyList')
def GetVnicEthNetworkPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicEthNetworkPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthNetworkPolicyByMoid')
def GetVnicEthNetworkPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicEthNetworkPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthNetworkPolicyInventoryList')
def GetVnicEthNetworkPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicEthNetworkPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthNetworkPolicyInventoryByMoid')
def GetVnicEthNetworkPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicEthNetworkPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthQosPolicyList')
def GetVnicEthQosPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicEthQosPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthQosPolicyByMoid')
def GetVnicEthQosPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicEthQosPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthQosPolicyInventoryList')
def GetVnicEthQosPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicEthQosPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthQosPolicyInventoryByMoid')
def GetVnicEthQosPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicEthQosPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthVethInventoryList')
def GetVnicEthVethInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicEthVethInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthVethInventoryByMoid')
def GetVnicEthVethInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicEthVethInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthVnicInventoryList')
def GetVnicEthVnicInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicEthVnicInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicEthVnicInventoryByMoid')
def GetVnicEthVnicInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicEthVnicInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcAdapterPolicyList')
def GetVnicFcAdapterPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicFcAdapterPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcAdapterPolicyByMoid')
def GetVnicFcAdapterPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicFcAdapterPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcAdapterPolicyInventoryList')
def GetVnicFcAdapterPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicFcAdapterPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcAdapterPolicyInventoryByMoid')
def GetVnicFcAdapterPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicFcAdapterPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcIfList')
def GetVnicFcIfList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicFcIfList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcIfByMoid')
def GetVnicFcIfByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicFcIfByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcIfInventoryList')
def GetVnicFcIfInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicFcIfInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcIfInventoryByMoid')
def GetVnicFcIfInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicFcIfInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcNetworkPolicyList')
def GetVnicFcNetworkPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicFcNetworkPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcNetworkPolicyByMoid')
def GetVnicFcNetworkPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicFcNetworkPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcNetworkPolicyInventoryList')
def GetVnicFcNetworkPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicFcNetworkPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcNetworkPolicyInventoryByMoid')
def GetVnicFcNetworkPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicFcNetworkPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcQosPolicyList')
def GetVnicFcQosPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicFcQosPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcQosPolicyByMoid')
def GetVnicFcQosPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicFcQosPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcQosPolicyInventoryList')
def GetVnicFcQosPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicFcQosPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcQosPolicyInventoryByMoid')
def GetVnicFcQosPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicFcQosPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcVethInventoryList')
def GetVnicFcVethInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicFcVethInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcVethInventoryByMoid')
def GetVnicFcVethInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicFcVethInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcVhbaPolicyInventoryList')
def GetVnicFcVhbaPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicFcVhbaPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicFcVhbaPolicyInventoryByMoid')
def GetVnicFcVhbaPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicFcVhbaPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiAdapterPolicyList')
def GetVnicIscsiAdapterPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicIscsiAdapterPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiAdapterPolicyByMoid')
def GetVnicIscsiAdapterPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicIscsiAdapterPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiAdapterPolicyInventoryList')
def GetVnicIscsiAdapterPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicIscsiAdapterPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiAdapterPolicyInventoryByMoid')
def GetVnicIscsiAdapterPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicIscsiAdapterPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiBootPolicyList')
def GetVnicIscsiBootPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicIscsiBootPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiBootPolicyByMoid')
def GetVnicIscsiBootPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicIscsiBootPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiBootPolicyInventoryList')
def GetVnicIscsiBootPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicIscsiBootPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiBootPolicyInventoryByMoid')
def GetVnicIscsiBootPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicIscsiBootPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiStaticTargetPolicyList')
def GetVnicIscsiStaticTargetPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicIscsiStaticTargetPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiStaticTargetPolicyByMoid')
def GetVnicIscsiStaticTargetPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicIscsiStaticTargetPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiStaticTargetPolicyInventoryList')
def GetVnicIscsiStaticTargetPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicIscsiStaticTargetPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicIscsiStaticTargetPolicyInventoryByMoid')
def GetVnicIscsiStaticTargetPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicIscsiStaticTargetPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicLanConnectivityPolicyList')
def GetVnicLanConnectivityPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicLanConnectivityPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicLanConnectivityPolicyByMoid')
def GetVnicLanConnectivityPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicLanConnectivityPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicLanConnectivityPolicyInventoryList')
def GetVnicLanConnectivityPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicLanConnectivityPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicLanConnectivityPolicyInventoryByMoid')
def GetVnicLanConnectivityPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicLanConnectivityPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicLanSettingsList')
def GetVnicLanSettingsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicLanSettingsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicLanSettingsByMoid')
def GetVnicLanSettingsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicLanSettingsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicLcpStatusList')
def GetVnicLcpStatusList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicLcpStatusList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicLcpStatusByMoid')
def GetVnicLcpStatusByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicLcpStatusByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicSanConnectivityPolicyList')
def GetVnicSanConnectivityPolicyList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicSanConnectivityPolicyList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicSanConnectivityPolicyByMoid')
def GetVnicSanConnectivityPolicyByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicSanConnectivityPolicyByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicSanConnectivityPolicyInventoryList')
def GetVnicSanConnectivityPolicyInventoryList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicSanConnectivityPolicyInventoryList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicSanConnectivityPolicyInventoryByMoid')
def GetVnicSanConnectivityPolicyInventoryByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicSanConnectivityPolicyInventoryByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicSanSettingsList')
def GetVnicSanSettingsList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicSanSettingsList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicSanSettingsByMoid')
def GetVnicSanSettingsByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicSanSettingsByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicScpStatusList')
def GetVnicScpStatusList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicScpStatusList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicScpStatusByMoid')
def GetVnicScpStatusByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicScpStatusByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicVhbaTemplateList')
def GetVnicVhbaTemplateList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicVhbaTemplateList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicVhbaTemplateByMoid')
def GetVnicVhbaTemplateByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicVhbaTemplateByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicVnicTemplateList')
def GetVnicVnicTemplateList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicVnicTemplateList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVnicVnicTemplateByMoid')
def GetVnicVnicTemplateByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVnicVnicTemplateByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVrfVrfList')
def GetVrfVrfList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVrfVrfList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetVrfVrfByMoid')
def GetVrfVrfByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetVrfVrfByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWebhookEndpointList')
def GetWebhookEndpointList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWebhookEndpointList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWebhookEndpointByMoid')
def GetWebhookEndpointByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWebhookEndpointByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWebhookSchemaList')
def GetWebhookSchemaList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWebhookSchemaList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWebhookSchemaByMoid')
def GetWebhookSchemaByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWebhookSchemaByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowAnsibleBatchExecutorList')
def GetWorkflowAnsibleBatchExecutorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowAnsibleBatchExecutorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowAnsibleBatchExecutorByMoid')
def GetWorkflowAnsibleBatchExecutorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowAnsibleBatchExecutorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowBatchApiExecutorList')
def GetWorkflowBatchApiExecutorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowBatchApiExecutorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowBatchApiExecutorByMoid')
def GetWorkflowBatchApiExecutorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowBatchApiExecutorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowCatalogList')
def GetWorkflowCatalogList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowCatalogList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowCatalogByMoid')
def GetWorkflowCatalogByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowCatalogByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowCatalogItemDefinitionList')
def GetWorkflowCatalogItemDefinitionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowCatalogItemDefinitionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowCatalogItemDefinitionByMoid')
def GetWorkflowCatalogItemDefinitionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowCatalogItemDefinitionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowCatalogServiceRequestList')
def GetWorkflowCatalogServiceRequestList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowCatalogServiceRequestList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowCatalogServiceRequestByMoid')
def GetWorkflowCatalogServiceRequestByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowCatalogServiceRequestByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowCustomDataTypeDefinitionList')
def GetWorkflowCustomDataTypeDefinitionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowCustomDataTypeDefinitionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowCustomDataTypeDefinitionByMoid')
def GetWorkflowCustomDataTypeDefinitionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowCustomDataTypeDefinitionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowErrorResponseHandlerList')
def GetWorkflowErrorResponseHandlerList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowErrorResponseHandlerList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowErrorResponseHandlerByMoid')
def GetWorkflowErrorResponseHandlerByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowErrorResponseHandlerByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowPowerShellBatchApiExecutorList')
def GetWorkflowPowerShellBatchApiExecutorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowPowerShellBatchApiExecutorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowPowerShellBatchApiExecutorByMoid')
def GetWorkflowPowerShellBatchApiExecutorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowPowerShellBatchApiExecutorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowRollbackWorkflowList')
def GetWorkflowRollbackWorkflowList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowRollbackWorkflowList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowRollbackWorkflowByMoid')
def GetWorkflowRollbackWorkflowByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowRollbackWorkflowByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemActionDefinitionList')
def GetWorkflowServiceItemActionDefinitionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowServiceItemActionDefinitionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemActionDefinitionByMoid')
def GetWorkflowServiceItemActionDefinitionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowServiceItemActionDefinitionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemActionInstanceList')
def GetWorkflowServiceItemActionInstanceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowServiceItemActionInstanceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemActionInstanceByMoid')
def GetWorkflowServiceItemActionInstanceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowServiceItemActionInstanceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemAttributeList')
def GetWorkflowServiceItemAttributeList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowServiceItemAttributeList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemAttributeByMoid')
def GetWorkflowServiceItemAttributeByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowServiceItemAttributeByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemDefinitionList')
def GetWorkflowServiceItemDefinitionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowServiceItemDefinitionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemDefinitionByMoid')
def GetWorkflowServiceItemDefinitionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowServiceItemDefinitionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemHealthCheckDefinitionList')
def GetWorkflowServiceItemHealthCheckDefinitionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowServiceItemHealthCheckDefinitionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemHealthCheckDefinitionByMoid')
def GetWorkflowServiceItemHealthCheckDefinitionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowServiceItemHealthCheckDefinitionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemHealthCheckExecutionList')
def GetWorkflowServiceItemHealthCheckExecutionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowServiceItemHealthCheckExecutionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemHealthCheckExecutionByMoid')
def GetWorkflowServiceItemHealthCheckExecutionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowServiceItemHealthCheckExecutionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemInstanceList')
def GetWorkflowServiceItemInstanceList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowServiceItemInstanceList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemInstanceByMoid')
def GetWorkflowServiceItemInstanceByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowServiceItemInstanceByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemOutputList')
def GetWorkflowServiceItemOutputList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowServiceItemOutputList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowServiceItemOutputByMoid')
def GetWorkflowServiceItemOutputByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowServiceItemOutputByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowSshBatchExecutorList')
def GetWorkflowSshBatchExecutorList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowSshBatchExecutorList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowSshBatchExecutorByMoid')
def GetWorkflowSshBatchExecutorByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowSshBatchExecutorByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowTaskDebugLogList')
def GetWorkflowTaskDebugLogList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowTaskDebugLogList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowTaskDebugLogByMoid')
def GetWorkflowTaskDebugLogByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowTaskDebugLogByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowTaskDefinitionList')
def GetWorkflowTaskDefinitionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowTaskDefinitionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowTaskDefinitionByMoid')
def GetWorkflowTaskDefinitionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowTaskDefinitionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowTaskInfoList')
def GetWorkflowTaskInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowTaskInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowTaskInfoByMoid')
def GetWorkflowTaskInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowTaskInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowTaskMetadataList')
def GetWorkflowTaskMetadataList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowTaskMetadataList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowTaskMetadataByMoid')
def GetWorkflowTaskMetadataByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowTaskMetadataByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowTemplateFunctionMetaList')
def GetWorkflowTemplateFunctionMetaList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowTemplateFunctionMetaList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowTemplateFunctionMetaByMoid')
def GetWorkflowTemplateFunctionMetaByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowTemplateFunctionMetaByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowUiDisplayMetadataList')
def GetWorkflowUiDisplayMetadataList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowUiDisplayMetadataList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowUiDisplayMetadataByMoid')
def GetWorkflowUiDisplayMetadataByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowUiDisplayMetadataByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowVariableList')
def GetWorkflowVariableList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowVariableList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowVariableByMoid')
def GetWorkflowVariableByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowVariableByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowWorkflowDefinitionList')
def GetWorkflowWorkflowDefinitionList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowWorkflowDefinitionList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowWorkflowDefinitionByMoid')
def GetWorkflowWorkflowDefinitionByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowWorkflowDefinitionByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowWorkflowInfoList')
def GetWorkflowWorkflowInfoList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowWorkflowInfoList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowWorkflowInfoByMoid')
def GetWorkflowWorkflowInfoByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowWorkflowInfoByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowWorkflowMetadataList')
def GetWorkflowWorkflowMetadataList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowWorkflowMetadataList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkflowWorkflowMetadataByMoid')
def GetWorkflowWorkflowMetadataByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkflowWorkflowMetadataByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkspaceFolderList')
def GetWorkspaceFolderList():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkspaceFolderList')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)

@register('GetWorkspaceFolderByMoid')
def GetWorkspaceFolderByMoid():
    """Auto-generated wrapper for clarity and maintainability."""
    # Explicitly build keyword arguments, excluding None values.
    final_kwargs = {}

    # No body parameter for this function.
    body_payload = None

    # ── auto-inject INTERSIGHT_ORGANIZATION_MOID ─────────────────
    env_val = os.getenv('INTERSIGHT_ORGANIZATION_MOID')
    if env_val:
        if 'organization_moid' in [] and 'organization_moid' not in final_kwargs:
            final_kwargs['organization_moid'] = f'''{env_val}'''
        if '$filter' in [] and '$filter' not in final_kwargs:
            final_kwargs['$filter'] = f'''Organization.Moid eq '{env_val}''''
        if 'filter' in [] and 'filter' not in final_kwargs:
            final_kwargs['filter'] = f'''Organization.Moid eq '{env_val}''''

    client = IntersightClient()
    target = getattr(client, 'GetWorkspaceFolderByMoid')

    if body_payload is not None:
        return target(body=body_payload, **final_kwargs)
    return target(**final_kwargs)
