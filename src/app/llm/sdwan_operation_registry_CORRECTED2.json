{
  "operations": {
    "getSecureXAccessToken": {
      "path": "/accesstoken/{regionBaseUri}/{clientId}",
      "method": "get",
      "sdk_endpoint": "accesstoken.{regionBaseUri}",
      "sdk_method": "get",
      "description": "Get Access Token for SecureX Ribbon"
    },
    "getAaaConfig": {
      "path": "/admin/aaa",
      "method": "get",
      "sdk_endpoint": "administration_settings",
      "sdk_method": "get",
      "description": "Get aaa configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view."
    },
    "updateAaaConfig": {
      "path": "/admin/aaa",
      "method": "put",
      "sdk_endpoint": "administration_settings",
      "sdk_method": "update",
      "description": "Update aaa configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view."
    },
    "createAaaConfig": {
      "path": "/admin/aaa",
      "method": "post",
      "sdk_endpoint": "administration_settings",
      "sdk_method": "create",
      "description": "Create aaa configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view."
    },
    "deleteAaaConfig": {
      "path": "/admin/aaa",
      "method": "delete",
      "sdk_endpoint": "administration_settings",
      "sdk_method": "delete",
      "description": "Delete aaa configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view."
    },
    "listenAuthEvents": {
      "path": "/admin/events/{sseSessionId}",
      "method": "get",
      "sdk_endpoint": "admin.events",
      "sdk_method": "get",
      "description": ""
    },
    "getRadiusConfig": {
      "path": "/admin/radius",
      "method": "get",
      "sdk_endpoint": "administration_settings",
      "sdk_method": "get",
      "description": "Get radius configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view."
    },
    "updateRadiusConfig": {
      "path": "/admin/radius",
      "method": "put",
      "sdk_endpoint": "administration_settings",
      "sdk_method": "update",
      "description": "Update radius configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view."
    },
    "createRadiusConfig": {
      "path": "/admin/radius",
      "method": "post",
      "sdk_endpoint": "administration_settings",
      "sdk_method": "create",
      "description": "Create radius configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view."
    },
    "deleteRadiusConfig": {
      "path": "/admin/radius",
      "method": "delete",
      "sdk_endpoint": "administration_settings",
      "sdk_method": "delete",
      "description": "Delete radius configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view."
    },
    "getTacacsConfig": {
      "path": "/admin/tacacs",
      "method": "get",
      "sdk_endpoint": "administration_settings",
      "sdk_method": "get",
      "description": "Get tacacs configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view."
    },
    "updateTacacsConfig": {
      "path": "/admin/tacacs",
      "method": "put",
      "sdk_endpoint": "administration_settings",
      "sdk_method": "update",
      "description": "Update tacacs configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view."
    },
    "createTacacsConfig": {
      "path": "/admin/tacacs",
      "method": "post",
      "sdk_endpoint": "administration_settings",
      "sdk_method": "create",
      "description": "Create tacacs configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view."
    },
    "deleteTacacsConfig": {
      "path": "/admin/tacacs",
      "method": "delete",
      "sdk_endpoint": "administration_settings",
      "sdk_method": "delete",
      "description": "Delete tacacs configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view."
    },
    "findUsers_1": {
      "path": "/admin/user",
      "method": "get",
      "sdk_endpoint": "users",
      "sdk_method": "get",
      "description": "Get all users"
    },
    "createUser_1": {
      "path": "/admin/user",
      "method": "post",
      "sdk_endpoint": "users",
      "sdk_method": "create",
      "description": "Create a user"
    },
    "getActiveSessions_1": {
      "path": "/admin/user/activeSessions",
      "method": "get",
      "sdk_endpoint": "users",
      "sdk_method": "get",
      "description": "Get active sessions"
    },
    "updateAdminPassword_1": {
      "path": "/admin/user/admin/password",
      "method": "post",
      "sdk_endpoint": "users",
      "sdk_method": "create",
      "description": "Update admin default password"
    },
    "lockUser": {
      "path": "/admin/user/lockUser/{userName}",
      "method": "put",
      "sdk_endpoint": "users",
      "sdk_method": "update",
      "description": "Lock a user account"
    },
    "validatePassword_1": {
      "path": "/admin/user/password/validate",
      "method": "post",
      "sdk_endpoint": "users",
      "sdk_method": "create",
      "description": "Validate user password"
    },
    "updatePassword_1": {
      "path": "/admin/user/password/{userName}",
      "method": "put",
      "sdk_endpoint": "users",
      "sdk_method": "update",
      "description": "Update user password"
    },
    "updateProfileLocale_1": {
      "path": "/admin/user/profile/locale",
      "method": "put",
      "sdk_endpoint": "users",
      "sdk_method": "update",
      "description": "Update profile locale"
    },
    "updateProfilePassword_1": {
      "path": "/admin/user/profile/password",
      "method": "put",
      "sdk_endpoint": "users",
      "sdk_method": "update",
      "description": "Update profile password"
    },
    "removeSessions_1": {
      "path": "/admin/user/removeSessions",
      "method": "delete",
      "sdk_endpoint": "users",
      "sdk_method": "delete",
      "description": "Remove sessions"
    },
    "resetUser_1": {
      "path": "/admin/user/reset",
      "method": "post",
      "sdk_endpoint": "users",
      "sdk_method": "create",
      "description": "Unlock a user"
    },
    "findUserRole_1": {
      "path": "/admin/user/role",
      "method": "get",
      "sdk_endpoint": "users",
      "sdk_method": "get",
      "description": "Check whether a user has admin role"
    },
    "findUserAuthType_1": {
      "path": "/admin/user/userAuthType",
      "method": "get",
      "sdk_endpoint": "users",
      "sdk_method": "get",
      "description": "Find user authentication type, whether it is SAML enabled"
    },
    "updateUser_1": {
      "path": "/admin/user/{userName}",
      "method": "put",
      "sdk_endpoint": "users",
      "sdk_method": "update",
      "description": "Update user"
    },
    "deleteUser_1": {
      "path": "/admin/user/{userName}",
      "method": "delete",
      "sdk_endpoint": "users",
      "sdk_method": "delete",
      "description": "Delete user"
    },
    "findUserGroups": {
      "path": "/admin/usergroup",
      "method": "get",
      "sdk_endpoint": "users",
      "sdk_method": "get",
      "description": "Get all user groups"
    },
    "createUserGroup": {
      "path": "/admin/usergroup",
      "method": "post",
      "sdk_endpoint": "users",
      "sdk_method": "create",
      "description": "Create user group"
    },
    "createGroupGridColumns": {
      "path": "/admin/usergroup/definition",
      "method": "get",
      "sdk_endpoint": "users",
      "sdk_method": "get",
      "description": "Get user groups in a grid table"
    },
    "findUserGroupsAsKeyValue": {
      "path": "/admin/usergroup/keyvalue",
      "method": "get",
      "sdk_endpoint": "users",
      "sdk_method": "get",
      "description": "Get user groups as key value map"
    },
    "updateUserGroup": {
      "path": "/admin/usergroup/{userGroupId}",
      "method": "put",
      "sdk_endpoint": "users",
      "sdk_method": "update",
      "description": "Update user group"
    },
    "deleteUserGroup": {
      "path": "/admin/usergroup/{userGroupId}",
      "method": "delete",
      "sdk_endpoint": "users",
      "sdk_method": "delete",
      "description": "Delete user group"
    },
    "getVpnGroups": {
      "path": "/admin/vpngroup",
      "method": "get",
      "sdk_endpoint": "admin.vpngroup",
      "sdk_method": "get",
      "description": "Get VPN groups"
    },
    "createVpnGroup": {
      "path": "/admin/vpngroup",
      "method": "post",
      "sdk_endpoint": "admin.vpngroup",
      "sdk_method": "create",
      "description": "Add VPN group"
    },
    "editVpnGroup": {
      "path": "/admin/vpngroup/{id}",
      "method": "put",
      "sdk_endpoint": "admin.vpngroup",
      "sdk_method": "update",
      "description": "Update VPN group"
    },
    "deleteVpnGroup": {
      "path": "/admin/vpngroup/{id}",
      "method": "delete",
      "sdk_endpoint": "admin.vpngroup",
      "sdk_method": "delete",
      "description": "Delete VPN group"
    },
    "getRawAlarmData": {
      "path": "/alarms",
      "method": "get",
      "sdk_endpoint": "alarms",
      "sdk_method": "get",
      "description": "Get alarms for given query. If query is empty then last 30 mins data will be returned."
    },
    "postRawAlarmData": {
      "path": "/alarms",
      "method": "post",
      "sdk_endpoint": "alarms",
      "sdk_method": "create",
      "description": "Get alarms for given query."
    },
    "getAggregationData": {
      "path": "/alarms/aggregation",
      "method": "get",
      "sdk_endpoint": "alarms",
      "sdk_method": "get",
      "description": "Get aggregated count of alarms based on given query."
    },
    "postAggregationData": {
      "path": "/alarms/aggregation",
      "method": "post",
      "sdk_endpoint": "alarms",
      "sdk_method": "create",
      "description": "Get aggregated count of alarms based on given query."
    },
    "clearStaleAlarm": {
      "path": "/alarms/clear",
      "method": "post",
      "sdk_endpoint": "alarms",
      "sdk_method": "create",
      "description": "Clear the alarm for a specific UUID."
    },
    "getNonViewedActiveAlarmsCount": {
      "path": "/alarms/count",
      "method": "get",
      "sdk_endpoint": "alarms",
      "sdk_method": "get",
      "description": "Get the count of alarms which are active and not acknowledged by user."
    },
    "postCount": {
      "path": "/alarms/count",
      "method": "post",
      "sdk_endpoint": "alarms",
      "sdk_method": "create",
      "description": "Get the count of alarms as per the query passed."
    },
    "listDisabledAlarm": {
      "path": "/alarms/disabled",
      "method": "get",
      "sdk_endpoint": "alarms",
      "sdk_method": "get",
      "description": "List all disabled alarms"
    },
    "disableEnableAlarm": {
      "path": "/alarms/disabled",
      "method": "post",
      "sdk_endpoint": "alarms",
      "sdk_method": "create",
      "description": "Enable/Disable alarms by event name"
    },
    "getDocCount": {
      "path": "/alarms/doccount",
      "method": "get",
      "sdk_endpoint": "alarms",
      "sdk_method": "get",
      "description": "Get the count of alarms as per the query passed."
    },
    "postDocCount": {
      "path": "/alarms/doccount",
      "method": "post",
      "sdk_endpoint": "alarms",
      "sdk_method": "create",
      "description": "Get the count of alarms as per the query passed."
    },
    "dumpCorrelationEngineData": {
      "path": "/alarms/dump",
      "method": "post",
      "sdk_endpoint": "alarms",
      "sdk_method": "create",
      "description": "Dump correlation engine server cache in log file"
    },
    "getAlarmDataFields": {
      "path": "/alarms/fields",
      "method": "get",
      "sdk_endpoint": "alarms",
      "sdk_method": "get",
      "description": "Get fields and types"
    },
    "getLinkStateAlarmConfig": {
      "path": "/alarms/link-state-alarm",
      "method": "get",
      "sdk_endpoint": "alarms",
      "sdk_method": "get",
      "description": "Get configuration for link-state alarm"
    },
    "enableDisableLinkStateAlarm": {
      "path": "/alarms/link-state-alarm",
      "method": "post",
      "sdk_endpoint": "alarms",
      "sdk_method": "create",
      "description": "Enable/Disable a specific link-state alarm"
    },
    "markAllAlarmsAsViewed": {
      "path": "/alarms/markallasviewed",
      "method": "post",
      "sdk_endpoint": "alarms",
      "sdk_method": "create",
      "description": "Mark all alarms as acknowledged by the user"
    },
    "markAlarmsAsViewed": {
      "path": "/alarms/markviewed",
      "method": "post",
      "sdk_endpoint": "alarms",
      "sdk_method": "create",
      "description": "Mark alarms as acknowledged based on list of UUIDs."
    },
    "getMasterManagerState": {
      "path": "/alarms/master",
      "method": "get",
      "sdk_endpoint": "alarms",
      "sdk_method": "get",
      "description": "Get topic details."
    },
    "getNonViewedAlarms": {
      "path": "/alarms/notviewed",
      "method": "get",
      "sdk_endpoint": "alarms",
      "sdk_method": "get",
      "description": "Get alarms which are not acknowledged by the user."
    },
    "getPage": {
      "path": "/alarms/page",
      "method": "get",
      "sdk_endpoint": "alarms",
      "sdk_method": "get",
      "description": "Get paginated alarms"
    },
    "postPage": {
      "path": "/alarms/page",
      "method": "post",
      "sdk_endpoint": "alarms",
      "sdk_method": "create",
      "description": "Get paginated alarm raw data"
    },
    "setPeriodicPurgeTimer": {
      "path": "/alarms/purgefrequency",
      "method": "get",
      "sdk_endpoint": "alarms",
      "sdk_method": "get",
      "description": "Set alarm purge timer"
    },
    "getAlarmQueryFields": {
      "path": "/alarms/query/fields",
      "method": "get",
      "sdk_endpoint": "alarms",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getFieldDetails": {
      "path": "/alarms/query/input",
      "method": "get",
      "sdk_endpoint": "alarms",
      "sdk_method": "get",
      "description": "Get alarm field details"
    },
    "reset": {
      "path": "/alarms/reset",
      "method": "get",
      "sdk_endpoint": "alarms",
      "sdk_method": "get",
      "description": "Reset correlation engine."
    },
    "restartCorrelationEngine": {
      "path": "/alarms/restart",
      "method": "get",
      "sdk_endpoint": "alarms",
      "sdk_method": "get",
      "description": "Restart correlation engine."
    },
    "getAlarmTypesAsKeyValue": {
      "path": "/alarms/rulenamedisplay/keyvalue",
      "method": "get",
      "sdk_endpoint": "alarms",
      "sdk_method": "get",
      "description": "Get alarm types."
    },
    "getBySeverity": {
      "path": "/alarms/severity",
      "method": "get",
      "sdk_endpoint": "alarms",
      "sdk_method": "get",
      "description": "Get alarms by severity"
    },
    "getAlarmSeverityCustomHistogram": {
      "path": "/alarms/severity/summary",
      "method": "get",
      "sdk_endpoint": "alarms",
      "sdk_method": "get",
      "description": "Get alarm severity histogram"
    },
    "getAlarmSeverityMappings": {
      "path": "/alarms/severitymappings",
      "method": "get",
      "sdk_endpoint": "alarms",
      "sdk_method": "get",
      "description": "Gets alarm severity mappings"
    },
    "startTracking": {
      "path": "/alarms/starttracking/{testName}",
      "method": "post",
      "sdk_endpoint": "alarms",
      "sdk_method": "create",
      "description": "Start tracking events"
    },
    "getStats": {
      "path": "/alarms/stats",
      "method": "get",
      "sdk_endpoint": "alarms",
      "sdk_method": "get",
      "description": "Get alarm statistics"
    },
    "stopTracking": {
      "path": "/alarms/stoptracking/{testName}",
      "method": "post",
      "sdk_endpoint": "alarms",
      "sdk_method": "create",
      "description": "Stop tracking events"
    },
    "getDeviceTopic": {
      "path": "/alarms/topic",
      "method": "get",
      "sdk_endpoint": "alarms",
      "sdk_method": "get",
      "description": "Get topic on which alarms for given device are publishing."
    },
    "getTopN": {
      "path": "/alarms/topn",
      "method": "post",
      "sdk_endpoint": "alarms",
      "sdk_method": "create",
      "description": "Returns top-n alarm count based on given query"
    },
    "getAlarmDetails": {
      "path": "/alarms/uuid/{alarm_uuid}",
      "method": "get",
      "sdk_endpoint": "alarms",
      "sdk_method": "get",
      "description": "Get alarm details for given UUID"
    },
    "getAllAppList": {
      "path": "/app-registry/app",
      "method": "get",
      "sdk_endpoint": "app-registry.app",
      "sdk_method": "get",
      "description": "Get All the App for the given conditions"
    },
    "getAppListCategory": {
      "path": "/app-registry/app/category",
      "method": "get",
      "sdk_endpoint": "app-registry.app",
      "sdk_method": "get",
      "description": "Get the stats of all type of apps"
    },
    "getNetworkDiscoveredApps": {
      "path": "/app-registry/app/discoveredapps",
      "method": "get",
      "sdk_endpoint": "app-registry.app",
      "sdk_method": "get",
      "description": "Get All network discovered apps"
    },
    "getAttributeMappingForApps": {
      "path": "/app-registry/app/filtermap",
      "method": "get",
      "sdk_endpoint": "app-registry.app",
      "sdk_method": "get",
      "description": "Get all available filters for applist"
    },
    "getKubernetesServices": {
      "path": "/app-registry/app/kubernetesapps",
      "method": "get",
      "sdk_endpoint": "app-registry.app",
      "sdk_method": "get",
      "description": "Obtain all services associated with clusters"
    },
    "getAppByUuid": {
      "path": "/app-registry/application/{app-uuid}",
      "method": "get",
      "sdk_endpoint": "app-registry.application",
      "sdk_method": "get",
      "description": "Get  app detail for particular App uuid"
    },
    "getAppList": {
      "path": "/app-registry/applications",
      "method": "get",
      "sdk_endpoint": "app-registry.applications",
      "sdk_method": "get",
      "description": "Get All the App for the given conditions"
    },
    "editAppDetails": {
      "path": "/app-registry/applications",
      "method": "put",
      "sdk_endpoint": "app-registry.applications",
      "sdk_method": "update",
      "description": "Edit App Details"
    },
    "editAppDetailsWithUUID": {
      "path": "/app-registry/applications/{appId}",
      "method": "put",
      "sdk_endpoint": "app-registry.applications",
      "sdk_method": "update",
      "description": "Edit App Details"
    },
    "getKubernetesCluster": {
      "path": "/app-registry/clusters",
      "method": "get",
      "sdk_endpoint": "app-registry.clusters",
      "sdk_method": "get",
      "description": "Obtain all clusters with associated cloud accounts"
    },
    "postCluster": {
      "path": "/app-registry/clusters",
      "method": "post",
      "sdk_endpoint": "app-registry.clusters",
      "sdk_method": "create",
      "description": "Manually upload kubeConfig"
    },
    "editKubernetesCluster": {
      "path": "/app-registry/clusters/{id}",
      "method": "put",
      "sdk_endpoint": "app-registry.clusters",
      "sdk_method": "update",
      "description": "Edit the discovery status of a cluster"
    },
    "deleteKubernetesCluster": {
      "path": "/app-registry/clusters/{id}",
      "method": "delete",
      "sdk_endpoint": "app-registry.clusters",
      "sdk_method": "delete",
      "description": "Delete manually uploaded cluster"
    },
    "getActiveSaasFeeds": {
      "path": "/app-registry/saasfeed",
      "method": "get",
      "sdk_endpoint": "app-registry.saasfeed",
      "sdk_method": "get",
      "description": "Get All Saas feed details"
    },
    "disableorEnableSaasFeedForSelectedApp": {
      "path": "/app-registry/saasfeed/app/configure",
      "method": "put",
      "sdk_endpoint": "app-registry.saasfeed",
      "sdk_method": "update",
      "description": "Get All the App for the given conditions"
    },
    "getAllSaasFeedForSelectedApp": {
      "path": "/app-registry/saasfeed/app/{feedId}",
      "method": "get",
      "sdk_endpoint": "app-registry.saasfeed",
      "sdk_method": "get",
      "description": "Get All Saas feed details of a particular application"
    },
    "getStatDataRawAuditLogData": {
      "path": "/auditlog",
      "method": "get",
      "sdk_endpoint": "auditlog",
      "sdk_method": "get",
      "description": "Get vManage Audit Log"
    },
    "getRawPropertyData": {
      "path": "/auditlog",
      "method": "post",
      "sdk_endpoint": "auditlog",
      "sdk_method": "create",
      "description": "Get vManage Audit Log with post action"
    },
    "getPropertyAggregationData": {
      "path": "/auditlog/aggregation",
      "method": "get",
      "sdk_endpoint": "auditlog.aggregation",
      "sdk_method": "get",
      "description": "Get raw property data aggregated"
    },
    "getPostPropertyAggregationData": {
      "path": "/auditlog/aggregation",
      "method": "post",
      "sdk_endpoint": "auditlog.aggregation",
      "sdk_method": "create",
      "description": "Retrive property data aggregated by post"
    },
    "getCount": {
      "path": "/auditlog/doccount",
      "method": "get",
      "sdk_endpoint": "auditlog.doccount",
      "sdk_method": "get",
      "description": "Get vManage Audit Log Doc count"
    },
    "getCountPost": {
      "path": "/auditlog/doccount",
      "method": "post",
      "sdk_endpoint": "auditlog.doccount",
      "sdk_method": "create",
      "description": "Get vManage Audit Log Doc count"
    },
    "getStatDataFields": {
      "path": "/auditlog/fields",
      "method": "get",
      "sdk_endpoint": "auditlog.fields",
      "sdk_method": "get",
      "description": "Get vManage Audit Log fields"
    },
    "getStatBulkRawPropertyData": {
      "path": "/auditlog/page",
      "method": "get",
      "sdk_endpoint": "auditlog.page",
      "sdk_method": "get",
      "description": "Get raw property data in bulk"
    },
    "getPostStatBulkRawPropertyData": {
      "path": "/auditlog/page",
      "method": "post",
      "sdk_endpoint": "auditlog.page",
      "sdk_method": "create",
      "description": "Get bulk property data by post"
    },
    "getStatQueryFields": {
      "path": "/auditlog/query/fields",
      "method": "get",
      "sdk_endpoint": "auditlog.query",
      "sdk_method": "get",
      "description": "Get vManage Audit Log query fields"
    },
    "generateAuditLog": {
      "path": "/auditlog/severity",
      "method": "get",
      "sdk_endpoint": "auditlog.severity",
      "sdk_method": "get",
      "description": "Get vManage Audit Log"
    },
    "getAuditSeverityCustomHistogram": {
      "path": "/auditlog/severity/summary",
      "method": "get",
      "sdk_endpoint": "auditlog.severity",
      "sdk_method": "get",
      "description": "Get vManage Audit Log Histogram"
    },
    "deleteSchduledBackup": {
      "path": "/backup/backupinfo",
      "method": "delete",
      "sdk_endpoint": "backup.backupinfo",
      "sdk_method": "delete",
      "description": "Deletes a local database operation"
    },
    "getLocalBackupInfo": {
      "path": "/backup/backupinfo/{localBackupInfoId}",
      "method": "get",
      "sdk_endpoint": "backup.backupinfo",
      "sdk_method": "get",
      "description": "Get localBackupInfo by localBackupInfoId"
    },
    "downloadBackupFile": {
      "path": "/backup/download/{path}",
      "method": "get",
      "sdk_endpoint": "backup.download",
      "sdk_method": "get",
      "description": "Download database backup file"
    },
    "exportBackup": {
      "path": "/backup/export",
      "method": "post",
      "sdk_endpoint": "backup.export",
      "sdk_method": "create",
      "description": "Issues database backup request"
    },
    "listBackup": {
      "path": "/backup/list",
      "method": "get",
      "sdk_endpoint": "backup.list",
      "sdk_method": "get",
      "description": "Get list of all database backup requests"
    },
    "getCdnaSenseService": {
      "path": "/cdna/sense/{tag}",
      "method": "get",
      "sdk_endpoint": "cdna.sense",
      "sdk_method": "get",
      "description": "Get Sense Service"
    },
    "getCdnaServer": {
      "path": "/cdna/server",
      "method": "get",
      "sdk_endpoint": "cdna.server",
      "sdk_method": "get",
      "description": "Get CDNA Server Details"
    },
    "enrollCdnaServer": {
      "path": "/cdna/server",
      "method": "put",
      "sdk_endpoint": "cdna.server",
      "sdk_method": "update",
      "description": "Enroll CDNA Server with OTP"
    },
    "deleteCdnaServer": {
      "path": "/cdna/server",
      "method": "delete",
      "sdk_endpoint": "cdna.server",
      "sdk_method": "delete",
      "description": "Delete CDNA Server Details"
    },
    "getCertDetails": {
      "path": "/certificate/certdetails",
      "method": "post",
      "sdk_endpoint": "certificate.certdetails",
      "sdk_method": "create",
      "description": "get certificaate details"
    },
    "generateCSRforAllController": {
      "path": "/certificate/controller/bulkcsr",
      "method": "post",
      "sdk_endpoint": "certificate.controller",
      "sdk_method": "create",
      "description": "Generate CSR for all controller"
    },
    "getControllerCertStatus": {
      "path": "/certificate/controller/certstatus",
      "method": "get",
      "sdk_endpoint": "certificate.controller",
      "sdk_method": "get",
      "description": "invalidate the device"
    },
    "getCSRViewRightMenus": {
      "path": "/certificate/csr/details",
      "method": "get",
      "sdk_endpoint": "certificate.csr",
      "sdk_method": "get",
      "description": "Get CSR detail view"
    },
    "getDeviceViewRightMenus": {
      "path": "/certificate/device/details",
      "method": "get",
      "sdk_endpoint": "certificate.device",
      "sdk_method": "get",
      "description": "Get device detail view"
    },
    "invalidateDevice": {
      "path": "/certificate/device/invalidate",
      "method": "post",
      "sdk_endpoint": "certificate.device",
      "sdk_method": "create",
      "description": "invalidate the device"
    },
    "getDevicesList": {
      "path": "/certificate/device/list",
      "method": "get",
      "sdk_endpoint": "certificate.device",
      "sdk_method": "get",
      "description": "get device list"
    },
    "stageDevice": {
      "path": "/certificate/device/stage",
      "method": "post",
      "sdk_endpoint": "certificate.device",
      "sdk_method": "create",
      "description": "Stop data traffic to device"
    },
    "forceSyncRootCert": {
      "path": "/certificate/forcesync/rootCert",
      "method": "post",
      "sdk_endpoint": "certificate.forcesync",
      "sdk_method": "create",
      "description": "force Sync RootCert to all devices"
    },
    "generateCSR": {
      "path": "/certificate/generate/csr",
      "method": "post",
      "sdk_endpoint": "certificate.generate",
      "sdk_method": "create",
      "description": "generate CSR on target device"
    },
    "generateEnterpriseCSR": {
      "path": "/certificate/generate/enterprise/csr/vedge",
      "method": "post",
      "sdk_endpoint": "certificate.generate",
      "sdk_method": "create",
      "description": "generate CSR on hardware WAN edge device"
    },
    "generateEdgeDeviceCSR": {
      "path": "/certificate/generate/wanedge/csr",
      "method": "post",
      "sdk_endpoint": "certificate.generate",
      "sdk_method": "create",
      "description": "generate CSR on WAN edge device"
    },
    "installCertificate": {
      "path": "/certificate/install/signedCert",
      "method": "post",
      "sdk_endpoint": "certificate.install",
      "sdk_method": "create",
      "description": "install Certificate"
    },
    "updateJks": {
      "path": "/certificate/jks",
      "method": "put",
      "sdk_endpoint": "certificate.jks",
      "sdk_method": "update",
      "description": "update JKS"
    },
    "getListStatus": {
      "path": "/certificate/list/status",
      "method": "get",
      "sdk_endpoint": "certificate.list",
      "sdk_method": "get",
      "description": "get certificate data"
    },
    "setvSmartMtHubList": {
      "path": "/certificate/mthub/list",
      "method": "get",
      "sdk_endpoint": "certificate.mthub",
      "sdk_method": "get",
      "description": "vSmart Mthub list"
    },
    "getQuarantineBanner": {
      "path": "/certificate/quarantine/banner",
      "method": "get",
      "sdk_endpoint": "certificate.quarantine",
      "sdk_method": "get",
      "description": "get quarantine banner data"
    },
    "getCertificateData": {
      "path": "/certificate/record",
      "method": "get",
      "sdk_endpoint": "certificate.record",
      "sdk_method": "get",
      "description": "get device certificate data"
    },
    "resetRSA": {
      "path": "/certificate/reset/rsa",
      "method": "post",
      "sdk_endpoint": "certificate.reset",
      "sdk_method": "create",
      "description": "resetRSA for controllers"
    },
    "decommissionEnterpriseCSRForVedge": {
      "path": "/certificate/revoke/enterprise/certificate",
      "method": "post",
      "sdk_endpoint": "certificate.revoke",
      "sdk_method": "create",
      "description": "Revoking enterprise CSR for hardware vEdge"
    },
    "getRootCertChains": {
      "path": "/certificate/rootcertchains",
      "method": "get",
      "sdk_endpoint": "certificate.rootcertchains",
      "sdk_method": "get",
      "description": "get root cert chain"
    },
    "saveRootCertChain": {
      "path": "/certificate/rootcertchains",
      "method": "put",
      "sdk_endpoint": "certificate.rootcertchains",
      "sdk_method": "update",
      "description": "update root cert chain"
    },
    "getRootCertificate": {
      "path": "/certificate/rootcertificate",
      "method": "get",
      "sdk_endpoint": "certificate.rootcertificate",
      "sdk_method": "get",
      "description": "Get device root certificate detail view"
    },
    "rsaKeyLength2048ForAllDevices": {
      "path": "/certificate/rsakeylengthdefault",
      "method": "get",
      "sdk_endpoint": "certificate.rsakeylengthdefault",
      "sdk_method": "get",
      "description": "Verify all devices use 2048-bit RSA"
    },
    "saveVEdgeList": {
      "path": "/certificate/save/vedge/list",
      "method": "post",
      "sdk_endpoint": "certificate.save",
      "sdk_method": "create",
      "description": "change VedgeList Validity"
    },
    "getCertificateDetail": {
      "path": "/certificate/stats/detail",
      "method": "get",
      "sdk_endpoint": "certificate.stats",
      "sdk_method": "get",
      "description": "Get certificate details"
    },
    "getCertificateStats": {
      "path": "/certificate/stats/summary",
      "method": "get",
      "sdk_endpoint": "certificate.stats",
      "sdk_method": "get",
      "description": "Get certificate expiration status"
    },
    "syncvBond": {
      "path": "/certificate/syncvbond",
      "method": "get",
      "sdk_endpoint": "certificate.syncvbond",
      "sdk_method": "get",
      "description": "sync vManage UUID to all vBond"
    },
    "getTokenList": {
      "path": "/certificate/tokengeneratedlist",
      "method": "get",
      "sdk_endpoint": "certificate.tokengeneratedlist",
      "sdk_method": "get",
      "description": "get token generated list"
    },
    "getInstalledCert": {
      "path": "/certificate/vedge",
      "method": "get",
      "sdk_endpoint": "certificate.vedge",
      "sdk_method": "get",
      "description": "get device installed cert"
    },
    "getvEdgeCSR": {
      "path": "/certificate/vedge/csr",
      "method": "get",
      "sdk_endpoint": "certificate.vedge",
      "sdk_method": "get",
      "description": "get device CSR"
    },
    "getvEdgeList": {
      "path": "/certificate/vedge/list",
      "method": "get",
      "sdk_endpoint": "certificate.vedge",
      "sdk_method": "get",
      "description": "get vEdge list"
    },
    "setvEdgeList": {
      "path": "/certificate/vedge/list",
      "method": "post",
      "sdk_endpoint": "certificate.vedge",
      "sdk_method": "create",
      "description": "Save vEdge list (send to controller)"
    },
    "getView": {
      "path": "/certificate/view",
      "method": "get",
      "sdk_endpoint": "certificate.view",
      "sdk_method": "get",
      "description": "Get certificate UI view"
    },
    "getSelfSignedCert": {
      "path": "/certificate/vmanage/selfsignedcert",
      "method": "get",
      "sdk_endpoint": "certificate.vmanage",
      "sdk_method": "get",
      "description": "get vManage self signed cert"
    },
    "getvSmartList": {
      "path": "/certificate/vsmart/list",
      "method": "get",
      "sdk_endpoint": "certificate.vsmart",
      "sdk_method": "get",
      "description": "get vSmart list"
    },
    "setvSmartList": {
      "path": "/certificate/vsmart/list",
      "method": "post",
      "sdk_endpoint": "certificate.vsmart",
      "sdk_method": "create",
      "description": "save vSmart List(handleSendToVbond)"
    },
    "deleteConfiguration": {
      "path": "/certificate/{uuid}",
      "method": "delete",
      "sdk_endpoint": "certificate.{uuid}",
      "sdk_method": "delete",
      "description": "invalid device"
    },
    "createServerInfo": {
      "path": "/client/server",
      "method": "get",
      "sdk_endpoint": "client.server",
      "sdk_method": "get",
      "description": "Get vManage server information"
    },
    "getCsrfToken": {
      "path": "/client/token",
      "method": "get",
      "sdk_endpoint": "client.token",
      "sdk_method": "get",
      "description": "Get CSRF token"
    },
    "getAccessTokenforDevice": {
      "path": "/cloudservices/accesstoken",
      "method": "get",
      "sdk_endpoint": "cloudservices.accesstoken",
      "sdk_method": "get",
      "description": ""
    },
    "enableWebex_1": {
      "path": "/cloudservices/app/webex",
      "method": "put",
      "sdk_endpoint": "cloudservices.app",
      "sdk_method": "update",
      "description": "Day N- Update Webex App"
    },
    "enableWebex": {
      "path": "/cloudservices/app/webex",
      "method": "post",
      "sdk_endpoint": "cloudservices.app",
      "sdk_method": "create",
      "description": "Add Webex App"
    },
    "deleteWebexPrefixLists": {
      "path": "/cloudservices/app/webex",
      "method": "delete",
      "sdk_endpoint": "cloudservices.app",
      "sdk_method": "delete",
      "description": "deleteWebexPrefixLists"
    },
    "getAzureToken": {
      "path": "/cloudservices/authtoken",
      "method": "post",
      "sdk_endpoint": "cloudservices.authtoken",
      "sdk_method": "create",
      "description": "Get Azure token"
    },
    "connect": {
      "path": "/cloudservices/connect",
      "method": "get",
      "sdk_endpoint": "cloudservices.connect",
      "sdk_method": "get",
      "description": "Telemetry Opt In"
    },
    "getCloudCredentials": {
      "path": "/cloudservices/credentials",
      "method": "get",
      "sdk_endpoint": "cloudservices.credentials",
      "sdk_method": "get",
      "description": "Get cloud service credentials"
    },
    "addCloudCredentials": {
      "path": "/cloudservices/credentials",
      "method": "post",
      "sdk_endpoint": "cloudservices.credentials",
      "sdk_method": "create",
      "description": "Add cloud service credentials"
    },
    "getDeviceCode": {
      "path": "/cloudservices/devicecode",
      "method": "post",
      "sdk_endpoint": "cloudservices.devicecode",
      "sdk_method": "create",
      "description": "Get Azure device code"
    },
    "getO365PreferredPathFromVAnalytics": {
      "path": "/cloudservices/m365/preferredpath",
      "method": "post",
      "sdk_endpoint": "cloudservices.m365",
      "sdk_method": "create",
      "description": "Get vAnalytics Preferred Path for Office365 over time. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "isStaging": {
      "path": "/cloudservices/staging",
      "method": "get",
      "sdk_endpoint": "cloudservices.staging",
      "sdk_method": "get",
      "description": "Check if testbed or production"
    },
    "getTelemetryState": {
      "path": "/cloudservices/telemetry",
      "method": "get",
      "sdk_endpoint": "cloudservices.telemetry",
      "sdk_method": "get",
      "description": "Get Telemetry state"
    },
    "optIn": {
      "path": "/cloudservices/telemetry/optin",
      "method": "put",
      "sdk_endpoint": "cloudservices.telemetry",
      "sdk_method": "update",
      "description": "Telemetry Opt In"
    },
    "optOut": {
      "path": "/cloudservices/telemetry/optout",
      "method": "delete",
      "sdk_endpoint": "cloudservices.telemetry",
      "sdk_method": "delete",
      "description": "Telemetry Opt Out"
    },
    "getvAnalyticsDashboardList": {
      "path": "/cloudservices/vanalytics/dashboardlist",
      "method": "get",
      "sdk_endpoint": "cloudservices.vanalytics",
      "sdk_method": "get",
      "description": "Get vAnalytics Dashboard List"
    },
    "checkIfClusterLocked": {
      "path": "/clusterManagement/clusterLocked",
      "method": "get",
      "sdk_endpoint": "clusterManagement.clusterLocked",
      "sdk_method": "get",
      "description": "Check whether cluster is locked<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getClusterWorkflowVersion": {
      "path": "/clusterManagement/clusterworkflow/version",
      "method": "get",
      "sdk_endpoint": "clusterManagement.clusterworkflow",
      "sdk_method": "get",
      "description": "List vManages in the cluster<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "configureVmanage": {
      "path": "/clusterManagement/configure",
      "method": "post",
      "sdk_endpoint": "clusterManagement.configure",
      "sdk_method": "create",
      "description": "Configure vManage<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getConnectedDevices": {
      "path": "/clusterManagement/connectedDevices/{vmanageIP}",
      "method": "get",
      "sdk_endpoint": "clusterManagement.connectedDevices",
      "sdk_method": "get",
      "description": "Get connected device for vManage<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "healthDetails": {
      "path": "/clusterManagement/health/details",
      "method": "get",
      "sdk_endpoint": "clusterManagement.health",
      "sdk_method": "get",
      "description": "Get cluster health check details<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "healthStatusInfo": {
      "path": "/clusterManagement/health/status",
      "method": "get",
      "sdk_endpoint": "clusterManagement.health",
      "sdk_method": "get",
      "description": "Get cluster health check details<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "healthSummary": {
      "path": "/clusterManagement/health/summary",
      "method": "get",
      "sdk_endpoint": "clusterManagement.health",
      "sdk_method": "get",
      "description": "Get cluster health check summary<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "hostHealthStatus": {
      "path": "/clusterManagement/host/health/status",
      "method": "get",
      "sdk_endpoint": "clusterManagement.host",
      "sdk_method": "get",
      "description": "Get vManage cluster health check details<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getConfiguredIPList": {
      "path": "/clusterManagement/iplist/{vmanageID}",
      "method": "get",
      "sdk_endpoint": "clusterManagement.iplist",
      "sdk_method": "get",
      "description": "Get configured IP addresses<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "isClusterReady": {
      "path": "/clusterManagement/isready",
      "method": "get",
      "sdk_endpoint": "clusterManagement.isready",
      "sdk_method": "get",
      "description": "Is cluster ready<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "listVmanages": {
      "path": "/clusterManagement/list",
      "method": "get",
      "sdk_endpoint": "clusterManagement.list",
      "sdk_method": "get",
      "description": "List vManages in the cluster<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "nodeProperties": {
      "path": "/clusterManagement/nodeProperties",
      "method": "get",
      "sdk_endpoint": "clusterManagement.nodeProperties",
      "sdk_method": "get",
      "description": "Get properties of vManage being added to  cluster<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "removeVmanage": {
      "path": "/clusterManagement/remove",
      "method": "post",
      "sdk_endpoint": "clusterManagement.remove",
      "sdk_method": "create",
      "description": "Remove vManage from cluster<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "performReplicationAndRebalanceOfKafkaPartitions": {
      "path": "/clusterManagement/replicateAndRebalance",
      "method": "put",
      "sdk_endpoint": "clusterManagement.replicateAndRebalance",
      "sdk_method": "update",
      "description": "Initiate replication and rebalance of kafka topics<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "editVmanage": {
      "path": "/clusterManagement/setup",
      "method": "put",
      "sdk_endpoint": "clusterManagement.setup",
      "sdk_method": "update",
      "description": "Update vManage cluster info<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "addVmanage": {
      "path": "/clusterManagement/setup",
      "method": "post",
      "sdk_endpoint": "clusterManagement.setup",
      "sdk_method": "create",
      "description": "Add vManage to cluster"
    },
    "getTenancyMode": {
      "path": "/clusterManagement/tenancy/mode",
      "method": "get",
      "sdk_endpoint": "clusterManagement.tenancy",
      "sdk_method": "get",
      "description": "Get vManage tenancy mode<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "setTenancyMode": {
      "path": "/clusterManagement/tenancy/mode",
      "method": "post",
      "sdk_endpoint": "clusterManagement.tenancy",
      "sdk_method": "create",
      "description": "Update vManage tenancy mode"
    },
    "getTenantsList": {
      "path": "/clusterManagement/tenantList",
      "method": "get",
      "sdk_endpoint": "clusterManagement.tenantList",
      "sdk_method": "get",
      "description": "Get tenant list<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "addOrUpdateUserCredentials": {
      "path": "/clusterManagement/userCreds",
      "method": "post",
      "sdk_endpoint": "clusterManagement.userCreds",
      "sdk_method": "create",
      "description": "Add or update user credentials for cluster operations<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getVManageDetails": {
      "path": "/clusterManagement/vManage/details/{vmanageIP}",
      "method": "get",
      "sdk_endpoint": "clusterManagement.vManage",
      "sdk_method": "get",
      "description": "Get vManage detail<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getConnectedDevicesPerTenant": {
      "path": "/clusterManagement/{tenantId}/connectedDevices/{vmanageIP}",
      "method": "get",
      "sdk_endpoint": "clusterManagement.{tenantId}",
      "sdk_method": "get",
      "description": "Get connected device for vManage for a tenant<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getvnfByDeviceId": {
      "path": "/colocation/monitor/device/vnf",
      "method": "get",
      "sdk_endpoint": "colocation.monitor",
      "sdk_method": "get",
      "description": "List all VNF attached with Device"
    },
    "vnfActions": {
      "path": "/colocation/monitor/vnf/action",
      "method": "post",
      "sdk_endpoint": "colocation.monitor",
      "sdk_method": "create",
      "description": "To do VNF actions such as start, stop and restart"
    },
    "getVNFEventsCountDetail": {
      "path": "/colocation/monitor/vnf/alarms",
      "method": "get",
      "sdk_endpoint": "colocation.monitor",
      "sdk_method": "get",
      "description": "Get event detail of VNF"
    },
    "getVNFAlarmCount": {
      "path": "/colocation/monitor/vnf/alarms/count",
      "method": "get",
      "sdk_endpoint": "colocation.monitor",
      "sdk_method": "get",
      "description": "Get alarm count of VNF"
    },
    "getVNFEventsDetail": {
      "path": "/colocation/monitor/vnf/events",
      "method": "get",
      "sdk_endpoint": "colocation.monitor",
      "sdk_method": "get",
      "description": "Get event detail of VNF"
    },
    "getVNFInterfaceDetail": {
      "path": "/colocation/monitor/vnf/interface",
      "method": "get",
      "sdk_endpoint": "colocation.monitor",
      "sdk_method": "get",
      "description": "Get interface detail of VNF"
    },
    "activateContainerOnRemoteHost": {
      "path": "/container-manager/activate/{containerName}",
      "method": "post",
      "sdk_endpoint": "container-manager.activate",
      "sdk_method": "create",
      "description": "Activate container on remote host"
    },
    "deActivateContainer": {
      "path": "/container-manager/deactivate/{containerName}",
      "method": "post",
      "sdk_endpoint": "container-manager.deactivate",
      "sdk_method": "create",
      "description": "Deactivate container on remote host"
    },
    "doesValidImageExist": {
      "path": "/container-manager/doesValidImageExist/{containerName}",
      "method": "get",
      "sdk_endpoint": "container-manager.doesValidImageExist",
      "sdk_method": "get",
      "description": "Get container image checksum"
    },
    "getContainerInspectData": {
      "path": "/container-manager/inspect/{containerName}",
      "method": "get",
      "sdk_endpoint": "container-manager.inspect",
      "sdk_method": "get",
      "description": "Get container inspect data"
    },
    "getContainerSettings": {
      "path": "/container-manager/settings/{containerName}",
      "method": "get",
      "sdk_endpoint": "container-manager.settings",
      "sdk_method": "get",
      "description": "Get container settings"
    },
    "generateDeviceStateData": {
      "path": "/data/device/state/{state_data_type}",
      "method": "get",
      "sdk_endpoint": "data.device",
      "sdk_method": "get",
      "description": "Get device state data"
    },
    "generateDeviceStateDataFields": {
      "path": "/data/device/state/{state_data_type}/fields",
      "method": "get",
      "sdk_endpoint": "data.device",
      "sdk_method": "get",
      "description": "Get device state data fileds"
    },
    "generateDeviceStateDataWithQueryString": {
      "path": "/data/device/state/{state_data_type}/query",
      "method": "get",
      "sdk_endpoint": "data.device",
      "sdk_method": "get",
      "description": "Get device state data fileds"
    },
    "getStatisticsType": {
      "path": "/data/device/statistics",
      "method": "get",
      "sdk_endpoint": "data.device",
      "sdk_method": "get",
      "description": "Get statistics types"
    },
    "getActiveAlarms": {
      "path": "/data/device/statistics/alarm/active",
      "method": "get",
      "sdk_endpoint": "data.device",
      "sdk_method": "get",
      "description": "Get active alarms"
    },
    "generateDeviceStatisticsData": {
      "path": "/data/device/statistics/{state_data_type}",
      "method": "get",
      "sdk_endpoint": "data.device",
      "sdk_method": "get",
      "description": "Get device statistics data"
    },
    "getCountWithStateDataType": {
      "path": "/data/device/statistics/{state_data_type}/doccount",
      "method": "get",
      "sdk_endpoint": "data.device",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getStatDataFieldsByStateDataType": {
      "path": "/data/device/statistics/{state_data_type}/fields",
      "method": "get",
      "sdk_endpoint": "data.device",
      "sdk_method": "get",
      "description": "Get statistics fields and types"
    },
    "createStats": {
      "path": "/dca/analytics",
      "method": "put",
      "sdk_endpoint": "dca.analytics",
      "sdk_method": "update",
      "description": "Update collection time of DCARest stat for vAnalytics"
    },
    "getAllStatsDataDCA": {
      "path": "/dca/analytics/all",
      "method": "post",
      "sdk_endpoint": "dca.analytics",
      "sdk_method": "create",
      "description": "Get all statistics setting data"
    },
    "getCloudSettings": {
      "path": "/dca/cloudservices",
      "method": "get",
      "sdk_endpoint": "dca.cloudservices",
      "sdk_method": "get",
      "description": "Get cloud service settings"
    },
    "getAccessToken": {
      "path": "/dca/cloudservices/accesstoken",
      "method": "get",
      "sdk_endpoint": "dca.cloudservices",
      "sdk_method": "get",
      "description": "Get DCA access token"
    },
    "storeAccessToken": {
      "path": "/dca/cloudservices/accesstoken",
      "method": "post",
      "sdk_endpoint": "dca.cloudservices",
      "sdk_method": "create",
      "description": "Set DCA access token"
    },
    "generateAlarm": {
      "path": "/dca/cloudservices/alarm",
      "method": "post",
      "sdk_endpoint": "dca.cloudservices",
      "sdk_method": "create",
      "description": "Generate DCA alarms"
    },
    "getIdToken": {
      "path": "/dca/cloudservices/idtoken",
      "method": "get",
      "sdk_endpoint": "dca.cloudservices",
      "sdk_method": "get",
      "description": "Get DCA Id token"
    },
    "storeIdToken": {
      "path": "/dca/cloudservices/idtoken",
      "method": "post",
      "sdk_endpoint": "dca.cloudservices",
      "sdk_method": "create",
      "description": "Set DCA Id token"
    },
    "getOTP": {
      "path": "/dca/cloudservices/otp",
      "method": "get",
      "sdk_endpoint": "dca.cloudservices",
      "sdk_method": "get",
      "description": "Get cloud service OTP value"
    },
    "updatetOTP": {
      "path": "/dca/cloudservices/otp",
      "method": "put",
      "sdk_endpoint": "dca.cloudservices",
      "sdk_method": "update",
      "description": "Update cloud service OTP value"
    },
    "getTelemetrySettings": {
      "path": "/dca/cloudservices/telemetry",
      "method": "get",
      "sdk_endpoint": "dca.cloudservices",
      "sdk_method": "get",
      "description": "Get DCA telemetry settings"
    },
    "getvAnalytics": {
      "path": "/dca/cloudservices/vanalytics",
      "method": "post",
      "sdk_endpoint": "dca.cloudservices",
      "sdk_method": "create",
      "description": "Get session from DCS for vAnalytics"
    },
    "generateDCADeviceStateData": {
      "path": "/dca/data/device/state/{state_data_type}",
      "method": "post",
      "sdk_endpoint": "dca.data",
      "sdk_method": "create",
      "description": "Get device state data"
    },
    "generateDCADeviceStatisticsData": {
      "path": "/dca/data/device/statistics/{stats_data_type}",
      "method": "post",
      "sdk_endpoint": "dca.data",
      "sdk_method": "create",
      "description": "Get device statistics data"
    },
    "getDCATenantOwners": {
      "path": "/dca/dcatenantowners",
      "method": "get",
      "sdk_endpoint": "dca.dcatenantowners",
      "sdk_method": "get",
      "description": "Get DCA tenant owners"
    },
    "listAllDevicesDCA": {
      "path": "/dca/device",
      "method": "post",
      "sdk_endpoint": "dca.device",
      "sdk_method": "create",
      "description": "Get all devices"
    },
    "getCrashLogs": {
      "path": "/dca/device/crashlog/details",
      "method": "post",
      "sdk_endpoint": "dca.device",
      "sdk_method": "create",
      "description": "Get crash log"
    },
    "getCrashLogsSynced": {
      "path": "/dca/device/crashlog/synced",
      "method": "get",
      "sdk_endpoint": "dca.device",
      "sdk_method": "get",
      "description": "Get device crash log"
    },
    "getCloudServicesConfigurationDCA": {
      "path": "/dca/settings/configuration/cloudservices/dca",
      "method": "get",
      "sdk_endpoint": "dca.settings",
      "sdk_method": "get",
      "description": "Get DCA cloud service configuration"
    },
    "createDCAAnalyticsDataFile": {
      "path": "/dca/settings/configuration/{type}/dca",
      "method": "post",
      "sdk_endpoint": "dca.settings",
      "sdk_method": "create",
      "description": "Create analytics config data"
    },
    "getStatsDBIndexStatus": {
      "path": "/dca/statistics/settings/status",
      "method": "post",
      "sdk_endpoint": "dca.statistics",
      "sdk_method": "create",
      "description": "Get statistics setting status"
    },
    "getDevicesDetailsDCA": {
      "path": "/dca/system/device",
      "method": "post",
      "sdk_endpoint": "dca.system",
      "sdk_method": "create",
      "description": "Get device details"
    },
    "getDCAAttachedConfigToDevice": {
      "path": "/dca/template/device/config/attachedconfig",
      "method": "post",
      "sdk_endpoint": "dca.template",
      "sdk_method": "create",
      "description": "Get attached config to device"
    },
    "getTemplatePolicyDefinitionsDCA": {
      "path": "/dca/template/policy/definition/approute",
      "method": "post",
      "sdk_endpoint": "dca.template",
      "sdk_method": "create",
      "description": "Get template policy definitions"
    },
    "getVPNListsDCA": {
      "path": "/dca/template/policy/list/vpn",
      "method": "post",
      "sdk_endpoint": "dca.template",
      "sdk_method": "create",
      "description": "Get VPN details"
    },
    "getVedgeTemplateListDCA": {
      "path": "/dca/template/policy/vedge",
      "method": "post",
      "sdk_endpoint": "dca.template",
      "sdk_method": "create",
      "description": "Get vEdge template list"
    },
    "getVsmartTemplateListDCA": {
      "path": "/dca/template/policy/vsmart",
      "method": "post",
      "sdk_endpoint": "dca.template",
      "sdk_method": "create",
      "description": "Get vSmart template list"
    },
    "listAllDevices": {
      "path": "/device",
      "method": "get",
      "sdk_endpoint": "devices",
      "sdk_method": "get",
      "description": "List all devices"
    },
    "getAAAservers": {
      "path": "/device/aaa/servers",
      "method": "get",
      "sdk_endpoint": "device.aaa",
      "sdk_method": "get",
      "description": "Get AAA servers from device (Real Time)"
    },
    "getAAAUsers": {
      "path": "/device/aaa/users",
      "method": "get",
      "sdk_endpoint": "device.aaa",
      "sdk_method": "get",
      "description": "Get AAA users from device (Real Time)"
    },
    "getACLMatchCounterUsers": {
      "path": "/device/acl/matchcounter",
      "method": "get",
      "sdk_endpoint": "device.acl",
      "sdk_method": "get",
      "description": "Get ACL match counters from device (Real Time)"
    },
    "processCancelTask": {
      "path": "/device/action/cancel",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Cancel tasks"
    },
    "generateChangePartitionInfo": {
      "path": "/device/action/changepartition",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get change partition information"
    },
    "processChangePartition": {
      "path": "/device/action/changepartition",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Process change partition operation"
    },
    "generateDeactivateInfo": {
      "path": "/device/action/deactivate",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get deactivate partition information"
    },
    "processDeactivateSmu": {
      "path": "/device/action/deactivate",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Process deactivate operation for smu image"
    },
    "processDefaultPartition": {
      "path": "/device/action/defaultpartition",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Process marking default partition operation"
    },
    "createFilterVPNList": {
      "path": "/device/action/filter/vpn",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get filter VPN list"
    },
    "getFirmwareImages": {
      "path": "/device/action/firmware",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get list of firmware images in the repository"
    },
    "processFirmwareImage": {
      "path": "/device/action/firmware",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Upload firmware image package"
    },
    "remoteFirmwareImageUpgrade": {
      "path": "/device/action/firmware-upgrade",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Eemote firmware on device"
    },
    "getFirmwareDevices": {
      "path": "/device/action/firmware-upgrade/devices",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "firmware supported devices"
    },
    "getFirmwareRemoteImage": {
      "path": "/device/action/firmware-upgrade/remote",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "firmware remote image package"
    },
    "processFirmwareRemoteImage": {
      "path": "/device/action/firmware-upgrade/remote",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "firmware remote image package"
    },
    "editFirmwareUpgardeRemoteImage": {
      "path": "/device/action/firmware-upgrade/remote/{versionId}",
      "method": "put",
      "sdk_endpoint": "device.action",
      "sdk_method": "update",
      "description": "Download software package file"
    },
    "deleteFirmwareUpgardeRemoteImage": {
      "path": "/device/action/firmware-upgrade/{versionId}",
      "method": "delete",
      "sdk_endpoint": "device.action",
      "sdk_method": "delete",
      "description": "Download software package file"
    },
    "activateFirmwareImage": {
      "path": "/device/action/firmware/activate",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Activate firmware on device"
    },
    "getDevicesFWUpgrade": {
      "path": "/device/action/firmware/devices",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get list of devices that support firmware upgrade"
    },
    "installFirmwareImage": {
      "path": "/device/action/firmware/install",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Install firmware on device"
    },
    "removeFirmwareImage": {
      "path": "/device/action/firmware/remove",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Remove firmware on device"
    },
    "getFirmwareImageDetails": {
      "path": "/device/action/firmware/{versionId}",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get firmware image details for a given version"
    },
    "deleteFirmwareImage": {
      "path": "/device/action/firmware/{versionId}",
      "method": "delete",
      "sdk_endpoint": "device.action",
      "sdk_method": "delete",
      "description": "Delete firmware image package"
    },
    "initiateImageDownload": {
      "path": "/device/action/image-download",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Intitate image download on the given device."
    },
    "processRemoveSoftwareImage": {
      "path": "/device/action/image-remove",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Process remove software image operation"
    },
    "generateInstallInfo": {
      "path": "/device/action/install",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Generate install info"
    },
    "processInstall": {
      "path": "/device/action/install",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Process an installation operation"
    },
    "generateDeviceList": {
      "path": "/device/action/install/devices/{deviceType}",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get list of installed devices"
    },
    "generateDeviceActionList": {
      "path": "/device/action/list",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get device action list"
    },
    "processLxcActivate": {
      "path": "/device/action/lxcactivate",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Process an activation operation"
    },
    "processLxcDelete": {
      "path": "/device/action/lxcdelete",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Process a delete operation"
    },
    "processLxcInstall": {
      "path": "/device/action/lxcinstall",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Process an installation operation"
    },
    "processLxcReload": {
      "path": "/device/action/lxcreload",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Process a reload operation"
    },
    "processLxcReset": {
      "path": "/device/action/lxcreset",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Process a reset operation"
    },
    "processLxcUpgrade": {
      "path": "/device/action/lxcupgrade",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Process an upgrade operation"
    },
    "generateRebootInfo": {
      "path": "/device/action/reboot",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get device reboot information"
    },
    "processReboot": {
      "path": "/device/action/reboot",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Process a reboot operation"
    },
    "generateRebootDeviceList": {
      "path": "/device/action/reboot/devices/{deviceType}",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get list of rebooted devices"
    },
    "generateRediscoverInfo": {
      "path": "/device/action/rediscover",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get rediscover operation information"
    },
    "reDiscoverDevices": {
      "path": "/device/action/rediscover",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Rediscover device"
    },
    "reDiscoverAllDevice": {
      "path": "/device/action/rediscoverall",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Rediscover all devices"
    },
    "getRemoteServerList": {
      "path": "/device/action/remote-server",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get list of remote servers"
    },
    "addRemoteServer": {
      "path": "/device/action/remote-server",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Add a new remote server entry."
    },
    "getRemoteServerById": {
      "path": "/device/action/remote-server/{id}",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get remote server for the specified ID"
    },
    "updateRemoteServer": {
      "path": "/device/action/remote-server/{id}",
      "method": "put",
      "sdk_endpoint": "device.action",
      "sdk_method": "update",
      "description": "Update remote server for the specified ID"
    },
    "deleteRemoteServer": {
      "path": "/device/action/remote-server/{id}",
      "method": "delete",
      "sdk_endpoint": "device.action",
      "sdk_method": "delete",
      "description": "Delete remote server for the specified ID"
    },
    "generateRemovePartitionInfo": {
      "path": "/device/action/removepartition",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get remove partition information"
    },
    "processRemovePartition": {
      "path": "/device/action/removepartition",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Process remove partition operation"
    },
    "processDeleteAmpApiKey": {
      "path": "/device/action/security/amp/apikey/{uuid}",
      "method": "delete",
      "sdk_endpoint": "device.action",
      "sdk_method": "delete",
      "description": "Process amp api key deletion operation"
    },
    "processAmpApiReKey": {
      "path": "/device/action/security/amp/rekey",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Process amp api re-key operation"
    },
    "testApiKey": {
      "path": "/device/action/security/apikey/{uuid}",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get API key from device"
    },
    "generateSecurityDevicesList": {
      "path": "/device/action/security/devices/{policyType}",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get list of devices by security policy type"
    },
    "findSoftwareImages": {
      "path": "/device/action/software",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get software images"
    },
    "createImageURL": {
      "path": "/device/action/software",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Create software image URL"
    },
    "getImageProperties": {
      "path": "/device/action/software/imageProperties/{versionId}",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get Image Properties"
    },
    "findSoftwareImagesWithFilters": {
      "path": "/device/action/software/images",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get software images"
    },
    "installPkg": {
      "path": "/device/action/software/package",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Install software package"
    },
    "getUploadImagesCount": {
      "path": "/device/action/software/package/imageCount",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Number of software image presented in vManage repository"
    },
    "generateUtdImageData": {
      "path": "/device/action/software/package/signature/{utdsignature}",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get list of Utd images"
    },
    "addUtdRemoteImage": {
      "path": "/device/action/software/package/utdsignature/{type}/mode/auto",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "add Utd remote image"
    },
    "uploadUtdImage": {
      "path": "/device/action/software/package/utdsignature/{type}/mode/manual",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "upload Utd image"
    },
    "downloadPackageFile": {
      "path": "/device/action/software/package/{fileName}",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Download software package file"
    },
    "processSoftwareImage": {
      "path": "/device/action/software/package/{imageType}",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Install software image package"
    },
    "getImageMetadata": {
      "path": "/device/action/software/package/{versionId}/metadata",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Update Package Metadata"
    },
    "editImageMetadata": {
      "path": "/device/action/software/package/{versionId}/metadata",
      "method": "put",
      "sdk_endpoint": "device.action",
      "sdk_method": "update",
      "description": "Update Package Metadata"
    },
    "getImageRemoteServer": {
      "path": "/device/action/software/remoteserver/{versionId}",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get Image Remote Server Details"
    },
    "editImageRemoteServer": {
      "path": "/device/action/software/remoteserver/{versionId}",
      "method": "put",
      "sdk_endpoint": "device.action",
      "sdk_method": "update",
      "description": "Update Image Remote Server Details"
    },
    "findVEdgeSoftwareVersion": {
      "path": "/device/action/software/vedge/version",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get vEdge software version"
    },
    "findSoftwareVersion": {
      "path": "/device/action/software/version",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get software version"
    },
    "getVnfProperties": {
      "path": "/device/action/software/vnfproperties/{versionId}",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get VNF Properties"
    },
    "findZtpSoftwareVersion": {
      "path": "/device/action/software/ztp/version",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get ZTP software version"
    },
    "updateImageURL": {
      "path": "/device/action/software/{versionId}",
      "method": "put",
      "sdk_endpoint": "device.action",
      "sdk_method": "update",
      "description": "Update software image URL"
    },
    "deleteImageURL": {
      "path": "/device/action/software/{versionId}",
      "method": "delete",
      "sdk_endpoint": "device.action",
      "sdk_method": "delete",
      "description": "Delete software image URL"
    },
    "triggerPendingTasksMonitoring": {
      "path": "/device/action/startmonitor",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Triggers global monitoring thread"
    },
    "cancelPendingTasks": {
      "path": "/device/action/status/cancel/{processId}",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Bulk cancel task status"
    },
    "cleanStatus": {
      "path": "/device/action/status/clean",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Delete task and status vertex"
    },
    "deleteStatus": {
      "path": "/device/action/status/clear",
      "method": "delete",
      "sdk_endpoint": "device.action",
      "sdk_method": "delete",
      "description": "Delete status of action"
    },
    "getMaintenanceWindowFlag": {
      "path": "/device/action/status/mw",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get status of maintenance window for vManage upgrade flag"
    },
    "updateMaintenanceWindowFlag": {
      "path": "/device/action/status/mw",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Update maintenance window flag"
    },
    "findRunningTasks": {
      "path": "/device/action/status/tasks",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Find running tasks"
    },
    "getActiveTaskCount": {
      "path": "/device/action/status/tasks/activeCount",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get active task count"
    },
    "getCleanStatus": {
      "path": "/device/action/status/tasks/clean",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Delete task and status vertex"
    },
    "findStatus": {
      "path": "/device/action/status/{processId}",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Find status of action"
    },
    "testIoxConfig": {
      "path": "/device/action/test/ioxconfig/{deviceIP}",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "testIoxConfig"
    },
    "createUniqueVPNList": {
      "path": "/device/action/uniquevpnlist",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Create unique VPN list"
    },
    "processVnfInstall": {
      "path": "/device/action/vnfinstall",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Process an installation operation"
    },
    "createVPNList": {
      "path": "/device/action/vpn",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Create VPN list"
    },
    "getZTPUpgradeConfig": {
      "path": "/device/action/ztp/upgrade",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get ZTP upgrade configuration"
    },
    "postprocessZTPUpgradeConfigSetting": {
      "path": "/device/action/ztp/upgrade",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Process ZTP upgrade configuration setting"
    },
    "getZTPUpgradeConfigSetting": {
      "path": "/device/action/ztp/upgrade/setting",
      "method": "get",
      "sdk_endpoint": "device.action",
      "sdk_method": "get",
      "description": "Get ZTP upgrade configuration setting"
    },
    "processZTPUpgradeConfigSetting": {
      "path": "/device/action/ztp/upgrade/setting",
      "method": "post",
      "sdk_endpoint": "device.action",
      "sdk_method": "create",
      "description": "Process ZTP upgrade configuration setting"
    },
    "getAppHostingAttachedDevices": {
      "path": "/device/app-hosting/attached-devices",
      "method": "get",
      "sdk_endpoint": "device.app_hosting",
      "sdk_method": "get",
      "description": "Get App hosting attached device from device"
    },
    "getAppHostingDetails": {
      "path": "/device/app-hosting/details",
      "method": "get",
      "sdk_endpoint": "device.app_hosting",
      "sdk_method": "get",
      "description": "Get App hosting details from device"
    },
    "getAppHostingGuestRoutes": {
      "path": "/device/app-hosting/guest-routes",
      "method": "get",
      "sdk_endpoint": "device.app_hosting",
      "sdk_method": "get",
      "description": "Get App hosting guest routes from device"
    },
    "getAppHostingNetworkDevices": {
      "path": "/device/app-hosting/network-interfaces",
      "method": "get",
      "sdk_endpoint": "device.app_hosting",
      "sdk_method": "get",
      "description": "Get App hosting network interface from device"
    },
    "getAppHostingNetworkUtils": {
      "path": "/device/app-hosting/network-utilization",
      "method": "get",
      "sdk_endpoint": "device.app_hosting",
      "sdk_method": "get",
      "description": "Get App hosting network utilization from device"
    },
    "getAppHostingProcesses": {
      "path": "/device/app-hosting/processes",
      "method": "get",
      "sdk_endpoint": "device.app_hosting",
      "sdk_method": "get",
      "description": "Get App hosting processes from device"
    },
    "getAppHostingStorageUtils": {
      "path": "/device/app-hosting/storage-utilization",
      "method": "get",
      "sdk_endpoint": "device.app_hosting",
      "sdk_method": "get",
      "description": "Get App hosting storage utilization from device"
    },
    "getAppHostingUtilization": {
      "path": "/device/app-hosting/utilization",
      "method": "get",
      "sdk_endpoint": "device.app_hosting",
      "sdk_method": "get",
      "description": "Get App hosting utilization from device"
    },
    "createAppRouteSlaClassList": {
      "path": "/device/app-route/sla-class",
      "method": "get",
      "sdk_endpoint": "device.app_route",
      "sdk_method": "get",
      "description": "Get SLA class list from device (Real Time)"
    },
    "createAppRouteStatisticsList": {
      "path": "/device/app-route/statistics",
      "method": "get",
      "sdk_endpoint": "device.app_route",
      "sdk_method": "get",
      "description": "Get application-aware routing statistics from device (Real Time)"
    },
    "getAppLogFlowCount": {
      "path": "/device/app/log/flow-count",
      "method": "get",
      "sdk_endpoint": "device.app",
      "sdk_method": "get",
      "description": "Get App log flows count from device (Real Time)"
    },
    "getAppLogFlows": {
      "path": "/device/app/log/flows",
      "method": "get",
      "sdk_endpoint": "device.app",
      "sdk_method": "get",
      "description": "Get App log flows from device (Real Time)"
    },
    "createAppqoeActiveFlowIdDetails": {
      "path": "/device/appqoe/active-flow-id",
      "method": "get",
      "sdk_endpoint": "device.appqoe",
      "sdk_method": "get",
      "description": "Get Appqoe Active flow Id details from device"
    },
    "getAppqoeHputStats": {
      "path": "/device/appqoe/appqoe-hput-stats",
      "method": "get",
      "sdk_endpoint": "device.appqoe",
      "sdk_method": "get",
      "description": "Get Appqoe Hput Statistics from device"
    },
    "getAppqoeNatStats": {
      "path": "/device/appqoe/appqoe-nat-stats",
      "method": "get",
      "sdk_endpoint": "device.appqoe",
      "sdk_method": "get",
      "description": "Get Appqoe Nat Statistics from device"
    },
    "getAppqoeRmResources": {
      "path": "/device/appqoe/appqoe-rm-resource",
      "method": "get",
      "sdk_endpoint": "device.appqoe",
      "sdk_method": "get",
      "description": "Get Appqoe Resource Manager resources from device"
    },
    "getAppqoeRMStats": {
      "path": "/device/appqoe/appqoe-rm-stats",
      "method": "get",
      "sdk_endpoint": "device.appqoe",
      "sdk_method": "get",
      "description": "Get Appqoe RM Statistics from device"
    },
    "getAppqoeServicesStatus": {
      "path": "/device/appqoe/appqoe-services-status",
      "method": "get",
      "sdk_endpoint": "device.appqoe",
      "sdk_method": "get",
      "description": "Get Appqoe Services Status from device"
    },
    "getAppqoeSppiPipeStats": {
      "path": "/device/appqoe/appqoe-sppi-pipe-resource",
      "method": "get",
      "sdk_endpoint": "device.appqoe",
      "sdk_method": "get",
      "description": "Get Appqoe Sppi Pipe Stats from device"
    },
    "getAppqoeSppiQueueStats": {
      "path": "/device/appqoe/appqoe-sppi-queue-resource",
      "method": "get",
      "sdk_endpoint": "device.appqoe",
      "sdk_method": "get",
      "description": "Get Appqoe Sppi Queue Stats from device"
    },
    "getAppqoeClusterSummary": {
      "path": "/device/appqoe/cluster-summary",
      "method": "get",
      "sdk_endpoint": "device.appqoe",
      "sdk_method": "get",
      "description": "Get Appqoe Cluster Summary from device"
    },
    "getAppqoeErrorRecent": {
      "path": "/device/appqoe/error-recent",
      "method": "get",
      "sdk_endpoint": "device.appqoe",
      "sdk_method": "get",
      "description": "Get Appqoe error recent from device"
    },
    "createAppqoeFlowIdExpiredDetails": {
      "path": "/device/appqoe/expired-flow-id",
      "method": "get",
      "sdk_endpoint": "device.appqoe",
      "sdk_method": "get",
      "description": "Get Appqoe Expired flow Id details from device"
    },
    "getAppqoeFlowClosedError": {
      "path": "/device/appqoe/flow-closed-error",
      "method": "get",
      "sdk_endpoint": "device.appqoe",
      "sdk_method": "get",
      "description": "Get Appqoe flow closed error from device"
    },
    "getAppqoeExpired": {
      "path": "/device/appqoe/flow-expired",
      "method": "get",
      "sdk_endpoint": "device.appqoe",
      "sdk_method": "get",
      "description": "Get Appqoe expired from device"
    },
    "getAppqoeServiceControllers": {
      "path": "/device/appqoe/service-controllers",
      "method": "get",
      "sdk_endpoint": "device.appqoe",
      "sdk_method": "get",
      "description": "Get Appqoe service controllers from device"
    },
    "getAppqoeStatus": {
      "path": "/device/appqoe/status",
      "method": "get",
      "sdk_endpoint": "device.appqoe",
      "sdk_method": "get",
      "description": "Get Appqoe status from device"
    },
    "createAppqoeVpnIdList": {
      "path": "/device/appqoe/vpn-id",
      "method": "get",
      "sdk_endpoint": "device.appqoe",
      "sdk_method": "get",
      "description": "Get Appqoe Active vpn Id details from device"
    },
    "getARPInterface": {
      "path": "/device/arp",
      "method": "get",
      "sdk_endpoint": "device.arp",
      "sdk_method": "get",
      "description": "Get ARP interfaces from device (Real Time)"
    },
    "getAutonomousSoftwareVersion": {
      "path": "/device/autonomousversion",
      "method": "get",
      "sdk_endpoint": "device.autonomousversion",
      "sdk_method": "get",
      "description": "Get Software version from device"
    },
    "createBFDHistoryList": {
      "path": "/device/bfd/history",
      "method": "get",
      "sdk_endpoint": "device_bfd",
      "sdk_method": "get",
      "description": "Get BFD session history from device (Real Time)"
    },
    "createBFDLinkList": {
      "path": "/device/bfd/links",
      "method": "get",
      "sdk_endpoint": "device_bfd",
      "sdk_method": "get",
      "description": "Get list of BFD connections"
    },
    "createBFDSessions": {
      "path": "/device/bfd/sessions",
      "method": "get",
      "sdk_endpoint": "device_bfd",
      "sdk_method": "get",
      "description": "Get list of BFD sessions from vManage (Real Time)"
    },
    "getBFDSiteStateDetail": {
      "path": "/device/bfd/sites/detail",
      "method": "get",
      "sdk_endpoint": "device_bfd",
      "sdk_method": "get",
      "description": "Get detailed BFD site details"
    },
    "getBFDSitesSummary": {
      "path": "/device/bfd/sites/summary",
      "method": "get",
      "sdk_endpoint": "device_bfd",
      "sdk_method": "get",
      "description": "Get BFD site summary"
    },
    "getDeviceBFDStateSummary": {
      "path": "/device/bfd/state/device",
      "method": "get",
      "sdk_endpoint": "device_bfd",
      "sdk_method": "get",
      "description": "Get device BFD state summary"
    },
    "getDeviceBFDStateSummaryTloc": {
      "path": "/device/bfd/state/device/tloc",
      "method": "get",
      "sdk_endpoint": "device_bfd",
      "sdk_method": "get",
      "description": "Get device BFD state summary with tloc color"
    },
    "getDeviceTlocToIntfList": {
      "path": "/device/bfd/state/device/tlocInterfaceMap",
      "method": "get",
      "sdk_endpoint": "device_bfd",
      "sdk_method": "get",
      "description": "Get device tloc color to Intf Mapping Relationship"
    },
    "getDeviceBFDStatus": {
      "path": "/device/bfd/status",
      "method": "get",
      "sdk_endpoint": "device_bfd",
      "sdk_method": "get",
      "description": "Get device BFD status"
    },
    "createBFDSummary": {
      "path": "/device/bfd/summary",
      "method": "get",
      "sdk_endpoint": "device_bfd",
      "sdk_method": "get",
      "description": "Get BFD summary from device (Real Time)"
    },
    "getDeviceBFDStatusSummary": {
      "path": "/device/bfd/summary/device",
      "method": "get",
      "sdk_endpoint": "device_bfd",
      "sdk_method": "get",
      "description": "Get device BFD status summary"
    },
    "createSyncedBFDSession": {
      "path": "/device/bfd/synced/sessions",
      "method": "get",
      "sdk_endpoint": "device_bfd",
      "sdk_method": "get",
      "description": "Get list of BFD sessions from vManage synchronously"
    },
    "createTLOCSummary": {
      "path": "/device/bfd/tloc",
      "method": "get",
      "sdk_endpoint": "device_bfd",
      "sdk_method": "get",
      "description": "Get TLOC summary from device (Real Time)"
    },
    "getBFDTlocStateDetail": {
      "path": "/device/bfd/tloc/detail",
      "method": "get",
      "sdk_endpoint": "device_bfd",
      "sdk_method": "get",
      "description": "Get detailed BFD tloc details"
    },
    "createBGPNeighborsList": {
      "path": "/device/bgp/neighbors",
      "method": "get",
      "sdk_endpoint": "device.bgp",
      "sdk_method": "get",
      "description": "Get BGP neighbors list (Real Time)"
    },
    "createBGPRoutesList": {
      "path": "/device/bgp/routes",
      "method": "get",
      "sdk_endpoint": "device.bgp",
      "sdk_method": "get",
      "description": "Get BGP routes list (Real Time)"
    },
    "createBGPSummary": {
      "path": "/device/bgp/summary",
      "method": "get",
      "sdk_endpoint": "device.bgp",
      "sdk_method": "get",
      "description": "Get BGP summary (Real Time)"
    },
    "setBlockSync": {
      "path": "/device/blockSync",
      "method": "post",
      "sdk_endpoint": "device.blockSync",
      "sdk_method": "create",
      "description": "Set collection manager block set flag"
    },
    "getBridgeInterfaceList": {
      "path": "/device/bridge/interface",
      "method": "get",
      "sdk_endpoint": "device.bridge",
      "sdk_method": "get",
      "description": "Get device bridge interface list (Real Time)"
    },
    "getBridgeInterfaceMac": {
      "path": "/device/bridge/mac",
      "method": "get",
      "sdk_endpoint": "device.bridge",
      "sdk_method": "get",
      "description": "Get device bridge interface MAC (Real Time)"
    },
    "getBridgeInterfaceTable": {
      "path": "/device/bridge/table",
      "method": "get",
      "sdk_endpoint": "device.bridge",
      "sdk_method": "get",
      "description": "Get device bridge interface table (Real Time)"
    },
    "getTenantsDevicesAndSites": {
      "path": "/device/bytenants",
      "method": "get",
      "sdk_endpoint": "device.bytenants",
      "sdk_method": "get",
      "description": "Gets devices and sites for all tenants"
    },
    "createAppFwdCflowdFlowsList": {
      "path": "/device/cedgecflowd/app-fwd-cflowd-flows",
      "method": "get",
      "sdk_endpoint": "device.cedgecflowd",
      "sdk_method": "get",
      "description": "Get list of app fwd cflowd flows from device"
    },
    "createAppFwdCflowdV6FlowsList": {
      "path": "/device/cedgecflowd/app-fwd-cflowd-v6-flows",
      "method": "get",
      "sdk_endpoint": "device.cedgecflowd",
      "sdk_method": "get",
      "description": "Get list of app fwd cflowd v6 flows from device"
    },
    "createCellularConnectionList": {
      "path": "/device/cellular/connection",
      "method": "get",
      "sdk_endpoint": "device.cellular",
      "sdk_method": "get",
      "description": "Get cellular connection list from device"
    },
    "cellularCountDashlet": {
      "path": "/device/cellular/counter",
      "method": "get",
      "sdk_endpoint": "device.cellular",
      "sdk_method": "get",
      "description": "Cellular count dashlet"
    },
    "dataUsage": {
      "path": "/device/cellular/dataUsage",
      "method": "get",
      "sdk_endpoint": "device.cellular",
      "sdk_method": "get",
      "description": "Cellular DataUsage Dashlet"
    },
    "cellularCountDashletDetails": {
      "path": "/device/cellular/details",
      "method": "get",
      "sdk_endpoint": "device.cellular",
      "sdk_method": "get",
      "description": "Cellular count dashlet details"
    },
    "createHardwareList": {
      "path": "/device/cellular/hardware",
      "method": "get",
      "sdk_endpoint": "device.cellular",
      "sdk_method": "get",
      "description": "Get cellular hardware list from device"
    },
    "cellularHealthDashlet": {
      "path": "/device/cellular/health",
      "method": "get",
      "sdk_endpoint": "device.cellular",
      "sdk_method": "get",
      "description": "Cellular Health Dashlet"
    },
    "createModemList": {
      "path": "/device/cellular/modem",
      "method": "get",
      "sdk_endpoint": "device.cellular",
      "sdk_method": "get",
      "description": "Get cellular modem list from device"
    },
    "createNetworkList": {
      "path": "/device/cellular/network",
      "method": "get",
      "sdk_endpoint": "device.cellular",
      "sdk_method": "get",
      "description": "Get cellular network list from device"
    },
    "createProfileList": {
      "path": "/device/cellular/profiles",
      "method": "get",
      "sdk_endpoint": "device.cellular",
      "sdk_method": "get",
      "description": "Get cellular profile list from device"
    },
    "createRadioList": {
      "path": "/device/cellular/radio",
      "method": "get",
      "sdk_endpoint": "device.cellular",
      "sdk_method": "get",
      "description": "Get cellular radio list from device"
    },
    "createSessionsList": {
      "path": "/device/cellular/sessions",
      "method": "get",
      "sdk_endpoint": "device.cellular",
      "sdk_method": "get",
      "description": "Get cellular session list from device"
    },
    "getCellularStatusList": {
      "path": "/device/cellular/status",
      "method": "get",
      "sdk_endpoint": "device.cellular",
      "sdk_method": "get",
      "description": "Get cellular status list from device"
    },
    "getEiolteConnectionInfo": {
      "path": "/device/cellularEiolte/connections",
      "method": "get",
      "sdk_endpoint": "device.cellularEiolte",
      "sdk_method": "get",
      "description": "Get cellular connection info from device"
    },
    "getEiolteHardwareInfo": {
      "path": "/device/cellularEiolte/hardware",
      "method": "get",
      "sdk_endpoint": "device.cellularEiolte",
      "sdk_method": "get",
      "description": "Get cellular hardware info from device"
    },
    "getAONIpsecInterfaceCountersInfo": {
      "path": "/device/cellularEiolte/ipsec/interface/counters",
      "method": "get",
      "sdk_endpoint": "device.cellularEiolte",
      "sdk_method": "get",
      "description": "Get cellular ipsec interface info from device"
    },
    "getAONIpsecInterfaceSessionnfo": {
      "path": "/device/cellularEiolte/ipsec/interface/session",
      "method": "get",
      "sdk_endpoint": "device.cellularEiolte",
      "sdk_method": "get",
      "description": "Get cellular ipsec interface info from device"
    },
    "getEiolteNetworkInfo": {
      "path": "/device/cellularEiolte/network",
      "method": "get",
      "sdk_endpoint": "device.cellularEiolte",
      "sdk_method": "get",
      "description": "Get cellular network  info from device"
    },
    "getEiolteRadioInfo": {
      "path": "/device/cellularEiolte/radio",
      "method": "get",
      "sdk_endpoint": "device.cellularEiolte",
      "sdk_method": "get",
      "description": "Get cellular radio info from device"
    },
    "getEiolteSimInfo": {
      "path": "/device/cellularEiolte/sim",
      "method": "get",
      "sdk_endpoint": "device.cellularEiolte",
      "sdk_method": "get",
      "description": "Get cellular sim info from device"
    },
    "getCflowdDPIDeviceFieldJSON": {
      "path": "/device/cflowd/application/fields",
      "method": "get",
      "sdk_endpoint": "device.cflowd",
      "sdk_method": "get",
      "description": "Get Cflowd DPI query field JSON"
    },
    "createCflowdCollectorList": {
      "path": "/device/cflowd/collector",
      "method": "get",
      "sdk_endpoint": "device.cflowd",
      "sdk_method": "get",
      "description": "Get cflowd collector list from device"
    },
    "getCflowdDPIFieldJSON": {
      "path": "/device/cflowd/device/fields",
      "method": "get",
      "sdk_endpoint": "device.cflowd",
      "sdk_method": "get",
      "description": "Get CflowdvDPI query field JSON"
    },
    "createCflowCollectorList": {
      "path": "/device/cflowd/flows",
      "method": "get",
      "sdk_endpoint": "device.cflowd",
      "sdk_method": "get",
      "description": "Get list of cflowd flows from device"
    },
    "createCflowdFlowsCountList": {
      "path": "/device/cflowd/flows-count",
      "method": "get",
      "sdk_endpoint": "device.cflowd",
      "sdk_method": "get",
      "description": "Get cflowd flow count from device"
    },
    "getFnFCacheStats": {
      "path": "/device/cflowd/fnf/cache-stats",
      "method": "get",
      "sdk_endpoint": "device.cflowd",
      "sdk_method": "get",
      "description": "Get FnF cache stats from device"
    },
    "getFnFExportClientStats": {
      "path": "/device/cflowd/fnf/export-client-stats",
      "method": "get",
      "sdk_endpoint": "device.cflowd",
      "sdk_method": "get",
      "description": "Get FnF export client stats from device"
    },
    "getFnFExportStats": {
      "path": "/device/cflowd/fnf/export-stats",
      "method": "get",
      "sdk_endpoint": "device.cflowd",
      "sdk_method": "get",
      "description": "Get FnF export stats from device"
    },
    "getFnf": {
      "path": "/device/cflowd/fnf/flow-monitor",
      "method": "get",
      "sdk_endpoint": "device.cflowd",
      "sdk_method": "get",
      "description": "Get FnF from device"
    },
    "getFnFMonitorStats": {
      "path": "/device/cflowd/fnf/monitor-stats",
      "method": "get",
      "sdk_endpoint": "device.cflowd",
      "sdk_method": "get",
      "description": "Get FnF monitor stats from device"
    },
    "createCflowdStatistics": {
      "path": "/device/cflowd/statistics",
      "method": "get",
      "sdk_endpoint": "device.cflowd",
      "sdk_method": "get",
      "description": "Get cflowd statistics from device"
    },
    "createCflowdTemplate": {
      "path": "/device/cflowd/template",
      "method": "get",
      "sdk_endpoint": "device.cflowd",
      "sdk_method": "get",
      "description": "Get cflowd template from device"
    },
    "getMpDatabase": {
      "path": "/device/cfm/mp/database",
      "method": "get",
      "sdk_endpoint": "device.cfm",
      "sdk_method": "get",
      "description": "Get mp database from device"
    },
    "getMpLocalMep": {
      "path": "/device/cfm/mp/local/mep",
      "method": "get",
      "sdk_endpoint": "device.cfm",
      "sdk_method": "get",
      "description": "Get mp local mep from device"
    },
    "getMpLocalMip": {
      "path": "/device/cfm/mp/local/mip",
      "method": "get",
      "sdk_endpoint": "device.cfm",
      "sdk_method": "get",
      "description": "Get mp local mip from device"
    },
    "getMpRemoteMep": {
      "path": "/device/cfm/mp/remotemep",
      "method": "get",
      "sdk_endpoint": "device.cfm",
      "sdk_method": "get",
      "description": "Get mp remote mep from device"
    },
    "createApplicationsDetailList": {
      "path": "/device/cloudx/application/detail",
      "method": "get",
      "sdk_endpoint": "device.cloudx",
      "sdk_method": "get",
      "description": "Get list of cloudexpress applications from device (Real Time)"
    },
    "createApplicationsList": {
      "path": "/device/cloudx/applications",
      "method": "get",
      "sdk_endpoint": "device.cloudx",
      "sdk_method": "get",
      "description": "Get list of cloudexpress applications from device (Real Time)"
    },
    "createGatewayExitsList": {
      "path": "/device/cloudx/gatewayexits",
      "method": "get",
      "sdk_endpoint": "device.cloudx",
      "sdk_method": "get",
      "description": "Get list of cloudexpress gateway exits from device (Real Time)"
    },
    "createLbApplicationsList": {
      "path": "/device/cloudx/loadbalance",
      "method": "get",
      "sdk_endpoint": "device.cloudx",
      "sdk_method": "get",
      "description": "Get list of cloudexpress load balance applications from device (Real Time)"
    },
    "createLocalExitsList": {
      "path": "/device/cloudx/localexits",
      "method": "get",
      "sdk_endpoint": "device.cloudx",
      "sdk_method": "get",
      "description": "Get list of cloudexpress local exits from device (Real Time)"
    },
    "getComplianceDetails": {
      "path": "/device/compliance",
      "method": "get",
      "sdk_endpoint": "device.compliance",
      "sdk_method": "get",
      "description": "Get compliance information for devices"
    },
    "getComplianceSummary": {
      "path": "/device/compliance/summary",
      "method": "get",
      "sdk_endpoint": "device.compliance",
      "sdk_method": "get",
      "description": "Get compliance summary for devices"
    },
    "getDeviceRunningConfig": {
      "path": "/device/config",
      "method": "get",
      "sdk_endpoint": "device.config",
      "sdk_method": "get",
      "description": "Get device running configuration"
    },
    "getDeviceRunningConfigHTML": {
      "path": "/device/config/html",
      "method": "get",
      "sdk_endpoint": "device.config",
      "sdk_method": "get",
      "description": "Get device running configuration in HTML format"
    },
    "getDeviceConfigurationCommitList": {
      "path": "/device/configuration/commit-list",
      "method": "get",
      "sdk_endpoint": "device.configuration",
      "sdk_method": "get",
      "description": "Get device commit list"
    },
    "getAffinityConfig": {
      "path": "/device/control/affinity/config",
      "method": "get",
      "sdk_endpoint": "device_control",
      "sdk_method": "get",
      "description": "Get affinity config from device (Real Time)"
    },
    "getAffinityStatus": {
      "path": "/device/control/affinity/status",
      "method": "get",
      "sdk_endpoint": "device_control",
      "sdk_method": "get",
      "description": "Get affinity status from device (Real Time)"
    },
    "createRealTimeConnectionList": {
      "path": "/device/control/connections",
      "method": "get",
      "sdk_endpoint": "device_control",
      "sdk_method": "get",
      "description": "Get connections list from device (Real Time)"
    },
    "createConnectionHistoryListRealTime": {
      "path": "/device/control/connectionshistory",
      "method": "get",
      "sdk_endpoint": "device_control",
      "sdk_method": "get",
      "description": "Get connections history list from device (Real Time)"
    },
    "createRealTimeConnectionList_1": {
      "path": "/device/control/connectionsinfo",
      "method": "get",
      "sdk_endpoint": "device_control",
      "sdk_method": "get",
      "description": "Get connections list from device (Real Time)"
    },
    "getTotalCountForDeviceStates": {
      "path": "/device/control/count",
      "method": "get",
      "sdk_endpoint": "device_control",
      "sdk_method": "get",
      "description": "Get number of vedges and vsmart device in different control states"
    },
    "createLinkList": {
      "path": "/device/control/links",
      "method": "get",
      "sdk_endpoint": "device_control",
      "sdk_method": "get",
      "description": "Get connections list"
    },
    "createLocalPropertiesListListRealTIme": {
      "path": "/device/control/localproperties",
      "method": "get",
      "sdk_endpoint": "device_control",
      "sdk_method": "get",
      "description": "Get local properties list (Real Time)"
    },
    "networkSummary": {
      "path": "/device/control/networksummary",
      "method": "get",
      "sdk_endpoint": "device_control",
      "sdk_method": "get",
      "description": "Get list of unreachable devices"
    },
    "createRealTimeRegionConnectionList": {
      "path": "/device/control/regionconnections",
      "method": "get",
      "sdk_endpoint": "device_control",
      "sdk_method": "get",
      "description": "Get connections list from device (Real Time)"
    },
    "getConnectionStatistics": {
      "path": "/device/control/statistics",
      "method": "get",
      "sdk_endpoint": "device_control",
      "sdk_method": "get",
      "description": "Get connection statistics from device (Real Time)"
    },
    "getLocalDeviceStatus": {
      "path": "/device/control/status",
      "method": "get",
      "sdk_endpoint": "device_control",
      "sdk_method": "get",
      "description": "Get local device status"
    },
    "createConnectionsSummary": {
      "path": "/device/control/summary",
      "method": "get",
      "sdk_endpoint": "device_control",
      "sdk_method": "get",
      "description": "Get connections summary from device (Real Time)"
    },
    "getDeviceControlStatusSummary": {
      "path": "/device/control/summary/device",
      "method": "get",
      "sdk_endpoint": "device_control",
      "sdk_method": "get",
      "description": "Get device control status summary"
    },
    "createSyncedConnectionList": {
      "path": "/device/control/synced/connections",
      "method": "get",
      "sdk_endpoint": "device_control",
      "sdk_method": "get",
      "description": "Get connections list from vManage"
    },
    "createLocalPropertiesSyncedList": {
      "path": "/device/control/synced/localproperties",
      "method": "get",
      "sdk_endpoint": "device_control",
      "sdk_method": "get",
      "description": "Get local properties list"
    },
    "createWanInterfaceSyncedList": {
      "path": "/device/control/synced/waninterface",
      "method": "get",
      "sdk_endpoint": "device_control",
      "sdk_method": "get",
      "description": "Get WAN interface list"
    },
    "createValidDevicesListRealTime": {
      "path": "/device/control/validdevices",
      "method": "get",
      "sdk_endpoint": "device_control",
      "sdk_method": "get",
      "description": "Get vmanage valid device list (Real Time)"
    },
    "getValidVManageIdRealTime": {
      "path": "/device/control/validvmanageid",
      "method": "get",
      "sdk_endpoint": "device_control",
      "sdk_method": "get",
      "description": "Get valid vManage from device (Real Time)"
    },
    "createValidVSmartsListRealTime": {
      "path": "/device/control/validvsmarts",
      "method": "get",
      "sdk_endpoint": "device_control",
      "sdk_method": "get",
      "description": "Get valid vSmart list from device (Real Time)"
    },
    "createWanInterfaceListList": {
      "path": "/device/control/waninterface",
      "method": "get",
      "sdk_endpoint": "device_control",
      "sdk_method": "get",
      "description": "Get WAN interface list (Real Time)"
    },
    "getPortHopColor": {
      "path": "/device/control/waninterface/color",
      "method": "get",
      "sdk_endpoint": "device_control",
      "sdk_method": "get",
      "description": "Get port hop colors"
    },
    "getDeviceCounters": {
      "path": "/device/counters",
      "method": "get",
      "sdk_endpoint": "device_counters",
      "sdk_method": "get",
      "description": "Get device counters"
    },
    "getDeviceCrashLogs": {
      "path": "/device/crashlog",
      "method": "get",
      "sdk_endpoint": "device.crashlog",
      "sdk_method": "get",
      "description": "Get device crash logs from device"
    },
    "getAllDeviceCrashLogs": {
      "path": "/device/crashlog/details",
      "method": "get",
      "sdk_endpoint": "device.crashlog",
      "sdk_method": "get",
      "description": "Get device crash logs for all device"
    },
    "getDeviceCrashInformation": {
      "path": "/device/crashlog/log",
      "method": "get",
      "sdk_endpoint": "device.crashlog",
      "sdk_method": "get",
      "description": "Get device crash info from device"
    },
    "getDeviceCrashLogsSynced": {
      "path": "/device/crashlog/synced",
      "method": "get",
      "sdk_endpoint": "device.crashlog",
      "sdk_method": "get",
      "description": "Get device crash logs synchronously from device"
    },
    "createDeviceContainersInfo": {
      "path": "/device/csp/containers/container",
      "method": "get",
      "sdk_endpoint": "device.csp",
      "sdk_method": "get",
      "description": "Get device container from device (Real Time)"
    },
    "getPnicStats": {
      "path": "/device/csp/pnic",
      "method": "get",
      "sdk_endpoint": "device.csp",
      "sdk_method": "get",
      "description": "Get pnic interfaces from device"
    },
    "getPNICStatsFromDevice": {
      "path": "/device/csp/pnic/synced",
      "method": "get",
      "sdk_endpoint": "device.csp",
      "sdk_method": "get",
      "description": "Get pnic stats from device"
    },
    "getRBACInterface": {
      "path": "/device/csp/rbac",
      "method": "get",
      "sdk_endpoint": "device.csp",
      "sdk_method": "get",
      "description": "Get RBAC interfaces from device"
    },
    "getAllocationInfo": {
      "path": "/device/csp/resources/cpu-info/allocation",
      "method": "get",
      "sdk_endpoint": "device.csp",
      "sdk_method": "get",
      "description": "Get NetworkHub CPU allocation info from device"
    },
    "getCPUInfo": {
      "path": "/device/csp/resources/cpu-info/cpus",
      "method": "get",
      "sdk_endpoint": "device.csp",
      "sdk_method": "get",
      "description": "Get NetworkHub CPU info from device"
    },
    "getVNFInfo": {
      "path": "/device/csp/resources/cpu-info/vnfs",
      "method": "get",
      "sdk_endpoint": "device.csp",
      "sdk_method": "get",
      "description": "Get NetworkHub CPU VNF info from device"
    },
    "createDeviceSystemSettingNativeInfo": {
      "path": "/device/csp/system/native",
      "method": "get",
      "sdk_endpoint": "device.csp",
      "sdk_method": "get",
      "description": "Get device system native settings from device"
    },
    "createDeviceSystemProcessList": {
      "path": "/device/csp/system/processlist",
      "method": "get",
      "sdk_endpoint": "device.csp",
      "sdk_method": "get",
      "description": "Get device system process list from device"
    },
    "createDeviceSystemSetting": {
      "path": "/device/csp/system/settings",
      "method": "get",
      "sdk_endpoint": "device.csp",
      "sdk_method": "get",
      "description": "Get device system settings from device"
    },
    "createDeviceSystemStatus": {
      "path": "/device/csp/system/status",
      "method": "get",
      "sdk_endpoint": "device.csp",
      "sdk_method": "get",
      "description": "Get device system status from device"
    },
    "getCtsPac": {
      "path": "/device/ctsPac",
      "method": "get",
      "sdk_endpoint": "device.ctsPac",
      "sdk_method": "get",
      "description": "get Cisco TrustSec PAC information from device"
    },
    "getDeviceOnlyStatus": {
      "path": "/device/devicestatus",
      "method": "get",
      "sdk_endpoint": "device.devicestatus",
      "sdk_method": "get",
      "description": "Get devices status per type"
    },
    "getDHCPClient": {
      "path": "/device/dhcp/client",
      "method": "get",
      "sdk_endpoint": "device.dhcp",
      "sdk_method": "get",
      "description": "Get DHCP client from device (Real Time)"
    },
    "getDHCPInterface": {
      "path": "/device/dhcp/interface",
      "method": "get",
      "sdk_endpoint": "device.dhcp",
      "sdk_method": "get",
      "description": "Get DHCP interfaces from device (Real Time)"
    },
    "getDHCPServer": {
      "path": "/device/dhcp/server",
      "method": "get",
      "sdk_endpoint": "device.dhcp",
      "sdk_method": "get",
      "description": "Get DHCP server from device (Real Time)"
    },
    "getDHCPv6Interface": {
      "path": "/device/dhcpv6/interface",
      "method": "get",
      "sdk_endpoint": "device.dhcpv6",
      "sdk_method": "get",
      "description": "Get DHCPv6 interfaces from device"
    },
    "getWLANDOT1xClients": {
      "path": "/device/dot1x/clients",
      "method": "get",
      "sdk_endpoint": "device.dot1x",
      "sdk_method": "get",
      "description": "Get DOT1x client from device (Real Time)"
    },
    "getWLANDOT1xInterfaces": {
      "path": "/device/dot1x/interfaces",
      "method": "get",
      "sdk_endpoint": "device.dot1x",
      "sdk_method": "get",
      "description": "Get DOT1x interface from device (Real Time)"
    },
    "getDOT1xRadius": {
      "path": "/device/dot1x/radius",
      "method": "get",
      "sdk_endpoint": "device.dot1x",
      "sdk_method": "get",
      "description": "Get DOT1x Radius from device (Real Time)"
    },
    "createSoftwareList": {
      "path": "/device/downloadedImages",
      "method": "get",
      "sdk_endpoint": "device.downloadedImages",
      "sdk_method": "get",
      "description": "Get images list from device"
    },
    "getSupportedApplicationList": {
      "path": "/device/dpi/application-mapping",
      "method": "get",
      "sdk_endpoint": "device.dpi",
      "sdk_method": "get",
      "description": "Get DPI supported application list from device"
    },
    "getDPIDeviceFieldJSON": {
      "path": "/device/dpi/application/fields",
      "method": "get",
      "sdk_endpoint": "device.dpi",
      "sdk_method": "get",
      "description": "Get DPI query field from device"
    },
    "createDPICollectorList": {
      "path": "/device/dpi/applications",
      "method": "get",
      "sdk_endpoint": "device.dpi",
      "sdk_method": "get",
      "description": "Get DPI applications from device (Real Time)"
    },
    "getCommonApplicationList": {
      "path": "/device/dpi/common/applications",
      "method": "get",
      "sdk_endpoint": "device.dpi",
      "sdk_method": "get",
      "description": "Get DPI common application list from device"
    },
    "getDPIFieldJSON": {
      "path": "/device/dpi/device/fields",
      "method": "get",
      "sdk_endpoint": "device.dpi",
      "sdk_method": "get",
      "description": "Get DPI field from device"
    },
    "getDPIDeviceDetailsFieldJSON": {
      "path": "/device/dpi/devicedetails/fields",
      "method": "get",
      "sdk_endpoint": "device.dpi",
      "sdk_method": "get",
      "description": "Get DPI detailed field from device"
    },
    "createDPIFlowsList": {
      "path": "/device/dpi/flows",
      "method": "get",
      "sdk_endpoint": "device.dpi",
      "sdk_method": "get",
      "description": "Get DPI flow list from device (Real Time)"
    },
    "getQosmosStaticApplicationList": {
      "path": "/device/dpi/qosmos-static/applications",
      "method": "get",
      "sdk_endpoint": "device.dpi",
      "sdk_method": "get",
      "description": "Get DPI QoSMos static application list"
    },
    "getQosmosApplicationList": {
      "path": "/device/dpi/qosmos/applications",
      "method": "get",
      "sdk_endpoint": "device.dpi",
      "sdk_method": "get",
      "description": "Get DPI QoSMos application list from device"
    },
    "createDPISummaryRealTime": {
      "path": "/device/dpi/summary",
      "method": "get",
      "sdk_endpoint": "device.dpi",
      "sdk_method": "get",
      "description": "Get DPI summary from device (Real Time)"
    },
    "createDPIStatistics": {
      "path": "/device/dpi/supported-applications",
      "method": "get",
      "sdk_endpoint": "device.dpi",
      "sdk_method": "get",
      "description": "Get supported applications from device (Real Time)"
    },
    "getDreAutoBypassStats": {
      "path": "/device/dre/auto-bypass-stats",
      "method": "get",
      "sdk_endpoint": "device.dre",
      "sdk_method": "get",
      "description": "Get DRE auto-bypass statistics"
    },
    "getDreStats": {
      "path": "/device/dre/dre-stats",
      "method": "get",
      "sdk_endpoint": "device.dre",
      "sdk_method": "get",
      "description": "Get DRE statistics"
    },
    "getDreStatus": {
      "path": "/device/dre/dre-status",
      "method": "get",
      "sdk_endpoint": "device.dre",
      "sdk_method": "get",
      "description": "Get DRE status"
    },
    "getDrePeerStats": {
      "path": "/device/dre/peer-stats",
      "method": "get",
      "sdk_endpoint": "device.dre",
      "sdk_method": "get",
      "description": "Get DRE peer statistics"
    },
    "getDualStaticRouteTrackerInfo": {
      "path": "/device/dualStaticRouteTracker",
      "method": "get",
      "sdk_endpoint": "device.dualStaticRouteTracker",
      "sdk_method": "get",
      "description": "Get dual static route tracker info from device"
    },
    "createEIGRPInterface": {
      "path": "/device/eigrp/interface",
      "method": "get",
      "sdk_endpoint": "device.eigrp",
      "sdk_method": "get",
      "description": "Get EIGRP interface list from device (Real Time)"
    },
    "createEIGRPRoute": {
      "path": "/device/eigrp/route",
      "method": "get",
      "sdk_endpoint": "device.eigrp",
      "sdk_method": "get",
      "description": "Get EIGRP route from device (Real Time)"
    },
    "createEIGRPTopology": {
      "path": "/device/eigrp/topology",
      "method": "get",
      "sdk_endpoint": "device.eigrp",
      "sdk_method": "get",
      "description": "Get EIGRP topology info from device (Real Time)"
    },
    "enableSDAVCOnDevice": {
      "path": "/device/enableSDAVC/{deviceIP}/{enable}",
      "method": "post",
      "sdk_endpoint": "device.enableSDAVC",
      "sdk_method": "create",
      "description": "Enable/Disable SDAVC on device"
    },
    "getEndpointTrackerInfo": {
      "path": "/device/endpointTracker",
      "method": "get",
      "sdk_endpoint": "device.endpointTracker",
      "sdk_method": "get",
      "description": "Get endpoint tracker info from device"
    },
    "getEndpointTrackerGroupInfo": {
      "path": "/device/endpointTrackerGroup",
      "method": "get",
      "sdk_endpoint": "device.endpointTrackerGroup",
      "sdk_method": "get",
      "description": "Get endpoint tracker group info from device"
    },
    "getEnvironmentData": {
      "path": "/device/environmentData",
      "method": "get",
      "sdk_endpoint": "device.environmentData",
      "sdk_method": "get",
      "description": "get Cisco TrustSec Environment Data information from device"
    },
    "getRadiusServer": {
      "path": "/device/environmentData/radiusServer",
      "method": "get",
      "sdk_endpoint": "device.environmentData",
      "sdk_method": "get",
      "description": "get Cisco TrustSec Environment Data Radius Server list from device"
    },
    "getFeatureList": {
      "path": "/device/featurelist",
      "method": "get",
      "sdk_endpoint": "device.featurelist",
      "sdk_method": "get",
      "description": "Get feature lists from device (Real Time)"
    },
    "getSyncedFeatureList": {
      "path": "/device/featurelist/synced",
      "method": "get",
      "sdk_endpoint": "device.featurelist",
      "sdk_method": "get",
      "description": "Get feature lists synchronously from device"
    },
    "getDataCollectionStatusForDevice": {
      "path": "/device/file-based/data-collection/all-statuses/{deviceUUID}",
      "method": "get",
      "sdk_endpoint": "device.file_based",
      "sdk_method": "get",
      "description": "Get Data Collection status for given Device UUID"
    },
    "downloadGeneratedFile": {
      "path": "/device/file-based/data-collection/download/{requestUUID}",
      "method": "get",
      "sdk_endpoint": "device.file_based",
      "sdk_method": "get",
      "description": "Download generated file"
    },
    "handleFileGenerationStatusResponseFromDevice": {
      "path": "/device/file-based/data-collection/file-generation-status",
      "method": "post",
      "sdk_endpoint": "device.file_based",
      "sdk_method": "create",
      "description": "Device notify when file is ready and vManage has to download them"
    },
    "initiateFileGenerationRequestToDevice": {
      "path": "/device/file-based/data-collection/initiate-file-generation",
      "method": "post",
      "sdk_endpoint": "device.file_based",
      "sdk_method": "create",
      "description": "Request device to prepare realtime collection data in required file format"
    },
    "getDataCollectionStatusForUUID": {
      "path": "/device/file-based/data-collection/status/{requestUUID}",
      "method": "get",
      "sdk_endpoint": "device.file_based",
      "sdk_method": "get",
      "description": "Get Data Collection status for given Request UUID"
    },
    "getSupportedCommandsList": {
      "path": "/device/file-based/data-collection/supported-commands/{deviceUUID}",
      "method": "get",
      "sdk_endpoint": "device.file_based",
      "sdk_method": "get",
      "description": "Get Supported Command list for given Device UUID"
    },
    "getGeofenceStatus": {
      "path": "/device/geofence/status",
      "method": "get",
      "sdk_endpoint": "device.geofence",
      "sdk_method": "get",
      "description": "Get Geo-fencing Status from device"
    },
    "createAlarmList": {
      "path": "/device/hardware/alarms",
      "method": "get",
      "sdk_endpoint": "device.hardware",
      "sdk_method": "get",
      "description": "Get hardware alarm list from device"
    },
    "createEnvironmentList": {
      "path": "/device/hardware/environment",
      "method": "get",
      "sdk_endpoint": "device.hardware",
      "sdk_method": "get",
      "description": "Get hardware environment list from device"
    },
    "createErrorAlarmList": {
      "path": "/device/hardware/errors",
      "method": "get",
      "sdk_endpoint": "device.hardware",
      "sdk_method": "get",
      "description": "Get hardware error list from device"
    },
    "createInventoryList": {
      "path": "/device/hardware/inventory",
      "method": "get",
      "sdk_endpoint": "device.hardware",
      "sdk_method": "get",
      "description": "Get hardware inventory list from device"
    },
    "createStatusSummary": {
      "path": "/device/hardware/status/summary",
      "method": "get",
      "sdk_endpoint": "device.hardware",
      "sdk_method": "get",
      "description": "Get hardware status summary from device"
    },
    "createSyncedAlarmList": {
      "path": "/device/hardware/synced/alarms",
      "method": "get",
      "sdk_endpoint": "device.hardware",
      "sdk_method": "get",
      "description": "Get hardware alarm list synchronously from device"
    },
    "createSyncedEnvironmentList": {
      "path": "/device/hardware/synced/environment",
      "method": "get",
      "sdk_endpoint": "device.hardware",
      "sdk_method": "get",
      "description": "Get hardware environment list synchronously from device"
    },
    "createSyncedInventoryList": {
      "path": "/device/hardware/synced/inventory",
      "method": "get",
      "sdk_endpoint": "device.hardware",
      "sdk_method": "get",
      "description": "Get hardware inventory list synchronously from device"
    },
    "createSystemList": {
      "path": "/device/hardware/system",
      "method": "get",
      "sdk_endpoint": "device.hardware",
      "sdk_method": "get",
      "description": "Get hardware system data list from device"
    },
    "createTempThresholdList": {
      "path": "/device/hardware/threshold",
      "method": "get",
      "sdk_endpoint": "device.hardware",
      "sdk_method": "get",
      "description": "Get hardware temperature list from device"
    },
    "getHardwareHealthDetails": {
      "path": "/device/hardwarehealth/detail",
      "method": "get",
      "sdk_endpoint": "device.hardwarehealth",
      "sdk_method": "get",
      "description": "Get hardware health details for device"
    },
    "getHardwareHealthSummary": {
      "path": "/device/hardwarehealth/summary",
      "method": "get",
      "sdk_endpoint": "device.hardwarehealth",
      "sdk_method": "get",
      "description": "Get hardware health summary for device"
    },
    "getStatDataRawData_21": {
      "path": "/device/history",
      "method": "get",
      "sdk_endpoint": "device.history",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_22": {
      "path": "/device/history",
      "method": "post",
      "sdk_endpoint": "device.history",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_23": {
      "path": "/device/history/aggregation",
      "method": "get",
      "sdk_endpoint": "device.history",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_25": {
      "path": "/device/history/aggregation",
      "method": "post",
      "sdk_endpoint": "device.history",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getLastThousandConfigList": {
      "path": "/device/history/config",
      "method": "get",
      "sdk_endpoint": "device.history",
      "sdk_method": "get",
      "description": "Get device config history"
    },
    "getConfigDiff": {
      "path": "/device/history/config/diff/list",
      "method": "get",
      "sdk_endpoint": "device.history",
      "sdk_method": "get",
      "description": "Get diff of two configs"
    },
    "getDeviceConfig": {
      "path": "/device/history/config/{config_id}",
      "method": "get",
      "sdk_endpoint": "device.history",
      "sdk_method": "get",
      "description": "Get device config"
    },
    "getStatDataRawDataAsCSV_21": {
      "path": "/device/history/csv",
      "method": "get",
      "sdk_endpoint": "device.history",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount_20": {
      "path": "/device/history/doccount",
      "method": "get",
      "sdk_endpoint": "device.history",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_21": {
      "path": "/device/history/doccount",
      "method": "post",
      "sdk_endpoint": "device.history",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_22": {
      "path": "/device/history/fields",
      "method": "get",
      "sdk_endpoint": "device.history",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatsPaginationRawData_19": {
      "path": "/device/history/page",
      "method": "get",
      "sdk_endpoint": "device.history",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_19": {
      "path": "/device/history/page",
      "method": "post",
      "sdk_endpoint": "device.history",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_23": {
      "path": "/device/history/query/fields",
      "method": "get",
      "sdk_endpoint": "device.history",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "createIGMPGroupsList": {
      "path": "/device/igmp/groups",
      "method": "get",
      "sdk_endpoint": "device.igmp",
      "sdk_method": "get",
      "description": "Get IGMP neighbor list from device"
    },
    "createIGMPInterfaceList": {
      "path": "/device/igmp/interface",
      "method": "get",
      "sdk_endpoint": "device.igmp",
      "sdk_method": "get",
      "description": "Get IGMP interface list from device"
    },
    "createIGMPStatisticsList": {
      "path": "/device/igmp/statistics",
      "method": "get",
      "sdk_endpoint": "device.igmp",
      "sdk_method": "get",
      "description": "Get IGMP statistics list from device"
    },
    "createIGMPSummary": {
      "path": "/device/igmp/summary",
      "method": "get",
      "sdk_endpoint": "device.igmp",
      "sdk_method": "get",
      "description": "Get IGMP summary from device"
    },
    "getDeviceInterface": {
      "path": "/device/interface",
      "method": "get",
      "sdk_endpoint": "device_interface",
      "sdk_method": "get",
      "description": "Get device interfaces"
    },
    "getDeviceInterfaceARPStats": {
      "path": "/device/interface/arp_stats",
      "method": "get",
      "sdk_endpoint": "device_interface",
      "sdk_method": "get",
      "description": "Get interface ARP statistics"
    },
    "getDeviceInterfaceErrorStats": {
      "path": "/device/interface/error_stats",
      "method": "get",
      "sdk_endpoint": "device_interface",
      "sdk_method": "get",
      "description": "Get interface error stats"
    },
    "getDeviceInterfaceIpv6Stats": {
      "path": "/device/interface/ipv6Stats",
      "method": "get",
      "sdk_endpoint": "device_interface",
      "sdk_method": "get",
      "description": "Get interface IPv6 stats"
    },
    "getDeviceInterfacePktSizes": {
      "path": "/device/interface/pkt_size",
      "method": "get",
      "sdk_endpoint": "device_interface",
      "sdk_method": "get",
      "description": "Get interface packet size"
    },
    "getDeviceInterfacePortStats": {
      "path": "/device/interface/port_stats",
      "method": "get",
      "sdk_endpoint": "device_interface",
      "sdk_method": "get",
      "description": "Get interface port stats"
    },
    "getDeviceInterfaceQosStats": {
      "path": "/device/interface/qosStats",
      "method": "get",
      "sdk_endpoint": "device_interface",
      "sdk_method": "get",
      "description": "Get interface QOS stats"
    },
    "getDeviceInterfaceQueueStats": {
      "path": "/device/interface/queue_stats",
      "method": "get",
      "sdk_endpoint": "device_interface",
      "sdk_method": "get",
      "description": "Get interface queue stats"
    },
    "getDeviceSerialInterface": {
      "path": "/device/interface/serial",
      "method": "get",
      "sdk_endpoint": "device_interface",
      "sdk_method": "get",
      "description": "Get serial interface"
    },
    "getDeviceInterfaceStats": {
      "path": "/device/interface/stats",
      "method": "get",
      "sdk_endpoint": "device_interface",
      "sdk_method": "get",
      "description": "Get interface stats"
    },
    "getSyncedDeviceInterface": {
      "path": "/device/interface/synced",
      "method": "get",
      "sdk_endpoint": "device_interface",
      "sdk_method": "get",
      "description": "Get device interfaces synchronously"
    },
    "trustsec": {
      "path": "/device/interface/trustsec",
      "method": "get",
      "sdk_endpoint": "device_interface",
      "sdk_method": "get",
      "description": "Get policy filter memory usage from device"
    },
    "generateDeviceInterfaceVPN": {
      "path": "/device/interface/vpn",
      "method": "get",
      "sdk_endpoint": "device_interface",
      "sdk_method": "get",
      "description": "Get device interfaces per VPN"
    },
    "createFibList": {
      "path": "/device/ip/fib",
      "method": "get",
      "sdk_endpoint": "device.ip",
      "sdk_method": "get",
      "description": "Get FIB list from device (Real Time)"
    },
    "createIetfRoutingList": {
      "path": "/device/ip/ipRoutes",
      "method": "get",
      "sdk_endpoint": "device.ip",
      "sdk_method": "get",
      "description": "Get ietf routing list from device"
    },
    "createIPMfibOilList": {
      "path": "/device/ip/mfiboil",
      "method": "get",
      "sdk_endpoint": "device.ip",
      "sdk_method": "get",
      "description": "Get IP MFIB OIL list from device (Real Time)"
    },
    "createIPMfibStatsList": {
      "path": "/device/ip/mfibstats",
      "method": "get",
      "sdk_endpoint": "device.ip",
      "sdk_method": "get",
      "description": "Get IP MFIB statistics list from device (Real Time)"
    },
    "createIPMfibSummaryList": {
      "path": "/device/ip/mfibsummary",
      "method": "get",
      "sdk_endpoint": "device.ip",
      "sdk_method": "get",
      "description": "Get IP MFIB summary list from device (Real Time)"
    },
    "createNatFilterList": {
      "path": "/device/ip/nat/filter",
      "method": "get",
      "sdk_endpoint": "device.ip",
      "sdk_method": "get",
      "description": "Get NAT filter list from device"
    },
    "createNatInterfaceList": {
      "path": "/device/ip/nat/interface",
      "method": "get",
      "sdk_endpoint": "device.ip",
      "sdk_method": "get",
      "description": "Get NAT interface list from device (Real Time)"
    },
    "createNatInterfaceStatisticsList": {
      "path": "/device/ip/nat/interfacestatistics",
      "method": "get",
      "sdk_endpoint": "device.ip",
      "sdk_method": "get",
      "description": "Get NAT interface statistics list from device"
    },
    "createNatTranslationList": {
      "path": "/device/ip/nat/translation",
      "method": "get",
      "sdk_endpoint": "device.ip",
      "sdk_method": "get",
      "description": "Get NAT translation list from device (Real Time)"
    },
    "createNat64TranslationList": {
      "path": "/device/ip/nat64/translation",
      "method": "get",
      "sdk_endpoint": "device.ip",
      "sdk_method": "get",
      "description": "Get NAT64 interface list from device"
    },
    "createRouteTableList": {
      "path": "/device/ip/routetable",
      "method": "get",
      "sdk_endpoint": "device.ip",
      "sdk_method": "get",
      "description": "Get route table list from device (Real Time)"
    },
    "createIPv4FibList": {
      "path": "/device/ip/v4fib",
      "method": "get",
      "sdk_endpoint": "device.ip",
      "sdk_method": "get",
      "description": "Get IPv4 FIB list from device (Real Time)"
    },
    "createIPv6FibList": {
      "path": "/device/ip/v6fib",
      "method": "get",
      "sdk_endpoint": "device.ip",
      "sdk_method": "get",
      "description": "Get IPv6 FIB list from device (Real Time)"
    },
    "createCryptoIpsecIdentity": {
      "path": "/device/ipsec/identity",
      "method": "get",
      "sdk_endpoint": "device.ipsec",
      "sdk_method": "get",
      "description": "Get Crypto IPSEC identity entry from device"
    },
    "createIkeInboundList": {
      "path": "/device/ipsec/ike/inbound",
      "method": "get",
      "sdk_endpoint": "device.ipsec",
      "sdk_method": "get",
      "description": "Get IPsec IKE inbound connection list from device"
    },
    "createIkeOutboundList": {
      "path": "/device/ipsec/ike/outbound",
      "method": "get",
      "sdk_endpoint": "device.ipsec",
      "sdk_method": "get",
      "description": "Get IPsec IKE outbound connection list from device"
    },
    "createIkeSessions": {
      "path": "/device/ipsec/ike/sessions",
      "method": "get",
      "sdk_endpoint": "device.ipsec",
      "sdk_method": "get",
      "description": "Get IPsec IKE sessions from device"
    },
    "createCryptov1LocalSAList": {
      "path": "/device/ipsec/ikev1",
      "method": "get",
      "sdk_endpoint": "device.ipsec",
      "sdk_method": "get",
      "description": "Get Crypto IKEv1 SA entry from device"
    },
    "createCryptov2LocalSAList": {
      "path": "/device/ipsec/ikev2",
      "method": "get",
      "sdk_endpoint": "device.ipsec",
      "sdk_method": "get",
      "description": "Get Crypto IKEv2 SA entry from device"
    },
    "createInBoundList": {
      "path": "/device/ipsec/inbound",
      "method": "get",
      "sdk_endpoint": "device.ipsec",
      "sdk_method": "get",
      "description": "Get IPsec inbound connection list from device (Real Time)"
    },
    "createLocalSAList": {
      "path": "/device/ipsec/localsa",
      "method": "get",
      "sdk_endpoint": "device.ipsec",
      "sdk_method": "get",
      "description": "Get IPsec local SA list from device"
    },
    "createOutBoundList": {
      "path": "/device/ipsec/outbound",
      "method": "get",
      "sdk_endpoint": "device.ipsec",
      "sdk_method": "get",
      "description": "Get IPsec outbound connection list from device (Real Time)"
    },
    "createIPsecPWKInboundConnections": {
      "path": "/device/ipsec/pwk/inbound",
      "method": "get",
      "sdk_endpoint": "device.ipsec",
      "sdk_method": "get",
      "description": "Get IPSEC pairwise key inbound entry from device"
    },
    "createIPsecPWKLocalSA": {
      "path": "/device/ipsec/pwk/localsa",
      "method": "get",
      "sdk_endpoint": "device.ipsec",
      "sdk_method": "get",
      "description": "Get IPSEC pairwise key local SA entry from device"
    },
    "createIPsecPWKOutboundConnections": {
      "path": "/device/ipsec/pwk/outbound",
      "method": "get",
      "sdk_endpoint": "device.ipsec",
      "sdk_method": "get",
      "description": "Get IPSEC pairwise key outbound entry from device"
    },
    "getIpv6Data": {
      "path": "/device/ipv6/nd6",
      "method": "get",
      "sdk_endpoint": "device.ipv6",
      "sdk_method": "get",
      "description": "Get ipv6 data from device"
    },
    "getDeviceListAsKeyValue": {
      "path": "/device/keyvalue",
      "method": "get",
      "sdk_endpoint": "device.keyvalue",
      "sdk_method": "get",
      "description": "Get vEdge inventory as key value (key as systemIp value as hostName)"
    },
    "getLacpInterfaceList": {
      "path": "/device/lacp/info",
      "method": "get",
      "sdk_endpoint": "device.lacp",
      "sdk_method": "get",
      "description": "Get device lacp port channel info list (Real Time)"
    },
    "getLacpMembers": {
      "path": "/device/lacp/members",
      "method": "get",
      "sdk_endpoint": "device.lacp",
      "sdk_method": "get",
      "description": "Get device lacp port channel interface table (Real Time)"
    },
    "getLicenseEvalInfo": {
      "path": "/device/license/evaluation",
      "method": "get",
      "sdk_endpoint": "device.license",
      "sdk_method": "get",
      "description": "Get license evaluation info from device"
    },
    "getLicensePAKInfo": {
      "path": "/device/license/pak",
      "method": "get",
      "sdk_endpoint": "device.license",
      "sdk_method": "get",
      "description": "Get license pak info from device"
    },
    "getLicensePrivacyInfo": {
      "path": "/device/license/privacy",
      "method": "get",
      "sdk_endpoint": "device.license",
      "sdk_method": "get",
      "description": "Get license privacy info from device"
    },
    "getLicenseRegInfo": {
      "path": "/device/license/registration",
      "method": "get",
      "sdk_endpoint": "device.license",
      "sdk_method": "get",
      "description": "Get license registration info from device"
    },
    "getLicenseUDIInfo": {
      "path": "/device/license/udi",
      "method": "get",
      "sdk_endpoint": "device.license",
      "sdk_method": "get",
      "description": "Get license UDI info from device"
    },
    "getLicenseUsageInfo": {
      "path": "/device/license/usage",
      "method": "get",
      "sdk_endpoint": "device.license",
      "sdk_method": "get",
      "description": "Get license usage info from device"
    },
    "getLoggingFromDevice": {
      "path": "/device/logging",
      "method": "get",
      "sdk_endpoint": "device.logging",
      "sdk_method": "get",
      "description": "Get logging from device (Real Time)"
    },
    "listAllDeviceModels": {
      "path": "/device/models",
      "method": "get",
      "sdk_endpoint": "device.models",
      "sdk_method": "get",
      "description": "Get all device models supported by the vManage"
    },
    "getDeviceModels": {
      "path": "/device/models/{uuid}",
      "method": "get",
      "sdk_endpoint": "device.models",
      "sdk_method": "get",
      "description": "Get device model for the device"
    },
    "listAllMonitorDetailsDevices": {
      "path": "/device/monitor",
      "method": "get",
      "sdk_endpoint": "device_monitor",
      "sdk_method": "get",
      "description": "Get all monitoring details of the devices"
    },
    "createReplicatorList": {
      "path": "/device/multicast/replicator",
      "method": "get",
      "sdk_endpoint": "device.multicast",
      "sdk_method": "get",
      "description": "Get replicator list from device"
    },
    "createRpfList": {
      "path": "/device/multicast/rpf",
      "method": "get",
      "sdk_endpoint": "device.multicast",
      "sdk_method": "get",
      "description": "Get RPF list from device"
    },
    "createTopologyList": {
      "path": "/device/multicast/topology",
      "method": "get",
      "sdk_endpoint": "device.multicast",
      "sdk_method": "get",
      "description": "Get topology list from device"
    },
    "createPimTunnelList": {
      "path": "/device/multicast/tunnel",
      "method": "get",
      "sdk_endpoint": "device.multicast",
      "sdk_method": "get",
      "description": "Get PIM tunnel from device"
    },
    "getIpv6Interface": {
      "path": "/device/ndv6",
      "method": "get",
      "sdk_endpoint": "device.ndv6",
      "sdk_method": "get",
      "description": "Get IPv6 Neighbors from device (Real Time)"
    },
    "getRunning": {
      "path": "/device/nms/running",
      "method": "get",
      "sdk_endpoint": "device.nms",
      "sdk_method": "get",
      "description": "Get nms running state from device"
    },
    "createAssociationsList": {
      "path": "/device/ntp/associations",
      "method": "get",
      "sdk_endpoint": "device.ntp",
      "sdk_method": "get",
      "description": "Get NTP peer associations list from device (Real Time)"
    },
    "createPeerList": {
      "path": "/device/ntp/peer",
      "method": "get",
      "sdk_endpoint": "device.ntp",
      "sdk_method": "get",
      "description": "Get NTP peer list from device (Real Time)"
    },
    "createNTPStatusList": {
      "path": "/device/ntp/status",
      "method": "get",
      "sdk_endpoint": "device.ntp",
      "sdk_method": "get",
      "description": "Get NTP status list from device (Real Time)"
    },
    "createOMPCloudXRecv": {
      "path": "/device/omp/cloudx",
      "method": "get",
      "sdk_endpoint": "device.omp",
      "sdk_method": "get",
      "description": "Get CloudExpress routes received list"
    },
    "createOMPLinkList": {
      "path": "/device/omp/links",
      "method": "get",
      "sdk_endpoint": "device.omp",
      "sdk_method": "get",
      "description": "Get OMP connection list"
    },
    "createOMPMcastAutoDiscoverAdvt": {
      "path": "/device/omp/mcastautodiscoveradvt",
      "method": "get",
      "sdk_endpoint": "device.omp",
      "sdk_method": "get",
      "description": "Get OMP multicast autodiscover advertised list"
    },
    "createOMPMcastAutoDiscoverRecv": {
      "path": "/device/omp/mcastautodiscoverrecv",
      "method": "get",
      "sdk_endpoint": "device.omp",
      "sdk_method": "get",
      "description": "Get OMP multicast autodiscover received list"
    },
    "createOMPMcastRoutesAdvt": {
      "path": "/device/omp/mcastroutesadvt",
      "method": "get",
      "sdk_endpoint": "device.omp",
      "sdk_method": "get",
      "description": "Get OMP multicast routes advertised list"
    },
    "createOMPMcastRoutesRecv": {
      "path": "/device/omp/mcastroutesrecv",
      "method": "get",
      "sdk_endpoint": "device.omp",
      "sdk_method": "get",
      "description": "Get OMP multicast routes received list"
    },
    "createOMPSessionList": {
      "path": "/device/omp/peers",
      "method": "get",
      "sdk_endpoint": "device.omp",
      "sdk_method": "get",
      "description": "Get OMP session list (Real Time)"
    },
    "createAdvertisedRoutesList": {
      "path": "/device/omp/routes/advertised",
      "method": "get",
      "sdk_endpoint": "device.omp",
      "sdk_method": "get",
      "description": "Get OMP advertised routes list (Real Time)"
    },
    "createAdvertisedRoutesListIpv6": {
      "path": "/device/omp/routes/advertised/ompIpv6",
      "method": "get",
      "sdk_endpoint": "device.omp",
      "sdk_method": "get",
      "description": "Get OMP advertised routes list (Real Time)"
    },
    "createReceivedRoutesList": {
      "path": "/device/omp/routes/received",
      "method": "get",
      "sdk_endpoint": "device.omp",
      "sdk_method": "get",
      "description": "Get OMP received routes list (Real Time)"
    },
    "createReceivedRoutesListIpv6": {
      "path": "/device/omp/routes/received/ompIpv6",
      "method": "get",
      "sdk_endpoint": "device.omp",
      "sdk_method": "get",
      "description": "Get OMP received routes list (Real Time)"
    },
    "createOMPServices": {
      "path": "/device/omp/services",
      "method": "get",
      "sdk_endpoint": "device.omp",
      "sdk_method": "get",
      "description": "Get OMP services list"
    },
    "getDeviceOMPStatus": {
      "path": "/device/omp/status",
      "method": "get",
      "sdk_endpoint": "device.omp",
      "sdk_method": "get",
      "description": "Get device OMP status"
    },
    "createOMPSummary": {
      "path": "/device/omp/summary",
      "method": "get",
      "sdk_endpoint": "device.omp",
      "sdk_method": "get",
      "description": "Get OMP summary"
    },
    "createSyncedOMPSessionList": {
      "path": "/device/omp/synced/peers",
      "method": "get",
      "sdk_endpoint": "device.omp",
      "sdk_method": "get",
      "description": "Get OP session list"
    },
    "createAdvertisedTlocsList": {
      "path": "/device/omp/tlocs/advertised",
      "method": "get",
      "sdk_endpoint": "device.omp",
      "sdk_method": "get",
      "description": "Get advertised TLOCs list (Real Time)"
    },
    "createReceivedTlocsList": {
      "path": "/device/omp/tlocs/received",
      "method": "get",
      "sdk_endpoint": "device.omp",
      "sdk_method": "get",
      "description": "Get received TLOCs list (Real Time)"
    },
    "getOnDemandLocal": {
      "path": "/device/ondemand/local",
      "method": "get",
      "sdk_endpoint": "device.ondemand",
      "sdk_method": "get",
      "description": "Get on-demand local (Real Time)"
    },
    "getOnDemandRemote": {
      "path": "/device/ondemand/remote",
      "method": "get",
      "sdk_endpoint": "device.ondemand",
      "sdk_method": "get",
      "description": "Get on-demand remote (Real Time)"
    },
    "createConnectionListFromDevice": {
      "path": "/device/orchestrator/connections",
      "method": "get",
      "sdk_endpoint": "device.orchestrator",
      "sdk_method": "get",
      "description": "Get connection list from device"
    },
    "createConnectionHistoryList": {
      "path": "/device/orchestrator/connectionshistory",
      "method": "get",
      "sdk_endpoint": "device.orchestrator",
      "sdk_method": "get",
      "description": "Get connection history list from device"
    },
    "createLocalPropertiesListList": {
      "path": "/device/orchestrator/localproperties",
      "method": "get",
      "sdk_endpoint": "device.orchestrator",
      "sdk_method": "get",
      "description": "Get local properties list from device"
    },
    "createReverseProxyMappingList": {
      "path": "/device/orchestrator/proxymapping",
      "method": "get",
      "sdk_endpoint": "device.orchestrator",
      "sdk_method": "get",
      "description": "Get reverse proxy mapping from vbond"
    },
    "getStatistics": {
      "path": "/device/orchestrator/statistics",
      "method": "get",
      "sdk_endpoint": "device.orchestrator",
      "sdk_method": "get",
      "description": "Get statistics from device"
    },
    "createConnectionSummary": {
      "path": "/device/orchestrator/summary",
      "method": "get",
      "sdk_endpoint": "device.orchestrator",
      "sdk_method": "get",
      "description": "Get connection summary from device"
    },
    "createValidDevicesList": {
      "path": "/device/orchestrator/validvedges",
      "method": "get",
      "sdk_endpoint": "device.orchestrator",
      "sdk_method": "get",
      "description": "Get valid device list from device"
    },
    "getValidVManageId": {
      "path": "/device/orchestrator/validvmanageid",
      "method": "get",
      "sdk_endpoint": "device.orchestrator",
      "sdk_method": "get",
      "description": "Get valid vManage Id from device"
    },
    "createValidVSmartsList": {
      "path": "/device/orchestrator/validvsmarts",
      "method": "get",
      "sdk_endpoint": "device.orchestrator",
      "sdk_method": "get",
      "description": "Get valid vSmart list from device"
    },
    "createOSPFDatabaseList": {
      "path": "/device/ospf/database",
      "method": "get",
      "sdk_endpoint": "device.ospf",
      "sdk_method": "get",
      "description": "Get OSPF database list from device (Real Time)"
    },
    "createOSPFDatabaseExternal": {
      "path": "/device/ospf/databaseexternal",
      "method": "get",
      "sdk_endpoint": "device.ospf",
      "sdk_method": "get",
      "description": "Get OSPF external database list from device (Real Time)"
    },
    "createOSPFDatabaseSummaryList": {
      "path": "/device/ospf/databasesummary",
      "method": "get",
      "sdk_endpoint": "device.ospf",
      "sdk_method": "get",
      "description": "Get OSPF database summary list from device (Real Time)"
    },
    "createOSPFInterface": {
      "path": "/device/ospf/interface",
      "method": "get",
      "sdk_endpoint": "device.ospf",
      "sdk_method": "get",
      "description": "Get OSPF interface list from device (Real Time)"
    },
    "createOSPFNeighbors": {
      "path": "/device/ospf/neighbor",
      "method": "get",
      "sdk_endpoint": "device.ospf",
      "sdk_method": "get",
      "description": "Get OSPF neighbor list from device (Real Time)"
    },
    "createOSPFProcess": {
      "path": "/device/ospf/process",
      "method": "get",
      "sdk_endpoint": "device.ospf",
      "sdk_method": "get",
      "description": "Get OSPF process list from device (Real Time)"
    },
    "createOSPFRoutesList": {
      "path": "/device/ospf/routes",
      "method": "get",
      "sdk_endpoint": "device.ospf",
      "sdk_method": "get",
      "description": "Get OSPF route list from device (Real Time)"
    },
    "createOSPFv3Interface": {
      "path": "/device/ospf/v3interface",
      "method": "get",
      "sdk_endpoint": "device.ospf",
      "sdk_method": "get",
      "description": "Get OSPF v3 interface list from device (Real Time)"
    },
    "createOSPFv3Neighbors": {
      "path": "/device/ospf/v3neighbor",
      "method": "get",
      "sdk_endpoint": "device.ospf",
      "sdk_method": "get",
      "description": "Get OSPF v3 neighbor list from device (Real Time)"
    },
    "createPIMInterfaceList": {
      "path": "/device/pim/interface",
      "method": "get",
      "sdk_endpoint": "device.pim",
      "sdk_method": "get",
      "description": "Get PIM interface list from device"
    },
    "createPIMNeighborList": {
      "path": "/device/pim/neighbor",
      "method": "get",
      "sdk_endpoint": "device.pim",
      "sdk_method": "get",
      "description": "Get PIM neighbor list from device"
    },
    "createPIMRpMappingList": {
      "path": "/device/pim/rp-mapping",
      "method": "get",
      "sdk_endpoint": "device.pim",
      "sdk_method": "get",
      "description": "Get PIM Rp-mapping list from device"
    },
    "createPIMStatisticsList": {
      "path": "/device/pim/statistics",
      "method": "get",
      "sdk_endpoint": "device.pim",
      "sdk_method": "get",
      "description": "Get PIM statistics list from device"
    },
    "getDevicePkiTrustpoint": {
      "path": "/device/pki/trustpoint",
      "method": "get",
      "sdk_endpoint": "device.pki",
      "sdk_method": "get",
      "description": "Get device pki trustpoint"
    },
    "getPolicedInterface": {
      "path": "/device/policer",
      "method": "get",
      "sdk_endpoint": "device.policer",
      "sdk_method": "get",
      "description": "Get policed interface list from device"
    },
    "createPolicyAccessListAssociations": {
      "path": "/device/policy/accesslistassociations",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "Get access list associations from device"
    },
    "createPolicyAccessListCounters": {
      "path": "/device/policy/accesslistcounters",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "Get access list counter from device"
    },
    "createPolicyAccessListNames": {
      "path": "/device/policy/accesslistnames",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "Get access list names from device"
    },
    "createPolicyAccessListPolicers": {
      "path": "/device/policy/accesslistpolicers",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "Get access list policers from device"
    },
    "createPolicyAppRoutePolicyFilter": {
      "path": "/device/policy/approutepolicyfilter",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "Get approute policy filter from device"
    },
    "createPolicDataPolicyFilter": {
      "path": "/device/policy/datapolicyfilter",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "Get data policy filters from device"
    },
    "createPolicyFilterMemoryUsage": {
      "path": "/device/policy/filtermemoryusage",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "Get data policy filter memory usage from device"
    },
    "showVsmartIptoSgtBinding": {
      "path": "/device/policy/iptosgtbindings",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "show ip to sgt binding from Vsmart"
    },
    "showVsmartIptoUserBinding": {
      "path": "/device/policy/iptouserbindings",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "show ip to user binding from Vsmart"
    },
    "createPolicyAccessListAssociationsIpv6": {
      "path": "/device/policy/ipv6/accesslistassociations",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "Get access list associations from device"
    },
    "createPolicyAccessListCountersIpv6": {
      "path": "/device/policy/ipv6/accesslistcounters",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "Get access list counters from device"
    },
    "createPolicyAccessListNamesIpv6": {
      "path": "/device/policy/ipv6/accesslistnames",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "Get access list names from device"
    },
    "createPolicyAccessListPolicersIpv6": {
      "path": "/device/policy/ipv6/accesslistpolicers",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "Get access list policers from device"
    },
    "showVsmartPxGridStatus": {
      "path": "/device/policy/pxgridstatus",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "show Pxgrid status From Vsmart"
    },
    "showVsmartPxGridUserSessions": {
      "path": "/device/policy/pxgridusersessions",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "show Pxgrid sessions From Vsmart"
    },
    "createPolicQosMapInfo": {
      "path": "/device/policy/qosmapinfo",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "Get QoS map information from device"
    },
    "createPolicQosSchedulerInfo": {
      "path": "/device/policy/qosschedulerinfo",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "Get QoS scheduler information from device"
    },
    "createPolicyRewriteAssociationsInfo": {
      "path": "/device/policy/rewriteassociations",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "Get rewrite associations information from device"
    },
    "showVsmartUserUsergroupBindings": {
      "path": "/device/policy/userusergroupbindings",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "Show User-Usergroup bindings from Vsmart"
    },
    "showSdwanPolicyFromVsmart": {
      "path": "/device/policy/vsmart",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "show Sdwan Policy From Vsmart"
    },
    "getZoneDropStatistics": {
      "path": "/device/policy/zbfwdropstatistics",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "Get zone drop statistics from device"
    },
    "getZbfwStatistics": {
      "path": "/device/policy/zbfwstatistics",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "Get zone based firewall statistics from device"
    },
    "getZonePairSessions": {
      "path": "/device/policy/zonepairsessions",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "Get zone pair sessions from device"
    },
    "getZonePairs": {
      "path": "/device/policy/zonepairstatistics",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "Get zone pair statistics from device"
    },
    "getZonePolicyFilters": {
      "path": "/device/policy/zonepolicyfilter",
      "method": "get",
      "sdk_endpoint": "device.policy",
      "sdk_method": "get",
      "description": "Get zone policy filter from device"
    },
    "getPowerConsumption": {
      "path": "/device/powerconsumption",
      "method": "get",
      "sdk_endpoint": "device.powerconsumption",
      "sdk_method": "get",
      "description": "Get Power Consumption Information"
    },
    "createPPPInterfaceList": {
      "path": "/device/ppp/interface",
      "method": "get",
      "sdk_endpoint": "device.ppp",
      "sdk_method": "get",
      "description": "Get PPP interface list from device (Real Time)"
    },
    "createPPPoEInterfaceList": {
      "path": "/device/pppoe/session",
      "method": "get",
      "sdk_endpoint": "device.pppoe",
      "sdk_method": "get",
      "description": "Get PPPoE session list from device"
    },
    "createPPPoENeighborList": {
      "path": "/device/pppoe/statistic",
      "method": "get",
      "sdk_endpoint": "device.pppoe",
      "sdk_method": "get",
      "description": "Get PPPoE statistics from device"
    },
    "cpustat": {
      "path": "/device/qfp/cpustat",
      "method": "get",
      "sdk_endpoint": "device.qfp",
      "sdk_method": "get",
      "description": "Get QFP cpu status"
    },
    "memstat": {
      "path": "/device/qfp/memstat",
      "method": "get",
      "sdk_endpoint": "device.qfp",
      "sdk_method": "get",
      "description": "Get QFP memory status"
    },
    "getSyncQueues": {
      "path": "/device/queues",
      "method": "get",
      "sdk_endpoint": "device.queues",
      "sdk_method": "get",
      "description": "Get synchronized queue information, returns information about syncing, queued and stuck devices"
    },
    "listReachableDevices": {
      "path": "/device/reachable",
      "method": "get",
      "sdk_endpoint": "device.reachable",
      "sdk_method": "get",
      "description": "Get list of reachable devices"
    },
    "createRebootHistoryList": {
      "path": "/device/reboothistory",
      "method": "get",
      "sdk_endpoint": "device.reboothistory",
      "sdk_method": "get",
      "description": "Get device reboot history"
    },
    "getRebootHistoryDetails": {
      "path": "/device/reboothistory/details",
      "method": "get",
      "sdk_endpoint": "device.reboothistory",
      "sdk_method": "get",
      "description": "Get detailed reboot history list"
    },
    "createSyncedRebootHistoryList": {
      "path": "/device/reboothistory/synced",
      "method": "get",
      "sdk_endpoint": "device.reboothistory",
      "sdk_method": "get",
      "description": "Get device reboot history synchronously"
    },
    "getRedundancyGroupAppGroup": {
      "path": "/device/redundancy-group/app-group",
      "method": "get",
      "sdk_endpoint": "device.redundancy_group",
      "sdk_method": "get",
      "description": "Get Redundancy Group Information"
    },
    "getRoleBasedCounters": {
      "path": "/device/roleBasedCounters",
      "method": "get",
      "sdk_endpoint": "device.roleBasedCounters",
      "sdk_method": "get",
      "description": "get Cisco TrustSec Role Based Counters information from device"
    },
    "getRoleBasedIpv6Counters": {
      "path": "/device/roleBasedIpv6Counters",
      "method": "get",
      "sdk_endpoint": "device.roleBasedIpv6Counters",
      "sdk_method": "get",
      "description": "get Cisco TrustSec Role Based Ipv6 Counters information from device"
    },
    "getRoleBasedIpv6Permissions": {
      "path": "/device/roleBasedIpv6Permissions",
      "method": "get",
      "sdk_endpoint": "device.roleBasedIpv6Permissions",
      "sdk_method": "get",
      "description": "get Cisco TrustSec Role Based ipv6 Permissions information from device"
    },
    "getRoleBasedPermissions": {
      "path": "/device/roleBasedPermissions",
      "method": "get",
      "sdk_endpoint": "device.roleBasedPermissions",
      "sdk_method": "get",
      "description": "get Cisco TrustSec Role Based Permissions information from device"
    },
    "getRoleBasedSgtMap": {
      "path": "/device/roleBasedSgtMap",
      "method": "get",
      "sdk_endpoint": "device.roleBasedSgtMap",
      "sdk_method": "get",
      "description": "get Cisco TrustSec Role Based SGT Map information from device"
    },
    "getSDWanGlobalDropStatistics": {
      "path": "/device/sdwan-global-drop-statistics",
      "method": "get",
      "sdk_endpoint": "device.sdwan_global_drop_statistics",
      "sdk_method": "get",
      "description": "Get SD-WAN global drop statistics detail from device (Real Time)"
    },
    "getSDWanStats": {
      "path": "/device/sdwan-stats",
      "method": "get",
      "sdk_endpoint": "device.sdwan_stats",
      "sdk_method": "get",
      "description": "Get SD-WAN statistics detail from device (Real Time)"
    },
    "createSessionList": {
      "path": "/device/security/information",
      "method": "get",
      "sdk_endpoint": "device.security",
      "sdk_method": "get",
      "description": "Get security information from devices"
    },
    "getDetail": {
      "path": "/device/sfp/detail",
      "method": "get",
      "sdk_endpoint": "device.sfp",
      "sdk_method": "get",
      "description": "Get SFP detail"
    },
    "getDiagnostic": {
      "path": "/device/sfp/diagnostic",
      "method": "get",
      "sdk_endpoint": "device.sfp",
      "sdk_method": "get",
      "description": "Get SFP diagnostic"
    },
    "getDiagnosticMeasurementAlarm": {
      "path": "/device/sfp/diagnosticMeasurementAlarm",
      "method": "get",
      "sdk_endpoint": "device.sfp",
      "sdk_method": "get",
      "description": "Get SFP diagnostic measurement alarm"
    },
    "getDiagnosticMeasurementValue": {
      "path": "/device/sfp/diagnosticMeasurementValue",
      "method": "get",
      "sdk_endpoint": "device.sfp",
      "sdk_method": "get",
      "description": "Get SFP diagnostic measurement value"
    },
    "getSigTunnelList": {
      "path": "/device/sig/getSigTunnelList",
      "method": "get",
      "sdk_endpoint": "device.sig",
      "sdk_method": "get",
      "description": "get Sig TunnelList"
    },
    "getSigTunnelTotal": {
      "path": "/device/sig/getSigTunnelTotal",
      "method": "get",
      "sdk_endpoint": "device.sig",
      "sdk_method": "get",
      "description": "get Sig Tunnel Total coount"
    },
    "tunnelDashboard": {
      "path": "/device/sig/tunnelDashboard",
      "method": "get",
      "sdk_endpoint": "device.sig",
      "sdk_method": "get",
      "description": "Get SIG Zscaler tunnels from device"
    },
    "getSigUmbrellaTunnels": {
      "path": "/device/sig/umbrella/tunnels",
      "method": "get",
      "sdk_endpoint": "device.sig",
      "sdk_method": "get",
      "description": "Get SIG Umbrella tunnels from device"
    },
    "getSigZscalerTunnels": {
      "path": "/device/sig/zscaler/tunnels",
      "method": "get",
      "sdk_endpoint": "device.sig",
      "sdk_method": "get",
      "description": "Get SIG Zscaler tunnels from device"
    },
    "createSmuList": {
      "path": "/device/smu",
      "method": "get",
      "sdk_endpoint": "device.smu",
      "sdk_method": "get",
      "description": "Get software list from device"
    },
    "createSyncedSmuList": {
      "path": "/device/smu/synced",
      "method": "get",
      "sdk_endpoint": "device.smu",
      "sdk_method": "get",
      "description": "Get software list from device synchronously"
    },
    "getAAAUcreateSoftwareListsers": {
      "path": "/device/software",
      "method": "get",
      "sdk_endpoint": "device.software",
      "sdk_method": "get",
      "description": "Get software list from device"
    },
    "createSyncedSoftwareList": {
      "path": "/device/software/synced",
      "method": "get",
      "sdk_endpoint": "device.software",
      "sdk_method": "get",
      "description": "Get software list from device synchronously"
    },
    "getSSETunnel": {
      "path": "/device/sse/tunnels",
      "method": "get",
      "sdk_endpoint": "device.sse",
      "sdk_method": "get",
      "description": "Get SSE  tunnels from device"
    },
    "getSslProxyStatistics": {
      "path": "/device/sslproxy/statistics",
      "method": "get",
      "sdk_endpoint": "device.sslproxy",
      "sdk_method": "get",
      "description": "Get ssl proxy statistics from device"
    },
    "getSslProxyStatus": {
      "path": "/device/sslproxy/status",
      "method": "get",
      "sdk_endpoint": "device.sslproxy",
      "sdk_method": "get",
      "description": "Get ssl proxy status from device"
    },
    "getStaticRouteTrackerInfo": {
      "path": "/device/staticRouteTracker",
      "method": "get",
      "sdk_endpoint": "device.staticRouteTracker",
      "sdk_method": "get",
      "description": "Get single static route tracker info from device"
    },
    "getStatsQueues": {
      "path": "/device/stats",
      "method": "get",
      "sdk_endpoint": "device.stats",
      "sdk_method": "get",
      "description": "Get stats queue information"
    },
    "getAllDeviceStatus": {
      "path": "/device/status",
      "method": "get",
      "sdk_endpoint": "devices",
      "sdk_method": "get",
      "description": "Get devices status for vSmart,vBond,vEdge, and cEdge"
    },
    "getSxpConnections": {
      "path": "/device/sxpConnections",
      "method": "get",
      "sdk_endpoint": "device.sxpConnections",
      "sdk_method": "get",
      "description": "get Cisco TrustSec SXP Connections information from device"
    },
    "listCurrentlySyncingDevices": {
      "path": "/device/sync_status",
      "method": "get",
      "sdk_endpoint": "device.sync_status",
      "sdk_method": "get",
      "description": "Get list of currently syncing devices"
    },
    "syncAllDevicesMemDB": {
      "path": "/device/syncall/memorydb",
      "method": "post",
      "sdk_endpoint": "device.syncall",
      "sdk_method": "create",
      "description": "Synchronize memory database for all devices"
    },
    "getDeviceSystemClock": {
      "path": "/device/system/clock",
      "method": "get",
      "sdk_endpoint": "device_system",
      "sdk_method": "get",
      "description": "Get device system clock"
    },
    "createDeviceInfoList": {
      "path": "/device/system/info",
      "method": "get",
      "sdk_endpoint": "device_system",
      "sdk_method": "get",
      "description": "Get device information list"
    },
    "createDeviceSystemStatsList": {
      "path": "/device/system/statistics",
      "method": "get",
      "sdk_endpoint": "device_system",
      "sdk_method": "get",
      "description": "Get device system stats list (Real Time)"
    },
    "createDeviceSystemStatusList": {
      "path": "/device/system/status",
      "method": "get",
      "sdk_endpoint": "device_system",
      "sdk_method": "get",
      "description": "Get device system status list (Real Time)"
    },
    "createSyncedDeviceSystemStatusList": {
      "path": "/device/system/synced/status",
      "method": "get",
      "sdk_endpoint": "device_system",
      "sdk_method": "get",
      "description": "Get device system stats list synchronously"
    },
    "getActiveTCPFlows": {
      "path": "/device/tcpopt/activeflows",
      "method": "get",
      "sdk_endpoint": "device.tcpopt",
      "sdk_method": "get",
      "description": "Get TCP optimized active flows from device (Real Time)"
    },
    "getExpiredTCPFlows": {
      "path": "/device/tcpopt/expiredflows",
      "method": "get",
      "sdk_endpoint": "device.tcpopt",
      "sdk_method": "get",
      "description": "Get TCP optimized expired flows from device (Real Time)"
    },
    "getTCPSummary": {
      "path": "/device/tcpopt/summary",
      "method": "get",
      "sdk_endpoint": "device.tcpopt",
      "sdk_method": "get",
      "description": "Get TCP optimization summary from device (Real Time)"
    },
    "getTcpProxyStatistics": {
      "path": "/device/tcpproxy/statistics",
      "method": "get",
      "sdk_endpoint": "device.tcpproxy",
      "sdk_method": "get",
      "description": "Get tcp proxy statistics from device"
    },
    "getTcpProxyStatus": {
      "path": "/device/tcpproxy/status",
      "method": "get",
      "sdk_endpoint": "device.tcpproxy",
      "sdk_method": "get",
      "description": "Get tcp proxy status from device"
    },
    "getTiers": {
      "path": "/device/tier",
      "method": "get",
      "sdk_endpoint": "device.tier",
      "sdk_method": "get",
      "description": "getTiers"
    },
    "addTier": {
      "path": "/device/tier",
      "method": "post",
      "sdk_endpoint": "device.tier",
      "sdk_method": "create",
      "description": "add tier"
    },
    "deleteTier": {
      "path": "/device/tier/{tierName}",
      "method": "delete",
      "sdk_endpoint": "device.tier",
      "sdk_method": "delete",
      "description": "deleteTier"
    },
    "getDeviceTlocStatus": {
      "path": "/device/tloc",
      "method": "get",
      "sdk_endpoint": "device.tloc",
      "sdk_method": "get",
      "description": "Get TLOC status list"
    },
    "getDeviceTlocUtil": {
      "path": "/device/tlocutil",
      "method": "get",
      "sdk_endpoint": "device.tlocutil",
      "sdk_method": "get",
      "description": "Get TLOC list"
    },
    "getDeviceTlocUtilDetails": {
      "path": "/device/tlocutil/detail",
      "method": "get",
      "sdk_endpoint": "device.tlocutil",
      "sdk_method": "get",
      "description": "Get detailed TLOC list"
    },
    "createAdminTech": {
      "path": "/device/tools/admintech",
      "method": "post",
      "sdk_endpoint": "device.tools",
      "sdk_method": "create",
      "description": "Generate admin tech logs"
    },
    "copyAdminTechOnDevice": {
      "path": "/device/tools/admintech/copy",
      "method": "post",
      "sdk_endpoint": "device.tools",
      "sdk_method": "create",
      "description": "copy admin tech logs"
    },
    "deleteAdminTechOnDevice": {
      "path": "/device/tools/admintech/delete",
      "method": "delete",
      "sdk_endpoint": "device.tools",
      "sdk_method": "delete",
      "description": "delete admin tech logs"
    },
    "downloadAdminTechFile": {
      "path": "/device/tools/admintech/download/{filename}",
      "method": "get",
      "sdk_endpoint": "device.tools",
      "sdk_method": "get",
      "description": "Download admin tech logs"
    },
    "getSupportedAdminTechFeatures": {
      "path": "/device/tools/admintech/supportedfeatures/{deviceModel}/{deviceIP}/{personality}",
      "method": "get",
      "sdk_endpoint": "device.tools",
      "sdk_method": "get",
      "description": "Get supported admin tech features"
    },
    "deleteAdminTechFile": {
      "path": "/device/tools/admintech/{requestID}",
      "method": "delete",
      "sdk_endpoint": "device.tools",
      "sdk_method": "delete",
      "description": "Delete admin tech logs"
    },
    "listAdminTechsOnDevice": {
      "path": "/device/tools/admintechlist",
      "method": "post",
      "sdk_endpoint": "device.tools",
      "sdk_method": "create",
      "description": "List admin tech logs"
    },
    "listAdminTechs": {
      "path": "/device/tools/admintechs",
      "method": "get",
      "sdk_endpoint": "device.tools",
      "sdk_method": "get",
      "description": "Get device admin-tech information"
    },
    "getInProgressCount": {
      "path": "/device/tools/admintechs/inprogress",
      "method": "get",
      "sdk_endpoint": "device.tools",
      "sdk_method": "get",
      "description": "Get device admin-tech InProgressCount"
    },
    "uploadAdminTech": {
      "path": "/device/tools/admintechs/upload",
      "method": "post",
      "sdk_endpoint": "device.tools",
      "sdk_method": "create",
      "description": "upload admin tech to SR"
    },
    "factoryReset": {
      "path": "/device/tools/factoryreset",
      "method": "post",
      "sdk_endpoint": "device.tools",
      "sdk_method": "create",
      "description": "Device factory reset"
    },
    "getDeviceToolsNetstat": {
      "path": "/device/tools/netstat",
      "method": "get",
      "sdk_endpoint": "device.tools",
      "sdk_method": "get",
      "description": "Get device tool net stat"
    },
    "npingDevice": {
      "path": "/device/tools/nping/{deviceIP}",
      "method": "post",
      "sdk_endpoint": "device.tools",
      "sdk_method": "create",
      "description": "NPing device"
    },
    "getDeviceToolsNSlookup": {
      "path": "/device/tools/nslookup",
      "method": "get",
      "sdk_endpoint": "device.tools",
      "sdk_method": "get",
      "description": "Get device tool nslookup"
    },
    "pingDevice": {
      "path": "/device/tools/ping/{deviceIP}",
      "method": "post",
      "sdk_endpoint": "device.tools",
      "sdk_method": "create",
      "description": "Ping device"
    },
    "processPortHopColor": {
      "path": "/device/tools/porthopcolor/{deviceIP}",
      "method": "post",
      "sdk_endpoint": "device.tools",
      "sdk_method": "create",
      "description": "Request port hop color"
    },
    "getRealTimeinfo": {
      "path": "/device/tools/realtimeinfo",
      "method": "get",
      "sdk_endpoint": "device.tools",
      "sdk_method": "get",
      "description": "Get hardware real time info from device"
    },
    "processInterfaceReset": {
      "path": "/device/tools/reset/interface/{deviceIP}",
      "method": "post",
      "sdk_endpoint": "device.tools",
      "sdk_method": "create",
      "description": "Reset device interface"
    },
    "processResetUser": {
      "path": "/device/tools/resetuser/{deviceIP}",
      "method": "post",
      "sdk_endpoint": "device.tools",
      "sdk_method": "create",
      "description": "Request reset user"
    },
    "servicePath": {
      "path": "/device/tools/servicepath/{deviceIP}",
      "method": "post",
      "sdk_endpoint": "device.tools",
      "sdk_method": "create",
      "description": "Service path"
    },
    "getDeviceToolsSS": {
      "path": "/device/tools/ss",
      "method": "get",
      "sdk_endpoint": "device.tools",
      "sdk_method": "get",
      "description": "Get device tool ss"
    },
    "getSystemNetfilter": {
      "path": "/device/tools/system-netfilter",
      "method": "get",
      "sdk_endpoint": "device.tools",
      "sdk_method": "get",
      "description": "Get system netfilter info from device"
    },
    "tracerouteDevice": {
      "path": "/device/tools/traceroute/{deviceIP}",
      "method": "post",
      "sdk_endpoint": "device.tools",
      "sdk_method": "create",
      "description": "Traceroute"
    },
    "tunnelPath": {
      "path": "/device/tools/tunnelpath/{deviceIP}",
      "method": "post",
      "sdk_endpoint": "device.tools",
      "sdk_method": "create",
      "description": "TunnelPath"
    },
    "createTransportConnectionList": {
      "path": "/device/transport/connection",
      "method": "get",
      "sdk_endpoint": "device.transport",
      "sdk_method": "get",
      "description": "Get transport connection list from device"
    },
    "createBfdStatisticsList": {
      "path": "/device/tunnel/bfd_statistics",
      "method": "get",
      "sdk_endpoint": "device_tunnel",
      "sdk_method": "get",
      "description": "Get tunnel BFD statistics all devices"
    },
    "createFecStatistics": {
      "path": "/device/tunnel/fec_statistics",
      "method": "get",
      "sdk_endpoint": "device_tunnel",
      "sdk_method": "get",
      "description": "Get tunnel fec statistics"
    },
    "createGreKeepalivesList": {
      "path": "/device/tunnel/gre-keepalives",
      "method": "get",
      "sdk_endpoint": "device_tunnel",
      "sdk_method": "get",
      "description": "Get GRE keep alive information"
    },
    "createIpsecStatisticsList": {
      "path": "/device/tunnel/ipsec_statistics",
      "method": "get",
      "sdk_endpoint": "device_tunnel",
      "sdk_method": "get",
      "description": "Get tunnel IPSec statistics all devices"
    },
    "createPacketDuplicateStatistics": {
      "path": "/device/tunnel/packet-duplicate",
      "method": "get",
      "sdk_endpoint": "device_tunnel",
      "sdk_method": "get",
      "description": "Get tunnel statistics packet duplication statistics"
    },
    "createStatisticsList": {
      "path": "/device/tunnel/statistics",
      "method": "get",
      "sdk_endpoint": "device_tunnel",
      "sdk_method": "get",
      "description": "Get tunnel statistics all devices"
    },
    "createUcseStats": {
      "path": "/device/ucse/stats",
      "method": "get",
      "sdk_endpoint": "device.ucse",
      "sdk_method": "get",
      "description": "Get  UCSE stats entry from device"
    },
    "getUmbrellaDevReg": {
      "path": "/device/umbrella/device-registration",
      "method": "get",
      "sdk_endpoint": "device.umbrella",
      "sdk_method": "get",
      "description": "Get Umbrella device registration from device"
    },
    "getUmbrellaDNSCrypt": {
      "path": "/device/umbrella/dnscrypt",
      "method": "get",
      "sdk_endpoint": "device.umbrella",
      "sdk_method": "get",
      "description": "Get Umbrella DNScrypt information from device"
    },
    "getUmbrellaDpStats": {
      "path": "/device/umbrella/dp-stats",
      "method": "get",
      "sdk_endpoint": "device.umbrella",
      "sdk_method": "get",
      "description": "Get Umbrella dp-stats from device"
    },
    "getUmbrellaOverview": {
      "path": "/device/umbrella/overview",
      "method": "get",
      "sdk_endpoint": "device.umbrella",
      "sdk_method": "get",
      "description": "Get Umbrella overview from device"
    },
    "getUmbrellaConfig": {
      "path": "/device/umbrella/umbrella-config",
      "method": "get",
      "sdk_endpoint": "device.umbrella",
      "sdk_method": "get",
      "description": "Get Umbrella configuration from device"
    },
    "getUnclaimedVedges": {
      "path": "/device/unclaimed/vedges",
      "method": "get",
      "sdk_endpoint": "device.unclaimed",
      "sdk_method": "get",
      "description": "Get unclaimed vEdges from vbond"
    },
    "getUnconfigured": {
      "path": "/device/unconfigured",
      "method": "get",
      "sdk_endpoint": "device.unconfigured",
      "sdk_method": "get",
      "description": "Get wan edge devices not configured by vManage (that is, those in CLI mode)"
    },
    "listUnreachableDevices": {
      "path": "/device/unreachable",
      "method": "get",
      "sdk_endpoint": "device.unreachable",
      "sdk_method": "get",
      "description": "Get list of unreachable devices"
    },
    "removeUnreachableDevice": {
      "path": "/device/unreachable/{deviceIP}",
      "method": "delete",
      "sdk_endpoint": "device.unreachable",
      "sdk_method": "delete",
      "description": "Delete unreachable device"
    },
    "getUsersFromDevice": {
      "path": "/device/users",
      "method": "get",
      "sdk_endpoint": "device.users",
      "sdk_method": "get",
      "description": "Get users from device (Real Time)"
    },
    "getAllDeviceUsers": {
      "path": "/device/users/list",
      "method": "get",
      "sdk_endpoint": "device.users",
      "sdk_method": "get",
      "description": "Get all users from device"
    },
    "getUTDDataplaneConfig": {
      "path": "/device/utd/dataplane-config",
      "method": "get",
      "sdk_endpoint": "device.utd",
      "sdk_method": "get",
      "description": "Get data plane config from Device"
    },
    "getUTDDataplaneGlobal": {
      "path": "/device/utd/dataplane-global",
      "method": "get",
      "sdk_endpoint": "device.utd",
      "sdk_method": "get",
      "description": "Get data plane global from Device"
    },
    "getUTDDataplaneStats": {
      "path": "/device/utd/dataplane-stats",
      "method": "get",
      "sdk_endpoint": "device.utd",
      "sdk_method": "get",
      "description": "Get data plane stats from Device"
    },
    "getUTDDataplaneStatsSummary": {
      "path": "/device/utd/dataplane-stats-summary",
      "method": "get",
      "sdk_endpoint": "device.utd",
      "sdk_method": "get",
      "description": "Get data plane stats summary"
    },
    "getUTDEngineInstanceStatus": {
      "path": "/device/utd/engine-instance-status",
      "method": "get",
      "sdk_endpoint": "device.utd",
      "sdk_method": "get",
      "description": "Get UTD engine instance status from device (Real Time)"
    },
    "getUTDEngineStatus": {
      "path": "/device/utd/engine-status",
      "method": "get",
      "sdk_endpoint": "device.utd",
      "sdk_method": "get",
      "description": "Get UTD engine status from device (Real Time)"
    },
    "getUTDFileAnalysisStatus": {
      "path": "/device/utd/file-analysis-status",
      "method": "get",
      "sdk_endpoint": "device.utd",
      "sdk_method": "get",
      "description": "Get UTD file analysis status from device (Real Time)"
    },
    "getUTDFileReputationStatus": {
      "path": "/device/utd/file-reputation-status",
      "method": "get",
      "sdk_endpoint": "device.utd",
      "sdk_method": "get",
      "description": "Get UTD file reputation status from device (Real Time)"
    },
    "getUTDIpsUpdateStatus": {
      "path": "/device/utd/ips-update-status",
      "method": "get",
      "sdk_endpoint": "device.utd",
      "sdk_method": "get",
      "description": "Get UTD IPS update status from device (Real Time)"
    },
    "getSignatureVersionInfo": {
      "path": "/device/utd/signature/version/details",
      "method": "get",
      "sdk_endpoint": "device.utd",
      "sdk_method": "get",
      "description": "Get UTD Signature version information from Device"
    },
    "getUTDUrlfConnectionStatus": {
      "path": "/device/utd/urlf-con-status",
      "method": "get",
      "sdk_endpoint": "device.utd",
      "sdk_method": "get",
      "description": "Get UTD URLF Connection status from device (Real Time)"
    },
    "getUTDUrlfUpdateStatus": {
      "path": "/device/utd/urlf-update-status",
      "method": "get",
      "sdk_endpoint": "device.utd",
      "sdk_method": "get",
      "description": "Get UTD URLF update status from device (Real Time)"
    },
    "getUTDVersionStatus": {
      "path": "/device/utd/version-status",
      "method": "get",
      "sdk_endpoint": "device.utd",
      "sdk_method": "get",
      "description": "Get UTD version status from device (Real Time)"
    },
    "getCoLineSpecificStats": {
      "path": "/device/vdslService/coLineSpecificStats",
      "method": "get",
      "sdk_endpoint": "device.vdslService",
      "sdk_method": "get",
      "description": "Get VDSL service line bonding stats from device"
    },
    "getCoStats": {
      "path": "/device/vdslService/coStats",
      "method": "get",
      "sdk_endpoint": "device.vdslService",
      "sdk_method": "get",
      "description": "Get CO stats from device"
    },
    "getCpeLineSpecificStats": {
      "path": "/device/vdslService/cpeLineSpecificStats",
      "method": "get",
      "sdk_endpoint": "device.vdslService",
      "sdk_method": "get",
      "description": "Get VDSL service CPE line specific stats from device"
    },
    "getCpeStats": {
      "path": "/device/vdslService/cpeStats",
      "method": "get",
      "sdk_endpoint": "device.vdslService",
      "sdk_method": "get",
      "description": "Get CPE stats from device"
    },
    "getLineBondingStats": {
      "path": "/device/vdslService/lineBondingStats",
      "method": "get",
      "sdk_endpoint": "device.vdslService",
      "sdk_method": "get",
      "description": "Get VDSL service line bonding stats from device"
    },
    "getLineSpecificStats": {
      "path": "/device/vdslService/lineSpecificStats",
      "method": "get",
      "sdk_endpoint": "device.vdslService",
      "sdk_method": "get",
      "description": "Get VDSL service line specific stats from device"
    },
    "getVdslInfo": {
      "path": "/device/vdslService/vdslInfo",
      "method": "get",
      "sdk_endpoint": "device.vdslService",
      "sdk_method": "get",
      "description": "Get VDSL info from device"
    },
    "getVedgeInventory": {
      "path": "/device/vedgeinventory/detail",
      "method": "get",
      "sdk_endpoint": "device.vedgeinventory",
      "sdk_method": "get",
      "description": "Get detailed vEdge inventory"
    },
    "getVedgeInventorySummary": {
      "path": "/device/vedgeinventory/summary",
      "method": "get",
      "sdk_endpoint": "device.vedgeinventory",
      "sdk_method": "get",
      "description": "Get vEdge inventory"
    },
    "createTeList": {
      "path": "/device/virtualApplication/te",
      "method": "get",
      "sdk_endpoint": "device.virtualApplication",
      "sdk_method": "get",
      "description": "Get ThousandEyes app list from device"
    },
    "createUtdList": {
      "path": "/device/virtualApplication/utd",
      "method": "get",
      "sdk_endpoint": "device.virtualApplication",
      "sdk_method": "get",
      "description": "Get Utd apps list from device"
    },
    "createWaasList": {
      "path": "/device/virtualApplication/waas",
      "method": "get",
      "sdk_endpoint": "device.virtualApplication",
      "sdk_method": "get",
      "description": "Get Waas apps list from device"
    },
    "getVbranchVMLifecycleNics": {
      "path": "/device/vm/nics",
      "method": "get",
      "sdk_endpoint": "device.vm",
      "sdk_method": "get",
      "description": "Get vbranch vm lifecycle state (NIC)"
    },
    "getCloudDockVMLifecycleNics": {
      "path": "/device/vm/notifications",
      "method": "get",
      "sdk_endpoint": "device.vm",
      "sdk_method": "get",
      "description": "Get CloudDock vm lifecycle state"
    },
    "getVbranchVMLifecycle": {
      "path": "/device/vm/oper/state",
      "method": "get",
      "sdk_endpoint": "device.vm",
      "sdk_method": "get",
      "description": "Get vbranch vm lifecycle state"
    },
    "getVMLifeCycleState": {
      "path": "/device/vm/state",
      "method": "get",
      "sdk_endpoint": "device.vm",
      "sdk_method": "get",
      "description": "Get vm lifecycle state"
    },
    "getVManageSystemIP": {
      "path": "/device/vmanage",
      "method": "get",
      "sdk_endpoint": "device.vmanage",
      "sdk_method": "get",
      "description": "Get vManage system IP"
    },
    "getDspActive": {
      "path": "/device/voice/dspActive",
      "method": "get",
      "sdk_endpoint": "device.voice",
      "sdk_method": "get",
      "description": "Get DSPFarm Active DSP info from device"
    },
    "getPhoneInfo": {
      "path": "/device/voice/phoneInfo",
      "method": "get",
      "sdk_endpoint": "device.voice",
      "sdk_method": "get",
      "description": "Get phone registration info from device"
    },
    "getDSPFarmProfiles": {
      "path": "/device/voice/profiles",
      "method": "get",
      "sdk_endpoint": "device.voice",
      "sdk_method": "get",
      "description": "Get DSPFarm Profiles info from device"
    },
    "getSccpCcmGroups": {
      "path": "/device/voice/sccpCcmGroups",
      "method": "get",
      "sdk_endpoint": "device.voice",
      "sdk_method": "get",
      "description": "Get DSPFarm SCCP CCM Groups info from device"
    },
    "getSccpConnections": {
      "path": "/device/voice/sccpConnections",
      "method": "get",
      "sdk_endpoint": "device.voice",
      "sdk_method": "get",
      "description": "Get DSPFarm SCCP Connections info from device"
    },
    "getVoiceCalls": {
      "path": "/device/voice/voiceCalls",
      "method": "get",
      "sdk_endpoint": "device.voice",
      "sdk_method": "get",
      "description": "Get voice call info from device"
    },
    "getVoipCalls": {
      "path": "/device/voice/voipCalls",
      "method": "get",
      "sdk_endpoint": "device.voice",
      "sdk_method": "get",
      "description": "Get VOIP call info from device"
    },
    "getT1e1IsdnStatus": {
      "path": "/device/voiceisdninfo/isdnstatus",
      "method": "get",
      "sdk_endpoint": "device.voiceisdninfo",
      "sdk_method": "get",
      "description": "Retrieve Voice ISDN Status from device"
    },
    "getControllerT1e1InfoCurrent15MinStats": {
      "path": "/device/voicet1e1controllerinfo/current15minstats",
      "method": "get",
      "sdk_endpoint": "device.voicet1e1controllerinfo",
      "sdk_method": "get",
      "description": "Retrieve T1E1 controller last 15 min stats from device (Real Time)"
    },
    "getControllerT1e1InfoTotalStats": {
      "path": "/device/voicet1e1controllerinfo/totalstats",
      "method": "get",
      "sdk_endpoint": "device.voicet1e1controllerinfo",
      "sdk_method": "get",
      "description": "Retrieve T1E1 controller total stats from device (Real Time)"
    },
    "getVPNInstances": {
      "path": "/device/vpn",
      "method": "get",
      "sdk_endpoint": "device.vpn",
      "sdk_method": "get",
      "description": "Get VPN instance list from device (Real Time)"
    },
    "getVRRPInterface": {
      "path": "/device/vrrp",
      "method": "get",
      "sdk_endpoint": "device.vrrp",
      "sdk_method": "get",
      "description": "Get VRRP interface list from device"
    },
    "getWirelessClients": {
      "path": "/device/wireless/client",
      "method": "get",
      "sdk_endpoint": "device.wireless",
      "sdk_method": "get",
      "description": "Get wireless clients from device"
    },
    "getWirelessRadios": {
      "path": "/device/wireless/radio",
      "method": "get",
      "sdk_endpoint": "device.wireless",
      "sdk_method": "get",
      "description": "Get wireless Radios from device"
    },
    "getWirelessSsid": {
      "path": "/device/wireless/ssid",
      "method": "get",
      "sdk_endpoint": "device.wireless",
      "sdk_method": "get",
      "description": "Get wireless SSID from device"
    },
    "getWLANClients": {
      "path": "/device/wlan/clients",
      "method": "get",
      "sdk_endpoint": "device.wlan",
      "sdk_method": "get",
      "description": "Get WLAN client from device"
    },
    "getWLANInterfaces": {
      "path": "/device/wlan/interfaces",
      "method": "get",
      "sdk_endpoint": "device.wlan",
      "sdk_method": "get",
      "description": "Get WLAN interface from device"
    },
    "getWLANRadios": {
      "path": "/device/wlan/radios",
      "method": "get",
      "sdk_endpoint": "device.wlan",
      "sdk_method": "get",
      "description": "Get WLAN Radios from device"
    },
    "getWLANRadius": {
      "path": "/device/wlan/radius",
      "method": "get",
      "sdk_endpoint": "device.wlan",
      "sdk_method": "get",
      "description": "Get WLAN RADIUS authentication from device"
    },
    "deviceAuthorization": {
      "path": "/device_authorization/{regionBaseUri}/{clientId}",
      "method": "post",
      "sdk_endpoint": "device_authorization.{regionBaseUri}",
      "sdk_method": "create",
      "description": "User authorization for Cisco vManage SecureX integration"
    },
    "activate": {
      "path": "/disasterrecovery/activate",
      "method": "post",
      "sdk_endpoint": "disasterrecovery.activate",
      "sdk_method": "create",
      "description": "Activate cluster to start working as primary"
    },
    "getClusterInfo": {
      "path": "/disasterrecovery/clusterInfo",
      "method": "get",
      "sdk_endpoint": "disasterrecovery.clusterInfo",
      "sdk_method": "get",
      "description": "Get disaster recovery cluster info"
    },
    "getConfigDBRestoreStatus": {
      "path": "/disasterrecovery/dbrestorestatus",
      "method": "get",
      "sdk_endpoint": "disasterrecovery.dbrestorestatus",
      "sdk_method": "get",
      "description": "Config-db restore status"
    },
    "deleteLocalDC": {
      "path": "/disasterrecovery/deleteLocalDataCenter",
      "method": "post",
      "sdk_endpoint": "disasterrecovery.deleteLocalDataCenter",
      "sdk_method": "create",
      "description": "Delete local data center"
    },
    "deleteDC": {
      "path": "/disasterrecovery/deleteRemoteDataCenter",
      "method": "post",
      "sdk_endpoint": "disasterrecovery.deleteRemoteDataCenter",
      "sdk_method": "create",
      "description": "Delete data center"
    },
    "getDetails": {
      "path": "/disasterrecovery/details",
      "method": "get",
      "sdk_endpoint": "disasterrecovery.details",
      "sdk_method": "get",
      "description": "Get disaster recovery details"
    },
    "getDisasterRecoveryStatus": {
      "path": "/disasterrecovery/drstatus",
      "method": "get",
      "sdk_endpoint": "disasterrecovery.drstatus",
      "sdk_method": "get",
      "description": "Disaster recovery status"
    },
    "getHistory": {
      "path": "/disasterrecovery/history",
      "method": "get",
      "sdk_endpoint": "disasterrecovery.history",
      "sdk_method": "get",
      "description": "Get disaster recovery switchover history"
    },
    "getLocalHistory": {
      "path": "/disasterrecovery/localLatestHistory",
      "method": "get",
      "sdk_endpoint": "disasterrecovery.localLatestHistory",
      "sdk_method": "get",
      "description": "Get disaster recovery local switchover history"
    },
    "getLocalDataCenterState": {
      "path": "/disasterrecovery/localdc",
      "method": "get",
      "sdk_endpoint": "disasterrecovery.localdc",
      "sdk_method": "get",
      "description": "Get local data center details"
    },
    "update": {
      "path": "/disasterrecovery/password",
      "method": "post",
      "sdk_endpoint": "disasterrecovery.password",
      "sdk_method": "create",
      "description": "Update data centers and vBonds passwords for disaster recovery"
    },
    "pauseDR": {
      "path": "/disasterrecovery/pause",
      "method": "post",
      "sdk_endpoint": "disasterrecovery.pause",
      "sdk_method": "create",
      "description": "Pause DR"
    },
    "pauseLocalArbitrator": {
      "path": "/disasterrecovery/pauseLocalArbitrator",
      "method": "post",
      "sdk_endpoint": "disasterrecovery.pauseLocalArbitrator",
      "sdk_method": "create",
      "description": "Pause DR for Local Arbitrator"
    },
    "pauseLocalDCForDR": {
      "path": "/disasterrecovery/pauseLocalDC",
      "method": "post",
      "sdk_endpoint": "disasterrecovery.pauseLocalDC",
      "sdk_method": "create",
      "description": "Pause DR for Local datacenter"
    },
    "pauseLocalDCReplication": {
      "path": "/disasterrecovery/pauseLocalReplication",
      "method": "post",
      "sdk_endpoint": "disasterrecovery.pauseLocalReplication",
      "sdk_method": "create",
      "description": "Pause DR replication for Local datacenter"
    },
    "disasterRecoveryPauseReplication": {
      "path": "/disasterrecovery/pausereplication",
      "method": "post",
      "sdk_endpoint": "disasterrecovery.pausereplication",
      "sdk_method": "create",
      "description": "Pause DR data replication"
    },
    "update_1": {
      "path": "/disasterrecovery/register",
      "method": "put",
      "sdk_endpoint": "disasterrecovery.register",
      "sdk_method": "update",
      "description": "Update data centers for disaster recovery"
    },
    "register": {
      "path": "/disasterrecovery/register",
      "method": "post",
      "sdk_endpoint": "disasterrecovery.register",
      "sdk_method": "create",
      "description": "Register data centers for disaster recovery"
    },
    "getRemoteDCMembersState": {
      "path": "/disasterrecovery/remoteDcState",
      "method": "get",
      "sdk_endpoint": "disasterrecovery.remoteDcState",
      "sdk_method": "get",
      "description": "Gets remote data center member state"
    },
    "getRemoteDataCenterState": {
      "path": "/disasterrecovery/remotedc",
      "method": "get",
      "sdk_endpoint": "disasterrecovery.remotedc",
      "sdk_method": "get",
      "description": "Get remote data center details"
    },
    "getRemoteDataCenterVersion": {
      "path": "/disasterrecovery/remotedc/swversion",
      "method": "get",
      "sdk_endpoint": "disasterrecovery.remotedc",
      "sdk_method": "get",
      "description": "Get remote data center vManage version"
    },
    "getDisasterRecoveryLocalReplicationSchedule": {
      "path": "/disasterrecovery/schedule",
      "method": "get",
      "sdk_endpoint": "disasterrecovery.schedule",
      "sdk_method": "get",
      "description": "Get disaster recovery local replication schedule"
    },
    "getdrStatus": {
      "path": "/disasterrecovery/status",
      "method": "get",
      "sdk_endpoint": "disasterrecovery.status",
      "sdk_method": "get",
      "description": "Get disaster recovery status"
    },
    "unpauseDR": {
      "path": "/disasterrecovery/unpause",
      "method": "post",
      "sdk_endpoint": "disasterrecovery.unpause",
      "sdk_method": "create",
      "description": "Unpause DR"
    },
    "unpauseLocalArbitrator": {
      "path": "/disasterrecovery/unpauseLocalArbitrator",
      "method": "post",
      "sdk_endpoint": "disasterrecovery.unpauseLocalArbitrator",
      "sdk_method": "create",
      "description": "Unpause DR for Local Arbitrator"
    },
    "unpauseLocalDCForDR": {
      "path": "/disasterrecovery/unpauseLocalDC",
      "method": "post",
      "sdk_endpoint": "disasterrecovery.unpauseLocalDC",
      "sdk_method": "create",
      "description": "Unpause DR for Local datacenter"
    },
    "unpauseLocalDCReplication": {
      "path": "/disasterrecovery/unpauseLocalReplication",
      "method": "post",
      "sdk_endpoint": "disasterrecovery.unpauseLocalReplication",
      "sdk_method": "create",
      "description": "Unpause DR replication for local datacenter"
    },
    "disasterRecoveryUnPauseReplication": {
      "path": "/disasterrecovery/unpausereplication",
      "method": "post",
      "sdk_endpoint": "disasterrecovery.unpausereplication",
      "sdk_method": "create",
      "description": "Un-Pause DR data replication"
    },
    "updateDrState": {
      "path": "/disasterrecovery/updateDRConfigOnArbitrator",
      "method": "post",
      "sdk_endpoint": "disasterrecovery.updateDRConfigOnArbitrator",
      "sdk_method": "create",
      "description": "Update arbitrator with primary and secondary states cluster"
    },
    "listEntityOwnershipInfo": {
      "path": "/entityownership/list",
      "method": "get",
      "sdk_endpoint": "entityownership.list",
      "sdk_method": "get",
      "description": "List all entity ownership info"
    },
    "entityOwnershipInfo": {
      "path": "/entityownership/tree",
      "method": "get",
      "sdk_endpoint": "entityownership.tree",
      "sdk_method": "get",
      "description": "Entity ownership info grouped by buckets"
    },
    "getEvents": {
      "path": "/event",
      "method": "get",
      "sdk_endpoint": "event",
      "sdk_method": "get",
      "description": "Get events for given query. If query is empty then last 30 mins data will be returned."
    },
    "postEvents": {
      "path": "/event",
      "method": "post",
      "sdk_endpoint": "event",
      "sdk_method": "create",
      "description": "Get events for given query."
    },
    "getAggregationData_1": {
      "path": "/event/aggregation",
      "method": "get",
      "sdk_endpoint": "event.aggregation",
      "sdk_method": "get",
      "description": "Get aggregated count of events based on given query."
    },
    "postAggregationData_1": {
      "path": "/event/aggregation",
      "method": "post",
      "sdk_endpoint": "event.aggregation",
      "sdk_method": "create",
      "description": "Get aggregated count of events based on given query."
    },
    "getByUuids": {
      "path": "/event/byuuids",
      "method": "post",
      "sdk_endpoint": "event.byuuids",
      "sdk_method": "create",
      "description": "Get Events for given uuids"
    },
    "getComponentsAsKeyValue": {
      "path": "/event/component/keyvalue",
      "method": "get",
      "sdk_endpoint": "event.component",
      "sdk_method": "get",
      "description": "Get event component types."
    },
    "getDocCount_2": {
      "path": "/event/doccount",
      "method": "get",
      "sdk_endpoint": "event.doccount",
      "sdk_method": "get",
      "description": "Get the count of events as per the query passed."
    },
    "postDocCount_1": {
      "path": "/event/doccount",
      "method": "post",
      "sdk_endpoint": "event.doccount",
      "sdk_method": "create",
      "description": "Get the count of events as per the query passed."
    },
    "enableEventsFromFile": {
      "path": "/event/enable/fileprocess",
      "method": "get",
      "sdk_endpoint": "event.enable",
      "sdk_method": "get",
      "description": "Enable events from file."
    },
    "getEventNamesByComponent": {
      "path": "/event/getEventsByComponent",
      "method": "get",
      "sdk_endpoint": "event.getEventsByComponent",
      "sdk_method": "get",
      "description": "Get event names by component."
    },
    "getListenersInfo": {
      "path": "/event/listeners",
      "method": "get",
      "sdk_endpoint": "event.listeners",
      "sdk_method": "get",
      "description": "Retrieve listener information"
    },
    "getPage_1": {
      "path": "/event/page",
      "method": "get",
      "sdk_endpoint": "event.page",
      "sdk_method": "get",
      "description": "Get paginated events"
    },
    "postPage_1": {
      "path": "/event/page",
      "method": "post",
      "sdk_endpoint": "event.page",
      "sdk_method": "create",
      "description": "Get paginated events"
    },
    "getQueryFields": {
      "path": "/event/query/fields",
      "method": "get",
      "sdk_endpoint": "event.query",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "createEventsQueryConfig": {
      "path": "/event/query/input",
      "method": "get",
      "sdk_endpoint": "event.query",
      "sdk_method": "get",
      "description": "Get event field details"
    },
    "getBySeverities": {
      "path": "/event/severity",
      "method": "get",
      "sdk_endpoint": "event.severity",
      "sdk_method": "get",
      "description": "Get alarms by severity"
    },
    "getSeverityHistogram": {
      "path": "/event/severity/summary",
      "method": "get",
      "sdk_endpoint": "event.severity",
      "sdk_method": "get",
      "description": "Get event severity histogram"
    },
    "getEventTypesAsKeyValue": {
      "path": "/event/types/keyvalue",
      "method": "get",
      "sdk_endpoint": "event.types",
      "sdk_method": "get",
      "description": "Get event types."
    },
    "getDeviceCertificate": {
      "path": "/featurecertificate/certificate",
      "method": "get",
      "sdk_endpoint": "featurecertificate.certificate",
      "sdk_method": "get",
      "description": "Get feature cert from cEdge device<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view."
    },
    "installFeatureCertificate": {
      "path": "/featurecertificate/certificate",
      "method": "put",
      "sdk_endpoint": "featurecertificate.certificate",
      "sdk_method": "update",
      "description": "Upload feature cert for cEdge device<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view."
    },
    "getDeviceCsr": {
      "path": "/featurecertificate/devicecsr",
      "method": "get",
      "sdk_endpoint": "featurecertificate.devicecsr",
      "sdk_method": "get",
      "description": "Get CSR from cEdge device<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view."
    },
    "genDeviceCsr": {
      "path": "/featurecertificate/devicecsr",
      "method": "put",
      "sdk_endpoint": "featurecertificate.devicecsr",
      "sdk_method": "update",
      "description": "Create CSR for cEdge device<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view."
    },
    "revokeFeatureCertificate": {
      "path": "/featurecertificate/revoke",
      "method": "put",
      "sdk_endpoint": "featurecertificate.revoke",
      "sdk_method": "update",
      "description": "Revoke feature cert from cEdge device<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view."
    },
    "getFeatureCaState": {
      "path": "/featurecertificate/syslogconfig",
      "method": "get",
      "sdk_endpoint": "featurecertificate.syslogconfig",
      "sdk_method": "get",
      "description": "Get Feature CA state<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider and Provider-As-Tenant view."
    },
    "requesDNSSecActions": {
      "path": "/fedramp/dnssec/actions",
      "method": "get",
      "sdk_endpoint": "fedramp.dnssec",
      "sdk_method": "get",
      "description": "Request DNS-Sec actions"
    },
    "configureDNSSec": {
      "path": "/fedramp/dnssec/config",
      "method": "post",
      "sdk_endpoint": "fedramp.dnssec",
      "sdk_method": "create",
      "description": "Configure DNS-Sec"
    },
    "getDNSSecStatus": {
      "path": "/fedramp/dnssec/status",
      "method": "get",
      "sdk_endpoint": "fedramp.dnssec",
      "sdk_method": "get",
      "description": "Get DNS-Sec status"
    },
    "configFedrampMode": {
      "path": "/fedramp/status",
      "method": "post",
      "sdk_endpoint": "fedramp.status",
      "sdk_method": "create",
      "description": "Set network deployment mode"
    },
    "requestWazuhActions": {
      "path": "/fedramp/wazuh/actions",
      "method": "get",
      "sdk_endpoint": "fedramp.wazuh",
      "sdk_method": "get",
      "description": "Wazuh agent action"
    },
    "configureWazuhClient": {
      "path": "/fedramp/wazuh/config",
      "method": "post",
      "sdk_endpoint": "fedramp.wazuh",
      "sdk_method": "create",
      "description": "Configure Wazuh agent"
    },
    "getWazuhAgentStatus": {
      "path": "/fedramp/wazuh/status",
      "method": "get",
      "sdk_endpoint": "fedramp.wazuh",
      "sdk_method": "get",
      "description": "Get Wazuh agent status"
    },
    "listDeviceGroupList": {
      "path": "/group",
      "method": "get",
      "sdk_endpoint": "group",
      "sdk_method": "get",
      "description": "Retrieve device group list"
    },
    "listDeviceGroups": {
      "path": "/group/device",
      "method": "get",
      "sdk_endpoint": "group.device",
      "sdk_method": "get",
      "description": "Retrieve device groups"
    },
    "listGroupDevices": {
      "path": "/group/devices",
      "method": "get",
      "sdk_endpoint": "group.devices",
      "sdk_method": "get",
      "description": "Retrieve devices in group"
    },
    "listGroupDevicesForMap": {
      "path": "/group/map/devices",
      "method": "get",
      "sdk_endpoint": "group.map",
      "sdk_method": "get",
      "description": "Retrieve group devices for map"
    },
    "listGroupLinksForMap": {
      "path": "/group/map/devices/links",
      "method": "get",
      "sdk_endpoint": "group.map",
      "sdk_method": "get",
      "description": "Retrieve devices in group for map"
    },
    "getDevicesHealth": {
      "path": "/health/devices",
      "method": "get",
      "sdk_endpoint": "health.devices",
      "sdk_method": "get",
      "description": "get the devices health properties"
    },
    "getDevicesHealthOverview": {
      "path": "/health/devices/overview",
      "method": "get",
      "sdk_endpoint": "health.devices",
      "sdk_method": "get",
      "description": "gets devices health overview"
    },
    "fetchDeviceDetails": {
      "path": "/hsec/devices",
      "method": "get",
      "sdk_endpoint": "hsec.devices",
      "sdk_method": "get",
      "description": "Retrieve list of devices which are valid for fetch of HSEC license"
    },
    "InstallDeviceDetails": {
      "path": "/hsec/devices/install",
      "method": "get",
      "sdk_endpoint": "hsec.devices",
      "sdk_method": "get",
      "description": "Retrieve list of devices which has HSEC fetched"
    },
    "downloadSlacRequestFile": {
      "path": "/hsec/download",
      "method": "post",
      "sdk_endpoint": "hsec.download",
      "sdk_method": "create",
      "description": "Download SLAC Request file for CSSM"
    },
    "fetchSAVAAccounts": {
      "path": "/hsec/fetchaccounts",
      "method": "get",
      "sdk_endpoint": "hsec.fetchaccounts",
      "sdk_method": "get",
      "description": "Authenticate User and Sync Licenses"
    },
    "fetchAccounts_1": {
      "path": "/hsec/fetchaccounts",
      "method": "post",
      "sdk_endpoint": "hsec.fetchaccounts",
      "sdk_method": "create",
      "description": "Authenticate User and Sync Licenses"
    },
    "testbedMode": {
      "path": "/hsec/testbedMode",
      "method": "get",
      "sdk_endpoint": "hsec.testbedMode",
      "sdk_method": "get",
      "description": "Return testbed mode information staging or production"
    },
    "connect_1": {
      "path": "/ise/connect",
      "method": "get",
      "sdk_endpoint": "ise.connect",
      "sdk_method": "get",
      "description": "Check if the configured ISE server is reachable"
    },
    "getIseServerCredentials": {
      "path": "/ise/credentials",
      "method": "get",
      "sdk_endpoint": "ise.credentials",
      "sdk_method": "get",
      "description": "Get Ise server credentials"
    },
    "updateIseServerCredentials": {
      "path": "/ise/credentials",
      "method": "put",
      "sdk_endpoint": "ise.credentials",
      "sdk_method": "update",
      "description": "update Ise server credentials"
    },
    "addIseServerCredentials": {
      "path": "/ise/credentials",
      "method": "post",
      "sdk_endpoint": "ise.credentials",
      "sdk_method": "create",
      "description": "Add Ise server credentials"
    },
    "deleteIseAndPxGridAccount": {
      "path": "/ise/credentials/iseandpxgrid",
      "method": "delete",
      "sdk_endpoint": "ise.credentials",
      "sdk_method": "delete",
      "description": "Delete PxGrid and Ise information on vManage. Also Deletes PxGrid Client on ISE"
    },
    "getPxGridAccount": {
      "path": "/ise/credentials/pxgrid",
      "method": "get",
      "sdk_endpoint": "ise.credentials",
      "sdk_method": "get",
      "description": "Get PxGrid account"
    },
    "deletePxGrid": {
      "path": "/ise/credentials/pxgrid",
      "method": "delete",
      "sdk_endpoint": "ise.credentials",
      "sdk_method": "delete",
      "description": "Delete PxGrid account information"
    },
    "getPxgridCert": {
      "path": "/ise/credentials/pxgrid/cert",
      "method": "get",
      "sdk_endpoint": "ise.credentials",
      "sdk_method": "get",
      "description": "Retrieves Pxgrid Certificate"
    },
    "syncVsmart": {
      "path": "/ise/credentials/vsmart/sync",
      "method": "post",
      "sdk_endpoint": "ise.credentials",
      "sdk_method": "create",
      "description": "Send pxGrid and ISE server configuration to vSmarts"
    },
    "accountActivate": {
      "path": "/ise/pxgrid/activate",
      "method": "post",
      "sdk_endpoint": "ise.pxgrid",
      "sdk_method": "create",
      "description": "Activate pxGrid account"
    },
    "approve": {
      "path": "/ise/pxgrid/approve",
      "method": "put",
      "sdk_endpoint": "ise.pxgrid",
      "sdk_method": "update",
      "description": "Approve pxGrid account"
    },
    "accountCreate": {
      "path": "/ise/pxgrid/create",
      "method": "post",
      "sdk_endpoint": "ise.pxgrid",
      "sdk_method": "create",
      "description": "Create pxGrid account"
    },
    "getSupportedLocales": {
      "path": "/localization/supportedLocales",
      "method": "get",
      "sdk_endpoint": "localization.supportedLocales",
      "sdk_method": "get",
      "description": "Get Supported locales"
    },
    "getCategory": {
      "path": "/management/category",
      "method": "get",
      "sdk_endpoint": "management.category",
      "sdk_method": "get",
      "description": "Get vManage resource category"
    },
    "getvManageResourceUtilization": {
      "path": "/management/vManageResourceUtilization",
      "method": "get",
      "sdk_endpoint": "management.vManageResourceUtilization",
      "sdk_method": "get",
      "description": "Get vManage resource utilization"
    },
    "retrieveMDPAttachedDevices": {
      "path": "/mdp/attachDevices/{nmsId}",
      "method": "get",
      "sdk_endpoint": "mdp.attachDevices",
      "sdk_method": "get",
      "description": "Retrieve MDP attached devices"
    },
    "editAttachedDevices": {
      "path": "/mdp/attachDevices/{nmsId}",
      "method": "put",
      "sdk_endpoint": "mdp.attachDevices",
      "sdk_method": "update",
      "description": "Edit attached devices"
    },
    "attachDevices": {
      "path": "/mdp/attachDevices/{nmsId}",
      "method": "post",
      "sdk_endpoint": "mdp.attachDevices",
      "sdk_method": "create",
      "description": "Share devices with MDP"
    },
    "detachDevices": {
      "path": "/mdp/detachDevices/{nmsId}",
      "method": "post",
      "sdk_endpoint": "mdp.detachDevices",
      "sdk_method": "create",
      "description": "Disconnect devices from mpd controller"
    },
    "retrieveMDPSupportedDevices": {
      "path": "/mdp/devices/{nmsId}",
      "method": "get",
      "sdk_endpoint": "mdp.devices",
      "sdk_method": "get",
      "description": "Retrieve MDP supported devices"
    },
    "disconnectFromMDP": {
      "path": "/mdp/disconnect/{nmsId}",
      "method": "get",
      "sdk_endpoint": "mdp.disconnect",
      "sdk_method": "get",
      "description": "disconnect from mpd controller"
    },
    "onboardMDP": {
      "path": "/mdp/onboard",
      "method": "post",
      "sdk_endpoint": "mdp.onboard",
      "sdk_method": "create",
      "description": "Start MDP onboarding operation"
    },
    "getMDPOnboardingStatus": {
      "path": "/mdp/onboard/status",
      "method": "get",
      "sdk_endpoint": "mdp.onboard",
      "sdk_method": "get",
      "description": "Get MDP onboarding status"
    },
    "updateOnboardingPayload": {
      "path": "/mdp/onboard/{nmsId}",
      "method": "put",
      "sdk_endpoint": "mdp.onboard",
      "sdk_method": "update",
      "description": "update MDP onboarding document"
    },
    "offboard": {
      "path": "/mdp/onboard/{nmsId}",
      "method": "delete",
      "sdk_endpoint": "mdp.onboard",
      "sdk_method": "delete",
      "description": "offboard the mdp application"
    },
    "addInternalPolicy": {
      "path": "/mdp/policies/mdpconfig",
      "method": "put",
      "sdk_endpoint": "mdp.policies",
      "sdk_method": "update",
      "description": "Add internal policy from vmanage"
    },
    "retrieveMDPConfigObject": {
      "path": "/mdp/policies/mdpconfig/{deviceId}",
      "method": "get",
      "sdk_endpoint": "mdp.policies",
      "sdk_method": "get",
      "description": "Retrieve MDP ConfigObject"
    },
    "retrieveMDPPolicies": {
      "path": "/mdp/policies/{nmsId}",
      "method": "get",
      "sdk_endpoint": "mdp.policies",
      "sdk_method": "get",
      "description": "Retrieve MDP policies"
    },
    "updatePolicyStatus": {
      "path": "/mdp/policies/{nmsId}",
      "method": "put",
      "sdk_endpoint": "mdp.policies",
      "sdk_method": "update",
      "description": "update policy status"
    },
    "createDeviceVmanageConnectionList": {
      "path": "/messaging/device/vmanage",
      "method": "get",
      "sdk_endpoint": "messaging.device",
      "sdk_method": "get",
      "description": "Create device vManage connection list"
    },
    "getCloudConnectorDomainAppRules": {
      "path": "/monitor/sdavccloudconnector/domain",
      "method": "get",
      "sdk_endpoint": "monitor.sdavccloudconnector",
      "sdk_method": "get",
      "description": "Get SD AVC App Rules based on Domain for O365"
    },
    "getCloudConnectorIpAddressAppRules": {
      "path": "/monitor/sdavccloudconnector/ipaddress",
      "method": "get",
      "sdk_endpoint": "monitor.sdavccloudconnector",
      "sdk_method": "get",
      "description": "Get SD AVC App Rules based on IP Address for O365"
    },
    "getWebexAppData": {
      "path": "/monitor/sdavccloudconnector/webex",
      "method": "get",
      "sdk_endpoint": "monitor.sdavccloudconnector",
      "sdk_method": "get",
      "description": "Get SD AVC App Rules for Webex"
    },
    "assignMslaLicensesToDevices": {
      "path": "/msla/assignLicenses",
      "method": "post",
      "sdk_endpoint": "msla.assignLicenses",
      "sdk_method": "create",
      "description": "Assign msla licenses to devices"
    },
    "getMSLADevices_1": {
      "path": "/msla/devices",
      "method": "get",
      "sdk_endpoint": "msla.devices",
      "sdk_method": "get",
      "description": "Retrieve list of devices and their subscription information"
    },
    "releaseLicenses_1": {
      "path": "/msla/devices",
      "method": "put",
      "sdk_endpoint": "msla.devices",
      "sdk_method": "update",
      "description": "Release licenses assigned to the devices"
    },
    "getLicenseByUuid_1": {
      "path": "/msla/devices/{uuid}",
      "method": "get",
      "sdk_endpoint": "msla.devices",
      "sdk_method": "get",
      "description": "Get licenses associated to device"
    },
    "getMslaLicenses": {
      "path": "/msla/licenses",
      "method": "get",
      "sdk_endpoint": "msla.licenses",
      "sdk_method": "get",
      "description": "Get all the licenses"
    },
    "getLicensesCompliance": {
      "path": "/msla/licenses/compliance",
      "method": "get",
      "sdk_endpoint": "msla.licenses",
      "sdk_method": "get",
      "description": "Retrieve list of devices and their subscription information"
    },
    "syncLicenses_1": {
      "path": "/msla/licenses/sync",
      "method": "post",
      "sdk_endpoint": "msla.licenses",
      "sdk_method": "create",
      "description": "Retrieve MSLA subscription/licenses"
    },
    "getDeviceDetailsForDashboard": {
      "path": "/msla/monitoring/licensedDeviceCount",
      "method": "get",
      "sdk_endpoint": "msla.monitoring",
      "sdk_method": "get",
      "description": "Get licenses associated to device"
    },
    "getLicenseDistributionDetails": {
      "path": "/msla/monitoring/licensedDistributionDetails",
      "method": "get",
      "sdk_endpoint": "msla.monitoring",
      "sdk_method": "get",
      "description": "Get all license distribution"
    },
    "getPackagingDistributionDetails": {
      "path": "/msla/monitoring/packagingDistributionDetails",
      "method": "get",
      "sdk_endpoint": "msla.monitoring",
      "sdk_method": "get",
      "description": "Get all license distribution"
    },
    "getAllTemplate": {
      "path": "/msla/template",
      "method": "get",
      "sdk_endpoint": "msla.template",
      "sdk_method": "get",
      "description": "Retrieve all MSLA template"
    },
    "getSubscriptions_1": {
      "path": "/msla/template/licenses",
      "method": "post",
      "sdk_endpoint": "msla.template",
      "sdk_method": "create",
      "description": "Retrieve MSLA subscription/licenses"
    },
    "getSubscriptions": {
      "path": "/msla/va/License",
      "method": "get",
      "sdk_endpoint": "msla.va",
      "sdk_method": "get",
      "description": "Retrieve MSLA subscription/licenses"
    },
    "getAllCloudAccounts": {
      "path": "/multicloud/accounts",
      "method": "get",
      "sdk_endpoint": "multicloud.accounts",
      "sdk_method": "get",
      "description": "Obtain all accounts for all clouds"
    },
    "validateAccountAdd": {
      "path": "/multicloud/accounts",
      "method": "post",
      "sdk_endpoint": "multicloud.accounts",
      "sdk_method": "create",
      "description": "Add Cloud Account"
    },
    "getEdgeAccounts": {
      "path": "/multicloud/accounts/edge",
      "method": "get",
      "sdk_endpoint": "multicloud.accounts",
      "sdk_method": "get",
      "description": "Get all Multicloud edge accounts"
    },
    "validateEdgeAccountAdd": {
      "path": "/multicloud/accounts/edge",
      "method": "post",
      "sdk_endpoint": "multicloud.accounts",
      "sdk_method": "create",
      "description": "Authenticate edge account credentials"
    },
    "getEdgeAccountDetails": {
      "path": "/multicloud/accounts/edge/{accountId}",
      "method": "get",
      "sdk_endpoint": "multicloud.accounts",
      "sdk_method": "get",
      "description": "Get edge account by account Id"
    },
    "updateEdgeAccount": {
      "path": "/multicloud/accounts/edge/{accountId}",
      "method": "put",
      "sdk_endpoint": "multicloud.accounts",
      "sdk_method": "update",
      "description": "Update Multicloud edge account"
    },
    "deleteEdgeAccount": {
      "path": "/multicloud/accounts/edge/{accountId}",
      "method": "delete",
      "sdk_endpoint": "multicloud.accounts",
      "sdk_method": "delete",
      "description": "Delete edge account"
    },
    "validateEdgeAccountUpdateCredentials": {
      "path": "/multicloud/accounts/edge/{accountId}/credentials",
      "method": "put",
      "sdk_endpoint": "multicloud.accounts",
      "sdk_method": "update",
      "description": "Update Multicloud edge account credential"
    },
    "getCloudAccountDetails": {
      "path": "/multicloud/accounts/{accountId}",
      "method": "get",
      "sdk_endpoint": "multicloud.accounts",
      "sdk_method": "get",
      "description": "Obtain all accounts for all clouds"
    },
    "updateAccount": {
      "path": "/multicloud/accounts/{accountId}",
      "method": "put",
      "sdk_endpoint": "multicloud.accounts",
      "sdk_method": "update",
      "description": "Obtain all accounts for all clouds"
    },
    "deleteAccount": {
      "path": "/multicloud/accounts/{accountId}",
      "method": "delete",
      "sdk_endpoint": "multicloud.accounts",
      "sdk_method": "delete",
      "description": "Obtain all accounts for all clouds"
    },
    "validateAccountUpdateCredentials": {
      "path": "/multicloud/accounts/{accountId}/credentials",
      "method": "put",
      "sdk_endpoint": "multicloud.accounts",
      "sdk_method": "update",
      "description": "Update Cloud Account Credentials"
    },
    "auditDryRun": {
      "path": "/multicloud/audit",
      "method": "get",
      "sdk_endpoint": "multicloud.audit",
      "sdk_method": "get",
      "description": "Call an audit with dry run"
    },
    "audit": {
      "path": "/multicloud/audit",
      "method": "post",
      "sdk_endpoint": "multicloud.audit",
      "sdk_method": "create",
      "description": "Call an audit"
    },
    "getEdgeBillingAccounts": {
      "path": "/multicloud/billingaccounts/edge/{edgeType}/{edgeAccountId}",
      "method": "get",
      "sdk_endpoint": "multicloud.billingaccounts",
      "sdk_method": "get",
      "description": "Get Edge Billing Accounts"
    },
    "getCloudRoutersAndAttachments": {
      "path": "/multicloud/cloudRoutersAndAttachments",
      "method": "get",
      "sdk_endpoint": "multicloud.cloudRoutersAndAttachments",
      "sdk_method": "get",
      "description": "Get all Cloud Routers and their Attachments"
    },
    "getCgws": {
      "path": "/multicloud/cloudgateway",
      "method": "get",
      "sdk_endpoint": "multicloud.cloudgateway",
      "sdk_method": "get",
      "description": "Get cloud gateways"
    },
    "createCgw": {
      "path": "/multicloud/cloudgateway",
      "method": "post",
      "sdk_endpoint": "multicloud.cloudgateway",
      "sdk_method": "create",
      "description": "Create cloud gateway"
    },
    "createCloudGatewayConfigGroup": {
      "path": "/multicloud/cloudgateway/config-group",
      "method": "post",
      "sdk_endpoint": "multicloud.cloudgateway",
      "sdk_method": "create",
      "description": "Initiate config group creation"
    },
    "getNvaSecurityRules": {
      "path": "/multicloud/cloudgateway/nvaSecurityRules/{cloudGatewayName}",
      "method": "get",
      "sdk_endpoint": "multicloud.cloudgateway",
      "sdk_method": "get",
      "description": "Get NVA Security Rules"
    },
    "updateNvaSecurityRules": {
      "path": "/multicloud/cloudgateway/nvaSecurityRules/{cloudGatewayName}",
      "method": "put",
      "sdk_endpoint": "multicloud.cloudgateway",
      "sdk_method": "update",
      "description": "Update NVA Security Rules"
    },
    "getAzureNetworkVirtualAppliances": {
      "path": "/multicloud/cloudgateway/nvas",
      "method": "get",
      "sdk_endpoint": "multicloud.cloudgateway",
      "sdk_method": "get",
      "description": "Discover Azure Network Virtual Appliances"
    },
    "getAzureNvaSkuResources": {
      "path": "/multicloud/cloudgateway/nvasku",
      "method": "get",
      "sdk_endpoint": "multicloud.cloudgateway",
      "sdk_method": "get",
      "description": "Get Azure NVA SKUs"
    },
    "getCgwOrgResources": {
      "path": "/multicloud/cloudgateway/resource",
      "method": "get",
      "sdk_endpoint": "multicloud.cloudgateway",
      "sdk_method": "get",
      "description": "Discover Resource of CGW"
    },
    "getAzureResourceGroups": {
      "path": "/multicloud/cloudgateway/resourceGroups",
      "method": "get",
      "sdk_endpoint": "multicloud.cloudgateway",
      "sdk_method": "get",
      "description": "Discover Azure Resource Groups"
    },
    "getAzureVirtualHubs": {
      "path": "/multicloud/cloudgateway/vhubs",
      "method": "get",
      "sdk_endpoint": "multicloud.cloudgateway",
      "sdk_method": "get",
      "description": "Discover Azure Virtual HUBs"
    },
    "getAzureVirtualVnetsAttached": {
      "path": "/multicloud/cloudgateway/vnetsNoofAttached",
      "method": "get",
      "sdk_endpoint": "multicloud.cloudgateway",
      "sdk_method": "get",
      "description": "Discover Azure Virtual HUBs"
    },
    "getAzureVpnGateways": {
      "path": "/multicloud/cloudgateway/vpn-gateways",
      "method": "get",
      "sdk_endpoint": "multicloud.cloudgateway",
      "sdk_method": "get",
      "description": "Discover Azure Vpn Gateways"
    },
    "getAzureVirtualWans": {
      "path": "/multicloud/cloudgateway/vwans",
      "method": "get",
      "sdk_endpoint": "multicloud.cloudgateway",
      "sdk_method": "get",
      "description": "Discover Azure Virtual WANS"
    },
    "getCgwDetails": {
      "path": "/multicloud/cloudgateway/{cloudGatewayName}",
      "method": "get",
      "sdk_endpoint": "multicloud.cloudgateway",
      "sdk_method": "get",
      "description": "Get cloud gateway by name"
    },
    "updateCgw": {
      "path": "/multicloud/cloudgateway/{cloudGatewayName}",
      "method": "put",
      "sdk_endpoint": "multicloud.cloudgateway",
      "sdk_method": "update",
      "description": "Update cloud gateway"
    },
    "deleteCgw": {
      "path": "/multicloud/cloudgateway/{cloudGatewayName}",
      "method": "delete",
      "sdk_endpoint": "multicloud.cloudgateway",
      "sdk_method": "delete",
      "description": "Delete cloud gateway"
    },
    "getCgwAttachedSites": {
      "path": "/multicloud/cloudgateway/{cloudGatewayName}/site",
      "method": "get",
      "sdk_endpoint": "multicloud.cloudgateway",
      "sdk_method": "get",
      "description": "Get sites attached to CGW"
    },
    "tunnelScaling": {
      "path": "/multicloud/cloudgateway/{cloudGatewayName}/site",
      "method": "put",
      "sdk_endpoint": "multicloud.cloudgateway",
      "sdk_method": "update",
      "description": "Update tunnel scaling and accelerated vpn parameter for a branch endpoint"
    },
    "attachSites": {
      "path": "/multicloud/cloudgateway/{cloudGatewayName}/site",
      "method": "post",
      "sdk_endpoint": "multicloud.cloudgateway",
      "sdk_method": "create",
      "description": "Attach sites to Cloud Gateway"
    },
    "detachSites_1": {
      "path": "/multicloud/cloudgateway/{cloudGatewayName}/site",
      "method": "delete",
      "sdk_endpoint": "multicloud.cloudgateway",
      "sdk_method": "delete",
      "description": "Detach sites from cloud gateway"
    },
    "getAvailableDevicesOrByCGId": {
      "path": "/multicloud/cloudgateway/{cloudType}/gateways/device-chassis-numbers",
      "method": "get",
      "sdk_endpoint": "multicloud.cloudgateway",
      "sdk_method": "get",
      "description": "Get devices for Cloud-Gateway or Config Group."
    },
    "getCloudGateways": {
      "path": "/multicloud/cloudgateways/{cloudType}",
      "method": "get",
      "sdk_endpoint": "multicloud.cloudgateways",
      "sdk_method": "get",
      "description": "Get sites with connectivity to the cloud by cloud type"
    },
    "getCgwCustomSettingDetails": {
      "path": "/multicloud/cloudgatewaysetting/{cloudGatewayName}",
      "method": "get",
      "sdk_endpoint": "multicloud.cloudgatewaysetting",
      "sdk_method": "get",
      "description": "Get cloud gateway custom setting by cloud gateway name"
    },
    "getCgwTypes": {
      "path": "/multicloud/cloudgatewaytype",
      "method": "get",
      "sdk_endpoint": "multicloud.cloudgatewaytype",
      "sdk_method": "get",
      "description": "Get cloud gateway types for specified cloudType"
    },
    "getCloudConnectedSites_1": {
      "path": "/multicloud/connected-sites/edge/{edgeType}",
      "method": "get",
      "sdk_endpoint": "multicloud.connected_sites",
      "sdk_method": "get",
      "description": "Get sites with connectivity to the interconnect gateways by edge type"
    },
    "getCloudConnectedSites": {
      "path": "/multicloud/connected-sites/{cloudType}",
      "method": "get",
      "sdk_endpoint": "multicloud.connected_sites",
      "sdk_method": "get",
      "description": "Get sites with connectivity to the cloud by cloud type"
    },
    "getEdgeConnectivityDetails": {
      "path": "/multicloud/connectivity/edge",
      "method": "get",
      "sdk_endpoint": "multicloud.connectivity",
      "sdk_method": "get",
      "description": "Get Interconnect Connectivity details"
    },
    "updateEdgeConnectivity": {
      "path": "/multicloud/connectivity/edge",
      "method": "put",
      "sdk_endpoint": "multicloud.connectivity",
      "sdk_method": "update",
      "description": "Update Interconnect connectivity"
    },
    "createEdgeConnectivity": {
      "path": "/multicloud/connectivity/edge",
      "method": "post",
      "sdk_endpoint": "multicloud.connectivity",
      "sdk_method": "create",
      "description": "Create Interconnect connectivity"
    },
    "deleteEdgeConnectivity": {
      "path": "/multicloud/connectivity/edge/{connectionName}",
      "method": "delete",
      "sdk_endpoint": "multicloud.connectivity",
      "sdk_method": "delete",
      "description": "Delete Interconnect connectivity"
    },
    "getEdgeConnectivityDetailByName": {
      "path": "/multicloud/connectivity/edge/{connectivityName}",
      "method": "get",
      "sdk_endpoint": "multicloud.connectivity",
      "sdk_method": "get",
      "description": "Get Interconnect Connectivity by name"
    },
    "getConnectivityGateways": {
      "path": "/multicloud/connectivitygateway",
      "method": "get",
      "sdk_endpoint": "multicloud.connectivitygateway",
      "sdk_method": "get",
      "description": "Get all Connectivity Gateways"
    },
    "createConnectivityGateway": {
      "path": "/multicloud/connectivitygateway",
      "method": "post",
      "sdk_endpoint": "multicloud.connectivitygateway",
      "sdk_method": "create",
      "description": "Create Connectivity gateway"
    },
    "cleanUpAllConnectivityGatewaysInLocalDB": {
      "path": "/multicloud/connectivitygateway",
      "method": "delete",
      "sdk_endpoint": "multicloud.connectivitygateway",
      "sdk_method": "delete",
      "description": "Delete all Connectivity Gateways in local DB"
    },
    "deleteConnectivityGateway": {
      "path": "/multicloud/connectivitygateway/{cloudProvider}/{connectivityGatewayName}",
      "method": "delete",
      "sdk_endpoint": "multicloud.connectivitygateway",
      "sdk_method": "delete",
      "description": "Delete Connectivity Gateway"
    },
    "getConnectivityGatewayCreationOptions": {
      "path": "/multicloud/connectivitygatewaycreationoptions",
      "method": "get",
      "sdk_endpoint": "multicloud.connectivitygatewaycreationoptions",
      "sdk_method": "get",
      "description": "Get connectivity gateway creation options"
    },
    "getCwanCoreNetworkPolicy": {
      "path": "/multicloud/corenetworkpolicy",
      "method": "get",
      "sdk_endpoint": "multicloud.corenetworkpolicy",
      "sdk_method": "get",
      "description": "Get AWS Cloudwan core network policy"
    },
    "getDashboardEdgeInfo": {
      "path": "/multicloud/dashboard/edge",
      "method": "get",
      "sdk_endpoint": "multicloud.dashboard",
      "sdk_method": "get",
      "description": "Get interconnect edge gateway dashboard info"
    },
    "getWanDevices": {
      "path": "/multicloud/device",
      "method": "get",
      "sdk_endpoint": "multicloud.device",
      "sdk_method": "get",
      "description": "Get available WAN edge devices"
    },
    "getDeviceLinks": {
      "path": "/multicloud/devicelink/edge",
      "method": "get",
      "sdk_endpoint": "multicloud.devicelink",
      "sdk_method": "get",
      "description": "Get Device Links"
    },
    "updateDeviceLink": {
      "path": "/multicloud/devicelink/edge",
      "method": "put",
      "sdk_endpoint": "multicloud.devicelink",
      "sdk_method": "update",
      "description": "Update Device Link"
    },
    "createDeviceLink": {
      "path": "/multicloud/devicelink/edge",
      "method": "post",
      "sdk_endpoint": "multicloud.devicelink",
      "sdk_method": "create",
      "description": "Create Device Link"
    },
    "getDlPortSpeed": {
      "path": "/multicloud/devicelink/edge/portspeed/{edgeType}",
      "method": "get",
      "sdk_endpoint": "multicloud.devicelink",
      "sdk_method": "get",
      "description": "Get supported port speed for Device Link"
    },
    "deleteDeviceLink": {
      "path": "/multicloud/devicelink/edge/{deviceLinkName}",
      "method": "delete",
      "sdk_endpoint": "multicloud.devicelink",
      "sdk_method": "delete",
      "description": "Delete Device Link"
    },
    "getDeviceLinkMetroSpeed": {
      "path": "/multicloud/devicelink/metroSpeed/edge",
      "method": "post",
      "sdk_endpoint": "multicloud.devicelink",
      "sdk_method": "create",
      "description": "Get Device Link Metro Speed based on device link config"
    },
    "getCloudDevices_1": {
      "path": "/multicloud/devices/edge/{edgeType}",
      "method": "get",
      "sdk_endpoint": "multicloud.devices",
      "sdk_method": "get",
      "description": "Get cloud devices by cloud type"
    },
    "getCloudDevices": {
      "path": "/multicloud/devices/{cloudType}",
      "method": "get",
      "sdk_endpoint": "multicloud.devices",
      "sdk_method": "get",
      "description": "Get cloud devices by cloud type"
    },
    "getEdgeWanDevices": {
      "path": "/multicloud/edge/{edgeType}/device",
      "method": "get",
      "sdk_endpoint": "multicloud.edge",
      "sdk_method": "get",
      "description": "Get available WAN edge devices"
    },
    "getIcgws": {
      "path": "/multicloud/gateway/edge",
      "method": "get",
      "sdk_endpoint": "multicloud.gateway",
      "sdk_method": "get",
      "description": "Get Interconnect Gateways"
    },
    "createIcgw": {
      "path": "/multicloud/gateway/edge",
      "method": "post",
      "sdk_endpoint": "multicloud.gateway",
      "sdk_method": "create",
      "description": "Create Interconnect Gateway"
    },
    "getIcgwCustomSettingDetails": {
      "path": "/multicloud/gateway/edge/setting/{edgeGatewayName}",
      "method": "get",
      "sdk_endpoint": "multicloud.gateway",
      "sdk_method": "get",
      "description": "Get Interconnect Gateway custom setting by Interconnect Gateway name"
    },
    "getIcgwTypes": {
      "path": "/multicloud/gateway/edge/types",
      "method": "get",
      "sdk_endpoint": "multicloud.gateway",
      "sdk_method": "get",
      "description": "Get Interconnect Gateway type for specified Edge Provider"
    },
    "getIcgwDetails": {
      "path": "/multicloud/gateway/edge/{edgeGatewayName}",
      "method": "get",
      "sdk_endpoint": "multicloud.gateway",
      "sdk_method": "get",
      "description": "Get Interconnect Gateway by name"
    },
    "updateIcgw": {
      "path": "/multicloud/gateway/edge/{edgeGatewayName}",
      "method": "put",
      "sdk_endpoint": "multicloud.gateway",
      "sdk_method": "update",
      "description": "Update Interconnect Gateway"
    },
    "deleteIcgw": {
      "path": "/multicloud/gateway/edge/{edgeGatewayName}",
      "method": "delete",
      "sdk_endpoint": "multicloud.gateway",
      "sdk_method": "delete",
      "description": "Delete Interconnect Gateway"
    },
    "getEdgeGateways": {
      "path": "/multicloud/gateways/edge/{edgeType}",
      "method": "get",
      "sdk_endpoint": "multicloud.gateways",
      "sdk_method": "get",
      "description": "Get sites with connectivity to the interconnect gateways by edge type"
    },
    "getHostVpcs": {
      "path": "/multicloud/hostvpc",
      "method": "get",
      "sdk_endpoint": "multicloud.hostvpc",
      "sdk_method": "get",
      "description": "Get all Host VPCs"
    },
    "getVpcTags": {
      "path": "/multicloud/hostvpc/tags",
      "method": "get",
      "sdk_endpoint": "multicloud.hostvpc",
      "sdk_method": "get",
      "description": "Get VPC Tags"
    },
    "editTag": {
      "path": "/multicloud/hostvpc/tags",
      "method": "put",
      "sdk_endpoint": "multicloud.hostvpc",
      "sdk_method": "update",
      "description": "Edit VPCs for a Tag"
    },
    "hostVpcTagging": {
      "path": "/multicloud/hostvpc/tags",
      "method": "post",
      "sdk_endpoint": "multicloud.hostvpc",
      "sdk_method": "create",
      "description": "Tag a VPC"
    },
    "rebalanceVnets": {
      "path": "/multicloud/hostvpc/tags/rebalanceVnets",
      "method": "post",
      "sdk_endpoint": "multicloud.hostvpc",
      "sdk_method": "create",
      "description": "Tag a VPC"
    },
    "unTag": {
      "path": "/multicloud/hostvpc/tags/{tagName}",
      "method": "delete",
      "sdk_endpoint": "multicloud.hostvpc",
      "sdk_method": "delete",
      "description": "Delete a Tag"
    },
    "getSupportedEdgeImageNames": {
      "path": "/multicloud/imagename/edge",
      "method": "get",
      "sdk_endpoint": "multicloud.imagename",
      "sdk_method": "get",
      "description": "Get Edge provider supported images"
    },
    "getSupportedInstanceSize": {
      "path": "/multicloud/instancesize",
      "method": "get",
      "sdk_endpoint": "multicloud.instancesize",
      "sdk_method": "get",
      "description": "Get Transit VPC supported size"
    },
    "getSupportedEdgeInstanceSize": {
      "path": "/multicloud/instancesize/edge",
      "method": "get",
      "sdk_endpoint": "multicloud.instancesize",
      "sdk_method": "get",
      "description": "Get Edge provider supported size"
    },
    "getInterconnectAccounts": {
      "path": "/multicloud/interconnect/accounts",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get Interconnect provider accounts."
    },
    "addInterconnectAccount": {
      "path": "/multicloud/interconnect/accounts",
      "method": "post",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "create",
      "description": "Add an Interconnect provider account to vManage."
    },
    "getInterconnectAccount": {
      "path": "/multicloud/interconnect/accounts/{interconnect-account-id}",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get associated interconnect-account by id."
    },
    "updateInterconnectAccount": {
      "path": "/multicloud/interconnect/accounts/{interconnect-account-id}",
      "method": "put",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "update",
      "description": "Edit associated Interconnect provider account."
    },
    "deleteInterconnectAccount": {
      "path": "/multicloud/interconnect/accounts/{interconnect-account-id}",
      "method": "delete",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "delete",
      "description": "Delete Interconnect provider account from vManage."
    },
    "updateInterconnectAccountCredentials": {
      "path": "/multicloud/interconnect/accounts/{interconnect-account-id}/credentials",
      "method": "put",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "update",
      "description": "Edit associated Interconnect provider account credentials."
    },
    "getAuditReport": {
      "path": "/multicloud/interconnect/audit",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get audit report for resources."
    },
    "getGoogleCloudRouterAndAttachments": {
      "path": "/multicloud/interconnect/cloud/{cloud-type}/accounts/{cloud-account-id}/gcr-and-attachments",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get Google Cloud Router and Attachments."
    },
    "getAwsTransitGateways": {
      "path": "/multicloud/interconnect/cloud/{cloud-type}/accounts/{cloud-account-id}/transit-gateways",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get AWS Transit Gateways."
    },
    "getAzVirtualHubs": {
      "path": "/multicloud/interconnect/cloud/{cloud-type}/accounts/{cloud-account-id}/vhubs",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get Azure Virtual Hubs."
    },
    "getAzVirtualWans": {
      "path": "/multicloud/interconnect/cloud/{cloud-type}/accounts/{cloud-account-id}/vwans",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get Azure Virtual Wans."
    },
    "createAzVirtualWan": {
      "path": "/multicloud/interconnect/cloud/{cloud-type}/accounts/{cloud-account-id}/vwans",
      "method": "post",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "create",
      "description": "Create an Azure Virtual Wan."
    },
    "deleteAzVirtualWan": {
      "path": "/multicloud/interconnect/cloud/{cloud-type}/accounts/{cloud-account-id}/vwans/{vwan-name}",
      "method": "delete",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "delete",
      "description": "Delete an Azure Virtual Wan."
    },
    "getCloudConnectivityGateways": {
      "path": "/multicloud/interconnect/cloud/{cloud-type}/cloud-connectivity-gateways",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get all Cloud Connectivity Gateways."
    },
    "addCloudConnectivityGateway": {
      "path": "/multicloud/interconnect/cloud/{cloud-type}/cloud-connectivity-gateways",
      "method": "post",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "create",
      "description": "Create a Cloud Connectivity Gateway."
    },
    "deleteCloudConnectivityGateways": {
      "path": "/multicloud/interconnect/cloud/{cloud-type}/cloud-connectivity-gateways",
      "method": "delete",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "delete",
      "description": "Delete Cloud Connectivity Gateways by type."
    },
    "getCloudConnectivityGatewayCreateOptions": {
      "path": "/multicloud/interconnect/cloud/{cloud-type}/cloud-connectivity-gateways/create-options",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get Cloud Connectivity Gateway create Options."
    },
    "deleteCloudConnectivityGateway": {
      "path": "/multicloud/interconnect/cloud/{cloud-type}/cloud-connectivity-gateways/{connectivity-gateway-name}",
      "method": "delete",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "delete",
      "description": "Delete a Cloud Connectivity Gateway."
    },
    "getInterconnectColors": {
      "path": "/multicloud/interconnect/colors/{tunnel-type}",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get supported Colors for Interconnect tunnel type."
    },
    "getInterconnectOnRampGatewayConnections": {
      "path": "/multicloud/interconnect/connectivity/cloud-onramp-gateway-connections",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Retrieve an Interconnect OnRamp gateway connection."
    },
    "createInterconnectOnRampGatewayConnection": {
      "path": "/multicloud/interconnect/connectivity/cloud-onramp-gateway-connections",
      "method": "post",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "create",
      "description": "Create an Interconnect OnRamp gateway connection."
    },
    "getInterconnectOnRampGatewayConnection": {
      "path": "/multicloud/interconnect/connectivity/cloud-onramp-gateway-connections/{connection-name}",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Retrieve OnRamp gateway connection by name."
    },
    "updateInterconnectOnRampGatewayConnection": {
      "path": "/multicloud/interconnect/connectivity/cloud-onramp-gateway-connections/{connection-name}",
      "method": "put",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "update",
      "description": "Update an Interconnect OnRamp Gateway Connection."
    },
    "deleteInterconnectOnRampGatewayConnection": {
      "path": "/multicloud/interconnect/connectivity/cloud-onramp-gateway-connections/{connection-name}",
      "method": "delete",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "delete",
      "description": "Delete an Interconnect OnRamp gateway connection."
    },
    "getInterconnectMappingTags": {
      "path": "/multicloud/interconnect/connectivity/connections/tags",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get configured Interconnect host VPC/VNET mapping tags."
    },
    "getInterconnectDeviceLinks": {
      "path": "/multicloud/interconnect/connectivity/device-links",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get Interconnect provider Device-Link."
    },
    "addInterconnectDeviceLink": {
      "path": "/multicloud/interconnect/connectivity/device-links",
      "method": "post",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "create",
      "description": "Add an Interconnect Device-Link to vManage."
    },
    "getInterconnectDeviceLink": {
      "path": "/multicloud/interconnect/connectivity/device-links/{device-link-name}",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get Interconnect provider Device-Link."
    },
    "updateInterconnectDeviceLink": {
      "path": "/multicloud/interconnect/connectivity/device-links/{device-link-name}",
      "method": "put",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "update",
      "description": "Update an Interconnect Device-Link to vManage."
    },
    "deleteInterconnectDeviceLink": {
      "path": "/multicloud/interconnect/connectivity/device-links/{device-link-name}",
      "method": "delete",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "delete",
      "description": "Delete Interconnect provider Device-Link."
    },
    "getInterconnectCrossConnections": {
      "path": "/multicloud/interconnect/connectivity/virtual-cross-connections",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Retrieve virtual cross connections."
    },
    "createInterconnectCrossConnection": {
      "path": "/multicloud/interconnect/connectivity/virtual-cross-connections",
      "method": "post",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "create",
      "description": "Create virtual cross connection."
    },
    "getInterconnectCrossConnection": {
      "path": "/multicloud/interconnect/connectivity/virtual-cross-connections/{connection-name}",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Retrieve virtual cross connection by name."
    },
    "updateInterconnectCrossConnection": {
      "path": "/multicloud/interconnect/connectivity/virtual-cross-connections/{connection-name}",
      "method": "put",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "update",
      "description": "Update virtual cross connection."
    },
    "deleteInterconnectCrossConnection": {
      "path": "/multicloud/interconnect/connectivity/virtual-cross-connections/{connection-name}",
      "method": "delete",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "delete",
      "description": "Delete an Interconnect virtual cross connection."
    },
    "getInterconnectVirtualNetworkConnections": {
      "path": "/multicloud/interconnect/connectivity/virtual-network-connections",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Retrieve all Interconnect virtual network connections."
    },
    "createInterconenctVirtualNetworkConnection": {
      "path": "/multicloud/interconnect/connectivity/virtual-network-connections",
      "method": "post",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "create",
      "description": "Create an Interconnect virtual network connection."
    },
    "getInterconnectVirtualNetworkConnection": {
      "path": "/multicloud/interconnect/connectivity/virtual-network-connections/{connection-name}",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Retrieve an Interconnect virtual network connection."
    },
    "updateInterconnectVirtualNetworkConnection": {
      "path": "/multicloud/interconnect/connectivity/virtual-network-connections/{connection-name}",
      "method": "put",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "update",
      "description": "Update a private Interconnect virtual network connection."
    },
    "deleteInterconnectVirtualNetworkConnection": {
      "path": "/multicloud/interconnect/connectivity/virtual-network-connections/{connection-name}",
      "method": "delete",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "delete",
      "description": "Delete an Interconnect virtual network connection."
    },
    "getInterconnectDashboard": {
      "path": "/multicloud/interconnect/dashboard",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get Multicloud Interconnect dashboard view."
    },
    "getInterconnectLicenses": {
      "path": "/multicloud/interconnect/entitlement/licenses",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get Interconnect Licenses"
    },
    "getInterconnectGateways": {
      "path": "/multicloud/interconnect/gateways",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get all Interconnect Gateways."
    },
    "createInterconnectGateway": {
      "path": "/multicloud/interconnect/gateways",
      "method": "post",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "create",
      "description": "Create gateway for Interconnect provider."
    },
    "createInterconnectGatewayConfigGroup": {
      "path": "/multicloud/interconnect/gateways/config-group",
      "method": "post",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "create",
      "description": "Create config-group for Interconnect gateway."
    },
    "getInterconnectGatewayImageNames": {
      "path": "/multicloud/interconnect/gateways/image-names",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get supported software image versions."
    },
    "getInterconnectGatewayInstanceSizes": {
      "path": "/multicloud/interconnect/gateways/instance-sizes",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get supported instance sizes."
    },
    "pushInterconnectGatewayConfig": {
      "path": "/multicloud/interconnect/gateways/push-config",
      "method": "post",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "create",
      "description": "Push configuration for Interconnect gateway."
    },
    "getInterconnetGatewayTypes": {
      "path": "/multicloud/interconnect/gateways/types",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get supported Interconnect Gateway solution types."
    },
    "getInterconnectGateway": {
      "path": "/multicloud/interconnect/gateways/{interconnect-gateway-name}",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get Interconnect Gateway Information."
    },
    "updateInterconnectGateway": {
      "path": "/multicloud/interconnect/gateways/{interconnect-gateway-name}",
      "method": "put",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "update",
      "description": "Edit Interconnect Gateway Information."
    },
    "deleteInterconnectGateway": {
      "path": "/multicloud/interconnect/gateways/{interconnect-gateway-name}",
      "method": "delete",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "delete",
      "description": "Delete an Interconnect gateway."
    },
    "getInterconnectGatewayCustomSettings": {
      "path": "/multicloud/interconnect/gateways/{interconnect-gateway-name}/settings",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get configured custom settings."
    },
    "getInterconnectIpTransit": {
      "path": "/multicloud/interconnect/ip-transit",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get supported Interconnect ip transit."
    },
    "getInterconnectServiceSwPkg": {
      "path": "/multicloud/interconnect/service-sw-package",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get Interconnect Services software package Types Information."
    },
    "getInterconnectServices": {
      "path": "/multicloud/interconnect/services",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get Interconnect Services Information."
    },
    "getInterconnectGlobalSettings": {
      "path": "/multicloud/interconnect/settings/global",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get global settings for Interconnect provider."
    },
    "updateInterconnectGlobalSettings": {
      "path": "/multicloud/interconnect/settings/global",
      "method": "put",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "update",
      "description": "Edit global settings for an Interconnect provider."
    },
    "addInterconnectGlobalSettings": {
      "path": "/multicloud/interconnect/settings/global",
      "method": "post",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "create",
      "description": "Add global settings for an Interconnect provider."
    },
    "getInterconnectSshKeys": {
      "path": "/multicloud/interconnect/sshkeys",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get ssh keys for Interconnect provider."
    },
    "getInterconnectTypes": {
      "path": "/multicloud/interconnect/types",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get supported Multicloud Interconnect providers."
    },
    "getAllInterconnectWidgets": {
      "path": "/multicloud/interconnect/widget",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get all Interconnect widgets"
    },
    "getInterconnectBillingAccounts": {
      "path": "/multicloud/interconnect/{interconnect-type}/accounts/{interconnect-account-id}/billing-accounts",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get billing accounts."
    },
    "getInterconnectPartnerPorts": {
      "path": "/multicloud/interconnect/{interconnect-type}/accounts/{interconnect-account-id}/cloud/{cloud-type}/connectivity/connections/partner-ports",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get supported partner regions."
    },
    "getInterconnectPortSpeeds": {
      "path": "/multicloud/interconnect/{interconnect-type}/accounts/{interconnect-account-id}/connectivity/connections/{connection-type}/port-speeds",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get supported port speeds."
    },
    "getInterconnectLocationInfo": {
      "path": "/multicloud/interconnect/{interconnect-type}/accounts/{interconnect-account-id}/locations",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get list of available regions."
    },
    "updateInterconnectLocationInfo": {
      "path": "/multicloud/interconnect/{interconnect-type}/accounts/{interconnect-account-id}/locations",
      "method": "put",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "update",
      "description": "Update available regions."
    },
    "deleteInterconnectLocationInfo": {
      "path": "/multicloud/interconnect/{interconnect-type}/accounts/{interconnect-account-id}/locations",
      "method": "delete",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "delete",
      "description": "Delete stored regions."
    },
    "getInterconnectConfigGroupTopology": {
      "path": "/multicloud/interconnect/{interconnect-type}/config-group/{config-group-id}/topology",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get topology for Config Group."
    },
    "updateInterconnectConfigGroupTopology": {
      "path": "/multicloud/interconnect/{interconnect-type}/config-group/{config-group-id}/topology",
      "method": "put",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "update",
      "description": "Update topology for Config Group."
    },
    "getInterconnectDeviceLinkMetroSpeed": {
      "path": "/multicloud/interconnect/{interconnect-type}/connectivity/device-links/metro-speed",
      "method": "post",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "create",
      "description": "Get metro-speed for Device-Link by configuration."
    },
    "getInterconnectDeviceLinkPortSpeeds": {
      "path": "/multicloud/interconnect/{interconnect-type}/connectivity/device-links/port-speeds",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get supported port-speeds by Interconnect provider."
    },
    "getAvailableDevicesOrByCGId_1": {
      "path": "/multicloud/interconnect/{interconnect-type}/gateways/device-chassis-numbers",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get available devices."
    },
    "getInterconnectGatewayDevices": {
      "path": "/multicloud/interconnect/{interconnect-type}/gateways/devices",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get available Interconnect Gateway devices."
    },
    "deleteAllInterconnectLocationInfo": {
      "path": "/multicloud/interconnect/{interconnect-type}/locations",
      "method": "delete",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "delete",
      "description": "Delete stored regions."
    },
    "getMonitoringInterconnectConnectedSites": {
      "path": "/multicloud/interconnect/{interconnect-type}/monitoring/connected-sites",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get devices by connected-sites."
    },
    "getMonitoringInterconnectDevices": {
      "path": "/multicloud/interconnect/{interconnect-type}/monitoring/devices",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get monitoring devices by Interconnect."
    },
    "getMonitoringInterconnectGateways": {
      "path": "/multicloud/interconnect/{interconnect-type}/monitoring/gateways",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get gateways for monitoring."
    },
    "getInterconnectWidget": {
      "path": "/multicloud/interconnect/{interconnect-type}/widget",
      "method": "get",
      "sdk_endpoint": "multicloud.interconnect",
      "sdk_method": "get",
      "description": "Get an Interconnect widget for Interconnect type."
    },
    "getWanInterfaceColors": {
      "path": "/multicloud/interfacecolor",
      "method": "get",
      "sdk_endpoint": "multicloud.interfacecolor",
      "sdk_method": "get",
      "description": "Get WAN interface colors"
    },
    "getLicenses": {
      "path": "/multicloud/license/edge",
      "method": "get",
      "sdk_endpoint": "multicloud.license",
      "sdk_method": "get",
      "description": "Get License Info for Edge Gateways/Connections"
    },
    "getEdgeLocationsInfo": {
      "path": "/multicloud/locations/edge/{edgeType}",
      "method": "get",
      "sdk_endpoint": "multicloud.locations",
      "sdk_method": "get",
      "description": "Get Edge Locations"
    },
    "deleteEdgeAccount_1": {
      "path": "/multicloud/locations/edge/{edgeType}",
      "method": "delete",
      "sdk_endpoint": "multicloud.locations",
      "sdk_method": "delete",
      "description": "Delete edge account"
    },
    "updateEdgeLocationsInfo": {
      "path": "/multicloud/locations/edge/{edgeType}/accountId/{accountId}",
      "method": "put",
      "sdk_endpoint": "multicloud.locations",
      "sdk_method": "update",
      "description": "Update Edge Locations"
    },
    "getSupportedLoopbackCgwColors": {
      "path": "/multicloud/loopbackCGWColor/edge",
      "method": "get",
      "sdk_endpoint": "multicloud.loopbackCGWColor",
      "sdk_method": "get",
      "description": "Get Edge Loopback CGW supported colors"
    },
    "getSupportedLoopbackTransportColors": {
      "path": "/multicloud/loopbacktransportcolor/edge",
      "method": "get",
      "sdk_endpoint": "multicloud.loopbacktransportcolor",
      "sdk_method": "get",
      "description": "Get Edge Loopback Tunnel supported colors"
    },
    "getMappingMatrix": {
      "path": "/multicloud/map",
      "method": "get",
      "sdk_endpoint": "multicloud.map",
      "sdk_method": "get",
      "description": "Get Mapping details for cloudType"
    },
    "processMapping": {
      "path": "/multicloud/map",
      "method": "post",
      "sdk_endpoint": "multicloud.map",
      "sdk_method": "create",
      "description": "Enable Mapping for cloudType"
    },
    "getDefaultMappingValues": {
      "path": "/multicloud/map/defaults",
      "method": "get",
      "sdk_endpoint": "multicloud.map",
      "sdk_method": "get",
      "description": "Get default mapping values"
    },
    "getMappingStatus": {
      "path": "/multicloud/map/status",
      "method": "get",
      "sdk_endpoint": "multicloud.map",
      "sdk_method": "get",
      "description": "Get mapping status"
    },
    "getMappingSummary": {
      "path": "/multicloud/map/summary",
      "method": "get",
      "sdk_endpoint": "multicloud.map",
      "sdk_method": "get",
      "description": "Get mapping summary"
    },
    "getMappingTags": {
      "path": "/multicloud/map/tags",
      "method": "get",
      "sdk_endpoint": "multicloud.map",
      "sdk_method": "get",
      "description": "Get cloud gateway types for specified cloudType"
    },
    "getEdgeMappingTags": {
      "path": "/multicloud/map/tags/edge",
      "method": "get",
      "sdk_endpoint": "multicloud.map",
      "sdk_method": "get",
      "description": "Get default Interconnect mapping tag values"
    },
    "getMappingVpns": {
      "path": "/multicloud/map/vpns",
      "method": "get",
      "sdk_endpoint": "multicloud.map",
      "sdk_method": "get",
      "description": "Get default mapping values"
    },
    "getCgwAssociatedMappings": {
      "path": "/multicloud/mapping/{cloudType}",
      "method": "get",
      "sdk_endpoint": "multicloud.mapping",
      "sdk_method": "get",
      "description": "Get associated mappings to the CGW"
    },
    "getPartnerPorts": {
      "path": "/multicloud/partnerports/edge",
      "method": "get",
      "sdk_endpoint": "multicloud.partnerports",
      "sdk_method": "get",
      "description": "Get partner ports"
    },
    "getPortSpeed": {
      "path": "/multicloud/portSpeed/edge/{edgeType}/{edgeAccountId}/{connectivityType}",
      "method": "get",
      "sdk_endpoint": "multicloud.portSpeed",
      "sdk_method": "get",
      "description": "Get supported port speed"
    },
    "pushCgwCfg": {
      "path": "/multicloud/pushCgwConfig",
      "method": "post",
      "sdk_endpoint": "multicloud.pushCgwConfig",
      "sdk_method": "create",
      "description": "Push configuration to devices of CGW"
    },
    "getCloudRegions": {
      "path": "/multicloud/regions",
      "method": "get",
      "sdk_endpoint": "multicloud.regions",
      "sdk_method": "get",
      "description": "Obtain all supported Cloud Service Provider (CSP) types"
    },
    "getEdgeGlobalSettings": {
      "path": "/multicloud/settings/edge/global",
      "method": "get",
      "sdk_endpoint": "multicloud.settings",
      "sdk_method": "get",
      "description": "Get edge global settings"
    },
    "updateEdgeGlobalSettings": {
      "path": "/multicloud/settings/edge/global",
      "method": "put",
      "sdk_endpoint": "multicloud.settings",
      "sdk_method": "update",
      "description": "Update edge global settings for Edge provider"
    },
    "addEdgeGlobalSettings": {
      "path": "/multicloud/settings/edge/global",
      "method": "post",
      "sdk_endpoint": "multicloud.settings",
      "sdk_method": "create",
      "description": "Add global settings for Edge provider"
    },
    "getGlobalSettings": {
      "path": "/multicloud/settings/global",
      "method": "get",
      "sdk_endpoint": "multicloud.settings",
      "sdk_method": "get",
      "description": "Get global settings"
    },
    "updateGlobalSettings": {
      "path": "/multicloud/settings/global",
      "method": "put",
      "sdk_endpoint": "multicloud.settings",
      "sdk_method": "update",
      "description": "Update global settings"
    },
    "addGlobalSettings": {
      "path": "/multicloud/settings/global",
      "method": "post",
      "sdk_endpoint": "multicloud.settings",
      "sdk_method": "create",
      "description": "Add global settings"
    },
    "getSites": {
      "path": "/multicloud/site",
      "method": "get",
      "sdk_endpoint": "multicloud.site",
      "sdk_method": "get",
      "description": "Get available sites"
    },
    "getSshKeyList": {
      "path": "/multicloud/sshkeys",
      "method": "get",
      "sdk_endpoint": "multicloud.sshkeys",
      "sdk_method": "get",
      "description": "Get ssh keyList for cloud type"
    },
    "getPostAggregationDataByQuery_30": {
      "path": "/multicloud/statistics/interface/aggregation",
      "method": "post",
      "sdk_endpoint": "multicloud.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filter. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getSupportedSoftwareImageList": {
      "path": "/multicloud/swimages",
      "method": "get",
      "sdk_endpoint": "multicloud.swimages",
      "sdk_method": "get",
      "description": "Get software image list"
    },
    "telemetry": {
      "path": "/multicloud/telemetry",
      "method": "post",
      "sdk_endpoint": "multicloud.telemetry",
      "sdk_method": "create",
      "description": "Reports telemetry data"
    },
    "getTunnelNames": {
      "path": "/multicloud/tunnels/{cloudType}",
      "method": "get",
      "sdk_endpoint": "multicloud.tunnels",
      "sdk_method": "get",
      "description": "Get the tunnels for cloudType"
    },
    "getCloudTypes": {
      "path": "/multicloud/types",
      "method": "get",
      "sdk_endpoint": "multicloud.types",
      "sdk_method": "get",
      "description": "Obtain all supported Cloud Service Provider (CSP) types"
    },
    "getEdgeTypes": {
      "path": "/multicloud/types/edge",
      "method": "get",
      "sdk_endpoint": "multicloud.types",
      "sdk_method": "get",
      "description": "Get edge types"
    },
    "getVHubs": {
      "path": "/multicloud/vhubs",
      "method": "get",
      "sdk_endpoint": "multicloud.vhubs",
      "sdk_method": "get",
      "description": "Get Virtual Hubs"
    },
    "createVirtualWan": {
      "path": "/multicloud/vwan",
      "method": "post",
      "sdk_endpoint": "multicloud.vwan",
      "sdk_method": "create",
      "description": "Create Virtual WAN"
    },
    "deleteVirtualWan": {
      "path": "/multicloud/vwan/{cloudProvider}/{vWanName}",
      "method": "delete",
      "sdk_endpoint": "multicloud.vwan",
      "sdk_method": "delete",
      "description": "Delete Virtual Wan"
    },
    "getVWans": {
      "path": "/multicloud/vwans",
      "method": "get",
      "sdk_endpoint": "multicloud.vwans",
      "sdk_method": "get",
      "description": "Get Virtual Wans"
    },
    "getAllCloudWidgets": {
      "path": "/multicloud/widget",
      "method": "get",
      "sdk_endpoint": "multicloud.widget",
      "sdk_method": "get",
      "description": "Get All cloud widgets"
    },
    "getAllEdgeWidgets": {
      "path": "/multicloud/widget/edge",
      "method": "get",
      "sdk_endpoint": "multicloud.widget",
      "sdk_method": "get",
      "description": "Get All Interconnect Edge widgets "
    },
    "getEdgeWidget": {
      "path": "/multicloud/widget/edge/{edgeType}",
      "method": "get",
      "sdk_endpoint": "multicloud.widget",
      "sdk_method": "get",
      "description": "Get Interconnect Edge widget by edge type"
    },
    "getCloudWidget": {
      "path": "/multicloud/widget/{cloudType}",
      "method": "get",
      "sdk_endpoint": "multicloud.widget",
      "sdk_method": "get",
      "description": "Get cloud widget by cloud type"
    },
    "getMultiCloudConfigGroupTopology": {
      "path": "/multicloud/{cloudType}/config-group/{config-group-id}/topology",
      "method": "get",
      "sdk_endpoint": "multicloud.{cloudType}",
      "sdk_method": "get",
      "description": "Get topology for Config Group."
    },
    "updateMultiCloudConfigGroupTopology": {
      "path": "/multicloud/{cloudType}/config-group/{config-group-id}/topology",
      "method": "put",
      "sdk_endpoint": "multicloud.{cloudType}",
      "sdk_method": "update",
      "description": "Update Multicloud topology for the Config Group."
    },
    "getVmanageControlStatus": {
      "path": "/network/connectionssummary",
      "method": "get",
      "sdk_endpoint": "network.connectionssummary",
      "sdk_method": "get",
      "description": "Retrieve vManage control status"
    },
    "getRebootCount": {
      "path": "/network/issues/rebootcount",
      "method": "get",
      "sdk_endpoint": "network.issues",
      "sdk_method": "get",
      "description": "Retrieve reboot count"
    },
    "getNetworkIssuesSummary": {
      "path": "/network/issues/summary",
      "method": "get",
      "sdk_endpoint": "network.issues",
      "sdk_method": "get",
      "description": "Retrieve network issues summary"
    },
    "getNetworkStatusSummary": {
      "path": "/network/status",
      "method": "get",
      "sdk_endpoint": "network.status",
      "sdk_method": "get",
      "description": "Retrieve network status summary"
    },
    "getNetworkDesign": {
      "path": "/networkdesign",
      "method": "get",
      "sdk_endpoint": "networkdesign",
      "sdk_method": "get",
      "description": "Get existing network design"
    },
    "editNetworkDesign": {
      "path": "/networkdesign",
      "method": "put",
      "sdk_endpoint": "networkdesign",
      "sdk_method": "update",
      "description": "Edit network segment"
    },
    "createNetworkDesign": {
      "path": "/networkdesign",
      "method": "post",
      "sdk_endpoint": "networkdesign",
      "sdk_method": "create",
      "description": "Create network design"
    },
    "pushNetworkDesign": {
      "path": "/networkdesign/attachment",
      "method": "post",
      "sdk_endpoint": "networkdesign.attachment",
      "sdk_method": "create",
      "description": "Attach network design"
    },
    "getCircuits": {
      "path": "/networkdesign/circuit",
      "method": "get",
      "sdk_endpoint": "networkdesign.circuit",
      "sdk_method": "get",
      "description": "Get network circuits"
    },
    "createCircuit": {
      "path": "/networkdesign/circuit",
      "method": "post",
      "sdk_endpoint": "networkdesign.circuit",
      "sdk_method": "create",
      "description": "Create network circuits"
    },
    "deleteCircuit": {
      "path": "/networkdesign/circuit/{id}",
      "method": "delete",
      "sdk_endpoint": "networkdesign.circuit",
      "sdk_method": "delete",
      "description": "Delete network circuits"
    },
    "getGlobalParameters": {
      "path": "/networkdesign/global/parameters",
      "method": "get",
      "sdk_endpoint": "networkdesign.global",
      "sdk_method": "get",
      "description": "Get global parameter templates"
    },
    "getGlobalTemplate": {
      "path": "/networkdesign/global/template/{templateId}",
      "method": "get",
      "sdk_endpoint": "networkdesign.global",
      "sdk_method": "get",
      "description": "Get global template"
    },
    "editGlobalTemplate": {
      "path": "/networkdesign/global/template/{templateId}",
      "method": "put",
      "sdk_endpoint": "networkdesign.global",
      "sdk_method": "update",
      "description": "Edit global template"
    },
    "acquireEditLock": {
      "path": "/networkdesign/lock/edit",
      "method": "post",
      "sdk_endpoint": "networkdesign.lock",
      "sdk_method": "create",
      "description": "Acquire edit lock"
    },
    "runMyTest": {
      "path": "/networkdesign/mytest/{name}",
      "method": "get",
      "sdk_endpoint": "networkdesign.mytest",
      "sdk_method": "get",
      "description": "Get all device templates for this feature template"
    },
    "pushDeviceProfileTemplate": {
      "path": "/networkdesign/profile/attachment/{profileId}",
      "method": "post",
      "sdk_endpoint": "networkdesign.profile",
      "sdk_method": "create",
      "description": "Attach to device profile"
    },
    "getDeviceProfileFeatureTemplateList": {
      "path": "/networkdesign/profile/feature",
      "method": "get",
      "sdk_endpoint": "networkdesign.profile",
      "sdk_method": "get",
      "description": "Generate device profile template list"
    },
    "acquireAttachLock": {
      "path": "/networkdesign/profile/lock/{profileId}",
      "method": "post",
      "sdk_endpoint": "networkdesign.profile",
      "sdk_method": "create",
      "description": "Get the service profile config for a given device profile id"
    },
    "getDeviceProfileConfigStatus": {
      "path": "/networkdesign/profile/status",
      "method": "get",
      "sdk_endpoint": "networkdesign.profile",
      "sdk_method": "get",
      "description": "Get device profile configuration status"
    },
    "getDeviceProfileConfigStatusByProfileId": {
      "path": "/networkdesign/profile/status/{profileId}",
      "method": "get",
      "sdk_endpoint": "networkdesign.profile",
      "sdk_method": "get",
      "description": "Get device profile configuration status by profile Id"
    },
    "getDeviceProfileTaskCount": {
      "path": "/networkdesign/profile/task/count",
      "method": "get",
      "sdk_endpoint": "networkdesign.profile",
      "sdk_method": "get",
      "description": "Get device profile configuration task count"
    },
    "getDeviceProfileTaskStatus": {
      "path": "/networkdesign/profile/task/status",
      "method": "get",
      "sdk_endpoint": "networkdesign.profile",
      "sdk_method": "get",
      "description": "Get device profile configuration task status"
    },
    "getDeviceProfileTaskStatusByProfileId": {
      "path": "/networkdesign/profile/task/status/{profileId}",
      "method": "get",
      "sdk_endpoint": "networkdesign.profile",
      "sdk_method": "get",
      "description": "Get device profile configuration status by profile Id"
    },
    "generateProfileTemplateList": {
      "path": "/networkdesign/profile/template",
      "method": "get",
      "sdk_endpoint": "networkdesign.profile",
      "sdk_method": "get",
      "description": "Generate profile template list"
    },
    "getDeviceProfileTemplate": {
      "path": "/networkdesign/profile/template/{templateId}",
      "method": "get",
      "sdk_endpoint": "networkdesign.profile",
      "sdk_method": "get",
      "description": "Get device profile template"
    },
    "editDeviceProfileTemplate": {
      "path": "/networkdesign/profile/template/{templateId}",
      "method": "put",
      "sdk_endpoint": "networkdesign.profile",
      "sdk_method": "update",
      "description": "Edit device profile template"
    },
    "getServiceProfileConfig": {
      "path": "/networkdesign/serviceProfileConfig/{profileId}",
      "method": "get",
      "sdk_endpoint": "networkdesign.serviceProfileConfig",
      "sdk_method": "get",
      "description": "Get the service profile config for a given device profile id"
    },
    "updateNotificationRule": {
      "path": "/notifications/rule",
      "method": "put",
      "sdk_endpoint": "notifications.rule",
      "sdk_method": "update",
      "description": "Update notification rule"
    },
    "createNotificationRule": {
      "path": "/notifications/rule",
      "method": "post",
      "sdk_endpoint": "notifications.rule",
      "sdk_method": "create",
      "description": "Add notification rule"
    },
    "getNotificationRule": {
      "path": "/notifications/rules",
      "method": "get",
      "sdk_endpoint": "notifications.rules",
      "sdk_method": "get",
      "description": "Get all rules or specific notification rule by its Id  "
    },
    "deleteNotificationRule": {
      "path": "/notifications/rules",
      "method": "delete",
      "sdk_endpoint": "notifications.rules",
      "sdk_method": "delete",
      "description": "Delete notification rule"
    },
    "deleteDevices": {
      "path": "/onboard/delete-devices",
      "method": "post",
      "sdk_endpoint": "onboard.delete_devices",
      "sdk_method": "create",
      "description": "Delete Manual Onboard Device details"
    },
    "addDevices": {
      "path": "/onboard/details",
      "method": "post",
      "sdk_endpoint": "onboard.details",
      "sdk_method": "create",
      "description": "Add Manual Onboard Device details"
    },
    "getDevices": {
      "path": "/onboard/devices",
      "method": "get",
      "sdk_endpoint": "onboard.devices",
      "sdk_method": "get",
      "description": "GET Manual Onboard Device details"
    },
    "manualOnboardDevices": {
      "path": "/onboard/devices",
      "method": "post",
      "sdk_endpoint": "onboard.devices",
      "sdk_method": "create",
      "description": "Manual Onboard added Device details"
    },
    "oauthAccess": {
      "path": "/opentaccase/authcode",
      "method": "get",
      "sdk_endpoint": "opentaccase.authcode",
      "sdk_method": "get",
      "description": "Gets Access Token for SSO Logjn"
    },
    "getClientID": {
      "path": "/opentaccase/getClientID",
      "method": "get",
      "sdk_endpoint": "opentaccase.getClientID",
      "sdk_method": "get",
      "description": "Gets vManage Client ID"
    },
    "getCall": {
      "path": "/opentaccase/scmwidget/{var}",
      "method": "get",
      "sdk_endpoint": "opentaccase.scmwidget",
      "sdk_method": "get",
      "description": "Proxy API for SCM Widget"
    },
    "postCall": {
      "path": "/opentaccase/scmwidget/{var}",
      "method": "post",
      "sdk_endpoint": "opentaccase.scmwidget",
      "sdk_method": "create",
      "description": "Prxoy API for SCM Widget"
    },
    "deleteCall": {
      "path": "/opentaccase/scmwidget/{var}",
      "method": "delete",
      "sdk_endpoint": "opentaccase.scmwidget",
      "sdk_method": "delete",
      "description": "Proxy API for SCM Widget"
    },
    "getPartners": {
      "path": "/partner",
      "method": "get",
      "sdk_endpoint": "partner",
      "sdk_method": "get",
      "description": "Get all NMS partners"
    },
    "getACIDefinitions": {
      "path": "/partner/aci/policy",
      "method": "get",
      "sdk_endpoint": "partner.aci",
      "sdk_method": "get",
      "description": "Get ACI definitions"
    },
    "getDscpMappings": {
      "path": "/partner/aci/policy/dscpmapping/{partnerId}",
      "method": "get",
      "sdk_endpoint": "partner.aci",
      "sdk_method": "get",
      "description": "Get DSCP policy"
    },
    "createDscpMappings": {
      "path": "/partner/aci/policy/dscpmapping/{partnerId}",
      "method": "post",
      "sdk_endpoint": "partner.aci",
      "sdk_method": "create",
      "description": "Create an ACI definition entry"
    },
    "deleteDscpMappings": {
      "path": "/partner/aci/policy/dscpmapping/{partnerId}",
      "method": "delete",
      "sdk_endpoint": "partner.aci",
      "sdk_method": "delete",
      "description": "Delete DSCP mapping"
    },
    "getEvents_1": {
      "path": "/partner/aci/policy/events/{partnerId}",
      "method": "get",
      "sdk_endpoint": "partner.aci",
      "sdk_method": "get",
      "description": "Get ACI events"
    },
    "getDataPrefixMappings": {
      "path": "/partner/aci/policy/prefixmapping/{partnerId}",
      "method": "get",
      "sdk_endpoint": "partner.aci",
      "sdk_method": "get",
      "description": "Get prefix mapping"
    },
    "setDataPrefixMappings": {
      "path": "/partner/aci/policy/prefixmapping/{partnerId}",
      "method": "post",
      "sdk_endpoint": "partner.aci",
      "sdk_method": "create",
      "description": "Create data prefix mapping"
    },
    "getDataPrefixSequences": {
      "path": "/partner/aci/policy/sequences",
      "method": "get",
      "sdk_endpoint": "partner.aci",
      "sdk_method": "get",
      "description": "Get data prefix sequence"
    },
    "createSDAConfig": {
      "path": "/partner/dnac/sda/config/{partnerId}",
      "method": "post",
      "sdk_endpoint": "partner.dnac",
      "sdk_method": "create",
      "description": "Create SDA enabled device"
    },
    "getSDAEnabledDevices": {
      "path": "/partner/dnac/sda/device/{partnerId}",
      "method": "get",
      "sdk_endpoint": "partner.dnac",
      "sdk_method": "get",
      "description": "Get SDA enabled devices"
    },
    "getDeviceDetails": {
      "path": "/partner/dnac/sda/device/{partnerId}/{uuid}",
      "method": "get",
      "sdk_endpoint": "partner.dnac",
      "sdk_method": "get",
      "description": "Get SDA enabled devices detail"
    },
    "createSDAConfigFromNetconf": {
      "path": "/partner/dnac/sda/netconfconfig/{partnerId}",
      "method": "post",
      "sdk_endpoint": "partner.dnac",
      "sdk_method": "create",
      "description": "Create SDA enabled device from Netconf"
    },
    "getSitesForPartner": {
      "path": "/partner/dnac/sda/site/{partnerId}",
      "method": "get",
      "sdk_endpoint": "partner.dnac",
      "sdk_method": "get",
      "description": "Get SDA Sites for Partner"
    },
    "getOverlayVPNList": {
      "path": "/partner/dnac/sda/vpn",
      "method": "get",
      "sdk_endpoint": "partner.dnac",
      "sdk_method": "get",
      "description": "Get Overlay VPN list"
    },
    "getVPNList": {
      "path": "/partner/vpn",
      "method": "get",
      "sdk_endpoint": "partner.vpn",
      "sdk_method": "get",
      "description": "Get all VPNs"
    },
    "pushNetconfConfigs": {
      "path": "/partner/wcm/netconf/{nmsId}",
      "method": "post",
      "sdk_endpoint": "partner.wcm",
      "sdk_method": "create",
      "description": "Push device configs"
    },
    "getPartnersByPartnerType": {
      "path": "/partner/{partnerType}",
      "method": "get",
      "sdk_endpoint": "partner.{partnerType}",
      "sdk_method": "get",
      "description": "Get NMS partners by partner type"
    },
    "registerPartner": {
      "path": "/partner/{partnerType}",
      "method": "post",
      "sdk_endpoint": "partner.{partnerType}",
      "sdk_method": "create",
      "description": "Register NMS partner"
    },
    "getPartnerDevices": {
      "path": "/partner/{partnerType}/map/{nmsId}",
      "method": "get",
      "sdk_endpoint": "partner.{partnerType}",
      "sdk_method": "get",
      "description": "List mapped devices for the partner"
    },
    "mapDevices": {
      "path": "/partner/{partnerType}/map/{nmsId}",
      "method": "post",
      "sdk_endpoint": "partner.{partnerType}",
      "sdk_method": "create",
      "description": "Map devices for the partner"
    },
    "unmapDevices": {
      "path": "/partner/{partnerType}/map/{nmsId}",
      "method": "delete",
      "sdk_endpoint": "partner.{partnerType}",
      "sdk_method": "delete",
      "description": "Unmap all devices for the partner"
    },
    "deleteDeviceMapping": {
      "path": "/partner/{partnerType}/unmap/{nmsId}",
      "method": "post",
      "sdk_endpoint": "partner.{partnerType}",
      "sdk_method": "create",
      "description": "Unmap a set of devices for the partner"
    },
    "getPartner": {
      "path": "/partner/{partnerType}/{nmsId}",
      "method": "get",
      "sdk_endpoint": "partner.{partnerType}",
      "sdk_method": "get",
      "description": "Get NMS partners by partner type and Id"
    },
    "updatePartner": {
      "path": "/partner/{partnerType}/{nmsId}",
      "method": "put",
      "sdk_endpoint": "partner.{partnerType}",
      "sdk_method": "update",
      "description": "Update NMS partner details"
    },
    "deletePartner": {
      "path": "/partner/{partnerType}/{nmsId}",
      "method": "delete",
      "sdk_endpoint": "partner.{partnerType}",
      "sdk_method": "delete",
      "description": "Delete NMS partner"
    },
    "applyWaniRecommendation": {
      "path": "/policy/wani/recommendation/process",
      "method": "post",
      "sdk_endpoint": "policy.wani",
      "sdk_method": "create",
      "description": "Apply recommendation to a centralized policy"
    },
    "getSecureXRefreshToken": {
      "path": "/refreshtoken/{regionBaseUri}/{clientId}",
      "method": "get",
      "sdk_endpoint": "refreshtoken.{regionBaseUri}",
      "sdk_method": "get",
      "description": "Get Access Token for SecureX Ribbon"
    },
    "getResources": {
      "path": "/resourcepool/resource/vpn",
      "method": "get",
      "sdk_endpoint": "resourcepool.resource",
      "sdk_method": "get",
      "description": "Get tenant device vpn resource"
    },
    "createResources": {
      "path": "/resourcepool/resource/vpn",
      "method": "put",
      "sdk_endpoint": "resourcepool.resource",
      "sdk_method": "update",
      "description": "Create Vpn resource pool and return tenant device vpn"
    },
    "deleteResources": {
      "path": "/resourcepool/resource/vpn",
      "method": "delete",
      "sdk_endpoint": "resourcepool.resource",
      "sdk_method": "delete",
      "description": "Delete tenant device vpn and release the resource"
    },
    "importScheduledBackup": {
      "path": "/restore/import",
      "method": "post",
      "sdk_endpoint": "restore.import",
      "sdk_method": "create",
      "description": "Submit a previously backed up file and import the data and apply it to the configuraion database"
    },
    "remoteImportBackup": {
      "path": "/restore/remoteimport",
      "method": "post",
      "sdk_endpoint": "restore.remoteimport",
      "sdk_method": "create",
      "description": "Remote import backup from a remote URL and import the data and apply it to the configuraion database"
    },
    "scheduleBackup": {
      "path": "/schedule/create",
      "method": "post",
      "sdk_endpoint": "schedule.create",
      "sdk_method": "create",
      "description": "create  backup scheduler config-db and statstics database with startDateTime and persist to config-db"
    },
    "listSchedules": {
      "path": "/schedule/list",
      "method": "get",
      "sdk_endpoint": "schedule.list",
      "sdk_method": "get",
      "description": "Get a schedule record for backup by scheduler id"
    },
    "getScheduleRecordForBackup": {
      "path": "/schedule/{schedulerId}",
      "method": "get",
      "sdk_endpoint": "schedule.{schedulerId}",
      "sdk_method": "get",
      "description": "Get a schedule record for backup by scheduler id"
    },
    "deleteSchedule": {
      "path": "/schedule/{schedulerId}",
      "method": "delete",
      "sdk_endpoint": "schedule.{schedulerId}",
      "sdk_method": "delete",
      "description": "Delete a schedule record for backup in vManage by scheduler id"
    },
    "getExtendedApplications": {
      "path": "/sdavc/cloud-sourced",
      "method": "get",
      "sdk_endpoint": "sdavc.cloud_sourced",
      "sdk_method": "get",
      "description": "returns all cloud sourced application"
    },
    "saveExtendedApplications": {
      "path": "/sdavc/cloud-sourced",
      "method": "post",
      "sdk_endpoint": "sdavc.cloud_sourced",
      "sdk_method": "create",
      "description": ""
    },
    "approveExtendedApplications": {
      "path": "/sdavc/cloud-sourced/approve",
      "method": "post",
      "sdk_endpoint": "sdavc.cloud_sourced",
      "sdk_method": "create",
      "description": ""
    },
    "complianceWithExtendedApplications": {
      "path": "/sdavc/cloud-sourced/compliance",
      "method": "post",
      "sdk_endpoint": "sdavc.cloud_sourced",
      "sdk_method": "create",
      "description": ""
    },
    "applicationComplianceWithExtendedApplications": {
      "path": "/sdavc/cloud-sourced/compliance/application",
      "method": "post",
      "sdk_endpoint": "sdavc.cloud_sourced",
      "sdk_method": "create",
      "description": ""
    },
    "getCloudConnector": {
      "path": "/sdavc/cloudconnector",
      "method": "get",
      "sdk_endpoint": "sdavc.cloudconnector",
      "sdk_method": "get",
      "description": "Get SD_AVC Cloud Connector Config"
    },
    "disableCloudConnector": {
      "path": "/sdavc/cloudconnector",
      "method": "put",
      "sdk_endpoint": "sdavc.cloudconnector",
      "sdk_method": "update",
      "description": "Disable SD_AVC Cloud Connector"
    },
    "enableCloudConnector": {
      "path": "/sdavc/cloudconnector",
      "method": "post",
      "sdk_endpoint": "sdavc.cloudconnector",
      "sdk_method": "create",
      "description": "Enable SD_AVC Cloud Connector"
    },
    "getCloudConnectorStatus": {
      "path": "/sdavc/cloudconnector/status",
      "method": "get",
      "sdk_endpoint": "sdavc.cloudconnector",
      "sdk_method": "get",
      "description": "Get SD_AVC Cloud Connector Status"
    },
    "getCustomApp": {
      "path": "/sdavc/customapps",
      "method": "get",
      "sdk_endpoint": "sdavc.customapps",
      "sdk_method": "get",
      "description": "Displays the user-defined applications"
    },
    "getAllProtocolPacks": {
      "path": "/sdavc/protocol-pack",
      "method": "get",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "get",
      "description": "Get all protocol packs details"
    },
    "getBaseSystemPack": {
      "path": "/sdavc/protocol-pack/base",
      "method": "get",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "get",
      "description": "Get all base protocol pack details"
    },
    "getAllSDAVCDevice": {
      "path": "/sdavc/protocol-pack/compliance/all-devices",
      "method": "get",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "get",
      "description": "Get all device compliance details"
    },
    "getDefaultApplicationComplianceDetails": {
      "path": "/sdavc/protocol-pack/compliance/application",
      "method": "get",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "get",
      "description": "Get default application name compliance details"
    },
    "initiateApplicationComplianceCheck": {
      "path": "/sdavc/protocol-pack/compliance/application/initiate-compliance",
      "method": "post",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "create",
      "description": "Initiate application name compliance task"
    },
    "isApplicationComplianceDetected": {
      "path": "/sdavc/protocol-pack/compliance/application/is-compliance-detected",
      "method": "get",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "get",
      "description": "Check if there is any Application Compliance detected in the system"
    },
    "getApplicationComplianceStatus": {
      "path": "/sdavc/protocol-pack/compliance/application/status/{uuid}",
      "method": "get",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "get",
      "description": "Get application name compliance task status"
    },
    "getApplicationComplianceDetails": {
      "path": "/sdavc/protocol-pack/compliance/application/{uuid}",
      "method": "get",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "get",
      "description": "Get application name compliance details for given task uuid"
    },
    "getCustomApplicationList": {
      "path": "/sdavc/protocol-pack/compliance/custom-application",
      "method": "get",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "get",
      "description": "Get All Custom Applications"
    },
    "getNonCompliantDevicesForProtocolPack_1": {
      "path": "/sdavc/protocol-pack/compliance/device/noncompliant",
      "method": "post",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "create",
      "description": "Get all non compliant devices for given protocol pack and selected device or entire network"
    },
    "getNonCompliantDevicesForProtocolPack": {
      "path": "/sdavc/protocol-pack/compliance/device/noncompliant/{protocolPackName}",
      "method": "get",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "get",
      "description": "Get all non compliant devices for given protocol pack"
    },
    "getDeviceComplianceStatus": {
      "path": "/sdavc/protocol-pack/compliance/device/status/{uuid}",
      "method": "get",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "get",
      "description": "Get device compliance task status"
    },
    "initiateDeviceCompliance": {
      "path": "/sdavc/protocol-pack/compliance/initiate-device-compliance",
      "method": "post",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "create",
      "description": "Initiate device compliance task"
    },
    "initiatePolicyCompliance": {
      "path": "/sdavc/protocol-pack/compliance/initiate-policy-compliance",
      "method": "post",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "create",
      "description": "Initiate policy compliance task"
    },
    "getNewApplicationList": {
      "path": "/sdavc/protocol-pack/compliance/new-application/{deviceUUID}",
      "method": "get",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "get",
      "description": "Get New Application List for given Device UUID"
    },
    "getCompliancePolicy": {
      "path": "/sdavc/protocol-pack/compliance/policy",
      "method": "get",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "get",
      "description": "Get all policy compliance details"
    },
    "getPolicyComplianceStatus": {
      "path": "/sdavc/protocol-pack/compliance/policy/status/{uuid}",
      "method": "get",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "get",
      "description": "Get policy compliance status"
    },
    "getDefaultSystemPack": {
      "path": "/sdavc/protocol-pack/default",
      "method": "get",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "get",
      "description": "Get all default protocol pack details"
    },
    "getLatestSystemPack": {
      "path": "/sdavc/protocol-pack/latest",
      "method": "get",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "get",
      "description": "Get current latest protocol pack details"
    },
    "upgradeProtocolPack": {
      "path": "/sdavc/protocol-pack/maintenance/upgrade",
      "method": "post",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "create",
      "description": "Deploy protocol pack to devices"
    },
    "cancelScheduledDeployJob": {
      "path": "/sdavc/protocol-pack/maintenance/upgrade/cancel",
      "method": "post",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "create",
      "description": "Cancel a Scheduled Deploy protocol pack job"
    },
    "getDeployJobStatus": {
      "path": "/sdavc/protocol-pack/maintenance/upgrade/status",
      "method": "get",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "get",
      "description": "Get active deploy job status"
    },
    "getDeployJobStatus_1": {
      "path": "/sdavc/protocol-pack/maintenance/upgrade/status/{uuid}",
      "method": "get",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "get",
      "description": "Get upgrade status for given Task UUID"
    },
    "uploadProtocolPack": {
      "path": "/sdavc/protocol-pack/maintenance/upload",
      "method": "post",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "create",
      "description": "Upload protocol pack to SDAVC"
    },
    "cancelProtocolPackUpload": {
      "path": "/sdavc/protocol-pack/maintenance/upload/cancel/{uuid}",
      "method": "post",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "create",
      "description": "Cancel or discard an uploaded protocol pack"
    },
    "confirmProtocolPackUpload": {
      "path": "/sdavc/protocol-pack/maintenance/upload/confirm/{uuid}",
      "method": "post",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "create",
      "description": "Confirm uploaded protocol pack"
    },
    "getProtocolPackUploadStatus": {
      "path": "/sdavc/protocol-pack/maintenance/upload/status/{uuid}",
      "method": "get",
      "sdk_endpoint": "sdavc.protocol_pack",
      "sdk_method": "get",
      "description": "Get protocol pack upload status"
    },
    "activateContainer": {
      "path": "/sdavc/task/{taskId}",
      "method": "post",
      "sdk_endpoint": "sdavc.task",
      "sdk_method": "create",
      "description": "Activate container"
    },
    "testLoadBalancer": {
      "path": "/sdavc/test",
      "method": "post",
      "sdk_endpoint": "sdavc.test",
      "sdk_method": "create",
      "description": "Test SD_AVC load balancer"
    },
    "getSecurityDeviceHealth": {
      "path": "/security/device/health",
      "method": "get",
      "sdk_endpoint": "security.device",
      "sdk_method": "get",
      "description": "security device health"
    },
    "getSecurityPolicyDeviceList": {
      "path": "/security/policy/devicelist",
      "method": "get",
      "sdk_endpoint": "security.policy",
      "sdk_method": "get",
      "description": "security policy device list"
    },
    "getPostFwallByQuery": {
      "path": "/security/policy/fwall/device",
      "method": "post",
      "sdk_endpoint": "security.policy",
      "sdk_method": "create",
      "description": "firewall devices list"
    },
    "getPostIPSAlertByQuery": {
      "path": "/security/policy/ips/device",
      "method": "post",
      "sdk_endpoint": "security.policy",
      "sdk_method": "create",
      "description": "ips alert devices list"
    },
    "getPostUrlFilteringByQuery": {
      "path": "/security/policy/urlf/device",
      "method": "post",
      "sdk_endpoint": "security.policy",
      "sdk_method": "create",
      "description": "url filtering devices list"
    },
    "getSegments": {
      "path": "/segment",
      "method": "get",
      "sdk_endpoint": "segment",
      "sdk_method": "get",
      "description": "Get network segments"
    },
    "createSegment": {
      "path": "/segment",
      "method": "post",
      "sdk_endpoint": "segment",
      "sdk_method": "create",
      "description": "Create network segment"
    },
    "getSegment": {
      "path": "/segment/{id}",
      "method": "get",
      "sdk_endpoint": "segment.{id}",
      "sdk_method": "get",
      "description": "Get network segment"
    },
    "editSegment": {
      "path": "/segment/{id}",
      "method": "put",
      "sdk_endpoint": "segment.{id}",
      "sdk_method": "update",
      "description": "Edit network segment"
    },
    "deleteSegment": {
      "path": "/segment/{id}",
      "method": "delete",
      "sdk_endpoint": "segment.{id}",
      "sdk_method": "delete",
      "description": "Delete network segment"
    },
    "createServerInfo_1": {
      "path": "/server/info",
      "method": "get",
      "sdk_endpoint": "server.info",
      "sdk_method": "get",
      "description": "Get Server info"
    },
    "getDataChangeInfo": {
      "path": "/serverlongpoll/event/poll/{partnerId}",
      "method": "get",
      "sdk_endpoint": "serverlongpoll.event",
      "sdk_method": "get",
      "description": "Retrieve registration change information"
    },
    "showInfo": {
      "path": "/setting/configuration/webserver/certificate",
      "method": "get",
      "sdk_endpoint": "setting.configuration",
      "sdk_method": "get",
      "description": "Retrieves Certificate Signing Request information"
    },
    "importCertificate": {
      "path": "/setting/configuration/webserver/certificate",
      "method": "put",
      "sdk_endpoint": "setting.configuration",
      "sdk_method": "update",
      "description": "Import a signed web server certificate"
    },
    "getCSR": {
      "path": "/setting/configuration/webserver/certificate",
      "method": "post",
      "sdk_endpoint": "setting.configuration",
      "sdk_method": "create",
      "description": "Generate Certificate Signing Request"
    },
    "getCertificate": {
      "path": "/setting/configuration/webserver/certificate/getcertificate",
      "method": "get",
      "sdk_endpoint": "setting.configuration",
      "sdk_method": "get",
      "description": "Get certificate for alias server"
    },
    "getBanner": {
      "path": "/settings/banner",
      "method": "get",
      "sdk_endpoint": "settings.banner",
      "sdk_method": "get",
      "description": "Retrieve banner"
    },
    "getSessionTimout": {
      "path": "/settings/clientSessionTimeout",
      "method": "get",
      "sdk_endpoint": "settings.clientSessionTimeout",
      "sdk_method": "get",
      "description": "Get client session timeout"
    },
    "createAnalyticsDataFile": {
      "path": "/settings/configuration/analytics/dca",
      "method": "post",
      "sdk_endpoint": "settings.configuration",
      "sdk_method": "create",
      "description": "Create analytics data file"
    },
    "getCertConfiguration": {
      "path": "/settings/configuration/certificate/{type}",
      "method": "get",
      "sdk_endpoint": "settings.configuration",
      "sdk_method": "get",
      "description": "Retrieve certificate configuration value by type"
    },
    "editCertConfiguration": {
      "path": "/settings/configuration/certificate/{type}",
      "method": "put",
      "sdk_endpoint": "settings.configuration",
      "sdk_method": "update",
      "description": "Update certificate configuration"
    },
    "newCertConfiguration": {
      "path": "/settings/configuration/certificate/{type}",
      "method": "post",
      "sdk_endpoint": "settings.configuration",
      "sdk_method": "create",
      "description": "Add new certificate configuration"
    },
    "getCloudxConfiguration": {
      "path": "/settings/configuration/cloudx",
      "method": "get",
      "sdk_endpoint": "settings.configuration",
      "sdk_method": "get",
      "description": "Retrieve cloudx configuration value"
    },
    "editCloudxConfiguration": {
      "path": "/settings/configuration/cloudx",
      "method": "put",
      "sdk_endpoint": "settings.configuration",
      "sdk_method": "update",
      "description": "Update cloudx configuration setting"
    },
    "newCloudxConfiguration": {
      "path": "/settings/configuration/cloudx",
      "method": "post",
      "sdk_endpoint": "settings.configuration",
      "sdk_method": "create",
      "description": "Add new cloudx configuration"
    },
    "getGoogleMapKey": {
      "path": "/settings/configuration/googleMapKey",
      "method": "get",
      "sdk_endpoint": "settings.configuration",
      "sdk_method": "get",
      "description": "Retrieve Google map key"
    },
    "getMaintenanceWindow": {
      "path": "/settings/configuration/maintenanceWindow",
      "method": "get",
      "sdk_endpoint": "settings.configuration",
      "sdk_method": "get",
      "description": "Retrieve maintenance window"
    },
    "getMicrosoftTelemetryConfiguration": {
      "path": "/settings/configuration/microsoftTelemetry",
      "method": "get",
      "sdk_endpoint": "settings.configuration",
      "sdk_method": "get",
      "description": "Retrieve Microsoft telemetry configuration value"
    },
    "editMicrosoftTelemetryConfiguration": {
      "path": "/settings/configuration/microsoftTelemetry",
      "method": "put",
      "sdk_endpoint": "settings.configuration",
      "sdk_method": "update",
      "description": "Update Microsoft telemetry configuration setting"
    },
    "newMicrosoftTelemetryConfiguration": {
      "path": "/settings/configuration/microsoftTelemetry",
      "method": "post",
      "sdk_endpoint": "settings.configuration",
      "sdk_method": "create",
      "description": "Add new Microsoft telemetry configuration"
    },
    "getWaniConfiguration": {
      "path": "/settings/configuration/wani",
      "method": "get",
      "sdk_endpoint": "settings.configuration",
      "sdk_method": "get",
      "description": "Retrieve wani configuration value"
    },
    "editWaniConfiguration": {
      "path": "/settings/configuration/wani",
      "method": "put",
      "sdk_endpoint": "settings.configuration",
      "sdk_method": "update",
      "description": "Update wani configuration setting"
    },
    "newWaniConfiguration": {
      "path": "/settings/configuration/wani",
      "method": "post",
      "sdk_endpoint": "settings.configuration",
      "sdk_method": "create",
      "description": "Add new wani configuration"
    },
    "getConfigurationBySettingType": {
      "path": "/settings/configuration/{type}",
      "method": "get",
      "sdk_endpoint": "settings.configuration",
      "sdk_method": "get",
      "description": "Retrieve configuration value by type"
    },
    "editConfiguration": {
      "path": "/settings/configuration/{type}",
      "method": "put",
      "sdk_endpoint": "settings.configuration",
      "sdk_method": "update",
      "description": "Update configuration setting"
    },
    "newConfiguration": {
      "path": "/settings/configuration/{type}",
      "method": "post",
      "sdk_endpoint": "settings.configuration",
      "sdk_method": "create",
      "description": "Add new certificate configuration"
    },
    "getPasswordPolicy": {
      "path": "/settings/passwordPolicy",
      "method": "get",
      "sdk_endpoint": "settings.passwordPolicy",
      "sdk_method": "get",
      "description": "Retrieve password policy from global settings"
    },
    "getSigDynamicDataCenterList": {
      "path": "/sig/datacenters/{type}/{tunneltype}",
      "method": "get",
      "sdk_endpoint": "sig.datacenters",
      "sdk_method": "get",
      "description": "The API to get all sig data center for given provider type"
    },
    "getSigDataCenterList": {
      "path": "/sig/datacenters/{type}/{tunneltype}/{devicetype}",
      "method": "get",
      "sdk_endpoint": "sig.datacenters",
      "sdk_method": "get",
      "description": "Get list of data centers for zscaler or umbrella"
    },
    "getSigGlobalCredentials": {
      "path": "/sig/sigGlobalCredentials/{featureTemplateType}",
      "method": "get",
      "sdk_endpoint": "sig.sigGlobalCredentials",
      "sdk_method": "get",
      "description": "Get sig global credentials"
    },
    "getChildOrgs": {
      "path": "/sig/umbrella/childOrg/{type}",
      "method": "get",
      "sdk_endpoint": "sig.umbrella",
      "sdk_method": "get",
      "description": "Get the list of child org IDs given the type management or device "
    },
    "sleauthenticate": {
      "path": "/smartLicensing/authenticate",
      "method": "post",
      "sdk_endpoint": "smartLicensing.authenticate",
      "sdk_method": "create",
      "description": "authenticate user for sle"
    },
    "fetchAccounts": {
      "path": "/smartLicensing/fetchAccounts",
      "method": "get",
      "sdk_endpoint": "smartLicensing.fetchAccounts",
      "sdk_method": "get",
      "description": "fetch sava for sle"
    },
    "fetchReports_1": {
      "path": "/smartLicensing/fetchAllSa",
      "method": "get",
      "sdk_endpoint": "smartLicensing.fetchAllSa",
      "sdk_method": "get",
      "description": "fetch reports offline for sle"
    },
    "fetchReports": {
      "path": "/smartLicensing/fetchReportsForSa",
      "method": "get",
      "sdk_endpoint": "smartLicensing.fetchReportsForSa",
      "sdk_method": "get",
      "description": "fetch reports offline for sle"
    },
    "getSettings": {
      "path": "/smartLicensing/getUserSettings",
      "method": "get",
      "sdk_endpoint": "smartLicensing.getUserSettings",
      "sdk_method": "get",
      "description": "get settings"
    },
    "syncLicenses": {
      "path": "/smartLicensing/syncLicenses",
      "method": "post",
      "sdk_endpoint": "smartLicensing.syncLicenses",
      "sdk_method": "create",
      "description": "get all licenses for sa/va"
    },
    "checkGivenIpList": {
      "path": "/software/compliance/ip/origin/check",
      "method": "post",
      "sdk_endpoint": "software.compliance",
      "sdk_method": "create",
      "description": "Block IP based on list"
    },
    "getProxyCertOfEdge": {
      "path": "/sslproxy/certificate",
      "method": "get",
      "sdk_endpoint": "sslproxy.certificate",
      "sdk_method": "get",
      "description": "Get edge proxy certificate"
    },
    "updateCertificate": {
      "path": "/sslproxy/certificate",
      "method": "put",
      "sdk_endpoint": "sslproxy.certificate",
      "sdk_method": "update",
      "description": "Upload device certificate"
    },
    "addWANEdge": {
      "path": "/sslproxy/certificate/wanedge/{deviceId}",
      "method": "post",
      "sdk_endpoint": "sslproxy.certificate",
      "sdk_method": "create",
      "description": "Add SSL proxy wan edge"
    },
    "uploadCertificiates": {
      "path": "/sslproxy/certificates",
      "method": "post",
      "sdk_endpoint": "sslproxy.certificates",
      "sdk_method": "create",
      "description": "Upload device certificates"
    },
    "getSslProxyCSR": {
      "path": "/sslproxy/csr",
      "method": "get",
      "sdk_endpoint": "sslproxy.csr",
      "sdk_method": "get",
      "description": "Get SSL proxy CSR"
    },
    "getAllDeviceCertificates": {
      "path": "/sslproxy/devicecertificates",
      "method": "post",
      "sdk_endpoint": "sslproxy.devicecertificates",
      "sdk_method": "create",
      "description": "Get certificate for all cEdges"
    },
    "getAllDeviceCSR": {
      "path": "/sslproxy/devicecsr",
      "method": "post",
      "sdk_endpoint": "sslproxy.devicecsr",
      "sdk_method": "create",
      "description": "Get CSR for all cEdges"
    },
    "generateSslProxyCSR": {
      "path": "/sslproxy/generate/csr/sslproxy",
      "method": "post",
      "sdk_endpoint": "sslproxy.generate",
      "sdk_method": "create",
      "description": "CSR request SSL proxy for edge"
    },
    "generateSSLProxyCSR": {
      "path": "/sslproxy/generate/vmanage/csr",
      "method": "post",
      "sdk_endpoint": "sslproxy.generate",
      "sdk_method": "create",
      "description": "Generate CSR"
    },
    "getSslProxyList": {
      "path": "/sslproxy/list",
      "method": "get",
      "sdk_endpoint": "sslproxy.list",
      "sdk_method": "get",
      "description": "Get SSL proxy certificate list"
    },
    "renewCertificate": {
      "path": "/sslproxy/renew",
      "method": "post",
      "sdk_endpoint": "sslproxy.renew",
      "sdk_method": "create",
      "description": "Renew device certificate"
    },
    "revokeCertificate": {
      "path": "/sslproxy/revoke",
      "method": "post",
      "sdk_endpoint": "sslproxy.revoke",
      "sdk_method": "create",
      "description": "Revoke device certificate"
    },
    "revokeRenewCertificate": {
      "path": "/sslproxy/revokerenew",
      "method": "post",
      "sdk_endpoint": "sslproxy.revokerenew",
      "sdk_method": "create",
      "description": "Revoke and renew device certificate"
    },
    "getCertificateState": {
      "path": "/sslproxy/settings/certificate",
      "method": "get",
      "sdk_endpoint": "sslproxy.settings",
      "sdk_method": "get",
      "description": "Get certificate state"
    },
    "getEnterpriseCertificate": {
      "path": "/sslproxy/settings/enterprise/certificate",
      "method": "get",
      "sdk_endpoint": "sslproxy.settings",
      "sdk_method": "get",
      "description": "Get enterprise certificate"
    },
    "setEnterpriseCert": {
      "path": "/sslproxy/settings/enterprise/certificate",
      "method": "post",
      "sdk_endpoint": "sslproxy.settings",
      "sdk_method": "create",
      "description": "Configure enterprise certificate"
    },
    "getVManageEnterpriseRootCertificate": {
      "path": "/sslproxy/settings/enterprise/rootca",
      "method": "get",
      "sdk_endpoint": "sslproxy.settings",
      "sdk_method": "get",
      "description": "Get vManage enterprise root certificate"
    },
    "setEnterpriseRootCaCert": {
      "path": "/sslproxy/settings/enterprise/rootca",
      "method": "post",
      "sdk_endpoint": "sslproxy.settings",
      "sdk_method": "create",
      "description": "Set vManage enterprise root certificate"
    },
    "getvManageCertificate": {
      "path": "/sslproxy/settings/vmanage/certificate",
      "method": "get",
      "sdk_endpoint": "sslproxy.settings",
      "sdk_method": "get",
      "description": "Get vManage intermediate certificate"
    },
    "setvManageintermediateCert": {
      "path": "/sslproxy/settings/vmanage/certificate",
      "method": "post",
      "sdk_endpoint": "sslproxy.settings",
      "sdk_method": "create",
      "description": "Set vManage root certificate"
    },
    "getvManageCSR": {
      "path": "/sslproxy/settings/vmanage/csr",
      "method": "get",
      "sdk_endpoint": "sslproxy.settings",
      "sdk_method": "get",
      "description": "Get vManage CSR"
    },
    "getvManageRootCA": {
      "path": "/sslproxy/settings/vmanage/rootca",
      "method": "get",
      "sdk_endpoint": "sslproxy.settings",
      "sdk_method": "get",
      "description": "Get vManage root certificate"
    },
    "setvManageRootCA": {
      "path": "/sslproxy/settings/vmanage/rootca",
      "method": "post",
      "sdk_endpoint": "sslproxy.settings",
      "sdk_method": "create",
      "description": "Set vManage root certificate"
    },
    "getStatisticType": {
      "path": "/statistics",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get statistics types"
    },
    "getStatsRawData_13": {
      "path": "/statistics",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_14": {
      "path": "/statistics/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_14": {
      "path": "/statistics/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawData_1": {
      "path": "/statistics/apphosting",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_1": {
      "path": "/statistics/apphosting",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_1": {
      "path": "/statistics/apphosting/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_1": {
      "path": "/statistics/apphosting/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawDataAsCSV_1": {
      "path": "/statistics/apphosting/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount_2": {
      "path": "/statistics/apphosting/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_2": {
      "path": "/statistics/apphosting/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_2": {
      "path": "/statistics/apphosting/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatsPaginationRawData_1": {
      "path": "/statistics/apphosting/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_1": {
      "path": "/statistics/apphosting/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_2": {
      "path": "/statistics/apphosting/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getStatDataRawData": {
      "path": "/statistics/apphostinginterface",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData": {
      "path": "/statistics/apphostinginterface",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery": {
      "path": "/statistics/apphostinginterface/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery": {
      "path": "/statistics/apphostinginterface/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawDataAsCSV": {
      "path": "/statistics/apphostinginterface/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount_1": {
      "path": "/statistics/apphostinginterface/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_1": {
      "path": "/statistics/apphostinginterface/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_1": {
      "path": "/statistics/apphostinginterface/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatsPaginationRawData": {
      "path": "/statistics/apphostinginterface/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData": {
      "path": "/statistics/apphostinginterface/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_1": {
      "path": "/statistics/apphostinginterface/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getStatDataRawData_2": {
      "path": "/statistics/approute",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_2": {
      "path": "/statistics/approute",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_2": {
      "path": "/statistics/approute/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_2": {
      "path": "/statistics/approute/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationAppDataByQuery9": {
      "path": "/statistics/approute/app-agg/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawDataAsCSV_2": {
      "path": "/statistics/approute/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getStatsAppRouteDeviceTunnelSummary": {
      "path": "/statistics/approute/device/tunnel/summary",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get statistics for top applications per tunnel in a grid table"
    },
    "getStatsAppRouteDeviceTunnels": {
      "path": "/statistics/approute/device/tunnels",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get statistics for top applications per tunnel in a grid table"
    },
    "getDocCount_1": {
      "path": "/statistics/approute/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getDocCountPost": {
      "path": "/statistics/approute/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getAppRouteFecAgg": {
      "path": "/statistics/approute/fec/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregation data and fec recovery rate"
    },
    "getStatDataFields_3": {
      "path": "/statistics/approute/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatBulkRawData": {
      "path": "/statistics/approute/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatBulkRawData": {
      "path": "/statistics/approute/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_3": {
      "path": "/statistics/approute/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getApprouteTloc": {
      "path": "/statistics/approute/tloc",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get tloc"
    },
    "getAppRouteTransportSummaryType": {
      "path": "/statistics/approute/transport/summary/{type}",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get application-aware routing statistics summary from device"
    },
    "getAppRouteTransportType": {
      "path": "/statistics/approute/transport/{type}",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get application-aware routing statistics from device"
    },
    "getAppRouteTunnelSummaryType": {
      "path": "/statistics/approute/tunnel/{type}/summary",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get tunnel top statistics in as chart"
    },
    "getAppRouteTunnelHealth": {
      "path": "/statistics/approute/tunnels/health/{type}",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get tunnel health"
    },
    "getAppRouteTunnelsSummaryType": {
      "path": "/statistics/approute/tunnels/summary/{type}",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get tunnel top statistics from device"
    },
    "getAppRouteTunnelType": {
      "path": "/statistics/approute/tunnels/{type}",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get tunnel top statistics from device"
    },
    "getStatDataRawData_4": {
      "path": "/statistics/art",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_4": {
      "path": "/statistics/art",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_4": {
      "path": "/statistics/art/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_4": {
      "path": "/statistics/art/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawDataAsCSV_4": {
      "path": "/statistics/art/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount_4": {
      "path": "/statistics/art/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_4": {
      "path": "/statistics/art/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_5": {
      "path": "/statistics/art/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatsPaginationRawData_3": {
      "path": "/statistics/art/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_3": {
      "path": "/statistics/art/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_5": {
      "path": "/statistics/art/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getStatDataRawData_5": {
      "path": "/statistics/bfd",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_5": {
      "path": "/statistics/bfd",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_5": {
      "path": "/statistics/bfd/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_5": {
      "path": "/statistics/bfd/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawDataAsCSV_5": {
      "path": "/statistics/bfd/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount_5": {
      "path": "/statistics/bfd/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_5": {
      "path": "/statistics/bfd/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_6": {
      "path": "/statistics/bfd/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatsPaginationRawData_4": {
      "path": "/statistics/bfd/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_4": {
      "path": "/statistics/bfd/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_6": {
      "path": "/statistics/bfd/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getStatDataRawData_6": {
      "path": "/statistics/bridgeinterface",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_6": {
      "path": "/statistics/bridgeinterface",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_6": {
      "path": "/statistics/bridgeinterface/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_6": {
      "path": "/statistics/bridgeinterface/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawDataAsCSV_6": {
      "path": "/statistics/bridgeinterface/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount_6": {
      "path": "/statistics/bridgeinterface/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_6": {
      "path": "/statistics/bridgeinterface/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_7": {
      "path": "/statistics/bridgeinterface/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatsPaginationRawData_5": {
      "path": "/statistics/bridgeinterface/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_5": {
      "path": "/statistics/bridgeinterface/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_7": {
      "path": "/statistics/bridgeinterface/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getStatDataRawData_7": {
      "path": "/statistics/bridgemac",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_7": {
      "path": "/statistics/bridgemac",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_7": {
      "path": "/statistics/bridgemac/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_7": {
      "path": "/statistics/bridgemac/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawDataAsCSV_7": {
      "path": "/statistics/bridgemac/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount_7": {
      "path": "/statistics/bridgemac/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_7": {
      "path": "/statistics/bridgemac/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_8": {
      "path": "/statistics/bridgemac/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatsPaginationRawData_6": {
      "path": "/statistics/bridgemac/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_6": {
      "path": "/statistics/bridgemac/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_8": {
      "path": "/statistics/bridgemac/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getStatDataRawData_9": {
      "path": "/statistics/cflowd",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_9": {
      "path": "/statistics/cflowd",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_9": {
      "path": "/statistics/cflowd/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_9": {
      "path": "/statistics/cflowd/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "createFlowsGrid": {
      "path": "/statistics/cflowd/applications",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Generate cflowd flows list in a grid table"
    },
    "createFlowssummary": {
      "path": "/statistics/cflowd/applications/summary",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Generate cflowd flows list in a grid table"
    },
    "getStatDataRawDataAsCSV_9": {
      "path": "/statistics/cflowd/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "createFlowDeviceData": {
      "path": "/statistics/cflowd/device/applications",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Generate cflowd flows list in a grid table"
    },
    "getCount_9": {
      "path": "/statistics/cflowd/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_9": {
      "path": "/statistics/cflowd/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_10": {
      "path": "/statistics/cflowd/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatsPaginationRawData_8": {
      "path": "/statistics/cflowd/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_8": {
      "path": "/statistics/cflowd/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_10": {
      "path": "/statistics/cflowd/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getStatDataRawData_10": {
      "path": "/statistics/cloudx",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_10": {
      "path": "/statistics/cloudx",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_10": {
      "path": "/statistics/cloudx/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_10": {
      "path": "/statistics/cloudx/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawDataAsCSV_10": {
      "path": "/statistics/cloudx/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount_10": {
      "path": "/statistics/cloudx/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_10": {
      "path": "/statistics/cloudx/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_11": {
      "path": "/statistics/cloudx/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatsPaginationRawData_9": {
      "path": "/statistics/cloudx/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_9": {
      "path": "/statistics/cloudx/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_11": {
      "path": "/statistics/cloudx/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "startStatsCollection": {
      "path": "/statistics/collect",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Start stats collect"
    },
    "generateStatsCollectThreadReport": {
      "path": "/statistics/collect/thread/status",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats collect thread report"
    },
    "resetStatsCollection": {
      "path": "/statistics/collection/reset/{processQueue}",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Reset stats collect thread report"
    },
    "getPostCryptoDataByQuery": {
      "path": "/statistics/cryptovpn/common",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "crypto vpn common data"
    },
    "getPostCryptoDMVPNDataByQuery": {
      "path": "/statistics/cryptovpn/dmvpn",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "crypto vpn dmvpn data"
    },
    "getStatDataRawDataAsCSV_13": {
      "path": "/statistics/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "enableStatisticsDemoMode": {
      "path": "/statistics/demomode",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Enable statistic demo mode"
    },
    "getStatDataRawData_16": {
      "path": "/statistics/device",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_17": {
      "path": "/statistics/device",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_18": {
      "path": "/statistics/device/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_20": {
      "path": "/statistics/device/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawDataAsCSV_16": {
      "path": "/statistics/device/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount_15": {
      "path": "/statistics/device/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_16": {
      "path": "/statistics/device/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_17": {
      "path": "/statistics/device/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatsPaginationRawData_14": {
      "path": "/statistics/device/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_14": {
      "path": "/statistics/device/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_18": {
      "path": "/statistics/device/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getDeviceHealthHistory": {
      "path": "/statistics/devicehealth/history",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Device health history data"
    },
    "getDeviceHealthOverview": {
      "path": "/statistics/devicehealth/overview/{type}",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Device health overview data"
    },
    "getCount_12": {
      "path": "/statistics/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_13": {
      "path": "/statistics/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "fetchList": {
      "path": "/statistics/download/{processType}/fetchvManageList",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": ""
    },
    "download": {
      "path": "/statistics/download/{processType}/file/{fileType}/{queue}/{deviceIp}/{token}/{fileName}",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Downloading stats file"
    },
    "downloadList": {
      "path": "/statistics/download/{processType}/filelist",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Downloading list of stats file"
    },
    "getDPIStatsRawData": {
      "path": "/statistics/dpi",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get DPI stats raw data"
    },
    "getDPIStatsRawDataPost": {
      "path": "/statistics/dpi",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get DPI stats raw data"
    },
    "getAggAppDataPost": {
      "path": "/statistics/dpi/agg-app/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get raw aggregated data and display applications with the highest utilization for a device"
    },
    "getDPIStatsAggregationData": {
      "path": "/statistics/dpi/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getDPIStatsAggregationDataPost": {
      "path": "/statistics/dpi/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get raw aggregated data and display applications with the highest utilization for a device"
    },
    "getAggAppFlows": {
      "path": "/statistics/dpi/applications",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get detailed DPI application flows list in a grid table"
    },
    "getAggAppFlowsSummary": {
      "path": "/statistics/dpi/applications/summary",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get detailed DPI application flows summary"
    },
    "getDPIStatsRawDataAsCSV": {
      "path": "/statistics/dpi/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getDPIDeviceAppUniqueFlowCount": {
      "path": "/statistics/dpi/device/application/flowcount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get application flow count per tunnel"
    },
    "getDPIDeviceAppAggregationData": {
      "path": "/statistics/dpi/device/applications",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get DPI application flows device aggregation data"
    },
    "getDPIDeviceAppDetails": {
      "path": "/statistics/dpi/device/details/applications",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get detailed DPI device and application list"
    },
    "getDPIStatsCount": {
      "path": "/statistics/dpi/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getDPIStatsCountPost": {
      "path": "/statistics/dpi/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getDPIFields": {
      "path": "/statistics/dpi/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getDPIStatsPaginationRawData": {
      "path": "/statistics/dpi/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get DPI stats pagination raw data"
    },
    "getDPIStatsPaginationRawDataPost": {
      "path": "/statistics/dpi/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get DPI stats pagination raw data"
    },
    "getDPIStatsAggregationDataForPacketDup": {
      "path": "/statistics/dpi/pktdup/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get time series aggregation data for packet duplication for an application over TLOCs if available"
    },
    "getDPIQueryFields": {
      "path": "/statistics/dpi/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getDPIStatsAggregationDataForFec": {
      "path": "/statistics/dpi/recovery/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregation data and fec recovery rate if available"
    },
    "getStatDataRawData_8": {
      "path": "/statistics/eiolte",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_8": {
      "path": "/statistics/eiolte",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_8": {
      "path": "/statistics/eiolte/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_8": {
      "path": "/statistics/eiolte/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "cellularAggregation": {
      "path": "/statistics/eiolte/cellularAggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawDataAsCSV_8": {
      "path": "/statistics/eiolte/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount_8": {
      "path": "/statistics/eiolte/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_8": {
      "path": "/statistics/eiolte/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_9": {
      "path": "/statistics/eiolte/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatsPaginationRawData_7": {
      "path": "/statistics/eiolte/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_7": {
      "path": "/statistics/eiolte/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_9": {
      "path": "/statistics/eiolte/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "uniqueAggregation": {
      "path": "/statistics/eiolte/uniqueAggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get unique aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawData_19": {
      "path": "/statistics/endpointTracker",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_20": {
      "path": "/statistics/endpointTracker",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_21": {
      "path": "/statistics/endpointTracker/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_23": {
      "path": "/statistics/endpointTracker/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawDataAsCSV_19": {
      "path": "/statistics/endpointTracker/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount_18": {
      "path": "/statistics/endpointTracker/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_19": {
      "path": "/statistics/endpointTracker/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_20": {
      "path": "/statistics/endpointTracker/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatsPaginationRawData_17": {
      "path": "/statistics/endpointTracker/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_17": {
      "path": "/statistics/endpointTracker/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_21": {
      "path": "/statistics/endpointTracker/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getStatDataFields_14": {
      "path": "/statistics/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatDataRawData_14": {
      "path": "/statistics/flowlog",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatDataRawDataPost": {
      "path": "/statistics/flowlog",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_28": {
      "path": "/statistics/flowlog/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_31": {
      "path": "/statistics/flowlog/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawDataAsCSV_26": {
      "path": "/statistics/flowlog/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getFlowlogCount": {
      "path": "/statistics/flowlog/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getFlowlogCountPost": {
      "path": "/statistics/flowlog/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getFlowlogFields": {
      "path": "/statistics/flowlog/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatsPaginationRawData_24": {
      "path": "/statistics/flowlog/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats pagination raw data"
    },
    "getStatsPaginationRawDataPost": {
      "path": "/statistics/flowlog/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats pagination raw data"
    },
    "getFlowlogQueryFields": {
      "path": "/statistics/flowlog/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getStatDataRawData_24": {
      "path": "/statistics/fwall",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_25": {
      "path": "/statistics/fwall",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_26": {
      "path": "/statistics/fwall/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_28": {
      "path": "/statistics/fwall/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawDataAsCSV_24": {
      "path": "/statistics/fwall/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount_23": {
      "path": "/statistics/fwall/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_24": {
      "path": "/statistics/fwall/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_25": {
      "path": "/statistics/fwall/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatsPaginationRawData_22": {
      "path": "/statistics/fwall/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_22": {
      "path": "/statistics/fwall/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_26": {
      "path": "/statistics/fwall/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getStatDataRawData_11": {
      "path": "/statistics/interface",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_11": {
      "path": "/statistics/interface",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_11": {
      "path": "/statistics/interface/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_11": {
      "path": "/statistics/interface/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationAppDataByQuery": {
      "path": "/statistics/interface/app-agg/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getBandwidthDistribution": {
      "path": "/statistics/interface/ccapacity/distribution",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get bandwidth distribution"
    },
    "getStatDataRawDataAsCSV_11": {
      "path": "/statistics/interface/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount10": {
      "path": "/statistics/interface/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_11": {
      "path": "/statistics/interface/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_12": {
      "path": "/statistics/interface/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatBulkRawData_1": {
      "path": "/statistics/interface/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatBulkRawData_1": {
      "path": "/statistics/interface/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_12": {
      "path": "/statistics/interface/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getStatisticsPerInterface": {
      "path": "/statistics/interface/type",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get statistics per interface"
    },
    "getStatDataRawData_22": {
      "path": "/statistics/ipsalert",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_23": {
      "path": "/statistics/ipsalert",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_24": {
      "path": "/statistics/ipsalert/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_26": {
      "path": "/statistics/ipsalert/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawDataAsCSV_22": {
      "path": "/statistics/ipsalert/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount_21": {
      "path": "/statistics/ipsalert/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_22": {
      "path": "/statistics/ipsalert/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_23": {
      "path": "/statistics/ipsalert/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatsPaginationRawData_20": {
      "path": "/statistics/ipsalert/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_20": {
      "path": "/statistics/ipsalert/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_24": {
      "path": "/statistics/ipsalert/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getAggregationDataByQuery_3": {
      "path": "/statistics/nwa",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get network availability raw data based on input query and filters."
    },
    "getPostAggregationDataByQuery_3": {
      "path": "/statistics/nwa/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get network availability aggregated data based on input query and filters."
    },
    "getDetailAggregationDataByQuery": {
      "path": "/statistics/nwa/details",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get network availability aggregated data with details based on input query and filters."
    },
    "getQueueEntries": {
      "path": "/statistics/on-demand/queue",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "gets current on-demand queue entries"
    },
    "createQueueEntry": {
      "path": "/statistics/on-demand/queue",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Create on-demand troubleshooting queue entry"
    },
    "getQueueProperties": {
      "path": "/statistics/on-demand/queue/properties",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "gets current size of on-demand queue"
    },
    "updateQueueEntry": {
      "path": "/statistics/on-demand/queue/{entryId}",
      "method": "put",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "update",
      "description": "Updates on-demand troubleshooting queue entry"
    },
    "deleteQueueEntry": {
      "path": "/statistics/on-demand/queue/{entryId}",
      "method": "delete",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "delete",
      "description": "removes on-demand queue entry"
    },
    "getStatsPaginationRawData_11": {
      "path": "/statistics/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_11": {
      "path": "/statistics/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getPostAggregationDataByQuery_15": {
      "path": "/statistics/perfmon/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "one site one application line chart data"
    },
    "getApplicationHeatMapDetail": {
      "path": "/statistics/perfmon/application/heatmap/detail",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "single application site health detail"
    },
    "getApplicationSiteHealth": {
      "path": "/statistics/perfmon/application/site/health",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "one site one application health data"
    },
    "getApplicationSitesHealth": {
      "path": "/statistics/perfmon/application/sites/health",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "all sites one application health data"
    },
    "getApplicationsSiteHealth": {
      "path": "/statistics/perfmon/applications/site/health",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "one site all applications health data"
    },
    "getApplicationsSitesHealth": {
      "path": "/statistics/perfmon/applications/sites/health",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "all sites all applications health data"
    },
    "getStatsRawData_3": {
      "path": "/statistics/powerconsumption",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_16": {
      "path": "/statistics/powerconsumption/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPowerConsumptionDevice": {
      "path": "/statistics/powerconsumption/device",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get Power Consumption Per Device stats"
    },
    "getPowerConsumptionEnergyMix": {
      "path": "/statistics/powerconsumption/energymix",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get Power Consumption Energy Mix"
    },
    "getSupportedDeviceList": {
      "path": "/statistics/powerconsumption/supportdevicelist",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get power consumption collection supported device list"
    },
    "getPowerConsumptionTotal": {
      "path": "/statistics/powerconsumption/total",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get Power Consumption Total stats"
    },
    "processStatisticsData": {
      "path": "/statistics/process",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Process stats data"
    },
    "getStatisticsProcessingCounters": {
      "path": "/statistics/process/counters",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get statistics processing counters"
    },
    "generateStatsProcessReport": {
      "path": "/statistics/process/status",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats process report"
    },
    "generateStatsProcessThreadReport": {
      "path": "/statistics/process/thread/status",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats process thread report"
    },
    "getStatDataRawData_3": {
      "path": "/statistics/qfp",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_14": {
      "path": "/statistics/qfp",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_15": {
      "path": "/statistics/qfp/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_17": {
      "path": "/statistics/qfp/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawDataAsCSV_3": {
      "path": "/statistics/qfp/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount_3": {
      "path": "/statistics/qfp/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_3": {
      "path": "/statistics/qfp/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_4": {
      "path": "/statistics/qfp/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatsPaginationRawData_2": {
      "path": "/statistics/qfp/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_2": {
      "path": "/statistics/qfp/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_4": {
      "path": "/statistics/qfp/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getStatDataRawData_13": {
      "path": "/statistics/qos",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData12": {
      "path": "/statistics/qos",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_13": {
      "path": "/statistics/qos/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Monitoring - QoS"
    },
    "getPostAggregationDataByQuery_13": {
      "path": "/statistics/qos/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationAppDataByQuery_1": {
      "path": "/statistics/qos/app-agg/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawDataAsCSV12": {
      "path": "/statistics/qos/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount13": {
      "path": "/statistics/qos/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost13": {
      "path": "/statistics/qos/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields13": {
      "path": "/statistics/qos/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatBulkRawData_2": {
      "path": "/statistics/qos/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatBulkRawData12": {
      "path": "/statistics/qos/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_14": {
      "path": "/statistics/qos/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getStatQueryFields_15": {
      "path": "/statistics/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getSdraHeadendSummary": {
      "path": "/statistics/sdra/headends",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get SD-WAN Remote Access Head-end summary"
    },
    "getSdraSessionSummary": {
      "path": "/statistics/sdra/sessions",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get SD-WAN Remote Access session summary"
    },
    "getDisabledDeviceList": {
      "path": "/statistics/settings/disable/devicelist/{indexName}",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get list of disabled devices for a statistics index"
    },
    "updateStatisticsDeviceList": {
      "path": "/statistics/settings/disable/devicelist/{indexName}",
      "method": "put",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "update",
      "description": "Update list of disabled devices for a statistics index"
    },
    "getStatisticsSettings": {
      "path": "/statistics/settings/status",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get statistics settings"
    },
    "updateStatisticsSettings": {
      "path": "/statistics/settings/status",
      "method": "put",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "update",
      "description": "Update statistics settings"
    },
    "getEnabledIndexForDevice": {
      "path": "/statistics/settings/status/device",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get list of enabled device for statistics index"
    },
    "getStatDataRawData_15": {
      "path": "/statistics/sitehealth",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_15": {
      "path": "/statistics/sitehealth",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_16": {
      "path": "/statistics/sitehealth/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_18": {
      "path": "/statistics/sitehealth/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getSiteHealth": {
      "path": "/statistics/sitehealth/common",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "sitehealth data"
    },
    "getStatDataRawDataAsCSV_14": {
      "path": "/statistics/sitehealth/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount_13": {
      "path": "/statistics/sitehealth/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_14": {
      "path": "/statistics/sitehealth/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_15": {
      "path": "/statistics/sitehealth/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatsPaginationRawData_12": {
      "path": "/statistics/sitehealth/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_12": {
      "path": "/statistics/sitehealth/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_16": {
      "path": "/statistics/sitehealth/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getSiteHealthTopology": {
      "path": "/statistics/sitehealth/topology",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "sitehealth data"
    },
    "getStatDataRawData_26": {
      "path": "/statistics/speedtest",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_27": {
      "path": "/statistics/speedtest",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_29": {
      "path": "/statistics/speedtest/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_32": {
      "path": "/statistics/speedtest/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawDataAsCSV_27": {
      "path": "/statistics/speedtest/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount_25": {
      "path": "/statistics/speedtest/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_26": {
      "path": "/statistics/speedtest/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_27": {
      "path": "/statistics/speedtest/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatsPaginationRawData_25": {
      "path": "/statistics/speedtest/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_24": {
      "path": "/statistics/speedtest/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_29": {
      "path": "/statistics/speedtest/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getSulStatDataRawData": {
      "path": "/statistics/sul/connections",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get security connection events stats raw data"
    },
    "getStatsRawData_16": {
      "path": "/statistics/sul/connections",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_17": {
      "path": "/statistics/sul/connections/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_19": {
      "path": "/statistics/sul/connections/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationAppDataByQuery_2": {
      "path": "/statistics/sul/connections/app-agg/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawDataAsCSV_15": {
      "path": "/statistics/sul/connections/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount_14": {
      "path": "/statistics/sul/connections/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_15": {
      "path": "/statistics/sul/connections/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_16": {
      "path": "/statistics/sul/connections/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getFilterPolicyNameList": {
      "path": "/statistics/sul/connections/filter/policy_name/{policyType}",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get filter Policy Name list"
    },
    "getStatsPaginationRawData_13": {
      "path": "/statistics/sul/connections/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_13": {
      "path": "/statistics/sul/connections/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_17": {
      "path": "/statistics/sul/connections/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getStatDataRawData_17": {
      "path": "/statistics/system",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_18": {
      "path": "/statistics/system",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_19": {
      "path": "/statistics/system/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_21": {
      "path": "/statistics/system/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "createDeviceSystemCPUStat": {
      "path": "/statistics/system/cpu",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get device system CPU stats list"
    },
    "getStatDataRawDataAsCSV_17": {
      "path": "/statistics/system/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount_16": {
      "path": "/statistics/system/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_17": {
      "path": "/statistics/system/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_18": {
      "path": "/statistics/system/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "createDeviceSystemMemoryStat": {
      "path": "/statistics/system/memory",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get device system memory stats list"
    },
    "getStatsPaginationRawData_15": {
      "path": "/statistics/system/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_15": {
      "path": "/statistics/system/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_19": {
      "path": "/statistics/system/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getStatDataRawData_18": {
      "path": "/statistics/system/stats",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_19": {
      "path": "/statistics/system/stats",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_20": {
      "path": "/statistics/system/stats/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_22": {
      "path": "/statistics/system/stats/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawDataAsCSV_18": {
      "path": "/statistics/system/stats/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount_17": {
      "path": "/statistics/system/stats/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_18": {
      "path": "/statistics/system/stats/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_19": {
      "path": "/statistics/system/stats/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatsPaginationRawData_16": {
      "path": "/statistics/system/stats/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_16": {
      "path": "/statistics/system/stats/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_20": {
      "path": "/statistics/system/stats/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "statisticsApprouteTunnelhealthHistoryGet": {
      "path": "/statistics/tunnelhealth/history",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Tunnel health history data"
    },
    "statisticsApprouteTunnelhealthOverviewTypeGet": {
      "path": "/statistics/tunnelhealth/overview/{type}",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Tunnel health overview data"
    },
    "getStatDataRawData_25": {
      "path": "/statistics/umbrella",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_26": {
      "path": "/statistics/umbrella",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_27": {
      "path": "/statistics/umbrella/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_29": {
      "path": "/statistics/umbrella/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawDataAsCSV_25": {
      "path": "/statistics/umbrella/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount_24": {
      "path": "/statistics/umbrella/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_25": {
      "path": "/statistics/umbrella/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_26": {
      "path": "/statistics/umbrella/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatsPaginationRawData_23": {
      "path": "/statistics/umbrella/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_23": {
      "path": "/statistics/umbrella/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_27": {
      "path": "/statistics/umbrella/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getStatDataRawData_23": {
      "path": "/statistics/urlf",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_24": {
      "path": "/statistics/urlf",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_25": {
      "path": "/statistics/urlf/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_27": {
      "path": "/statistics/urlf/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawDataAsCSV_23": {
      "path": "/statistics/urlf/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount_22": {
      "path": "/statistics/urlf/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_23": {
      "path": "/statistics/urlf/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_24": {
      "path": "/statistics/urlf/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatsPaginationRawData_21": {
      "path": "/statistics/urlf/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_21": {
      "path": "/statistics/urlf/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_25": {
      "path": "/statistics/urlf/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getStatDataRawData_12": {
      "path": "/statistics/vnfstatistics",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_12": {
      "path": "/statistics/vnfstatistics",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_12": {
      "path": "/statistics/vnfstatistics/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_12": {
      "path": "/statistics/vnfstatistics/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawDataAsCSV_12": {
      "path": "/statistics/vnfstatistics/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount_11": {
      "path": "/statistics/vnfstatistics/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_12": {
      "path": "/statistics/vnfstatistics/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_13": {
      "path": "/statistics/vnfstatistics/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatsPaginationRawData_10": {
      "path": "/statistics/vnfstatistics/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_10": {
      "path": "/statistics/vnfstatistics/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_13": {
      "path": "/statistics/vnfstatistics/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getStatDataRawData_20": {
      "path": "/statistics/wlanclientinfo",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getStatsRawData_21": {
      "path": "/statistics/wlanclientinfo",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getAggregationDataByQuery_22": {
      "path": "/statistics/wlanclientinfo/aggregation",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getPostAggregationDataByQuery_24": {
      "path": "/statistics/wlanclientinfo/aggregation",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get aggregated data based on input query and filters. The data can be filtered on time and other unique parameters based upon necessity and intended usage"
    },
    "getStatDataRawDataAsCSV_20": {
      "path": "/statistics/wlanclientinfo/csv",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get raw data with optional query as CSV"
    },
    "getCount_19": {
      "path": "/statistics/wlanclientinfo/doccount",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getCountPost_20": {
      "path": "/statistics/wlanclientinfo/doccount",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get response count of a query"
    },
    "getStatDataFields_21": {
      "path": "/statistics/wlanclientinfo/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get fields and type"
    },
    "getStatsPaginationRawData_18": {
      "path": "/statistics/wlanclientinfo/page",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get stats raw data"
    },
    "getPostStatsPaginationRawData_18": {
      "path": "/statistics/wlanclientinfo/page",
      "method": "post",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "create",
      "description": "Get stats raw data"
    },
    "getStatQueryFields_22": {
      "path": "/statistics/wlanclientinfo/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.statistics",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getSessionInfoCapture": {
      "path": "/stream/device/capture",
      "method": "post",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "create",
      "description": "Create packet capture session"
    },
    "disablePacketCaptureSession": {
      "path": "/stream/device/capture/disable/{sessionId}",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Disable packet capture session"
    },
    "downloadFile": {
      "path": "/stream/device/capture/download/{sessionId}",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Download packet capture file"
    },
    "forceStopPcapSession": {
      "path": "/stream/device/capture/forcedisbale/{sessionId}",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Force stop packet capture session"
    },
    "startPcapSession": {
      "path": "/stream/device/capture/start/{sessionId}",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Start packet capture session"
    },
    "getFileDownloadStatus": {
      "path": "/stream/device/capture/status/{sessionId}",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get packet capture session status"
    },
    "stopPcapSession": {
      "path": "/stream/device/capture/stop/{sessionId}",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Stop packet capture session"
    },
    "getVnicInfoByVnfId": {
      "path": "/stream/device/capture/vnicsInfo/{vnfId}",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get vnic info by vrfId"
    },
    "formPostPacketCapture": {
      "path": "/stream/device/capture/{deviceUUID}/{sessionId}",
      "method": "post",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "create",
      "description": "Form post packet capture"
    },
    "getSessionInfoLog": {
      "path": "/stream/device/log",
      "method": "post",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "create",
      "description": ""
    },
    "disableDeviceLog": {
      "path": "/stream/device/log/disable/{sessionId}",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": ""
    },
    "downloadDebugLog": {
      "path": "/stream/device/log/download/{sessionId}",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": ""
    },
    "renewSessionInfo": {
      "path": "/stream/device/log/renew/{sessionId}",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": ""
    },
    "searchDeviceLog": {
      "path": "/stream/device/log/search/{sessionId}",
      "method": "post",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "create",
      "description": ""
    },
    "getSessions": {
      "path": "/stream/device/log/sessions",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": ""
    },
    "clearSession": {
      "path": "/stream/device/log/sessions/clear/{sessionId}",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": ""
    },
    "getLogType": {
      "path": "/stream/device/log/type",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": ""
    },
    "streamLog": {
      "path": "/stream/device/log/{logType}/{deviceUUID}/{sessionId}",
      "method": "post",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "create",
      "description": ""
    },
    "getDeviceLog": {
      "path": "/stream/device/log/{sessionId}",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": ""
    },
    "activeFlowWithQuery": {
      "path": "/stream/device/nwpi/activeFlowWithQuery",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get active flows for NWPI."
    },
    "getAggFlow": {
      "path": "/stream/device/nwpi/aggFlow",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get aggregated flow data for NWPI."
    },
    "getAppQosData": {
      "path": "/stream/device/nwpi/appQosData",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get QoS Application data for NWPI."
    },
    "getAppQosState": {
      "path": "/stream/device/nwpi/appQosState",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get QoS Application state to received timestamp mapping for NWPI."
    },
    "getConcurrentData": {
      "path": "/stream/device/nwpi/concurrentData",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get concurrent data for NWPI."
    },
    "getConcurrentDomainData": {
      "path": "/stream/device/nwpi/concurrentDomainData",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get concurrent domain data for NWPI."
    },
    "getCurrentTimestamp": {
      "path": "/stream/device/nwpi/currentTimestamp",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": ""
    },
    "delDeviceBlack": {
      "path": "/stream/device/nwpi/device/blist/del",
      "method": "delete",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "delete",
      "description": "Delete Device BlackList for NWPI."
    },
    "getDeviceBList": {
      "path": "/stream/device/nwpi/device/blist/get",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get Device BlackList for NWPI."
    },
    "getDevicesAndInterfacesBySite": {
      "path": "/stream/device/nwpi/deviceInfoBySite",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get device and interface data by site"
    },
    "getDomainMetric": {
      "path": "/stream/device/nwpi/domainMetric",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": ""
    },
    "getEventAppHopList": {
      "path": "/stream/device/nwpi/eventAppHopList",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get Trace Application and HopList for NWPI."
    },
    "getEventAppScoreBandwidth": {
      "path": "/stream/device/nwpi/eventAppScoreBandwidth",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get Trace Event Application Performance Score and Bandwidth for NWPI."
    },
    "getEventFlowFromAppHop": {
      "path": "/stream/device/nwpi/eventFlowFromAppHop",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get Trace Event Flow From Application And Hop for NWPI."
    },
    "getEventReadout": {
      "path": "/stream/device/nwpi/eventReadout",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get Trace Event Readout for NWPI."
    },
    "getEventReadoutBySite": {
      "path": "/stream/device/nwpi/eventReadoutBySite",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get event Readout By Site"
    },
    "getEventReadoutByTraces": {
      "path": "/stream/device/nwpi/eventReadoutByTraces",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get event Readout By Traces"
    },
    "exportTrace": {
      "path": "/stream/device/nwpi/exportTrace",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Export NWPI Trace Data"
    },
    "getFinalizedData": {
      "path": "/stream/device/nwpi/finalizedData",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "finalizedData for NWPI."
    },
    "getFinalizedDomainData": {
      "path": "/stream/device/nwpi/finalizedDomainData",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get Domain data for NWPI."
    },
    "getFlowDetail": {
      "path": "/stream/device/nwpi/flowDetail",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "flowDetail for NWPI."
    },
    "getFlowMetric": {
      "path": "/stream/device/nwpi/flowMetric",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "flowMetric for NWPI."
    },
    "getMonitorState": {
      "path": "/stream/device/nwpi/getMonitorState",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "getMonitorState"
    },
    "importTrace": {
      "path": "/stream/device/nwpi/importTrace",
      "method": "post",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "create",
      "description": "Import Trace"
    },
    "monitorOverrideStart": {
      "path": "/stream/device/nwpi/monitor/overrideStart",
      "method": "post",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "create",
      "description": "CXP Monitor Action - Override Start"
    },
    "monitorStart": {
      "path": "/stream/device/nwpi/monitor/start",
      "method": "post",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "create",
      "description": "CXP Monitor Action - Start"
    },
    "monitorStop": {
      "path": "/stream/device/nwpi/monitor/stop",
      "method": "post",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "create",
      "description": "CXP Monitor Action - Stop"
    },
    "getNwpiDscp": {
      "path": "/stream/device/nwpi/nwpiDSCP",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": ""
    },
    "getNwpiNbarAppGroup": {
      "path": "/stream/device/nwpi/nwpiNbarAppGroup",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": ""
    },
    "getNwpiProtocol": {
      "path": "/stream/device/nwpi/nwpiProtocol",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": ""
    },
    "nwpiSettingView": {
      "path": "/stream/device/nwpi/nwpiSettingView",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "get NWPI setting"
    },
    "getPacketFeatures": {
      "path": "/stream/device/nwpi/packetFeatures",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "packetFeatures for NWPI."
    },
    "getPreloadInfo": {
      "path": "/stream/device/nwpi/preloadinfo",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": ""
    },
    "getStatQueryFields_28": {
      "path": "/stream/device/nwpi/query/fields",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get query fields"
    },
    "getRoutingDetailFromLocal": {
      "path": "/stream/device/nwpi/routingDetail",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get Routing Details for NWPI."
    },
    "taskCreate": {
      "path": "/stream/device/nwpi/tasks/create",
      "method": "post",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "create",
      "description": "Task Action - Create"
    },
    "taskDelete": {
      "path": "/stream/device/nwpi/tasks/delete/{taskId}",
      "method": "delete",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "delete",
      "description": "Delete Auto On Task"
    },
    "getEventStatsData": {
      "path": "/stream/device/nwpi/tasks/eventStatsData",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get auto on stats data in one task"
    },
    "taskStop": {
      "path": "/stream/device/nwpi/tasks/stop/{taskId}",
      "method": "post",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "create",
      "description": "Task Action - Stop"
    },
    "getTaskHistory": {
      "path": "/stream/device/nwpi/tasks/taskHistory",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get all the auto on tasks"
    },
    "getTaskTrace": {
      "path": "/stream/device/nwpi/tasks/{taskId}/traces",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get all traces in one task"
    },
    "traceDelete": {
      "path": "/stream/device/nwpi/trace/delete",
      "method": "delete",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "delete",
      "description": "Trace Action - Delete"
    },
    "nwpiPostFlowData": {
      "path": "/stream/device/nwpi/trace/record/{deviceUUID}",
      "method": "post",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "create",
      "description": "post flow data"
    },
    "traceStart": {
      "path": "/stream/device/nwpi/trace/start",
      "method": "post",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "create",
      "description": "Trace Action - Start"
    },
    "traceStop": {
      "path": "/stream/device/nwpi/trace/stop/{traceId}",
      "method": "post",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "create",
      "description": "Trace Action - Stop"
    },
    "getTraceCftRecord": {
      "path": "/stream/device/nwpi/traceCftRecord",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get Trace CFT record"
    },
    "getFinalizedFlowCount": {
      "path": "/stream/device/nwpi/traceFinFlowCount",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Retrieve total Fin Flow counts"
    },
    "getFinFlowTimeRange": {
      "path": "/stream/device/nwpi/traceFinFlowTimeRange",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Retrieve Fin Flow time range"
    },
    "traceFinFlowWithQuery": {
      "path": "/stream/device/nwpi/traceFinFlowWithQuery",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Retrieve Certain Fin Flows"
    },
    "getTraceFlow": {
      "path": "/stream/device/nwpi/traceFlow",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "getTraceFlow"
    },
    "getTraceHistory": {
      "path": "/stream/device/nwpi/traceHistory",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get historical traces"
    },
    "getTraceInfoByBaseKey": {
      "path": "/stream/device/nwpi/traceInfoByBaseKey",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get TraceInfoByBaseKey"
    },
    "getTraceReadoutFilter": {
      "path": "/stream/device/nwpi/traceReadoutFilter",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "Get event Readout Filter By Traces"
    },
    "upsertSetting": {
      "path": "/stream/device/nwpi/upsertSetting",
      "method": "post",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "create",
      "description": "insert or update setting"
    },
    "getSession": {
      "path": "/stream/device/speed",
      "method": "post",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "create",
      "description": ""
    },
    "disableSpeedTestSession": {
      "path": "/stream/device/speed/disable/{sessionId}",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": ""
    },
    "getInterfaceBandwidth": {
      "path": "/stream/device/speed/interface/bandwidth",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": ""
    },
    "startSpeedTest": {
      "path": "/stream/device/speed/start/{sessionId}",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": ""
    },
    "getSpeedTestStatus": {
      "path": "/stream/device/speed/status/{sessionId}",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": ""
    },
    "stopSpeedTest": {
      "path": "/stream/device/speed/stop/{sessionId}",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": ""
    },
    "saveSpeedTestResults": {
      "path": "/stream/device/speed/{deviceUUID}/{sessionId}",
      "method": "post",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "create",
      "description": ""
    },
    "getSpeedTest": {
      "path": "/stream/device/speed/{sessionId}",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": ""
    },
    "processDeviceStatus": {
      "path": "/stream/device/status/{deviceUUID}",
      "method": "post",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "create",
      "description": "Get device status stream"
    },
    "enableSession": {
      "path": "/stream/device/umts",
      "method": "post",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "create",
      "description": "Assign sessionId to client"
    },
    "getUMTSData": {
      "path": "/stream/device/umts/statistics/{deviceUUID}/{eventType}",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "get UMTS Data"
    },
    "saveUMTSData": {
      "path": "/stream/device/umts/{deviceUUID}/save",
      "method": "post",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "create",
      "description": "save UMTS result"
    },
    "updateUmtsSessionStatus": {
      "path": "/stream/device/umts/{operation}/{sessionId}",
      "method": "get",
      "sdk_endpoint": "monitoring.stream",
      "sdk_method": "get",
      "description": "start/stop/disable/status/download session"
    },
    "createDevice": {
      "path": "/system/device",
      "method": "post",
      "sdk_endpoint": "system.device",
      "sdk_method": "create",
      "description": "Create new device<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view 123."
    },
    "generateBootstrapConfigForVedge": {
      "path": "/system/device/bootstrap/device/{uuid}",
      "method": "get",
      "sdk_endpoint": "system.device",
      "sdk_method": "get",
      "description": "Create vEdge device config"
    },
    "generateBootstrapConfigForVedges": {
      "path": "/system/device/bootstrap/devices",
      "method": "post",
      "sdk_endpoint": "system.device",
      "sdk_method": "create",
      "description": "Create bootstrap config for software vEdges"
    },
    "getBootstrapConfigZip": {
      "path": "/system/device/bootstrap/download/{id}",
      "method": "get",
      "sdk_endpoint": "system.device",
      "sdk_method": "get",
      "description": "Download vEdge device config"
    },
    "generateGenericBootstrapConfigForVedges": {
      "path": "/system/device/bootstrap/generic/devices",
      "method": "get",
      "sdk_endpoint": "system.device",
      "sdk_method": "get",
      "description": "Create bootstrap config for software vEdges"
    },
    "claimDevices": {
      "path": "/system/device/claimDevices",
      "method": "post",
      "sdk_endpoint": "system.device",
      "sdk_method": "create",
      "description": "Claim the selected unclaimed devices"
    },
    "getControllerVEdgeSyncStatus_1": {
      "path": "/system/device/controllers/vedge/status",
      "method": "get",
      "sdk_endpoint": "system.device",
      "sdk_method": "get",
      "description": "Get controllers vEdge sync status"
    },
    "decommissionVedgeCloud": {
      "path": "/system/device/decommission/{uuid}",
      "method": "put",
      "sdk_endpoint": "system.device",
      "sdk_method": "update",
      "description": "Decomission vEdge device"
    },
    "devicesWithoutSubjectSudi": {
      "path": "/system/device/devicesWithoutSubjectSudi",
      "method": "get",
      "sdk_endpoint": "system.device",
      "sdk_method": "get",
      "description": "retrieve devices without subject sudi"
    },
    "formPost": {
      "path": "/system/device/fileupload",
      "method": "post",
      "sdk_endpoint": "system.device",
      "sdk_method": "create",
      "description": "Upload file to vEdge"
    },
    "validateUser": {
      "path": "/system/device/generate-payg",
      "method": "post",
      "sdk_endpoint": "system.device",
      "sdk_method": "create",
      "description": "Authenticate vSmart user account"
    },
    "setLifeCycle": {
      "path": "/system/device/lifecycle/management/{uuid}",
      "method": "post",
      "sdk_endpoint": "system.device",
      "sdk_method": "create",
      "description": "Set device lifecycle needed flag"
    },
    "getManagementSystemIPInfo_1": {
      "path": "/system/device/management/systemip",
      "method": "get",
      "sdk_endpoint": "system.device",
      "sdk_method": "get",
      "description": "Get management system IP mapping"
    },
    "migrateDevice": {
      "path": "/system/device/migrateDevice/{uuid}",
      "method": "put",
      "sdk_endpoint": "system.device",
      "sdk_method": "update",
      "description": "Migrate device software to vedge/cedge"
    },
    "getSmartAccountDevices": {
      "path": "/system/device/quickconnect/smartaccount/sync",
      "method": "post",
      "sdk_endpoint": "system.device",
      "sdk_method": "create",
      "description": "Sync devices from Smart-Account"
    },
    "resetVedgeCloud": {
      "path": "/system/device/reset/{uuid}",
      "method": "put",
      "sdk_endpoint": "system.device",
      "sdk_method": "update",
      "description": "Reset vEdge device"
    },
    "getRMACandidates": {
      "path": "/system/device/rma/candidates/{deviceType}",
      "method": "get",
      "sdk_endpoint": "system.device",
      "sdk_method": "get",
      "description": "Get RMA candidates by device type"
    },
    "getRootCertStatusAll": {
      "path": "/system/device/rootcertchain/status",
      "method": "get",
      "sdk_endpoint": "system.device",
      "sdk_method": "get",
      "description": "Get controllers vEdge sync status"
    },
    "checkSelfSignedCert_1": {
      "path": "/system/device/selfsignedcert/iscreated",
      "method": "get",
      "sdk_endpoint": "system.device",
      "sdk_method": "get",
      "description": "Whether self signed certificate created"
    },
    "smartAccountAuthenticate": {
      "path": "/system/device/smartaccount/authenticate",
      "method": "post",
      "sdk_endpoint": "system.device",
      "sdk_method": "create",
      "description": "Authenticate vSmart user account"
    },
    "syncDevices": {
      "path": "/system/device/smartaccount/sync",
      "method": "post",
      "sdk_endpoint": "system.device",
      "sdk_method": "create",
      "description": "Sync devices from Smart-Account"
    },
    "syncRootCertChain": {
      "path": "/system/device/sync/rootcertchain",
      "method": "get",
      "sdk_endpoint": "system.device",
      "sdk_method": "get",
      "description": "Sync root certificate"
    },
    "getTenantManagementSystemIPs": {
      "path": "/system/device/tenant/management/systemip",
      "method": "get",
      "sdk_endpoint": "system.device",
      "sdk_method": "get",
      "description": "Get management system IP<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getCloudDockDataBasedOnDeviceType": {
      "path": "/system/device/type/{deviceCategory}",
      "method": "get",
      "sdk_endpoint": "system.device",
      "sdk_method": "get",
      "description": "Get devices details"
    },
    "getCloudDockDefaultConfigBasedOnDeviceType": {
      "path": "/system/device/type/{deviceCategory}/defaultConfig",
      "method": "get",
      "sdk_endpoint": "system.device",
      "sdk_method": "get",
      "description": "Get devices default config"
    },
    "getAllUnclaimedDevices": {
      "path": "/system/device/unclaimedDevices",
      "method": "get",
      "sdk_endpoint": "system.device",
      "sdk_method": "get",
      "description": "Get list of all unclaimed devices"
    },
    "updateDeviceSubjectSUDI": {
      "path": "/system/device/updateDeviceSubjectSUDI/{uuid}",
      "method": "put",
      "sdk_endpoint": "system.device",
      "sdk_method": "update",
      "description": "update subject sudi value of given device uuid"
    },
    "checkvEdgeDevicePresence": {
      "path": "/system/device/vedgedetection",
      "method": "get",
      "sdk_endpoint": "system.device",
      "sdk_method": "get",
      "description": "Check for Vedge Device Presence"
    },
    "invalidateVmanageRootCA": {
      "path": "/system/device/vmanagerootca/{uuid}",
      "method": "delete",
      "sdk_endpoint": "system.device",
      "sdk_method": "delete",
      "description": "Invalidate vManage root CA"
    },
    "getDevicesDetails": {
      "path": "/system/device/{deviceCategory}",
      "method": "get",
      "sdk_endpoint": "system.device",
      "sdk_method": "get",
      "description": "Get devices details. When {deviceCategory = controllers}, it returns vEdge sync status, vBond, vManage and vSmart. When {deviceCategory = vedges}, it returns all available vEdge routers"
    },
    "editDevice": {
      "path": "/system/device/{uuid}",
      "method": "put",
      "sdk_endpoint": "system.device",
      "sdk_method": "update",
      "description": "Edit device"
    },
    "deleteDevice_1": {
      "path": "/system/device/{uuid}",
      "method": "delete",
      "sdk_endpoint": "system.device",
      "sdk_method": "delete",
      "description": "Delete vEdges"
    },
    "unlockDevice": {
      "path": "/system/device/{uuid}/unlock",
      "method": "post",
      "sdk_endpoint": "system.device",
      "sdk_method": "create",
      "description": "Unlock device"
    },
    "getReverseProxyMappings": {
      "path": "/system/reverseproxy/{uuid}",
      "method": "get",
      "sdk_endpoint": "system.reverseproxy",
      "sdk_method": "get",
      "description": "Get reverse proxy IP/Port mappings for controller"
    },
    "createReverseProxyMappings": {
      "path": "/system/reverseproxy/{uuid}",
      "method": "post",
      "sdk_endpoint": "system.reverseproxy",
      "sdk_method": "create",
      "description": "Create reverse proxy IP/Port mappings for controller"
    },
    "getCloudXStatus": {
      "path": "/template/cloudx",
      "method": "get",
      "sdk_endpoint": "template.cloudx",
      "sdk_method": "get",
      "description": "Get CloudX feature list"
    },
    "addCloudxType": {
      "path": "/template/cloudx/addcloudx/{type}",
      "method": "post",
      "sdk_endpoint": "template.cloudx",
      "sdk_method": "create",
      "description": "Add cloudx gateway"
    },
    "getAttachedClientList": {
      "path": "/template/cloudx/attachedclient",
      "method": "get",
      "sdk_endpoint": "template.cloudx",
      "sdk_method": "get",
      "description": "Get attached client site list"
    },
    "getAttachedDiaList": {
      "path": "/template/cloudx/attacheddia",
      "method": "get",
      "sdk_endpoint": "template.cloudx",
      "sdk_method": "get",
      "description": "Get attached Dia site list"
    },
    "getAttachedGatewayList": {
      "path": "/template/cloudx/attachedgateway",
      "method": "get",
      "sdk_endpoint": "template.cloudx",
      "sdk_method": "get",
      "description": "Get attached gateway list"
    },
    "getCloudXAvailableApps": {
      "path": "/template/cloudx/availableapps",
      "method": "get",
      "sdk_endpoint": "template.cloudx",
      "sdk_method": "get",
      "description": "Get CloudX available apps list"
    },
    "getSiteList": {
      "path": "/template/cloudx/clientlist",
      "method": "get",
      "sdk_endpoint": "template.cloudx",
      "sdk_method": "get",
      "description": "Get site list"
    },
    "getDiaList": {
      "path": "/template/cloudx/dialist",
      "method": "get",
      "sdk_endpoint": "template.cloudx",
      "sdk_method": "get",
      "description": "Get Dia site list"
    },
    "getGatewayList": {
      "path": "/template/cloudx/gatewaylist",
      "method": "get",
      "sdk_endpoint": "template.cloudx",
      "sdk_method": "get",
      "description": "Get gateway list"
    },
    "addCloudxInterfaces": {
      "path": "/template/cloudx/interfaces",
      "method": "post",
      "sdk_endpoint": "template.cloudx",
      "sdk_method": "create",
      "description": "Enable cloudx gateway"
    },
    "getApps": {
      "path": "/template/cloudx/manage/apps",
      "method": "get",
      "sdk_endpoint": "template.cloudx",
      "sdk_method": "get",
      "description": "Get apps and vpns"
    },
    "editApps": {
      "path": "/template/cloudx/manage/apps",
      "method": "put",
      "sdk_endpoint": "template.cloudx",
      "sdk_method": "update",
      "description": "Edit apps and vpns"
    },
    "addApps": {
      "path": "/template/cloudx/manage/apps",
      "method": "post",
      "sdk_endpoint": "template.cloudx",
      "sdk_method": "create",
      "description": "Add apps and vpns"
    },
    "getSigTunnelList_1": {
      "path": "/template/cloudx/sig_tunnels",
      "method": "get",
      "sdk_endpoint": "template.cloudx",
      "sdk_method": "get",
      "description": "Get Secure Internet Gateway Tunnel List"
    },
    "sitePerApp": {
      "path": "/template/cloudx/status",
      "method": "get",
      "sdk_endpoint": "template.cloudx",
      "sdk_method": "get",
      "description": "Get sites per application per vpn"
    },
    "uploadConfig": {
      "path": "/template/config/attach/{deviceId}",
      "method": "put",
      "sdk_endpoint": "template.config",
      "sdk_method": "update",
      "description": "Upload device config"
    },
    "getAttachedConfig": {
      "path": "/template/config/attached/{deviceId}",
      "method": "get",
      "sdk_endpoint": "template.config",
      "sdk_method": "get",
      "description": "Get local template attached config for given device"
    },
    "generateCLIModeDevices": {
      "path": "/template/config/device/mode/cli",
      "method": "get",
      "sdk_endpoint": "template.config",
      "sdk_method": "get",
      "description": "Generates a JSON object that contains a list of valid devices in CLI mode"
    },
    "updateDeviceToCLIMode": {
      "path": "/template/config/device/mode/cli",
      "method": "post",
      "sdk_endpoint": "template.config",
      "sdk_method": "create",
      "description": "Given a JSON list of devices not managed by any third member partners, push to devices from a CLI template"
    },
    "generatevManageModeDevices": {
      "path": "/template/config/device/mode/vmanage",
      "method": "get",
      "sdk_endpoint": "template.config",
      "sdk_method": "get",
      "description": "Get list of devices that are allowable for vmanage modes"
    },
    "getDeviceDiff": {
      "path": "/template/config/diff/{deviceId}",
      "method": "get",
      "sdk_endpoint": "template.config",
      "sdk_method": "get",
      "description": "Generates a JSON object that contains the diff for a given device"
    },
    "submitDay0Config": {
      "path": "/template/config/quickConnect/submitDevices",
      "method": "post",
      "sdk_endpoint": "template.config",
      "sdk_method": "create",
      "description": "Creates and pushes bootstrap configurations onto day0 devices."
    },
    "getCompatibleDevices": {
      "path": "/template/config/rmalist/{oldDeviceId}",
      "method": "get",
      "sdk_endpoint": "template.config",
      "sdk_method": "get",
      "description": "Get compatible devices of model, chassis number, certificate serial number with the old device"
    },
    "rmaUpdate": {
      "path": "/template/config/rmaupdate",
      "method": "put",
      "sdk_endpoint": "template.config",
      "sdk_method": "update",
      "description": "Update new device"
    },
    "getRunningConfig": {
      "path": "/template/config/running/{deviceId}",
      "method": "get",
      "sdk_endpoint": "template.config",
      "sdk_method": "get",
      "description": "Get device running config"
    },
    "getVpnForDevice": {
      "path": "/template/config/vpn/{deviceId}",
      "method": "get",
      "sdk_endpoint": "template.config",
      "sdk_method": "get",
      "description": "Get list of configured VPN (excluding reserved VPN) for a device"
    },
    "getCORStatus": {
      "path": "/template/cor",
      "method": "get",
      "sdk_endpoint": "template.cor",
      "sdk_method": "get",
      "description": "Get Cloud On Ramp list"
    },
    "createAndMap": {
      "path": "/template/cor",
      "method": "post",
      "sdk_endpoint": "template.cor",
      "sdk_method": "create",
      "description": "Map Host to Transit VPC/VNet"
    },
    "removeTransitVPC": {
      "path": "/template/cor/accountid/{accountid}",
      "method": "delete",
      "sdk_endpoint": "template.cor",
      "sdk_method": "delete",
      "description": "Delete transit VPC/VNet"
    },
    "acquireResourcePool": {
      "path": "/template/cor/acquireResourcePool",
      "method": "post",
      "sdk_endpoint": "template.cor",
      "sdk_method": "create",
      "description": "Acquire IP from resource pool"
    },
    "getAmiList": {
      "path": "/template/cor/ami",
      "method": "get",
      "sdk_endpoint": "template.cor",
      "sdk_method": "get",
      "description": "Get AMI list"
    },
    "getCloudList": {
      "path": "/template/cor/cloud",
      "method": "get",
      "sdk_endpoint": "template.cor",
      "sdk_method": "get",
      "description": "Get cloud list"
    },
    "getCloudAccounts": {
      "path": "/template/cor/cloud/account",
      "method": "get",
      "sdk_endpoint": "template.cor",
      "sdk_method": "get",
      "description": "Get cloud accounts"
    },
    "authenticateCredAndUpdate": {
      "path": "/template/cor/cloud/authenticate",
      "method": "put",
      "sdk_endpoint": "template.cor",
      "sdk_method": "update",
      "description": "Authenticate and update cloud account credentials"
    },
    "authenticateCloudOnRampCredAndAdd": {
      "path": "/template/cor/cloud/authenticate",
      "method": "post",
      "sdk_endpoint": "template.cor",
      "sdk_method": "create",
      "description": "Authenticate cloud account credentials"
    },
    "getCloudHostVpcAccountDetails": {
      "path": "/template/cor/cloud/host/accountdetails",
      "method": "get",
      "sdk_endpoint": "template.cor",
      "sdk_method": "get",
      "description": "Get cloud host VPC account details"
    },
    "getCloudMappedHostAccounts": {
      "path": "/template/cor/cloud/mappedhostaccounts",
      "method": "get",
      "sdk_endpoint": "template.cor",
      "sdk_method": "get",
      "description": "Get cloud mapped accounts view"
    },
    "createResourcePool": {
      "path": "/template/cor/createResourcePool",
      "method": "post",
      "sdk_endpoint": "template.cor",
      "sdk_method": "create",
      "description": "Add resource pool"
    },
    "removeDeviceId": {
      "path": "/template/cor/deleteDevicepair",
      "method": "delete",
      "sdk_endpoint": "template.cor",
      "sdk_method": "delete",
      "description": "Remove device pair"
    },
    "getCloudOnRampDevices": {
      "path": "/template/cor/device",
      "method": "get",
      "sdk_endpoint": "template.cor",
      "sdk_method": "get",
      "description": "Get available device list"
    },
    "addDevicePair": {
      "path": "/template/cor/devicepair",
      "method": "post",
      "sdk_endpoint": "template.cor",
      "sdk_method": "create",
      "description": "Add device pair"
    },
    "getHostVPCs": {
      "path": "/template/cor/devicepair/hostvpc",
      "method": "get",
      "sdk_endpoint": "template.cor",
      "sdk_method": "get",
      "description": "Get host VPC details"
    },
    "getExternalId": {
      "path": "/template/cor/externalId",
      "method": "get",
      "sdk_endpoint": "template.cor",
      "sdk_method": "get",
      "description": "Get the vManage external ID for AWS"
    },
    "getTransitDevicePairAndHostList": {
      "path": "/template/cor/getTransitDevicePairAndHostList",
      "method": "get",
      "sdk_endpoint": "template.cor",
      "sdk_method": "get",
      "description": "Get device and host details"
    },
    "getTransitVpcVpnList": {
      "path": "/template/cor/getTransitVpnList",
      "method": "get",
      "sdk_endpoint": "template.cor",
      "sdk_method": "get",
      "description": "Get transit VPN list"
    },
    "getCloudHostVPCs": {
      "path": "/template/cor/hostvpc",
      "method": "get",
      "sdk_endpoint": "template.cor",
      "sdk_method": "get",
      "description": "Get host VPC/VNet list"
    },
    "getMappedVPCs": {
      "path": "/template/cor/map",
      "method": "get",
      "sdk_endpoint": "template.cor",
      "sdk_method": "get",
      "description": "Get mapped VPC/VNet list"
    },
    "mapVPCs": {
      "path": "/template/cor/map",
      "method": "post",
      "sdk_endpoint": "template.cor",
      "sdk_method": "create",
      "description": "Map host to transit VPC/VNet"
    },
    "unmapVPCs": {
      "path": "/template/cor/map",
      "method": "delete",
      "sdk_endpoint": "template.cor",
      "sdk_method": "delete",
      "description": "Unmap host from transit VPC/VNet"
    },
    "getPemKeyList": {
      "path": "/template/cor/pem",
      "method": "get",
      "sdk_endpoint": "template.cor",
      "sdk_method": "get",
      "description": "Get transit VPC PEM key list"
    },
    "scaleDown": {
      "path": "/template/cor/scale/down",
      "method": "post",
      "sdk_endpoint": "template.cor",
      "sdk_method": "create",
      "description": "Scale down cloud on ramp"
    },
    "scaleUp": {
      "path": "/template/cor/scale/up",
      "method": "post",
      "sdk_endpoint": "template.cor",
      "sdk_method": "create",
      "description": "Scale up cloud on ramp"
    },
    "getTransitVPCs": {
      "path": "/template/cor/transitvpc",
      "method": "get",
      "sdk_endpoint": "template.cor",
      "sdk_method": "get",
      "description": "Get transit VPC/VNet list"
    },
    "updateTransitVPC": {
      "path": "/template/cor/transitvpc",
      "method": "put",
      "sdk_endpoint": "template.cor",
      "sdk_method": "update",
      "description": "Update transit VPC/VNet"
    },
    "addTransitVPC": {
      "path": "/template/cor/transitvpc",
      "method": "post",
      "sdk_endpoint": "template.cor",
      "sdk_method": "create",
      "description": "Create transit VPC/VNet"
    },
    "updateTransitVpcAutoscaleProperties": {
      "path": "/template/cor/transitvpc/autoscale-properties",
      "method": "put",
      "sdk_endpoint": "template.cor",
      "sdk_method": "update",
      "description": "Update transit VPC autoscale properties"
    },
    "getTransitVPCSupportedSize": {
      "path": "/template/cor/transitvpc/size",
      "method": "get",
      "sdk_endpoint": "template.cor",
      "sdk_method": "get",
      "description": "Get transit VPC supported size"
    },
    "getCortexStatus": {
      "path": "/template/cortex",
      "method": "get",
      "sdk_endpoint": "template.cortex",
      "sdk_method": "get",
      "description": "Get Cortex List"
    },
    "authenticateAzureConnectCredAndAdd": {
      "path": "/template/cortex/cloud/authenticate",
      "method": "post",
      "sdk_endpoint": "template.cortex",
      "sdk_method": "create",
      "description": "Authenticate Cloud Account Credentials"
    },
    "getMappedWanResourceGroups": {
      "path": "/template/cortex/map",
      "method": "get",
      "sdk_endpoint": "template.cortex",
      "sdk_method": "get",
      "description": "Get Mapped WAN Resource Groups"
    },
    "syncWanResourceGroups": {
      "path": "/template/cortex/sync",
      "method": "post",
      "sdk_endpoint": "template.cortex",
      "sdk_method": "create",
      "description": "Sync WAN Resource Groups"
    },
    "getWanResourceGroups": {
      "path": "/template/cortex/wanrg",
      "method": "get",
      "sdk_endpoint": "template.cortex",
      "sdk_method": "get",
      "description": "Get WAN Resource Groups"
    },
    "editWanResourceGroups": {
      "path": "/template/cortex/wanrg",
      "method": "put",
      "sdk_endpoint": "template.cortex",
      "sdk_method": "update",
      "description": "Edit WAN Resource Groups"
    },
    "saveWanResourceGroups": {
      "path": "/template/cortex/wanrg",
      "method": "post",
      "sdk_endpoint": "template.cortex",
      "sdk_method": "create",
      "description": "Create WAN Resource Groups"
    },
    "deleteWanResourceGroups": {
      "path": "/template/cortex/wanrg",
      "method": "delete",
      "sdk_endpoint": "template.cortex",
      "sdk_method": "delete",
      "description": "Delete WAN Resource Groups"
    },
    "generateMasterTemplateList": {
      "path": "/template/device",
      "method": "get",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "get",
      "description": "Generate template list<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "createCLITemplate": {
      "path": "/template/device/cli",
      "method": "post",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "create",
      "description": "Create CLI template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "pushMasterTemplate_1": {
      "path": "/template/device/config/attachBootStrap",
      "method": "post",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "create",
      "description": "Attach feature device template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "pushCLITemplate": {
      "path": "/template/device/config/attachcli",
      "method": "post",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "create",
      "description": "Attach CLI device template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "editCloudxConfig": {
      "path": "/template/device/config/attachcloudx",
      "method": "put",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "update",
      "description": "Edit already enabled gateways, clients, dias<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "pushCloudxConfig": {
      "path": "/template/device/config/attachcloudx",
      "method": "post",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "create",
      "description": "Enable gateways, clients, dias"
    },
    "getAttachedDeviceList": {
      "path": "/template/device/config/attached/{masterTemplateId}",
      "method": "get",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "get",
      "description": "Get attached device list by master template Id<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getAttachedConfigToDevice": {
      "path": "/template/device/config/attachedconfig",
      "method": "get",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "get",
      "description": "Get attached config to device<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "pushMasterTemplate": {
      "path": "/template/device/config/attachfeature",
      "method": "post",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "create",
      "description": "Attach feature device template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "attachDeviceTemplate": {
      "path": "/template/device/config/attachment",
      "method": "post",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "create",
      "description": "Attach device template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getDeviceListByMasterTemplateId": {
      "path": "/template/device/config/available/{masterTemplateId}",
      "method": "get",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "get",
      "description": "Get possible device list by master template Id<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getDeviceConfigurationPreview": {
      "path": "/template/device/config/config",
      "method": "post",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "create",
      "description": "Get device configuration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "detachDeviceTemplate": {
      "path": "/template/device/config/detach",
      "method": "post",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "create",
      "description": "Detach device template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "detachSites": {
      "path": "/template/device/config/detachcloudx",
      "method": "post",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "create",
      "description": "Disable enabled gateways, clients, dias<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getDevicesWithDuplicateIP": {
      "path": "/template/device/config/duplicateip",
      "method": "post",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "create",
      "description": "Detects duplicate system IP from a list of devices<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getDevicesWithDuplicateLocationName": {
      "path": "/template/device/config/duplicatelocationname",
      "method": "post",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "create",
      "description": "Detects duplicate system IP from a list of devices<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "createInputWithoutDevice": {
      "path": "/template/device/config/exportcsv",
      "method": "post",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "create",
      "description": "Export the device template to CSV format for given template id<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "createDeviceInput": {
      "path": "/template/device/config/input",
      "method": "post",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "create",
      "description": "Create device input<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "processInputCommaSepFile": {
      "path": "/template/device/config/process/input/file",
      "method": "post",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "create",
      "description": "Process input comma separated file<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getQuickConnectVariables": {
      "path": "/template/device/config/quickconnectvariable",
      "method": "post",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "create",
      "description": "Get connection variables to be configured"
    },
    "checkVbond": {
      "path": "/template/device/config/vbond",
      "method": "get",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "get",
      "description": "Check if vBond is configured<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "validateTemplate": {
      "path": "/template/device/config/verify",
      "method": "post",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "create",
      "description": "Validate full template\"\n<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "createMasterTemplate": {
      "path": "/template/device/feature",
      "method": "post",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "create",
      "description": "Create a device template from feature templates and sub templates<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "isMigrationRequired": {
      "path": "/template/device/is_migration_required",
      "method": "get",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "get",
      "description": "Check if any device templates need migration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "generateTemplateForMigration": {
      "path": "/template/device/migration",
      "method": "get",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "get",
      "description": "Generate a list of templates which require migration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "migrateTemplates": {
      "path": "/template/device/migration",
      "method": "post",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "create",
      "description": "Migrate the device templates given the template Ids"
    },
    "migrationInfo": {
      "path": "/template/device/migration_info",
      "method": "get",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "get",
      "description": "Returns the mapping between old and migrated templates<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getMasterTemplateDefinition": {
      "path": "/template/device/object/{templateId}",
      "method": "get",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "get",
      "description": "Generate template by Id<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "changeTemplateResourceGroup_1": {
      "path": "/template/device/resource-group/{resourceGroupName}/{templateId}",
      "method": "post",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "create",
      "description": "Change template resource group"
    },
    "getOutOfSyncTemplates": {
      "path": "/template/device/syncstatus",
      "method": "get",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "get",
      "description": "Get template sync status<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getOutOfSyncDevices": {
      "path": "/template/device/syncstatus/{templateId}",
      "method": "get",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "get",
      "description": "Get out of sync devices<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "editMasterTemplate": {
      "path": "/template/device/{templateId}",
      "method": "put",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "update",
      "description": "Edit template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "deleteMasterTemplate": {
      "path": "/template/device/{templateId}",
      "method": "delete",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "delete",
      "description": "Delete template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getAssociatedFeatureTemplatesDetails": {
      "path": "/template/device/{templateId}/featuretemplates",
      "method": "get",
      "sdk_endpoint": "configuration.device_template",
      "sdk_method": "get",
      "description": "get Associated Feature Templates Details"
    },
    "generateFeatureTemplateList": {
      "path": "/template/feature",
      "method": "get",
      "sdk_endpoint": "configuration.feature_template",
      "sdk_method": "get",
      "description": "Get feature template list<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "createFeatureTemplate": {
      "path": "/template/feature",
      "method": "post",
      "sdk_endpoint": "configuration.feature_template",
      "sdk_method": "create",
      "description": "Create feature template"
    },
    "cloneTemplate": {
      "path": "/template/feature/clone",
      "method": "post",
      "sdk_endpoint": "configuration.feature_template",
      "sdk_method": "create",
      "description": "Clone a feature template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getNetworkInterface": {
      "path": "/template/feature/default/networkinterface",
      "method": "get",
      "sdk_endpoint": "configuration.feature_template",
      "sdk_method": "get",
      "description": "Get default network interface<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getDefaultNetworks": {
      "path": "/template/feature/default/networks",
      "method": "get",
      "sdk_endpoint": "configuration.feature_template",
      "sdk_method": "get",
      "description": "Get default networks<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getTemplateDefinition": {
      "path": "/template/feature/definition/{templateId}",
      "method": "get",
      "sdk_endpoint": "configuration.feature_template",
      "sdk_method": "get",
      "description": "Get the configured template definition for given template Id<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getDeviceTemplatesAttachedToFeature": {
      "path": "/template/feature/devicetemplates/{templateId}",
      "method": "get",
      "sdk_endpoint": "configuration.feature_template",
      "sdk_method": "get",
      "description": "Get all device templates for this feature template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "listLITemplate": {
      "path": "/template/feature/li",
      "method": "get",
      "sdk_endpoint": "configuration.feature_template",
      "sdk_method": "get",
      "description": "Get LI feature template"
    },
    "createLITemplate": {
      "path": "/template/feature/li",
      "method": "post",
      "sdk_endpoint": "configuration.feature_template",
      "sdk_method": "create",
      "description": "Create LI feature template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "editLITemplate": {
      "path": "/template/feature/li/{templateId}",
      "method": "put",
      "sdk_endpoint": "configuration.feature_template",
      "sdk_method": "update",
      "description": "Update LI feature template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "generateMasterTemplateDefinition": {
      "path": "/template/feature/master/{type_name}",
      "method": "get",
      "sdk_endpoint": "configuration.feature_template",
      "sdk_method": "get",
      "description": "Generate template type definition by device type<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getTemplateForMigration": {
      "path": "/template/feature/migration",
      "method": "get",
      "sdk_endpoint": "configuration.feature_template",
      "sdk_method": "get",
      "description": "Generate a list of templates which require migration<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getGeneralTemplate": {
      "path": "/template/feature/object/{templateId}",
      "method": "get",
      "sdk_endpoint": "configuration.feature_template",
      "sdk_method": "get",
      "description": "Get template object definition for given template Id<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "changeTemplateResourceGroup": {
      "path": "/template/feature/resource-group/{resourceGroupName}/{templateId}",
      "method": "post",
      "sdk_endpoint": "configuration.feature_template",
      "sdk_method": "create",
      "description": "Change template resource group"
    },
    "generateTemplateTypes": {
      "path": "/template/feature/types",
      "method": "get",
      "sdk_endpoint": "configuration.feature_template",
      "sdk_method": "get",
      "description": "Generate template types<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "generateTemplateTypeDefinition": {
      "path": "/template/feature/types/definition/{type_name}/{version}",
      "method": "get",
      "sdk_endpoint": "configuration.feature_template",
      "sdk_method": "get",
      "description": "Generate template type definition<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "generateTemplateByDeviceType": {
      "path": "/template/feature/{deviceType}",
      "method": "get",
      "sdk_endpoint": "configuration.feature_template",
      "sdk_method": "get",
      "description": "Generate template based on device<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "editFeatureTemplate": {
      "path": "/template/feature/{templateId}",
      "method": "put",
      "sdk_endpoint": "configuration.feature_template",
      "sdk_method": "update",
      "description": "Update feature template<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "deleteGeneralTemplate": {
      "path": "/template/feature/{templateId}",
      "method": "delete",
      "sdk_endpoint": "configuration.feature_template",
      "sdk_method": "delete",
      "description": "Delete feature template"
    },
    "updateLeaseTime": {
      "path": "/template/lock/{processId}",
      "method": "put",
      "sdk_endpoint": "template.lock",
      "sdk_method": "update",
      "description": "Update lease"
    },
    "removeLock": {
      "path": "/template/lock/{processId}",
      "method": "delete",
      "sdk_endpoint": "template.lock",
      "sdk_method": "delete",
      "description": "Remove lock"
    },
    "preview": {
      "path": "/template/policy/assembly/security",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Get policy assembly preview"
    },
    "previewById": {
      "path": "/template/policy/assembly/security/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy assembly preview for feature policy"
    },
    "preview_1": {
      "path": "/template/policy/assembly/vedge",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Get policy assembly preview"
    },
    "previewById_1": {
      "path": "/template/policy/assembly/vedge/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy assembly preview for feature policy"
    },
    "preview_2": {
      "path": "/template/policy/assembly/voice",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Get policy assembly preview"
    },
    "previewById_2": {
      "path": "/template/policy/assembly/voice/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy assembly preview for feature policy"
    },
    "preview_3": {
      "path": "/template/policy/assembly/vsmart",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Get policy assembly preview"
    },
    "previewById_3": {
      "path": "/template/policy/assembly/vsmart/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy assembly preview for feature policy"
    },
    "getCloudDiscoveredApps": {
      "path": "/template/policy/clouddiscoveredapp",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get all cloud discovered applications"
    },
    "MapTrafficProfiles": {
      "path": "/template/policy/clouddiscoveredapp",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Set SLA class for policy cloud discovered applications"
    },
    "getCustomApps": {
      "path": "/template/policy/customapp",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get all policy custom applications"
    },
    "createCustomApplication": {
      "path": "/template/policy/customapp",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create Custom Applications"
    },
    "getCustomAppById": {
      "path": "/template/policy/customapp/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a policy custom applications"
    },
    "updateCustomApplication": {
      "path": "/template/policy/customapp/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Update Custom Applications"
    },
    "deleteCustomApp": {
      "path": "/template/policy/customapp/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete Custom Application"
    },
    "getDefinitions_8": {
      "path": "/template/policy/definition/acl",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_8": {
      "path": "/template/policy/definition/acl",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_8": {
      "path": "/template/policy/definition/acl/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_8": {
      "path": "/template/policy/definition/acl/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_8": {
      "path": "/template/policy/definition/acl/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_8": {
      "path": "/template/policy/definition/acl/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_8": {
      "path": "/template/policy/definition/acl/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_8": {
      "path": "/template/policy/definition/acl/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_8": {
      "path": "/template/policy/definition/acl/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_9": {
      "path": "/template/policy/definition/aclv6",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_9": {
      "path": "/template/policy/definition/aclv6",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_9": {
      "path": "/template/policy/definition/aclv6/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_9": {
      "path": "/template/policy/definition/aclv6/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_9": {
      "path": "/template/policy/definition/aclv6/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_9": {
      "path": "/template/policy/definition/aclv6/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_9": {
      "path": "/template/policy/definition/aclv6/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_9": {
      "path": "/template/policy/definition/aclv6/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_9": {
      "path": "/template/policy/definition/aclv6/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_11": {
      "path": "/template/policy/definition/advancedMalwareProtection",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_11": {
      "path": "/template/policy/definition/advancedMalwareProtection",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_11": {
      "path": "/template/policy/definition/advancedMalwareProtection/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_11": {
      "path": "/template/policy/definition/advancedMalwareProtection/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_11": {
      "path": "/template/policy/definition/advancedMalwareProtection/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_11": {
      "path": "/template/policy/definition/advancedMalwareProtection/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_11": {
      "path": "/template/policy/definition/advancedMalwareProtection/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_11": {
      "path": "/template/policy/definition/advancedMalwareProtection/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_11": {
      "path": "/template/policy/definition/advancedMalwareProtection/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_10": {
      "path": "/template/policy/definition/advancedinspectionprofile",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_10": {
      "path": "/template/policy/definition/advancedinspectionprofile",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_10": {
      "path": "/template/policy/definition/advancedinspectionprofile/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_10": {
      "path": "/template/policy/definition/advancedinspectionprofile/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_10": {
      "path": "/template/policy/definition/advancedinspectionprofile/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_10": {
      "path": "/template/policy/definition/advancedinspectionprofile/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_10": {
      "path": "/template/policy/definition/advancedinspectionprofile/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_10": {
      "path": "/template/policy/definition/advancedinspectionprofile/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_10": {
      "path": "/template/policy/definition/advancedinspectionprofile/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_12": {
      "path": "/template/policy/definition/approute",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_12": {
      "path": "/template/policy/definition/approute",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_12": {
      "path": "/template/policy/definition/approute/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_12": {
      "path": "/template/policy/definition/approute/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_12": {
      "path": "/template/policy/definition/approute/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_12": {
      "path": "/template/policy/definition/approute/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_12": {
      "path": "/template/policy/definition/approute/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_12": {
      "path": "/template/policy/definition/approute/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_12": {
      "path": "/template/policy/definition/approute/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_13": {
      "path": "/template/policy/definition/cflowd",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_13": {
      "path": "/template/policy/definition/cflowd",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_13": {
      "path": "/template/policy/definition/cflowd/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_13": {
      "path": "/template/policy/definition/cflowd/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_13": {
      "path": "/template/policy/definition/cflowd/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_13": {
      "path": "/template/policy/definition/cflowd/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_13": {
      "path": "/template/policy/definition/cflowd/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_13": {
      "path": "/template/policy/definition/cflowd/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_13": {
      "path": "/template/policy/definition/cflowd/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_14": {
      "path": "/template/policy/definition/control",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_14": {
      "path": "/template/policy/definition/control",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_14": {
      "path": "/template/policy/definition/control/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_14": {
      "path": "/template/policy/definition/control/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_14": {
      "path": "/template/policy/definition/control/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_14": {
      "path": "/template/policy/definition/control/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_14": {
      "path": "/template/policy/definition/control/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_14": {
      "path": "/template/policy/definition/control/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_14": {
      "path": "/template/policy/definition/control/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_15": {
      "path": "/template/policy/definition/data",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_15": {
      "path": "/template/policy/definition/data",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_15": {
      "path": "/template/policy/definition/data/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_15": {
      "path": "/template/policy/definition/data/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_15": {
      "path": "/template/policy/definition/data/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_15": {
      "path": "/template/policy/definition/data/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_15": {
      "path": "/template/policy/definition/data/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_15": {
      "path": "/template/policy/definition/data/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_15": {
      "path": "/template/policy/definition/data/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_16": {
      "path": "/template/policy/definition/deviceaccesspolicy",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_16": {
      "path": "/template/policy/definition/deviceaccesspolicy",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_16": {
      "path": "/template/policy/definition/deviceaccesspolicy/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_16": {
      "path": "/template/policy/definition/deviceaccesspolicy/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_16": {
      "path": "/template/policy/definition/deviceaccesspolicy/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_16": {
      "path": "/template/policy/definition/deviceaccesspolicy/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_16": {
      "path": "/template/policy/definition/deviceaccesspolicy/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_16": {
      "path": "/template/policy/definition/deviceaccesspolicy/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_16": {
      "path": "/template/policy/definition/deviceaccesspolicy/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_17": {
      "path": "/template/policy/definition/deviceaccesspolicyv6",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_17": {
      "path": "/template/policy/definition/deviceaccesspolicyv6",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_17": {
      "path": "/template/policy/definition/deviceaccesspolicyv6/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_17": {
      "path": "/template/policy/definition/deviceaccesspolicyv6/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_17": {
      "path": "/template/policy/definition/deviceaccesspolicyv6/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_17": {
      "path": "/template/policy/definition/deviceaccesspolicyv6/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_17": {
      "path": "/template/policy/definition/deviceaccesspolicyv6/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_17": {
      "path": "/template/policy/definition/deviceaccesspolicyv6/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_17": {
      "path": "/template/policy/definition/deviceaccesspolicyv6/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_25": {
      "path": "/template/policy/definition/dialpeer",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_25": {
      "path": "/template/policy/definition/dialpeer",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_25": {
      "path": "/template/policy/definition/dialpeer/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_25": {
      "path": "/template/policy/definition/dialpeer/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_25": {
      "path": "/template/policy/definition/dialpeer/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_25": {
      "path": "/template/policy/definition/dialpeer/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_25": {
      "path": "/template/policy/definition/dialpeer/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_25": {
      "path": "/template/policy/definition/dialpeer/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_25": {
      "path": "/template/policy/definition/dialpeer/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions": {
      "path": "/template/policy/definition/dnssecurity",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition": {
      "path": "/template/policy/definition/dnssecurity",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk": {
      "path": "/template/policy/definition/dnssecurity/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition": {
      "path": "/template/policy/definition/dnssecurity/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition": {
      "path": "/template/policy/definition/dnssecurity/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById": {
      "path": "/template/policy/definition/dnssecurity/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition": {
      "path": "/template/policy/definition/dnssecurity/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition": {
      "path": "/template/policy/definition/dnssecurity/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition": {
      "path": "/template/policy/definition/dnssecurity/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_26": {
      "path": "/template/policy/definition/fxoport",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_26": {
      "path": "/template/policy/definition/fxoport",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_26": {
      "path": "/template/policy/definition/fxoport/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_26": {
      "path": "/template/policy/definition/fxoport/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_26": {
      "path": "/template/policy/definition/fxoport/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_26": {
      "path": "/template/policy/definition/fxoport/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_26": {
      "path": "/template/policy/definition/fxoport/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_26": {
      "path": "/template/policy/definition/fxoport/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_26": {
      "path": "/template/policy/definition/fxoport/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_28": {
      "path": "/template/policy/definition/fxsdidport",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_28": {
      "path": "/template/policy/definition/fxsdidport",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_28": {
      "path": "/template/policy/definition/fxsdidport/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_28": {
      "path": "/template/policy/definition/fxsdidport/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_28": {
      "path": "/template/policy/definition/fxsdidport/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_28": {
      "path": "/template/policy/definition/fxsdidport/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_28": {
      "path": "/template/policy/definition/fxsdidport/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_28": {
      "path": "/template/policy/definition/fxsdidport/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_28": {
      "path": "/template/policy/definition/fxsdidport/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_27": {
      "path": "/template/policy/definition/fxsport",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_27": {
      "path": "/template/policy/definition/fxsport",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_27": {
      "path": "/template/policy/definition/fxsport/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_27": {
      "path": "/template/policy/definition/fxsport/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_27": {
      "path": "/template/policy/definition/fxsport/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_27": {
      "path": "/template/policy/definition/fxsport/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_27": {
      "path": "/template/policy/definition/fxsport/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_27": {
      "path": "/template/policy/definition/fxsport/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_27": {
      "path": "/template/policy/definition/fxsport/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_4": {
      "path": "/template/policy/definition/hubandspoke",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_4": {
      "path": "/template/policy/definition/hubandspoke",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_4": {
      "path": "/template/policy/definition/hubandspoke/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_4": {
      "path": "/template/policy/definition/hubandspoke/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_4": {
      "path": "/template/policy/definition/hubandspoke/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_4": {
      "path": "/template/policy/definition/hubandspoke/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_4": {
      "path": "/template/policy/definition/hubandspoke/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_4": {
      "path": "/template/policy/definition/hubandspoke/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_4": {
      "path": "/template/policy/definition/hubandspoke/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_18": {
      "path": "/template/policy/definition/intrusionprevention",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_18": {
      "path": "/template/policy/definition/intrusionprevention",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_18": {
      "path": "/template/policy/definition/intrusionprevention/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_18": {
      "path": "/template/policy/definition/intrusionprevention/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_18": {
      "path": "/template/policy/definition/intrusionprevention/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_18": {
      "path": "/template/policy/definition/intrusionprevention/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_18": {
      "path": "/template/policy/definition/intrusionprevention/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_18": {
      "path": "/template/policy/definition/intrusionprevention/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_18": {
      "path": "/template/policy/definition/intrusionprevention/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_5": {
      "path": "/template/policy/definition/mesh",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_5": {
      "path": "/template/policy/definition/mesh",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_5": {
      "path": "/template/policy/definition/mesh/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_5": {
      "path": "/template/policy/definition/mesh/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_5": {
      "path": "/template/policy/definition/mesh/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_5": {
      "path": "/template/policy/definition/mesh/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_5": {
      "path": "/template/policy/definition/mesh/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_5": {
      "path": "/template/policy/definition/mesh/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_5": {
      "path": "/template/policy/definition/mesh/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_29": {
      "path": "/template/policy/definition/priisdnport",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_29": {
      "path": "/template/policy/definition/priisdnport",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_29": {
      "path": "/template/policy/definition/priisdnport/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_29": {
      "path": "/template/policy/definition/priisdnport/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_29": {
      "path": "/template/policy/definition/priisdnport/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_29": {
      "path": "/template/policy/definition/priisdnport/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_29": {
      "path": "/template/policy/definition/priisdnport/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_29": {
      "path": "/template/policy/definition/priisdnport/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_29": {
      "path": "/template/policy/definition/priisdnport/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_1": {
      "path": "/template/policy/definition/qosmap",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_1": {
      "path": "/template/policy/definition/qosmap",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_1": {
      "path": "/template/policy/definition/qosmap/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_1": {
      "path": "/template/policy/definition/qosmap/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_1": {
      "path": "/template/policy/definition/qosmap/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_1": {
      "path": "/template/policy/definition/qosmap/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_1": {
      "path": "/template/policy/definition/qosmap/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_1": {
      "path": "/template/policy/definition/qosmap/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_1": {
      "path": "/template/policy/definition/qosmap/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_19": {
      "path": "/template/policy/definition/rewriterule",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_19": {
      "path": "/template/policy/definition/rewriterule",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_19": {
      "path": "/template/policy/definition/rewriterule/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_19": {
      "path": "/template/policy/definition/rewriterule/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_19": {
      "path": "/template/policy/definition/rewriterule/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_19": {
      "path": "/template/policy/definition/rewriterule/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_19": {
      "path": "/template/policy/definition/rewriterule/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_19": {
      "path": "/template/policy/definition/rewriterule/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_19": {
      "path": "/template/policy/definition/rewriterule/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_20": {
      "path": "/template/policy/definition/ruleset",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_20": {
      "path": "/template/policy/definition/ruleset",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_20": {
      "path": "/template/policy/definition/ruleset/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_20": {
      "path": "/template/policy/definition/ruleset/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_20": {
      "path": "/template/policy/definition/ruleset/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_20": {
      "path": "/template/policy/definition/ruleset/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_20": {
      "path": "/template/policy/definition/ruleset/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_20": {
      "path": "/template/policy/definition/ruleset/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_20": {
      "path": "/template/policy/definition/ruleset/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_21": {
      "path": "/template/policy/definition/securitygroup",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_21": {
      "path": "/template/policy/definition/securitygroup",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_21": {
      "path": "/template/policy/definition/securitygroup/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_21": {
      "path": "/template/policy/definition/securitygroup/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_21": {
      "path": "/template/policy/definition/securitygroup/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_21": {
      "path": "/template/policy/definition/securitygroup/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_21": {
      "path": "/template/policy/definition/securitygroup/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_21": {
      "path": "/template/policy/definition/securitygroup/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_21": {
      "path": "/template/policy/definition/securitygroup/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_30": {
      "path": "/template/policy/definition/srstphoneprofile",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_30": {
      "path": "/template/policy/definition/srstphoneprofile",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_30": {
      "path": "/template/policy/definition/srstphoneprofile/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_30": {
      "path": "/template/policy/definition/srstphoneprofile/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_30": {
      "path": "/template/policy/definition/srstphoneprofile/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_30": {
      "path": "/template/policy/definition/srstphoneprofile/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_30": {
      "path": "/template/policy/definition/srstphoneprofile/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_30": {
      "path": "/template/policy/definition/srstphoneprofile/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_30": {
      "path": "/template/policy/definition/srstphoneprofile/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_3": {
      "path": "/template/policy/definition/ssldecryption",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_3": {
      "path": "/template/policy/definition/ssldecryption",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_3": {
      "path": "/template/policy/definition/ssldecryption/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_3": {
      "path": "/template/policy/definition/ssldecryption/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_3": {
      "path": "/template/policy/definition/ssldecryption/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_3": {
      "path": "/template/policy/definition/ssldecryption/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_3": {
      "path": "/template/policy/definition/ssldecryption/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_3": {
      "path": "/template/policy/definition/ssldecryption/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_3": {
      "path": "/template/policy/definition/ssldecryption/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_22": {
      "path": "/template/policy/definition/sslutdprofile",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_22": {
      "path": "/template/policy/definition/sslutdprofile",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_22": {
      "path": "/template/policy/definition/sslutdprofile/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_22": {
      "path": "/template/policy/definition/sslutdprofile/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_22": {
      "path": "/template/policy/definition/sslutdprofile/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_22": {
      "path": "/template/policy/definition/sslutdprofile/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_22": {
      "path": "/template/policy/definition/sslutdprofile/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_22": {
      "path": "/template/policy/definition/sslutdprofile/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_22": {
      "path": "/template/policy/definition/sslutdprofile/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_23": {
      "path": "/template/policy/definition/urlfiltering",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_23": {
      "path": "/template/policy/definition/urlfiltering",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_23": {
      "path": "/template/policy/definition/urlfiltering/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_23": {
      "path": "/template/policy/definition/urlfiltering/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_23": {
      "path": "/template/policy/definition/urlfiltering/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_23": {
      "path": "/template/policy/definition/urlfiltering/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_23": {
      "path": "/template/policy/definition/urlfiltering/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_23": {
      "path": "/template/policy/definition/urlfiltering/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_23": {
      "path": "/template/policy/definition/urlfiltering/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_24": {
      "path": "/template/policy/definition/vedgeroute",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_24": {
      "path": "/template/policy/definition/vedgeroute",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_24": {
      "path": "/template/policy/definition/vedgeroute/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_24": {
      "path": "/template/policy/definition/vedgeroute/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_24": {
      "path": "/template/policy/definition/vedgeroute/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_24": {
      "path": "/template/policy/definition/vedgeroute/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_24": {
      "path": "/template/policy/definition/vedgeroute/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_24": {
      "path": "/template/policy/definition/vedgeroute/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_24": {
      "path": "/template/policy/definition/vedgeroute/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_6": {
      "path": "/template/policy/definition/vpnmembershipgroup",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_6": {
      "path": "/template/policy/definition/vpnmembershipgroup",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_6": {
      "path": "/template/policy/definition/vpnmembershipgroup/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_6": {
      "path": "/template/policy/definition/vpnmembershipgroup/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_6": {
      "path": "/template/policy/definition/vpnmembershipgroup/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_6": {
      "path": "/template/policy/definition/vpnmembershipgroup/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_6": {
      "path": "/template/policy/definition/vpnmembershipgroup/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_6": {
      "path": "/template/policy/definition/vpnmembershipgroup/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_6": {
      "path": "/template/policy/definition/vpnmembershipgroup/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_2": {
      "path": "/template/policy/definition/vpnqosmap",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_2": {
      "path": "/template/policy/definition/vpnqosmap",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_2": {
      "path": "/template/policy/definition/vpnqosmap/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_2": {
      "path": "/template/policy/definition/vpnqosmap/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_2": {
      "path": "/template/policy/definition/vpnqosmap/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_2": {
      "path": "/template/policy/definition/vpnqosmap/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_2": {
      "path": "/template/policy/definition/vpnqosmap/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_2": {
      "path": "/template/policy/definition/vpnqosmap/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_2": {
      "path": "/template/policy/definition/vpnqosmap/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "getDefinitions_7": {
      "path": "/template/policy/definition/zonebasedfw",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy definitions"
    },
    "createPolicyDefinition_7": {
      "path": "/template/policy/definition/zonebasedfw",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy definition"
    },
    "savePolicyDefinitionInBulk_7": {
      "path": "/template/policy/definition/zonebasedfw/bulk",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Create/Edit policy definitions in bulk"
    },
    "editMultiplePolicyDefinition_7": {
      "path": "/template/policy/definition/zonebasedfw/multiple/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit multiple policy definitions"
    },
    "previewPolicyDefinition_7": {
      "path": "/template/policy/definition/zonebasedfw/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview policy definition"
    },
    "previewPolicyDefinitionById_7": {
      "path": "/template/policy/definition/zonebasedfw/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview policy definition"
    },
    "getPolicyDefinition_7": {
      "path": "/template/policy/definition/zonebasedfw/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy definitions"
    },
    "editPolicyDefinition_7": {
      "path": "/template/policy/definition/zonebasedfw/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit a policy definitions"
    },
    "deletePolicyDefinition_7": {
      "path": "/template/policy/definition/zonebasedfw/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy definition"
    },
    "deleteAllLists": {
      "path": "/template/policy/ise/identity/deleteAllLists",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete all lists of the specified list type"
    },
    "getListReference": {
      "path": "/template/policy/ise/identity/referenced/{listType}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get all referenced Lists"
    },
    "sgts": {
      "path": "/template/policy/ise/identity/sgt",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get trustsec Scalable Group Tags"
    },
    "getIdentityUserGroups": {
      "path": "/template/policy/ise/identity/usergroups",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Get all identity user groups"
    },
    "getIdentityUsers": {
      "path": "/template/policy/ise/identity/users",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Get all identity users"
    },
    "getAllPolicyLists": {
      "path": "/template/policy/list",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get all policy lists"
    },
    "getPolicyLists_3": {
      "path": "/template/policy/list/app",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_3": {
      "path": "/template/policy/list/app",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_3": {
      "path": "/template/policy/list/app",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_3": {
      "path": "/template/policy/list/app/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_3": {
      "path": "/template/policy/list/app/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_3": {
      "path": "/template/policy/list/app/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_3": {
      "path": "/template/policy/list/app/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_3": {
      "path": "/template/policy/list/app/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_3": {
      "path": "/template/policy/list/app/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_4": {
      "path": "/template/policy/list/appprobe",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_4": {
      "path": "/template/policy/list/appprobe",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_4": {
      "path": "/template/policy/list/appprobe",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_4": {
      "path": "/template/policy/list/appprobe/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_4": {
      "path": "/template/policy/list/appprobe/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_4": {
      "path": "/template/policy/list/appprobe/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_4": {
      "path": "/template/policy/list/appprobe/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_4": {
      "path": "/template/policy/list/appprobe/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_4": {
      "path": "/template/policy/list/appprobe/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_5": {
      "path": "/template/policy/list/aspath",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_5": {
      "path": "/template/policy/list/aspath",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_5": {
      "path": "/template/policy/list/aspath",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_5": {
      "path": "/template/policy/list/aspath/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_5": {
      "path": "/template/policy/list/aspath/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_5": {
      "path": "/template/policy/list/aspath/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_5": {
      "path": "/template/policy/list/aspath/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_5": {
      "path": "/template/policy/list/aspath/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_5": {
      "path": "/template/policy/list/aspath/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_13": {
      "path": "/template/policy/list/class",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_14": {
      "path": "/template/policy/list/class",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_14": {
      "path": "/template/policy/list/class",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_14": {
      "path": "/template/policy/list/class/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_14": {
      "path": "/template/policy/list/class/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_14": {
      "path": "/template/policy/list/class/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_14": {
      "path": "/template/policy/list/class/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_14": {
      "path": "/template/policy/list/class/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_14": {
      "path": "/template/policy/list/class/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_6": {
      "path": "/template/policy/list/color",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_6": {
      "path": "/template/policy/list/color",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_6": {
      "path": "/template/policy/list/color",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_6": {
      "path": "/template/policy/list/color/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_6": {
      "path": "/template/policy/list/color/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_6": {
      "path": "/template/policy/list/color/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_6": {
      "path": "/template/policy/list/color/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_6": {
      "path": "/template/policy/list/color/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_6": {
      "path": "/template/policy/list/color/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_7": {
      "path": "/template/policy/list/community",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_7": {
      "path": "/template/policy/list/community",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_7": {
      "path": "/template/policy/list/community",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_7": {
      "path": "/template/policy/list/community/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_7": {
      "path": "/template/policy/list/community/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_7": {
      "path": "/template/policy/list/community/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_7": {
      "path": "/template/policy/list/community/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_7": {
      "path": "/template/policy/list/community/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_7": {
      "path": "/template/policy/list/community/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_8": {
      "path": "/template/policy/list/dataipv6prefix",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_8": {
      "path": "/template/policy/list/dataipv6prefix",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_8": {
      "path": "/template/policy/list/dataipv6prefix",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_8": {
      "path": "/template/policy/list/dataipv6prefix/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_8": {
      "path": "/template/policy/list/dataipv6prefix/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_8": {
      "path": "/template/policy/list/dataipv6prefix/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_8": {
      "path": "/template/policy/list/dataipv6prefix/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_8": {
      "path": "/template/policy/list/dataipv6prefix/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_8": {
      "path": "/template/policy/list/dataipv6prefix/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_9": {
      "path": "/template/policy/list/dataprefix",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_10": {
      "path": "/template/policy/list/dataprefix",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_10": {
      "path": "/template/policy/list/dataprefix",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_10": {
      "path": "/template/policy/list/dataprefix/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_10": {
      "path": "/template/policy/list/dataprefix/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_10": {
      "path": "/template/policy/list/dataprefix/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_10": {
      "path": "/template/policy/list/dataprefix/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_10": {
      "path": "/template/policy/list/dataprefix/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_10": {
      "path": "/template/policy/list/dataprefix/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getListsForAllDataPrefixes": {
      "path": "/template/policy/list/dataprefixall",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists for all data prefixes"
    },
    "createPolicyList_9": {
      "path": "/template/policy/list/dataprefixall",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_9": {
      "path": "/template/policy/list/dataprefixall",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_9": {
      "path": "/template/policy/list/dataprefixall/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_9": {
      "path": "/template/policy/list/dataprefixall/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_9": {
      "path": "/template/policy/list/dataprefixall/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_9": {
      "path": "/template/policy/list/dataprefixall/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_9": {
      "path": "/template/policy/list/dataprefixall/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_9": {
      "path": "/template/policy/list/dataprefixall/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getAllDataPrefixAndFQDNLists": {
      "path": "/template/policy/list/dataprefixfqdn",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get lists for all all data-prefix(IPv4) and Fqdn lists"
    },
    "createPolicyList_15": {
      "path": "/template/policy/list/dataprefixfqdn",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_15": {
      "path": "/template/policy/list/dataprefixfqdn",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_15": {
      "path": "/template/policy/list/dataprefixfqdn/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_15": {
      "path": "/template/policy/list/dataprefixfqdn/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_15": {
      "path": "/template/policy/list/dataprefixfqdn/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_15": {
      "path": "/template/policy/list/dataprefixfqdn/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_15": {
      "path": "/template/policy/list/dataprefixfqdn/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_15": {
      "path": "/template/policy/list/dataprefixfqdn/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_10": {
      "path": "/template/policy/list/expandedcommunity",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_11": {
      "path": "/template/policy/list/expandedcommunity",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_11": {
      "path": "/template/policy/list/expandedcommunity",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_11": {
      "path": "/template/policy/list/expandedcommunity/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_11": {
      "path": "/template/policy/list/expandedcommunity/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_11": {
      "path": "/template/policy/list/expandedcommunity/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_11": {
      "path": "/template/policy/list/expandedcommunity/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_11": {
      "path": "/template/policy/list/expandedcommunity/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_11": {
      "path": "/template/policy/list/expandedcommunity/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_11": {
      "path": "/template/policy/list/extcommunity",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_12": {
      "path": "/template/policy/list/extcommunity",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_12": {
      "path": "/template/policy/list/extcommunity",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_12": {
      "path": "/template/policy/list/extcommunity/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_12": {
      "path": "/template/policy/list/extcommunity/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_12": {
      "path": "/template/policy/list/extcommunity/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_12": {
      "path": "/template/policy/list/extcommunity/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_12": {
      "path": "/template/policy/list/extcommunity/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_12": {
      "path": "/template/policy/list/extcommunity/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_12": {
      "path": "/template/policy/list/faxprotocol",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_13": {
      "path": "/template/policy/list/faxprotocol",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_13": {
      "path": "/template/policy/list/faxprotocol",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_13": {
      "path": "/template/policy/list/faxprotocol/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_13": {
      "path": "/template/policy/list/faxprotocol/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_13": {
      "path": "/template/policy/list/faxprotocol/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_13": {
      "path": "/template/policy/list/faxprotocol/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_13": {
      "path": "/template/policy/list/faxprotocol/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_13": {
      "path": "/template/policy/list/faxprotocol/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_14": {
      "path": "/template/policy/list/fqdn",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_16": {
      "path": "/template/policy/list/fqdn",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_16": {
      "path": "/template/policy/list/fqdn",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_16": {
      "path": "/template/policy/list/fqdn/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_16": {
      "path": "/template/policy/list/fqdn/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_16": {
      "path": "/template/policy/list/fqdn/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_16": {
      "path": "/template/policy/list/fqdn/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_16": {
      "path": "/template/policy/list/fqdn/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_16": {
      "path": "/template/policy/list/fqdn/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_15": {
      "path": "/template/policy/list/geolocation",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_17": {
      "path": "/template/policy/list/geolocation",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_17": {
      "path": "/template/policy/list/geolocation",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getGeoLocationLists": {
      "path": "/template/policy/list/geolocation/entries",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get list of countries and continents for geo location"
    },
    "getPolicyListsWithInfoTag_17": {
      "path": "/template/policy/list/geolocation/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_17": {
      "path": "/template/policy/list/geolocation/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_17": {
      "path": "/template/policy/list/geolocation/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_17": {
      "path": "/template/policy/list/geolocation/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_17": {
      "path": "/template/policy/list/geolocation/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_17": {
      "path": "/template/policy/list/geolocation/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_16": {
      "path": "/template/policy/list/identity",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_18": {
      "path": "/template/policy/list/identity",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_18": {
      "path": "/template/policy/list/identity",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_18": {
      "path": "/template/policy/list/identity/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_18": {
      "path": "/template/policy/list/identity/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_18": {
      "path": "/template/policy/list/identity/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_18": {
      "path": "/template/policy/list/identity/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_18": {
      "path": "/template/policy/list/identity/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_18": {
      "path": "/template/policy/list/identity/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getListsForAllPrefixes": {
      "path": "/template/policy/list/ipprefixall",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get lists for all prefixes"
    },
    "createPolicyList_21": {
      "path": "/template/policy/list/ipprefixall",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_21": {
      "path": "/template/policy/list/ipprefixall",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_21": {
      "path": "/template/policy/list/ipprefixall/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_21": {
      "path": "/template/policy/list/ipprefixall/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_21": {
      "path": "/template/policy/list/ipprefixall/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_21": {
      "path": "/template/policy/list/ipprefixall/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_21": {
      "path": "/template/policy/list/ipprefixall/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_21": {
      "path": "/template/policy/list/ipprefixall/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_17": {
      "path": "/template/policy/list/ipssignature",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_19": {
      "path": "/template/policy/list/ipssignature",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_19": {
      "path": "/template/policy/list/ipssignature",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_19": {
      "path": "/template/policy/list/ipssignature/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_19": {
      "path": "/template/policy/list/ipssignature/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_19": {
      "path": "/template/policy/list/ipssignature/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_19": {
      "path": "/template/policy/list/ipssignature/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_19": {
      "path": "/template/policy/list/ipssignature/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_19": {
      "path": "/template/policy/list/ipssignature/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_18": {
      "path": "/template/policy/list/ipv6prefix",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_20": {
      "path": "/template/policy/list/ipv6prefix",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_20": {
      "path": "/template/policy/list/ipv6prefix",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_20": {
      "path": "/template/policy/list/ipv6prefix/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_20": {
      "path": "/template/policy/list/ipv6prefix/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_20": {
      "path": "/template/policy/list/ipv6prefix/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_20": {
      "path": "/template/policy/list/ipv6prefix/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_20": {
      "path": "/template/policy/list/ipv6prefix/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_20": {
      "path": "/template/policy/list/ipv6prefix/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_19": {
      "path": "/template/policy/list/localapp",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_22": {
      "path": "/template/policy/list/localapp",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_22": {
      "path": "/template/policy/list/localapp",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_22": {
      "path": "/template/policy/list/localapp/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_22": {
      "path": "/template/policy/list/localapp/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_22": {
      "path": "/template/policy/list/localapp/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_22": {
      "path": "/template/policy/list/localapp/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_22": {
      "path": "/template/policy/list/localapp/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_22": {
      "path": "/template/policy/list/localapp/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_20": {
      "path": "/template/policy/list/localdomain",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_23": {
      "path": "/template/policy/list/localdomain",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_23": {
      "path": "/template/policy/list/localdomain",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_23": {
      "path": "/template/policy/list/localdomain/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_23": {
      "path": "/template/policy/list/localdomain/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_23": {
      "path": "/template/policy/list/localdomain/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_23": {
      "path": "/template/policy/list/localdomain/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_23": {
      "path": "/template/policy/list/localdomain/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_23": {
      "path": "/template/policy/list/localdomain/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists": {
      "path": "/template/policy/list/mediaprofile",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList": {
      "path": "/template/policy/list/mediaprofile",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag": {
      "path": "/template/policy/list/mediaprofile",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag": {
      "path": "/template/policy/list/mediaprofile/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList": {
      "path": "/template/policy/list/mediaprofile/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById": {
      "path": "/template/policy/list/mediaprofile/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById": {
      "path": "/template/policy/list/mediaprofile/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList": {
      "path": "/template/policy/list/mediaprofile/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList": {
      "path": "/template/policy/list/mediaprofile/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_21": {
      "path": "/template/policy/list/mirror",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_24": {
      "path": "/template/policy/list/mirror",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_24": {
      "path": "/template/policy/list/mirror",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_24": {
      "path": "/template/policy/list/mirror/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_24": {
      "path": "/template/policy/list/mirror/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_24": {
      "path": "/template/policy/list/mirror/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_24": {
      "path": "/template/policy/list/mirror/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_24": {
      "path": "/template/policy/list/mirror/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_24": {
      "path": "/template/policy/list/mirror/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_22": {
      "path": "/template/policy/list/modempassthrough",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_25": {
      "path": "/template/policy/list/modempassthrough",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_25": {
      "path": "/template/policy/list/modempassthrough",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_25": {
      "path": "/template/policy/list/modempassthrough/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_25": {
      "path": "/template/policy/list/modempassthrough/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_25": {
      "path": "/template/policy/list/modempassthrough/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_25": {
      "path": "/template/policy/list/modempassthrough/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_25": {
      "path": "/template/policy/list/modempassthrough/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_25": {
      "path": "/template/policy/list/modempassthrough/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_23": {
      "path": "/template/policy/list/policer",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_26": {
      "path": "/template/policy/list/policer",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_26": {
      "path": "/template/policy/list/policer",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_26": {
      "path": "/template/policy/list/policer/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_26": {
      "path": "/template/policy/list/policer/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_26": {
      "path": "/template/policy/list/policer/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_26": {
      "path": "/template/policy/list/policer/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_26": {
      "path": "/template/policy/list/policer/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_26": {
      "path": "/template/policy/list/policer/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_24": {
      "path": "/template/policy/list/port",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_27": {
      "path": "/template/policy/list/port",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_27": {
      "path": "/template/policy/list/port",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_27": {
      "path": "/template/policy/list/port/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_27": {
      "path": "/template/policy/list/port/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_27": {
      "path": "/template/policy/list/port/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_27": {
      "path": "/template/policy/list/port/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_27": {
      "path": "/template/policy/list/port/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_27": {
      "path": "/template/policy/list/port/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_25": {
      "path": "/template/policy/list/preferredcolorgroup",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_28": {
      "path": "/template/policy/list/preferredcolorgroup",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_28": {
      "path": "/template/policy/list/preferredcolorgroup",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_28": {
      "path": "/template/policy/list/preferredcolorgroup/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_28": {
      "path": "/template/policy/list/preferredcolorgroup/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_28": {
      "path": "/template/policy/list/preferredcolorgroup/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_28": {
      "path": "/template/policy/list/preferredcolorgroup/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_28": {
      "path": "/template/policy/list/preferredcolorgroup/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_28": {
      "path": "/template/policy/list/preferredcolorgroup/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_26": {
      "path": "/template/policy/list/prefix",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_29": {
      "path": "/template/policy/list/prefix",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_29": {
      "path": "/template/policy/list/prefix",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_29": {
      "path": "/template/policy/list/prefix/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_29": {
      "path": "/template/policy/list/prefix/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_29": {
      "path": "/template/policy/list/prefix/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_29": {
      "path": "/template/policy/list/prefix/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_29": {
      "path": "/template/policy/list/prefix/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_29": {
      "path": "/template/policy/list/prefix/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_27": {
      "path": "/template/policy/list/protocolname",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_30": {
      "path": "/template/policy/list/protocolname",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_30": {
      "path": "/template/policy/list/protocolname",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_30": {
      "path": "/template/policy/list/protocolname/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_30": {
      "path": "/template/policy/list/protocolname/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_30": {
      "path": "/template/policy/list/protocolname/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_30": {
      "path": "/template/policy/list/protocolname/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_30": {
      "path": "/template/policy/list/protocolname/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_30": {
      "path": "/template/policy/list/protocolname/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_28": {
      "path": "/template/policy/list/region",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_31": {
      "path": "/template/policy/list/region",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_31": {
      "path": "/template/policy/list/region",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_31": {
      "path": "/template/policy/list/region/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_31": {
      "path": "/template/policy/list/region/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_31": {
      "path": "/template/policy/list/region/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_31": {
      "path": "/template/policy/list/region/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_31": {
      "path": "/template/policy/list/region/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_31": {
      "path": "/template/policy/list/region/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_29": {
      "path": "/template/policy/list/scalablegrouptag",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_32": {
      "path": "/template/policy/list/scalablegrouptag",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_32": {
      "path": "/template/policy/list/scalablegrouptag",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_32": {
      "path": "/template/policy/list/scalablegrouptag/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_32": {
      "path": "/template/policy/list/scalablegrouptag/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_32": {
      "path": "/template/policy/list/scalablegrouptag/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_32": {
      "path": "/template/policy/list/scalablegrouptag/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_32": {
      "path": "/template/policy/list/scalablegrouptag/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_32": {
      "path": "/template/policy/list/scalablegrouptag/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_30": {
      "path": "/template/policy/list/site",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_33": {
      "path": "/template/policy/list/site",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_33": {
      "path": "/template/policy/list/site",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "createDefaultSiteList": {
      "path": "/template/policy/list/site/defaultsite",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create default site list for sites missing from centralized policy"
    },
    "getPolicyListsWithInfoTag_33": {
      "path": "/template/policy/list/site/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_33": {
      "path": "/template/policy/list/site/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_33": {
      "path": "/template/policy/list/site/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_33": {
      "path": "/template/policy/list/site/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_33": {
      "path": "/template/policy/list/site/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_33": {
      "path": "/template/policy/list/site/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_31": {
      "path": "/template/policy/list/sla",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_34": {
      "path": "/template/policy/list/sla",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_34": {
      "path": "/template/policy/list/sla",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_34": {
      "path": "/template/policy/list/sla/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_34": {
      "path": "/template/policy/list/sla/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_34": {
      "path": "/template/policy/list/sla/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_34": {
      "path": "/template/policy/list/sla/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_34": {
      "path": "/template/policy/list/sla/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_34": {
      "path": "/template/policy/list/sla/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_32": {
      "path": "/template/policy/list/supervisorydisc",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_35": {
      "path": "/template/policy/list/supervisorydisc",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_35": {
      "path": "/template/policy/list/supervisorydisc",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_35": {
      "path": "/template/policy/list/supervisorydisc/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_35": {
      "path": "/template/policy/list/supervisorydisc/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_35": {
      "path": "/template/policy/list/supervisorydisc/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_35": {
      "path": "/template/policy/list/supervisorydisc/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_35": {
      "path": "/template/policy/list/supervisorydisc/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_35": {
      "path": "/template/policy/list/supervisorydisc/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_33": {
      "path": "/template/policy/list/tgapikey",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_36": {
      "path": "/template/policy/list/tgapikey",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_36": {
      "path": "/template/policy/list/tgapikey",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_36": {
      "path": "/template/policy/list/tgapikey/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_36": {
      "path": "/template/policy/list/tgapikey/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_36": {
      "path": "/template/policy/list/tgapikey/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_36": {
      "path": "/template/policy/list/tgapikey/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_36": {
      "path": "/template/policy/list/tgapikey/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_36": {
      "path": "/template/policy/list/tgapikey/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_34": {
      "path": "/template/policy/list/tloc",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_37": {
      "path": "/template/policy/list/tloc",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_37": {
      "path": "/template/policy/list/tloc",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_37": {
      "path": "/template/policy/list/tloc/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_37": {
      "path": "/template/policy/list/tloc/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_37": {
      "path": "/template/policy/list/tloc/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_37": {
      "path": "/template/policy/list/tloc/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_37": {
      "path": "/template/policy/list/tloc/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_37": {
      "path": "/template/policy/list/tloc/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_1": {
      "path": "/template/policy/list/translationprofile",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_1": {
      "path": "/template/policy/list/translationprofile",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_1": {
      "path": "/template/policy/list/translationprofile",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_1": {
      "path": "/template/policy/list/translationprofile/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_1": {
      "path": "/template/policy/list/translationprofile/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_1": {
      "path": "/template/policy/list/translationprofile/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_1": {
      "path": "/template/policy/list/translationprofile/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_1": {
      "path": "/template/policy/list/translationprofile/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_1": {
      "path": "/template/policy/list/translationprofile/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_2": {
      "path": "/template/policy/list/translationrules",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_2": {
      "path": "/template/policy/list/translationrules",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_2": {
      "path": "/template/policy/list/translationrules",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_2": {
      "path": "/template/policy/list/translationrules/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_2": {
      "path": "/template/policy/list/translationrules/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_2": {
      "path": "/template/policy/list/translationrules/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_2": {
      "path": "/template/policy/list/translationrules/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_2": {
      "path": "/template/policy/list/translationrules/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_2": {
      "path": "/template/policy/list/translationrules/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_35": {
      "path": "/template/policy/list/trunkgroup",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_38": {
      "path": "/template/policy/list/trunkgroup",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_38": {
      "path": "/template/policy/list/trunkgroup",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_38": {
      "path": "/template/policy/list/trunkgroup/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_38": {
      "path": "/template/policy/list/trunkgroup/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_38": {
      "path": "/template/policy/list/trunkgroup/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_38": {
      "path": "/template/policy/list/trunkgroup/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_38": {
      "path": "/template/policy/list/trunkgroup/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_38": {
      "path": "/template/policy/list/trunkgroup/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_36": {
      "path": "/template/policy/list/umbrelladata",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_39": {
      "path": "/template/policy/list/umbrelladata",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_39": {
      "path": "/template/policy/list/umbrelladata",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_39": {
      "path": "/template/policy/list/umbrelladata/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_39": {
      "path": "/template/policy/list/umbrelladata/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_39": {
      "path": "/template/policy/list/umbrelladata/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_39": {
      "path": "/template/policy/list/umbrelladata/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_39": {
      "path": "/template/policy/list/umbrelladata/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_39": {
      "path": "/template/policy/list/umbrelladata/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_37": {
      "path": "/template/policy/list/urlblacklist",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_40": {
      "path": "/template/policy/list/urlblacklist",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_40": {
      "path": "/template/policy/list/urlblacklist",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_40": {
      "path": "/template/policy/list/urlblacklist/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_40": {
      "path": "/template/policy/list/urlblacklist/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_40": {
      "path": "/template/policy/list/urlblacklist/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_40": {
      "path": "/template/policy/list/urlblacklist/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_40": {
      "path": "/template/policy/list/urlblacklist/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_40": {
      "path": "/template/policy/list/urlblacklist/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_38": {
      "path": "/template/policy/list/urlwhitelist",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_41": {
      "path": "/template/policy/list/urlwhitelist",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_41": {
      "path": "/template/policy/list/urlwhitelist",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_41": {
      "path": "/template/policy/list/urlwhitelist/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_41": {
      "path": "/template/policy/list/urlwhitelist/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_41": {
      "path": "/template/policy/list/urlwhitelist/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_41": {
      "path": "/template/policy/list/urlwhitelist/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_41": {
      "path": "/template/policy/list/urlwhitelist/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_41": {
      "path": "/template/policy/list/urlwhitelist/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "getPolicyLists_39": {
      "path": "/template/policy/list/vpn",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_42": {
      "path": "/template/policy/list/vpn",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_42": {
      "path": "/template/policy/list/vpn",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_42": {
      "path": "/template/policy/list/vpn/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_42": {
      "path": "/template/policy/list/vpn/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_42": {
      "path": "/template/policy/list/vpn/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_42": {
      "path": "/template/policy/list/vpn/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_42": {
      "path": "/template/policy/list/vpn/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_42": {
      "path": "/template/policy/list/vpn/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "createWebexPrefixLists": {
      "path": "/template/policy/list/webex",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "TEMP-Create Webex policy lists"
    },
    "createWebexPrefixLists_1": {
      "path": "/template/policy/list/webex/update",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "TEMP-Update Webex policy lists from Webex config"
    },
    "getPolicyLists_40": {
      "path": "/template/policy/list/zone",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists"
    },
    "createPolicyList_43": {
      "path": "/template/policy/list/zone",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create policy list"
    },
    "deletePolicyListsWithInfoTag_43": {
      "path": "/template/policy/list/zone",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy lists with specific info tag"
    },
    "getPolicyListsWithInfoTag_43": {
      "path": "/template/policy/list/zone/filtered",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy lists with specific info tag"
    },
    "previewPolicyList_43": {
      "path": "/template/policy/list/zone/preview",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Preview a policy list based on the policy list type"
    },
    "previewPolicyListById_43": {
      "path": "/template/policy/list/zone/preview/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Preview a specific policy list entry based on id provided"
    },
    "getListsById_43": {
      "path": "/template/policy/list/zone/{id}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get a specific policy list based on the id"
    },
    "editPolicyList_43": {
      "path": "/template/policy/list/zone/{id}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit policy list entries for a specific type of policy list"
    },
    "deletePolicyList_43": {
      "path": "/template/policy/list/zone/{id}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete policy list entry for a specific type of policy list"
    },
    "generateSecurityTemplateList": {
      "path": "/template/policy/security",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Generate template list"
    },
    "createSecurityTemplate": {
      "path": "/template/policy/security",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create Template"
    },
    "getSecurityTemplate": {
      "path": "/template/policy/security/definition/{policyId}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get Template"
    },
    "getSecurityPolicyDeviceList_1": {
      "path": "/template/policy/security/devices",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get device list"
    },
    "getDeviceListById": {
      "path": "/template/policy/security/devices/{policyId}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get device list by Id"
    },
    "editTemplateWithLenientLock": {
      "path": "/template/policy/security/staging/{policyId}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit Template"
    },
    "generateSecurityPolicySummary": {
      "path": "/template/policy/security/summary",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Generate security policy summary"
    },
    "getSecurityTemplatesForDevice": {
      "path": "/template/policy/security/{deviceModel}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get templates that map a device model"
    },
    "editSecurityTemplate": {
      "path": "/template/policy/security/{policyId}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit Template"
    },
    "deleteSecurityTemplate": {
      "path": "/template/policy/security/{policyId}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete Template"
    },
    "generatePolicyTemplateList": {
      "path": "/template/policy/vedge",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get policy details"
    },
    "createVEdgeTemplate": {
      "path": "/template/policy/vedge",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create template"
    },
    "getVEdgeTemplate": {
      "path": "/template/policy/vedge/definition/{policyId}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get template"
    },
    "getVEdgePolicyDeviceList": {
      "path": "/template/policy/vedge/devices",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get device list"
    },
    "getDeviceListByPolicy": {
      "path": "/template/policy/vedge/devices/{policyId}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get device list by policy"
    },
    "editVEdgeTemplate": {
      "path": "/template/policy/vedge/{policyId}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit template"
    },
    "deleteVEdgeTemplate": {
      "path": "/template/policy/vedge/{policyId}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete template"
    },
    "changePolicyResourceGroup": {
      "path": "/template/policy/vedge/{resourceGroupName}/{policyId}",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Change policy resource group"
    },
    "generateVoiceTemplateList": {
      "path": "/template/policy/voice",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Generate template list"
    },
    "createVoiceTemplate": {
      "path": "/template/policy/voice",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create Template"
    },
    "getTemplateById": {
      "path": "/template/policy/voice/definition/{policyId}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get templates by policy Id"
    },
    "getVoicePolicyDeviceList": {
      "path": "/template/policy/voice/devices",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get all device list"
    },
    "getDeviceListByPolicyId": {
      "path": "/template/policy/voice/devices/{policyId}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get device list by policy Id"
    },
    "generateVoicePolicySummary": {
      "path": "/template/policy/voice/summary",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get templates that map a device model"
    },
    "getVoiceTemplatesForDevice": {
      "path": "/template/policy/voice/{deviceModel}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get templates that map a device model"
    },
    "editVoiceTemplate": {
      "path": "/template/policy/voice/{policyId}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit Template"
    },
    "deleteVoiceTemplate": {
      "path": "/template/policy/voice/{policyId}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete Template"
    },
    "generateVSmartPolicyTemplateList": {
      "path": "/template/policy/vsmart",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get all template vsmart policy list"
    },
    "createVSmartTemplate": {
      "path": "/template/policy/vsmart",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Create template for given policy"
    },
    "activatePolicyForCloudServices": {
      "path": "/template/policy/vsmart/activate/central/{policyId}",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Activate vsmart policy for a given policy id"
    },
    "activatePolicy": {
      "path": "/template/policy/vsmart/activate/{policyId}",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Activate vsmart policy for a given policy id"
    },
    "editTemplateWithoutLockChecks": {
      "path": "/template/policy/vsmart/central/{policyId}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit template for given policy id to allow for multiple component edits"
    },
    "checkVSmartConnectivityStatus": {
      "path": "/template/policy/vsmart/connectivity/status",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Check VSmart Connectivity Status"
    },
    "deActivatePolicy": {
      "path": "/template/policy/vsmart/deactivate/{policyId}",
      "method": "post",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "create",
      "description": "Deactivate vsmart policy for a given policy id"
    },
    "getTemplateByPolicyId": {
      "path": "/template/policy/vsmart/definition/{policyId}",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Get template policy definition by policy id"
    },
    "QosmosNbarMigrationWarning": {
      "path": "/template/policy/vsmart/qosmos_nbar_migration_warning",
      "method": "get",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "get",
      "description": "Qosmos Nbar migration"
    },
    "editVSmartTemplate": {
      "path": "/template/policy/vsmart/{policyId}",
      "method": "put",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "update",
      "description": "Edit template for given policy id"
    },
    "deleteVSmartTemplate": {
      "path": "/template/policy/vsmart/{policyId}",
      "method": "delete",
      "sdk_endpoint": "configuration.policy",
      "sdk_method": "delete",
      "description": "Delete template for a given policy id"
    },
    "getEncryptedString": {
      "path": "/template/security/encryptText/encrypt",
      "method": "post",
      "sdk_endpoint": "template.security",
      "sdk_method": "create",
      "description": "Get Type 6 Encryptedd String for a given value"
    },
    "getAllTenants": {
      "path": "/tenant",
      "method": "get",
      "sdk_endpoint": "tenant",
      "sdk_method": "get",
      "description": "Lists all the tenants on the vManage<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "updateTenantBulk": {
      "path": "/tenant",
      "method": "put",
      "sdk_endpoint": "tenant",
      "sdk_method": "update",
      "description": "Update tenants in Multi-Tenant vManage<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "createTenant": {
      "path": "/tenant",
      "method": "post",
      "sdk_endpoint": "tenant",
      "sdk_method": "create",
      "description": "Create a new tenant in Multi-Tenant vManage<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "createTenantAsync": {
      "path": "/tenant/async",
      "method": "post",
      "sdk_endpoint": "tenant.async",
      "sdk_method": "create",
      "description": "Create a new tenant in Multi-Tenant vManage asynchronously<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "createTenantAsyncBulk": {
      "path": "/tenant/bulk/async",
      "method": "post",
      "sdk_endpoint": "tenant.bulk",
      "sdk_method": "create",
      "description": "Create multiple tenants on vManage asynchronously<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "deleteTenantAsyncBulk": {
      "path": "/tenant/bulk/async",
      "method": "delete",
      "sdk_endpoint": "tenant.bulk",
      "sdk_method": "delete",
      "description": "Delete multiple tenants on vManage asynchronously<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getTenantvSmartMapping": {
      "path": "/tenant/vsmart",
      "method": "get",
      "sdk_endpoint": "tenant.vsmart",
      "sdk_method": "get",
      "description": "Retrieve mapping of tenants to vSmarts<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getTenantHostingCapacityOnvSmarts": {
      "path": "/tenant/vsmart/capacity",
      "method": "get",
      "sdk_endpoint": "tenant.vsmart",
      "sdk_method": "get",
      "description": "Lists all the vsmarts on the vManage and its tenant hosting capacity<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getTenant": {
      "path": "/tenant/{tenantId}",
      "method": "get",
      "sdk_endpoint": "tenant.{tenantId}",
      "sdk_method": "get",
      "description": "Get a tenant by Id<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "updateTenant": {
      "path": "/tenant/{tenantId}",
      "method": "put",
      "sdk_endpoint": "tenant.{tenantId}",
      "sdk_method": "update",
      "description": "Update a tenant in Multi-Tenant vManage<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "deleteTenant": {
      "path": "/tenant/{tenantId}/delete",
      "method": "post",
      "sdk_endpoint": "tenant.{tenantId}",
      "sdk_method": "create",
      "description": "Delete a tenant by Id<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "switchTenant": {
      "path": "/tenant/{tenantId}/switch",
      "method": "post",
      "sdk_endpoint": "tenant.{tenantId}",
      "sdk_method": "create",
      "description": "Switch to a specific tenant<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "vSessionId": {
      "path": "/tenant/{tenantId}/vsessionid",
      "method": "post",
      "sdk_endpoint": "tenant.{tenantId}",
      "sdk_method": "create",
      "description": "Get VSessionId for a specific tenant<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "updateTenantvSmartPlacement": {
      "path": "/tenant/{tenantId}/vsmart",
      "method": "put",
      "sdk_endpoint": "tenant.{tenantId}",
      "sdk_method": "update",
      "description": "Update placement of the Tenant from source vSmart to destination vSmart<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "deleteTenantBackup": {
      "path": "/tenantbackup/delete",
      "method": "delete",
      "sdk_endpoint": "tenantbackup.delete",
      "sdk_method": "delete",
      "description": "Delete all or a specific backup file stored in vManage<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "downloadExistingBackupFile": {
      "path": "/tenantbackup/download/{path}",
      "method": "get",
      "sdk_endpoint": "tenantbackup.download",
      "sdk_method": "get",
      "description": "Download a Backup File that is already stored in vManage<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "exportTenantBackup": {
      "path": "/tenantbackup/export",
      "method": "get",
      "sdk_endpoint": "tenantbackup.export",
      "sdk_method": "get",
      "description": "Trigger a backup of configuration database and store it in vManage<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "importTenantBackup": {
      "path": "/tenantbackup/import",
      "method": "post",
      "sdk_endpoint": "tenantbackup.import",
      "sdk_method": "create",
      "description": "Submit a previously backed up file and import the data and apply it to the configuraion database<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "listTenantBackup": {
      "path": "/tenantbackup/list",
      "method": "get",
      "sdk_endpoint": "tenantbackup.list",
      "sdk_method": "get",
      "description": "List all backup files of a tenant stored in vManage<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "downloadTenantData": {
      "path": "/tenantmigration/download/{path}",
      "method": "get",
      "sdk_endpoint": "tenantmigration.download",
      "sdk_method": "get",
      "description": "Download tenant data"
    },
    "exportTenantData": {
      "path": "/tenantmigration/export",
      "method": "post",
      "sdk_endpoint": "tenantmigration.export",
      "sdk_method": "create",
      "description": "Export tenant data"
    },
    "importTenantData": {
      "path": "/tenantmigration/import/{migrationKey}",
      "method": "post",
      "sdk_endpoint": "tenantmigration.import",
      "sdk_method": "create",
      "description": "Import tenant data"
    },
    "getMigrationToken": {
      "path": "/tenantmigration/migrationToken",
      "method": "get",
      "sdk_endpoint": "tenantmigration.migrationToken",
      "sdk_method": "get",
      "description": "Get migration token"
    },
    "reTriggerNetworkMigration": {
      "path": "/tenantmigration/networkMigration",
      "method": "get",
      "sdk_endpoint": "tenantmigration.networkMigration",
      "sdk_method": "get",
      "description": "Re-trigger network migration"
    },
    "migrateNetwork": {
      "path": "/tenantmigration/networkMigration",
      "method": "post",
      "sdk_endpoint": "tenantmigration.networkMigration",
      "sdk_method": "create",
      "description": "Migrate network"
    },
    "getAllTenantStatuses": {
      "path": "/tenantstatus",
      "method": "get",
      "sdk_endpoint": "tenantstatus",
      "sdk_method": "get",
      "description": "List all tenant status<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "forceStatusCollection": {
      "path": "/tenantstatus/force",
      "method": "post",
      "sdk_endpoint": "tenantstatus.force",
      "sdk_method": "create",
      "description": "Force tenant status collection<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "token": {
      "path": "/token/{regionBaseUri}/{clientId}",
      "method": "post",
      "sdk_endpoint": "token.{regionBaseUri}",
      "sdk_method": "create",
      "description": "Get Access Token and Refresh Token for authorized user"
    },
    "createFullTopology": {
      "path": "/topology",
      "method": "get",
      "sdk_endpoint": "topology",
      "sdk_method": "get",
      "description": "Create full topology"
    },
    "createDeviceTopology": {
      "path": "/topology/device",
      "method": "get",
      "sdk_endpoint": "topology.device",
      "sdk_method": "get",
      "description": "Create device topology"
    },
    "getSiteTopology": {
      "path": "/topology/device/site/{siteId}",
      "method": "get",
      "sdk_endpoint": "topology.device",
      "sdk_method": "get",
      "description": "Get topology for a given site id"
    },
    "getSiteTopologyMonitorData": {
      "path": "/topology/monitor/site/{siteId}",
      "method": "get",
      "sdk_endpoint": "topology.monitor",
      "sdk_method": "get",
      "description": "Get topology monitor data for a given site id"
    },
    "createPhysicalTopology": {
      "path": "/topology/physical",
      "method": "get",
      "sdk_endpoint": "topology.physical",
      "sdk_method": "get",
      "description": "Create pysical topology"
    },
    "getControlConnections": {
      "path": "/troubleshooting/control/{uuid}",
      "method": "get",
      "sdk_endpoint": "troubleshooting.control",
      "sdk_method": "get",
      "description": "Troubleshoot control connections"
    },
    "getDeviceConfiguration": {
      "path": "/troubleshooting/devicebringup",
      "method": "get",
      "sdk_endpoint": "troubleshooting.devicebringup",
      "sdk_method": "get",
      "description": "Debug device bring up"
    },
    "getAllKeysFromUmbrella": {
      "path": "/umbrella/getkeys",
      "method": "get",
      "sdk_endpoint": "umbrella.getkeys",
      "sdk_method": "get",
      "description": "Get keys from Umbrella"
    },
    "getManagementKeysFromUmbrella": {
      "path": "/umbrella/getkeys/management",
      "method": "get",
      "sdk_endpoint": "umbrella.getkeys",
      "sdk_method": "get",
      "description": "Get management keys from Umbrella"
    },
    "getNetworkKeysFromUmbrella": {
      "path": "/umbrella/getkeys/networkdevices",
      "method": "get",
      "sdk_endpoint": "umbrella.getkeys",
      "sdk_method": "get",
      "description": "Get network devices keys from Umbrella"
    },
    "getReportingKeysFromUmbrella": {
      "path": "/umbrella/getkeys/reporting",
      "method": "get",
      "sdk_endpoint": "umbrella.getkeys",
      "sdk_method": "get",
      "description": "Get reporting keys from Umbrella"
    },
    "sendMetaDataToUmbrella": {
      "path": "/umbrella/syncnow",
      "method": "get",
      "sdk_endpoint": "umbrella.syncnow",
      "sdk_method": "get",
      "description": "Get metadata from db and send to Umbrella"
    },
    "getStatus": {
      "path": "/ump/status",
      "method": "get",
      "sdk_endpoint": "ump.status",
      "sdk_method": "get",
      "description": "Get last N minutes UMP historic data"
    },
    "getUrlMonitor": {
      "path": "/url/monitor",
      "method": "get",
      "sdk_endpoint": "url.monitor",
      "sdk_method": "get",
      "description": "List url monitoring information."
    },
    "updateUrlMonitor": {
      "path": "/url/monitor",
      "method": "put",
      "sdk_endpoint": "url.monitor",
      "sdk_method": "update",
      "description": "Update url monitor configuration"
    },
    "createUrlMonitor": {
      "path": "/url/monitor",
      "method": "post",
      "sdk_endpoint": "url.monitor",
      "sdk_method": "create",
      "description": "Create url monitor."
    },
    "deleteUrlMonitor": {
      "path": "/url/monitor",
      "method": "delete",
      "sdk_endpoint": "url.monitor",
      "sdk_method": "delete",
      "description": "Delete monitored url."
    },
    "returnMetric": {
      "path": "/util/configdb/metrics",
      "method": "get",
      "sdk_endpoint": "util.configdb",
      "sdk_method": "get",
      "description": "Get configdb metric within time-range"
    },
    "returnMetricFiles": {
      "path": "/util/configdb/metrics/downloadfiles",
      "method": "get",
      "sdk_endpoint": "util.configdb",
      "sdk_method": "get",
      "description": "Get configdb metric tar file."
    },
    "getMetricsList": {
      "path": "/util/configdb/metrics/listmetrics",
      "method": "get",
      "sdk_endpoint": "util.configdb",
      "sdk_method": "get",
      "description": "Get list of generated metrics."
    },
    "getDBSizeOnFile": {
      "path": "/util/configdb/size",
      "method": "get",
      "sdk_endpoint": "util.configdb",
      "sdk_method": "get",
      "description": "Fetches the disk usage by configuration-db"
    },
    "listLogFileDetails": {
      "path": "/util/logfile/appserver",
      "method": "get",
      "sdk_endpoint": "util.logfile",
      "sdk_method": "get",
      "description": "Lists content of log file. This API accepts content type as text/plain. It is mandatory to provide response content type. Any other content type would result in empty response."
    },
    "listVManageServerLogLastNLines": {
      "path": "/util/logfile/appserver/lastnlines",
      "method": "get",
      "sdk_endpoint": "util.logfile",
      "sdk_method": "get",
      "description": "List last N lines of log file. This API accepts content type as text/plain. It is mandatory to provide response content type. Any other content type would result in empty response."
    },
    "listConfigurations": {
      "path": "/util/logging/configurations",
      "method": "get",
      "sdk_endpoint": "util.logging",
      "sdk_method": "get",
      "description": "List logger configuration"
    },
    "debugLog": {
      "path": "/util/logging/debuglog",
      "method": "post",
      "sdk_endpoint": "util.logging",
      "sdk_method": "create",
      "description": "Test whether logging works"
    },
    "setLogLevel": {
      "path": "/util/logging/level",
      "method": "post",
      "sdk_endpoint": "util.logging",
      "sdk_method": "create",
      "description": "Set log level for logger"
    },
    "listLoggers": {
      "path": "/util/logging/loggers",
      "method": "get",
      "sdk_endpoint": "util.logging",
      "sdk_method": "get",
      "description": "List loggers"
    },
    "updateLoggerConfiguration": {
      "path": "/util/logging/updateConfiguration",
      "method": "post",
      "sdk_endpoint": "util.logging",
      "sdk_method": "create",
      "description": "Update logger configuration for rollover size and max file number"
    },
    "postStatsMigrationAction": {
      "path": "/util/olapdb/migration/action/{action}",
      "method": "post",
      "sdk_endpoint": "util.olapdb",
      "sdk_method": "create",
      "description": "Migration actions - start pause or restart migration"
    },
    "getStatsMigrationRangeConfig": {
      "path": "/util/olapdb/migration/rangefrom",
      "method": "get",
      "sdk_endpoint": "util.olapdb",
      "sdk_method": "get",
      "description": "Get migration historical data range configuration from upgrade time"
    },
    "postStatsMigrationRangeConfig": {
      "path": "/util/olapdb/migration/rangefrom",
      "method": "post",
      "sdk_endpoint": "util.olapdb",
      "sdk_method": "create",
      "description": "Config migration historical data range from upgrade time in seconds. -1 to keep all."
    },
    "getStatsMigrationSettings": {
      "path": "/util/olapdb/migration/settings",
      "method": "get",
      "sdk_endpoint": "util.olapdb",
      "sdk_method": "get",
      "description": "Get migration generic settings"
    },
    "postStatsMigrationSettings": {
      "path": "/util/olapdb/migration/settings",
      "method": "post",
      "sdk_endpoint": "util.olapdb",
      "sdk_method": "create",
      "description": "Config generic settings"
    },
    "getStatsMigrationStatsDbInfo": {
      "path": "/util/olapdb/migration/statsdbinfo",
      "method": "get",
      "sdk_endpoint": "util.olapdb",
      "sdk_method": "get",
      "description": "Get stats db table information"
    },
    "getStatsMigrationStatus": {
      "path": "/util/olapdb/migration/status",
      "method": "get",
      "sdk_endpoint": "util.olapdb",
      "sdk_method": "get",
      "description": "Get migration status"
    },
    "getCloudOnRampSaasStatus": {
      "path": "/v1/cloudonramp/saas",
      "method": "get",
      "sdk_endpoint": "v1.cloudonramp",
      "sdk_method": "get",
      "description": "Get Cloud On Ramp For Saas apps status"
    },
    "getCloudTunnelList": {
      "path": "/v1/cloudonramp/saas/cloud_tunnels",
      "method": "get",
      "sdk_endpoint": "v1.cloudonramp",
      "sdk_method": "get",
      "description": "Get Secure Internet Gateway Tunnel List"
    },
    "getPolicyGroupsWithCorSaasApps": {
      "path": "/v1/cloudonramp/saas/configuration",
      "method": "get",
      "sdk_endpoint": "v1.cloudonramp",
      "sdk_method": "get",
      "description": "Get Policy Groups that are deployed with Cloud on Ramp for Saas intent"
    },
    "getCorSitesPerDevice": {
      "path": "/v1/cloudonramp/saas/devices",
      "method": "get",
      "sdk_endpoint": "v1.cloudonramp",
      "sdk_method": "get",
      "description": "Get site, apps and device role information for cloud on ramp devices"
    },
    "getInactiveCorSaasSites": {
      "path": "/v1/cloudonramp/saas/inactivesites",
      "method": "get",
      "sdk_endpoint": "v1.cloudonramp",
      "sdk_method": "get",
      "description": "Get inactive sites"
    },
    "getLegacyDeviceList": {
      "path": "/v1/cloudonramp/saas/legacydevicelist",
      "method": "get",
      "sdk_endpoint": "v1.cloudonramp",
      "sdk_method": "get",
      "description": "Get Legacy Devices List"
    },
    "getCorSaasStatusPerDevice": {
      "path": "/v1/cloudonramp/saas/status",
      "method": "get",
      "sdk_endpoint": "v1.cloudonramp",
      "sdk_method": "get",
      "description": "Get Cloud On Ramp App details per device"
    },
    "getWebexSyncStatus": {
      "path": "/v1/cloudonramp/saas/webexsyncstatus",
      "method": "get",
      "sdk_endpoint": "v1.cloudonramp",
      "sdk_method": "get",
      "description": "Get Webex's sync Status for devices with COR Saas enabled via config group or device template"
    },
    "GetConfigGroupBySolution": {
      "path": "/v1/config-group",
      "method": "get",
      "sdk_endpoint": "v1.config_group",
      "sdk_method": "get",
      "description": "Get a Configuration Group by Solution"
    },
    "CreateConfigGroup": {
      "path": "/v1/config-group",
      "method": "post",
      "sdk_endpoint": "v1.config_group",
      "sdk_method": "create",
      "description": "Create a new Configuration Group"
    },
    "GetConfigGroup": {
      "path": "/v1/config-group/{configGroupId}",
      "method": "get",
      "sdk_endpoint": "v1.config_group",
      "sdk_method": "get",
      "description": "Get a Configuration Group by ID"
    },
    "EditConfigGroup": {
      "path": "/v1/config-group/{configGroupId}",
      "method": "put",
      "sdk_endpoint": "v1.config_group",
      "sdk_method": "update",
      "description": "Edit a Configuration Group"
    },
    "DeleteConfigGroup": {
      "path": "/v1/config-group/{configGroupId}",
      "method": "delete",
      "sdk_endpoint": "v1.config_group",
      "sdk_method": "delete",
      "description": "Delete Config Group"
    },
    "GetConfigGroupAssociation": {
      "path": "/v1/config-group/{configGroupId}/device/associate",
      "method": "get",
      "sdk_endpoint": "v1.config_group",
      "sdk_method": "get",
      "description": "Get devices association with a config group"
    },
    "UpdateConfigGroupAssociation": {
      "path": "/v1/config-group/{configGroupId}/device/associate",
      "method": "put",
      "sdk_endpoint": "v1.config_group",
      "sdk_method": "update",
      "description": "Move the devices from one config group to another"
    },
    "CreateConfigGroupAssociation": {
      "path": "/v1/config-group/{configGroupId}/device/associate",
      "method": "post",
      "sdk_endpoint": "v1.config_group",
      "sdk_method": "create",
      "description": "Create associations with device and a config group"
    },
    "DeleteConfigGroupAssociation": {
      "path": "/v1/config-group/{configGroupId}/device/associate",
      "method": "delete",
      "sdk_endpoint": "v1.config_group",
      "sdk_method": "delete",
      "description": "Delete Config Group Association from devices"
    },
    "deployConfigGroup": {
      "path": "/v1/config-group/{configGroupId}/device/deploy",
      "method": "post",
      "sdk_endpoint": "v1.config_group",
      "sdk_method": "create",
      "description": "deploy config group to devices<br><br><br>Note: In a multitenant vManage system, this API is only available in the Provider view."
    },
    "getConfigGroupDeviceVariables": {
      "path": "/v1/config-group/{configGroupId}/device/variables",
      "method": "get",
      "sdk_endpoint": "v1.config_group",
      "sdk_method": "get",
      "description": "Get device variables"
    },
    "createConfigGroupDeviceVariables": {
      "path": "/v1/config-group/{configGroupId}/device/variables",
      "method": "put",
      "sdk_endpoint": "v1.config_group",
      "sdk_method": "update",
      "description": "assign values to device variables"
    },
    "fetchConfigGroupDeviceVariables": {
      "path": "/v1/config-group/{configGroupId}/device/variables",
      "method": "post",
      "sdk_endpoint": "v1.config_group",
      "sdk_method": "create",
      "description": "Fetch device variables"
    },
    "getConfigGroupDeviceVariablesSchema": {
      "path": "/v1/config-group/{configGroupId}/device/variables/schema",
      "method": "get",
      "sdk_endpoint": "v1.config_group",
      "sdk_method": "get",
      "description": "get device variables schema"
    },
    "getConfigGroupDeviceConfigurationPreview": {
      "path": "/v1/config-group/{configGroupId}/device/{deviceId}/preview",
      "method": "post",
      "sdk_endpoint": "v1.config_group",
      "sdk_method": "create",
      "description": "Get a preview of the configuration for a device"
    },
    "getRuleAssociationByConfigGroupId": {
      "path": "/v1/config-group/{configGroupId}/rules",
      "method": "get",
      "sdk_endpoint": "v1.config_group",
      "sdk_method": "get",
      "description": "Get Rule by associated object Id, example : get rules by config group Id"
    },
    "analyzeCliConfig": {
      "path": "/v1/device/analyzeCliConfig",
      "method": "post",
      "sdk_endpoint": "v1.device",
      "sdk_method": "create",
      "description": "Analyze CLI Config for device"
    },
    "getRunningIosCliConfig": {
      "path": "/v1/device/runningIosCliConfig/{deviceUUID}",
      "method": "get",
      "sdk_endpoint": "v1.device",
      "sdk_method": "get",
      "description": "Get Running iOS CLI Config for device"
    },
    "getUnsupportedCliConfig": {
      "path": "/v1/device/unsupportedCliConfig/{deviceUUID}",
      "method": "get",
      "sdk_endpoint": "v1.device",
      "sdk_method": "get",
      "description": "Get Unsupported CLI Config for device"
    },
    "GetMobilityCliFeatureProfile": {
      "path": "/v1/feature-profile/mobility/cli",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Mobility Cli Feature Profiles"
    },
    "GetMobilityCliFeatureProfileByCliId": {
      "path": "/v1/feature-profile/mobility/cli/{cliId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a Mobility Feature Profile with Cli profile type"
    },
    "GetAllConfigFeatureForMobility": {
      "path": "/v1/feature-profile/mobility/cli/{cliId}/config",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get config Features for cli feature profile"
    },
    "CreateConfigFeatureForMobility": {
      "path": "/v1/feature-profile/mobility/cli/{cliId}/config",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a config Feature for cli feature profile"
    },
    "GetConfigFeatureForMobilityByParcelId": {
      "path": "/v1/feature-profile/mobility/cli/{cliId}/config/{configId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get config Feature by configId for cli feature profile"
    },
    "EditConfigFeatureForMobility": {
      "path": "/v1/feature-profile/mobility/cli/{cliId}/config/{configId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a config Feature for cli feature profile"
    },
    "DeleteConfigFeatureForMobility": {
      "path": "/v1/feature-profile/mobility/cli/{cliId}/config/{configId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a config Feature for cli feature profile"
    },
    "GetMobilityGlobalFeatureProfile": {
      "path": "/v1/feature-profile/mobility/global",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Mobility Global Feature Profiles"
    },
    "GetMobilityGlobalBasicParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/mobility/global/basic/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a Mobility Global Basic Parcel Schema by Schema Type"
    },
    "GetMobilityFeatureProfileByGlobalId": {
      "path": "/v1/feature-profile/mobility/global/{globalId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a Mobility Global Feature Profile by profileId"
    },
    "GetQosFeatureForGlobal": {
      "path": "/v1/feature-profile/mobility/global/{globalId}/qos",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Qos Feature for Global feature profile"
    },
    "CreateQosFeatureForGlobal": {
      "path": "/v1/feature-profile/mobility/global/{globalId}/qos",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Qos Feature for Global feature profile"
    },
    "GetQosFeatureByParcelIdForGlobal": {
      "path": "/v1/feature-profile/mobility/global/{globalId}/qos/{qosId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Qos Feature by parcelId for Global feature profile"
    },
    "EditQosFeatureForGlobal": {
      "path": "/v1/feature-profile/mobility/global/{globalId}/qos/{qosId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Qos Feature for Global feature profile"
    },
    "DeleteQosFeatureForGlobal": {
      "path": "/v1/feature-profile/mobility/global/{globalId}/qos/{qosId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Qos Feature for Global feature profile"
    },
    "GetAaaServersProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/aaaservers",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get aaaservers Profile Parcels for Mobility Global Feature Profile"
    },
    "CreateAaaServersProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/aaaservers",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a aaaservers Profile Parcel for Mobility Global Feature Profile"
    },
    "GetAaaServersProfileParcelByParcelIdForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/aaaservers/{aaaserversId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get aaaservers Profile Parcel by parcelId for Mobility Global Feature Profile"
    },
    "EditAaaServersProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/aaaservers/{aaaserversId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a aaaservers Profile Parcel for Mobility Global Feature Profile"
    },
    "DeleteAaaServersProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/aaaservers/{aaaserversId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a aaaservers Profile Parcel for Mobility Global Feature Profile"
    },
    "GetBasicProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/basic",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Basic Profile Parcels for Mobility Global Feature Profile"
    },
    "CreateBasicProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/basic",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Basic Profile Parcel for Mobility Global Feature Profile"
    },
    "GetBasicProfileParcelByParcelIdForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/basic/{parcelId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Basic Profile Parcel by parcelId for Mobility Global Feature Profile"
    },
    "EditBasicProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/basic/{parcelId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Basic Profile Parcel for Mobility Global Feature Profile"
    },
    "DeleteBasicProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/basic/{parcelId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Basic Profile Parcel for Mobility Global Feature Profile"
    },
    "GetCellularProfileParcelListForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/cellular",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get an Mobility Cellular Profile Parcel list for Mobility Global Feature Profile"
    },
    "CreateCellularProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/cellular",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create an cellular Profile Parcel for Mobility Global Feature Profile"
    },
    "GetCellularProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/cellular/{cellularId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get an Mobility Cellular Profile Parcel for Mobility Global Feature Profile"
    },
    "EditCellularProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/cellular/{cellularId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit an Cellular Profile Parcel for Mobility Global Feature Profile"
    },
    "DeleteACellularProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/cellular/{cellularId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Cellular Profile Parcel for Mobility Global Feature Profile"
    },
    "GetEsimCellularProfileFeatureForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/esimcellular",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get EsimCellular Profile Features for Mobility Global Feature Profile"
    },
    "CreateEsimCellularProfileFeatureForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/esimcellular",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a EsimCellular Profile Feature for Mobility Global Feature Profile"
    },
    "GetEsimCellularProfileFeatureByEsimCellularIdForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/esimcellular/{esimCellularId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get EsimCellular Profile Feature by Feature Id for Mobility Global Feature Profile"
    },
    "EditEsimCellularProfileFeatureForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/esimcellular/{esimCellularId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a EsimCellular Profile Feature for Mobility Global Feature Profile"
    },
    "DeleteEsimCellularProfileFeatureForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/esimcellular/{esimCellularId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a EsimCellular Profile Feature for Mobility Global Feature Profile"
    },
    "GetEthernetProfileParcels": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/ethernet",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Ethernet Profile Parcels for feature profile"
    },
    "CreateEthernetProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/ethernet",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create an ethernet Profile Parcel for Mobility Global Feature Profile"
    },
    "GetEthernetProfileParcel": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/ethernet/{ethernetId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Ethernet Profile Parcels for feature profile"
    },
    "EditEthernetProfileParcelForSystem": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/ethernet/{ethernetId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Ethernet Profile Parcel for feature profile"
    },
    "DeleteEthernetProfileParcelForSystem": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/ethernet/{ethernetId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Ethernet Profile Parcel for feature profile"
    },
    "GetLoggingProfileFeatureForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/logging",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Logging Profile Features for Mobility Global Feature Profile"
    },
    "CreateLoggingProfileFeatureForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/logging",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Logging Profile Feature for Mobility Global Feature Profile"
    },
    "GetLoggingProfileFeatureByFeatureIdForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/logging/{loggingId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Logging Profile Feature by parcelId for Mobility Global Feature Profile"
    },
    "EditLoggingProfileFeatureForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/logging/{loggingId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Logging Profile Feature for Mobility Global Feature Profile"
    },
    "DeleteLoggingProfileFeatureForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/logging/{loggingId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Logging Profile Feature for Mobility Global Feature Profile"
    },
    "GetNetworkProtocolProfileParcelListForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/networkProtocol",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get an Mobility NetworkProtocol Profile Parcel list for Mobility Global Feature Profile"
    },
    "CreateNetworkProtocolProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/networkProtocol",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create an NetworkProtocol Profile Parcel for Mobility Global Feature Profile"
    },
    "GetNetworkProtocolProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/networkProtocol/{networkProtocolId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get an Mobility NetworkProtocol Profile Parcel for Mobility Global Feature Profile"
    },
    "EditNetworkProtocolProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/networkProtocol/{networkProtocolId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit an Network Protocol Profile Parcel for Mobility Global Feature Profile"
    },
    "DeleteNetworkProtocolProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/networkProtocol/{networkProtocolId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Network Protocol Profile Parcel for Mobility Global Feature Profile"
    },
    "GetSecurityPolicyProfileParcelListForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/securityPolicy",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get an Mobility SecurityPolicy Profile Parcel list for Mobility Global Feature Profile"
    },
    "CreateSecurityPolicyProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/securityPolicy",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create an SecurityPolicy Profile Parcel for Mobility Global Feature Profile"
    },
    "GetSecurityPolicyProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/securityPolicy/{securityPolicyId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get an Mobility SecurityPolicy Profile Parcel for Mobility Global Feature Profile"
    },
    "EditSecurityPolicyProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/securityPolicy/{securityPolicyId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit an Security Policy Profile Parcel for Mobility Global Feature Profile"
    },
    "DeleteSecurityPolicyProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/securityPolicy/{securityPolicyId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Security Policy Profile Parcel for Mobility Global Feature Profile"
    },
    "GetVpnProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/vpn",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get VPN Profile Parcels for Mobility Global Feature Profile"
    },
    "CreateVpnProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/vpn",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a VPN Profile Parcel for Mobility Global Feature Profile"
    },
    "GetVpnProfileParcelByParcelIdForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/vpn/{vpnId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get VPN Profile Parcel by parcelId for Mobility Global Feature Profile"
    },
    "EditVpnProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/vpn/{vpnId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a VPN Profile Parcel for Mobility Global Feature Profile"
    },
    "DeleteVpnProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/vpn/{vpnId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a VPN Profile Parcel for Mobility Global Feature Profile"
    },
    "GetWifiProfileParcelListForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/wifi",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Wifi Profile Parcel List for Mobility feature profile"
    },
    "CreateWifiProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/wifi",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create an Wifi Profile Parcel for Mobility feature profile"
    },
    "GetWifiProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/wifi/{wifiId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get an Wifi Profile Parcel for Mobility feature profile"
    },
    "EditWifiProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/wifi/{wifiId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit an Wifi Profile Parcel for Mobility feature profile"
    },
    "DeleteWifiProfileParcelForMobility": {
      "path": "/v1/feature-profile/mobility/global/{profileId}/wifi/{wifiId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete an Wifi Profile Parcel for Mobility feature profile"
    },
    "GetAllNfvirtualCLIFeatureProfiles": {
      "path": "/v1/feature-profile/nfvirtual/cli",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all Nfvirtual CLI Feature Profiles"
    },
    "CreateNfvirtualCLIFeatureProfile": {
      "path": "/v1/feature-profile/nfvirtual/cli",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Nfvirtual CLI Feature Profile"
    },
    "GetNfvirtualCLIFeatureProfileByid": {
      "path": "/v1/feature-profile/nfvirtual/cli/{cliId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get nfvirtual CLI Feature Profile with cliId"
    },
    "EditNfvirtualCLIFeatureProfile": {
      "path": "/v1/feature-profile/nfvirtual/cli/{cliId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a Nfvirtual CLI Feature Profile"
    },
    "DeleteNfvirtualCLIFeatureProfile": {
      "path": "/v1/feature-profile/nfvirtual/cli/{cliId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete nfvirtual CLI Feature Profile"
    },
    "CreateNfvirtualCLIParcel": {
      "path": "/v1/feature-profile/nfvirtual/cli/{cliId}/config",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create CLI Profile Parcel for CLI feature profile"
    },
    "getNfvirtualCLIParcel": {
      "path": "/v1/feature-profile/nfvirtual/cli/{cliId}/config/{configId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get CLI Profile Parcels for CLI feature profile"
    },
    "EditNfvirtualCLIParcel": {
      "path": "/v1/feature-profile/nfvirtual/cli/{cliId}/config/{configId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit CLI Profile Parcel for CLI feature profile"
    },
    "DeleteNfvirtualCLIParcel": {
      "path": "/v1/feature-profile/nfvirtual/cli/{cliId}/config/{configId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete CLI Profile Parcel for CLI feature profile"
    },
    "GetAllNfvirtualNetworksFeatureProfiles": {
      "path": "/v1/feature-profile/nfvirtual/networks",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all Nfvirtual Feature Profiles"
    },
    "CreateNfvirtualNetworksFeatureProfile": {
      "path": "/v1/feature-profile/nfvirtual/networks",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a nfvirtual Networks Feature Profile"
    },
    "GetAllNfvirtualOvsNetworksFeatureProfileByProfileId": {
      "path": "/v1/feature-profile/nfvirtual/networks/ovsnetwork/{networkId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all Nfvirtual OVS Networks Feature Profile with networkId"
    },
    "GetNfvirtualNetworksFeatureProfileByProfileId": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networkId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a Nfvirtual Networks Feature Profile with networkId"
    },
    "EditNfvirtualNetworksFeatureProfile": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networkId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a Nfvirtual Networks Feature Profile"
    },
    "DeleteNfvirtualNetworksFeatureProfile": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networkId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Nfvirtual Networks Feature Profile"
    },
    "CreateNfvirtualLANParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/lan",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create LAN Profile Parcel for Networks feature profile"
    },
    "GetNfvirtualLANParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/lan/{lanId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LAN Profile Parcels for Networks feature profile"
    },
    "EditNfvirtualLANParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/lan/{lanId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a  LAN Profile Parcel for networks feature profile"
    },
    "DeleteNfvirtualLANParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/lan/{lanId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a LAN Profile Parcel for Networks feature profile"
    },
    "CreateNfvirtualOVSNetworkParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/ovsnetwork",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create OVS Network Profile Parcel for Networks feature profile"
    },
    "GetNfvirtualOVSNetworkParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/ovsnetwork/{ovsNetworkId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get OVS Network Profile Parcels for Networks feature profile"
    },
    "EditNfvirtualOVSNetworkParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/ovsnetwork/{ovsNetworkId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a OVS Network Profile Parcel for Networks feature profile"
    },
    "DeleteNfvirtualOVSNetworkParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/ovsnetwork/{ovsNetworkId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a OVS Network Profile Parcel for Networks feature profile"
    },
    "CreateNfvirtualRoutesParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/routes",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create Routes Profile config for Networks feature profile"
    },
    "GetNfvirtualRoutesParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/routes/{routesId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Routes Profile Parcels for Networks feature profile"
    },
    "EditNfvirtualRoutesParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/routes/{routesId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a Routes Profile Parcel for networks feature profile"
    },
    "DeleteNfvirtualRoutesParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/routes/{routesId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete Routes Profile config for Networks feature profile"
    },
    "CreateNfvirtualSwitchParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/switch",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create Switch Profile config for Networks feature profile"
    },
    "GetNfvirtualSwitchParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/switch/{switchId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Switch Profile Parcels for Networks feature profile"
    },
    "EditNfvirtualSwitchParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/switch/{switchId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a Switch Profile Parcel for networks feature profile"
    },
    "DeleteNfvirtualSwitchParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/switch/{switchId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete Switch Profile config for Networks feature profile"
    },
    "CreateNfvirtualVNFAttributesParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/vnf-attributes",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create VNF Attributes Profile config for Networks feature profile"
    },
    "GetNfvirtualVNFAttributesParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/vnf-attributes/{vnfAttributesId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get VNF Attributes Profile Parcels for Networks feature profile"
    },
    "EditNfvirtualVNFAttributesParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/vnf-attributes/{vnfAttributesId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a VNF Attributes Profile Parcel for networks feature profile"
    },
    "DeleteNfvirtualVNFAttributesParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/vnf-attributes/{vnfAttributesId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete VNF Attributes Profile config for Networks feature profile"
    },
    "CreateNfvirtualVNFParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/vnf-attributes/{vnfAttributesId}/vnf",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create VNF Profile Parcel for Networks feature profile"
    },
    "GetNfvirtualVNFParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/vnf-attributes/{vnfAttributesId}/vnf/{vnfId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get VNF Profile Parcels for Networks feature profile"
    },
    "EditNfvirtualVNFParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/vnf-attributes/{vnfAttributesId}/vnf/{vnfId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a VNF Profile Parcel for networks feature profile"
    },
    "DeleteNfvirtualVNFParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/vnf-attributes/{vnfAttributesId}/vnf/{vnfId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a VNF Profile Parcel for Networks feature profile"
    },
    "CreateNfvirtualWanParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/wan",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a WAN Profile Parcel for Networks feature profile"
    },
    "GetNfvirtualWANParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/wan/{wanId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WAN Profile Parcels for Networks feature profile"
    },
    "EditNfvirtualWANParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/wan/{wanId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a WAN Profile Parcel for networks feature profile"
    },
    "DeleteNfvirtualWANParcel": {
      "path": "/v1/feature-profile/nfvirtual/networks/{networksId}/wan/{wanId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a WAN Profile Parcel for Networks feature profile"
    },
    "GetAllNfvirtualSystemFeatureProfiles": {
      "path": "/v1/feature-profile/nfvirtual/system",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all Nfvirtual System Feature Profiles"
    },
    "CreateNfvirtualSystemFeatureProfile": {
      "path": "/v1/feature-profile/nfvirtual/system",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a nfvirtual System Feature Profile"
    },
    "GetNfvirtualSystemFeatureProfileByProfileId": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a Nfvirtual System Feature Profile with systemId"
    },
    "EditNfvirtualSystemFeatureProfile": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a Nfvirtual System Feature Profile"
    },
    "DeleteNfvirtualSystemFeatureProfile": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Nfvirtual System Feature Profile"
    },
    "CreateNfvirtualAAAParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/aaa",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create AAA Profile Parcel for System feature profile"
    },
    "GetNfvirtualAAAParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/aaa/{aaaId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get AAA Profile Parcels for System feature profile"
    },
    "EditNfvirtualAAAParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/aaa/{aaaId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a  AAA Profile Parcel for System feature profile"
    },
    "DeleteNfvirtualAAAParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/aaa/{aaaId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a AAA Profile Parcel for System feature profile"
    },
    "CreateNfvirtualBannerParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/banner",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create Banner Profile Parcel for System feature profile"
    },
    "GetNfvirtualBannerParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/banner/{bannerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Banner Profile Parcels for System feature profile"
    },
    "EditNfvirtualBannerParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/banner/{bannerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a  Banner Profile Parcel for System feature profile"
    },
    "DeleteNfvirtualBannerParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/banner/{bannerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Banner Profile Parcel for System feature profile"
    },
    "CreateNfvirtualLoggingParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/logging",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create Logging Profile Parcel for System feature profile"
    },
    "GetNfvirtualLoggingParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/logging/{loggingId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Logging Profile Parcels for System feature profile"
    },
    "EditNfvirtualLoggingParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/logging/{loggingId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a  Logging Profile Parcel for System feature profile"
    },
    "DeleteNfvirtualLoggingParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/logging/{loggingId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Logging Profile Parcel for System feature profile"
    },
    "CreateNfvirtualNTPParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/ntp",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create NTP Profile Parcel for System feature profile"
    },
    "GetNfvirtualNTPParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/ntp/{ntpId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get NTP Profile Parcels for System feature profile"
    },
    "EditNfvirtualNTPParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/ntp/{ntpId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a  NTP Profile Parcel for System feature profile"
    },
    "DeleteNfvirtualNTPParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/ntp/{ntpId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a NTP Profile Parcel for System feature profile"
    },
    "CreateNfvirtualSNMPParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/snmp",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create SNMP Profile Parcel for System feature profile"
    },
    "GetNfvirtualSNMPParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/snmp/{snmpId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get SNMP Profile Parcels for System feature profile"
    },
    "EditNfvirtualSNMPParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/snmp/{snmpId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a  SNMP Profile Parcel for System feature profile"
    },
    "DeleteNfvirtualSNMPParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/snmp/{snmpId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a SNMP Profile Parcel for System feature profile"
    },
    "CreateNfvirtualSystemSettingsParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/system-settings",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create System settings  Profile Parcel for System feature profile"
    },
    "GetNfvirtualSystemSettingsParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/system-settings/{systemSettingsId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get System Settings Profile Parcels for System feature profile"
    },
    "EditNfvirtualSystemSettingsParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/system-settings/{systemSettingsId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a System Settings Profile Parcel for System feature profile"
    },
    "DeleteNfvirtualSystemSettingsParcel": {
      "path": "/v1/feature-profile/nfvirtual/system/{systemId}/system-settings/{systemSettingsId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete System settings Profile Parcel for System feature profile"
    },
    "GetSdroutingFeatureProfiles": {
      "path": "/v1/feature-profile/sd-routing",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing Feature Profiles"
    },
    "GetSdroutingCliFeatureProfiles": {
      "path": "/v1/feature-profile/sd-routing/cli",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing CLI Feature Profiles"
    },
    "CreateSdroutingCliFeatureProfile": {
      "path": "/v1/feature-profile/sd-routing/cli",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing CLI Feature Profile"
    },
    "GetSdroutingCliFeatureProfile": {
      "path": "/v1/feature-profile/sd-routing/cli/{cliId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SD-Routing CLI Feature Profile"
    },
    "EditSdroutingCliFeatureProfile": {
      "path": "/v1/feature-profile/sd-routing/cli/{cliId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a SD-Routing CLI Feature Profile"
    },
    "DeleteSdroutingCliFeatureProfile": {
      "path": "/v1/feature-profile/sd-routing/cli/{cliId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a SD-Routing CLI Feature Profile"
    },
    "GetSdroutingCLIAddOnFeatures": {
      "path": "/v1/feature-profile/sd-routing/cli/{cliId}/config",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing CLI Add-On Features for CLI Feature Profile"
    },
    "CreateSdroutingCLIAddOnFeature": {
      "path": "/v1/feature-profile/sd-routing/cli/{cliId}/config",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing CLI Add-On Feature for CLI Feature Profile"
    },
    "GetSdroutingCLIAddOnFeature": {
      "path": "/v1/feature-profile/sd-routing/cli/{cliId}/config/{configId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SD-Routing CLI Add-On Feature for CLI Feature Profile"
    },
    "EditSdroutingCLIAddOnFeature": {
      "path": "/v1/feature-profile/sd-routing/cli/{cliId}/config/{configId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a SD-Routing CLI Add-On Feature for CLI Feature Profile"
    },
    "DeleteSdroutingCLIAddOnFeature": {
      "path": "/v1/feature-profile/sd-routing/cli/{cliId}/config/{configId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a SD-Routing CLI Add-On Feature for CLI Feature Profile"
    },
    "GetSdroutingCliConfigGroupFeatures": {
      "path": "/v1/feature-profile/sd-routing/cli/{cliId}/full-config",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the CLI Configuration by CLI profile ID"
    },
    "CreateSdroutingCliConfigGroupFeature": {
      "path": "/v1/feature-profile/sd-routing/cli/{cliId}/full-config",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing CLI Configuration Group"
    },
    "GetSdroutingCliConfigGroupFeature": {
      "path": "/v1/feature-profile/sd-routing/cli/{cliId}/full-config/{fullConfigId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the CLI Configuration by CLI profile ID and Config Feature ID"
    },
    "EditSdroutingCliConfigGroupFeature": {
      "path": "/v1/feature-profile/sd-routing/cli/{cliId}/full-config/{fullConfigId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a SD-Routing CLI Configuration Group"
    },
    "DeleteSdroutingCliConfigGroupFeature": {
      "path": "/v1/feature-profile/sd-routing/cli/{cliId}/full-config/{fullConfigId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a SD-Routing CLI Configuration Group"
    },
    "GetSdroutingIosCLassicCLIAddOnFeatures": {
      "path": "/v1/feature-profile/sd-routing/cli/{cliId}/ios-config",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "SD-Routing Ios Classic CLI Add-On Features for CLI Feature Profile for GET requests"
    },
    "CreateSdroutingIosClassicCLIAddOnFeature": {
      "path": "/v1/feature-profile/sd-routing/cli/{cliId}/ios-config",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "SD-Routing Ios Classic CLI Add-On Feature for CLI Feature Profile for POST requests"
    },
    "GetSdroutingIosClassicCLIAddOnFeature": {
      "path": "/v1/feature-profile/sd-routing/cli/{cliId}/ios-config/{iosConfigId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "SD-Routing Ios Classic CLI Add-On Feature for CLI Feature Profile for GET requests"
    },
    "EditSdroutingIosClassicCLIAddOnFeature": {
      "path": "/v1/feature-profile/sd-routing/cli/{cliId}/ios-config/{iosConfigId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "SD-Routing Ios Classic CLI Add-On Feature for CLI Feature Profile for PUT requests"
    },
    "DeleteSdroutingIosClassicCLIAddOnFeature": {
      "path": "/v1/feature-profile/sd-routing/cli/{cliId}/ios-config/{iosConfigId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a SD-Routing Ios Classic CLI Add-On Feature for CLI Feature Profile"
    },
    "GetSdRoutingEmbeddedSecurityFeatureProfiles": {
      "path": "/v1/feature-profile/sd-routing/embedded-security",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-ROUTING Feature Profiles with giving Family and profile type"
    },
    "CreateSdRoutingEmbeddedSecurityFeatureProfile": {
      "path": "/v1/feature-profile/sd-routing/embedded-security",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-ROUTING Embedded Security Feature Profile"
    },
    "GetSdRoutingEmbeddedSecurityFeatureProfileByProfileId": {
      "path": "/v1/feature-profile/sd-routing/embedded-security/{embeddedSecurityId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SD-ROUTING Embedded Security Feature Profile with embeddedSecurityId"
    },
    "EditSdRoutingEmbeddedSecurityFeatureProfile": {
      "path": "/v1/feature-profile/sd-routing/embedded-security/{embeddedSecurityId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a SD-ROUTING Embedded Security Feature Profile"
    },
    "DeleteSdRoutingEmbeddedSecurityFeatureProfile": {
      "path": "/v1/feature-profile/sd-routing/embedded-security/{embeddedSecurityId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete Feature Profile"
    },
    "GetSecurityFeature": {
      "path": "/v1/feature-profile/sd-routing/embedded-security/{securityId}/policy",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Security Features for a given FeatureType"
    },
    "CreateEmbeddedSecurityFeature": {
      "path": "/v1/feature-profile/sd-routing/embedded-security/{securityId}/policy",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create Feature for Security Policy"
    },
    "GetSecurityFeatureByFeatureId": {
      "path": "/v1/feature-profile/sd-routing/embedded-security/{securityId}/policy/{securityProfileParcelId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Security Feature by FeatureId"
    },
    "EditSecurityFeature": {
      "path": "/v1/feature-profile/sd-routing/embedded-security/{securityId}/policy/{securityProfileParcelId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Security Feature"
    },
    "DeleteSecurityFeature": {
      "path": "/v1/feature-profile/sd-routing/embedded-security/{securityId}/policy/{securityProfileParcelId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Security Feature "
    },
    "GetNgfirewallFeature": {
      "path": "/v1/feature-profile/sd-routing/embedded-security/{securityId}/unified/ngfirewall",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Ngfirewall Feature"
    },
    "CreateNgfirewallFeature": {
      "path": "/v1/feature-profile/sd-routing/embedded-security/{securityId}/unified/ngfirewall",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create Parcel for Ngfirewall Policy"
    },
    "GetNgfirewallFeatureByFeatureId": {
      "path": "/v1/feature-profile/sd-routing/embedded-security/{securityId}/unified/ngfirewall/{securityProfileParcelId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Ngfirewall Feature by FeatureId"
    },
    "EditNgfirewallFeature": {
      "path": "/v1/feature-profile/sd-routing/embedded-security/{securityId}/unified/ngfirewall/{securityProfileParcelId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Ngfirewall Feature"
    },
    "DeleteNgfirewallFeature": {
      "path": "/v1/feature-profile/sd-routing/embedded-security/{securityId}/unified/ngfirewall/{securityProfileParcelId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Ngfirewall Feature "
    },
    "GetCybervisionProfileFeatureForOther": {
      "path": "/v1/feature-profile/sd-routing/other/{otherId}/cybervision",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Cybervision Profile feature for Other feature profile"
    },
    "CreateCybervisionProfileFeatureForOther": {
      "path": "/v1/feature-profile/sd-routing/other/{otherId}/cybervision",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Cybervision Profile feature for Other feature profile"
    },
    "GetCybervisionProfileFeatureByFeatureIdForOther": {
      "path": "/v1/feature-profile/sd-routing/other/{otherId}/cybervision/{cybervisionId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Cybervision Profile feature by FeatureId for Other feature profile"
    },
    "EditCybervisionProfileFeatureForOther": {
      "path": "/v1/feature-profile/sd-routing/other/{otherId}/cybervision/{cybervisionId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Cybervision Profile feature for Other feature profile"
    },
    "DeleteCybervisionProfileFeatureForOther": {
      "path": "/v1/feature-profile/sd-routing/other/{otherId}/cybervision/{cybervisionId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Cybervision Profile feature for Other feature profile"
    },
    "GetSdroutingServiceFeatureProfiles": {
      "path": "/v1/feature-profile/sd-routing/service",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing Service Feature Profiles"
    },
    "CreateSdroutingServiceFeatureProfile": {
      "path": "/v1/feature-profile/sd-routing/service",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing Service Feature Profile"
    },
    "GetSdroutingServiceFeatureProfile": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SD-Routing Service Feature Profile"
    },
    "EditSdroutingServiceFeatureProfile": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a SD-Routing Service Feature Profile"
    },
    "DeleteSdroutingServiceFeatureProfile": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a SD-Routing Service Feature Profile"
    },
    "GetSdroutingDhcpServerProfileParcels": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/dhcp-server",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing DHCP Server features in service feature profile"
    },
    "CreateSdroutingDhcpServerProfileParcel": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/dhcp-server",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing DHCP Server feature in service feature profile"
    },
    "GetSdroutingDhcpServerProfileParcel": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/dhcp-server/{dhcpServerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SD-Routing DHCP Server feature in service feature profile"
    },
    "EditSdroutingDhcpServerProfileParcel": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/dhcp-server/{dhcpServerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a SD-Routing DHCP Server feature in service feature profile"
    },
    "DeleteSdroutingDhcpServerProfileParcel": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/dhcp-server/{dhcpServerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a SD-Routing DHCP Server feature in service feature profile"
    },
    "GetSdroutingServiceIpsecProfileFeatures": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/ipsec-profile",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing IPSec profile features from a specific service feature profile"
    },
    "CreateSdroutingServiceIpsecProfileFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/ipsec-profile",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing IPSec profile feature from a specific service feature profile"
    },
    "GetSdroutingServiceIpsecProfileFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/ipsec-profile/{ipsecProfileId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing IPSec profile feature from a specific service feature profile"
    },
    "EditSdroutingServiceIpsecProfileFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/ipsec-profile/{ipsecProfileId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing IPSec profile feature from a specific service feature profile"
    },
    "DeleteSdroutingServiceIpsecProfileFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/ipsec-profile/{ipsecProfileId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing IPSec profile feature from a specific service feature profile"
    },
    "GetSdroutingServiceIpv4AclFeatures": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/ipv4-acl",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing IPv4 ACL features from a specific service feature profile"
    },
    "CreateSdroutingServiceIpv4AclFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/ipv4-acl",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing IPv4 ACL feature from a specific service feature profile"
    },
    "GetSdroutingServiceIpv4AclFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/ipv4-acl/{ipv4AclId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing IPv4 ACL feature from a specific service feature profile"
    },
    "EditSdroutingServiceIpv4AclFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/ipv4-acl/{ipv4AclId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing IPv4 ACL feature from a specific service feature profile"
    },
    "DeleteSdroutingServiceIpv4AclFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/ipv4-acl/{ipv4AclId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing IPv4 ACL feature from a specific service feature profile"
    },
    "GetListOfProfileParcels": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/multicloud-connection",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Multicloud Connection Profile Parcels for Service feature profile"
    },
    "CreateMultiCloudConnection": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/multicloud-connection",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a MultiCloudConnection Parcel for service feature profile"
    },
    "GetMultiCloudConnection": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/multicloud-connection/{multiCloudConnectionId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a multicloud connection parcel"
    },
    "EditMultiCloudConnection": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/multicloud-connection/{multiCloudConnectionId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a multicloud connection parcel"
    },
    "DeleteMultiCloudConnectionParcelForService": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/multicloud-connection/{multiCloudConnectionId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a MultiCloud Connection Profile Parcel for Service feature profile"
    },
    "GetSdroutingServiceObjectTrackerFeatures": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/objecttracker",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing object tracker features from a specific service feature profile"
    },
    "CreateSdroutingServiceObjectTrackerFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/objecttracker",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing object tracker feature from a specific service feature profile"
    },
    "GetSdroutingServiceObjectTrackerFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/objecttracker/{objectTrackerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing object tracker feature from a specific service feature profile"
    },
    "EditSdroutingServiceObjectTrackerFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/objecttracker/{objectTrackerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing object tracker feature from a specific service feature profile"
    },
    "DeleteSdroutingServiceObjectTrackerFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/objecttracker/{objectTrackerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing object tracker feature from a specific service feature profile"
    },
    "GetSdroutingServiceObjectTrackerGroupFeatures": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/objecttrackergroup",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing object tracker group features from a specific service feature profile"
    },
    "CreateSdroutingServiceObjectTrackerGroupFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/objecttrackergroup",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing object tracker group feature from a specific service feature profile"
    },
    "GetSdroutingServiceObjectTrackerGroupFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/objecttrackergroup/{objectTrackerGroupId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing object tracker group feature from a specific service feature profile"
    },
    "EditSdroutingServiceObjectTrackerGroupFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/objecttrackergroup/{objectTrackerGroupId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing object tracker group feature from a specific service feature profile"
    },
    "DeleteSdroutingServiceObjectTrackerGroupFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/objecttrackergroup/{objectTrackerGroupId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing object tracker group feature from a specific service feature profile"
    },
    "GetSdroutingServiceRoutePolicyFeatures": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/route-policy",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing route policy features from a specific service feature profile"
    },
    "CreateSdroutingServiceRoutePolicyFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/route-policy",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing route policy feature from a specific service feature profile"
    },
    "GetSdroutingServiceRoutePolicyFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/route-policy/{routePolicyId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing route policy feature from a specific service feature profile"
    },
    "EditSdroutingServiceRoutePolicyFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/route-policy/{routePolicyId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing route policy feature from a specific service feature profile"
    },
    "DeleteSdroutingServiceRoutePolicyFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/route-policy/{routePolicyId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing route policy feature from a specific service feature profile"
    },
    "GetSdroutingServiceVrfOspfFeatures": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospf",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing LAN OSPF features for service VRF from a specific service feature profile"
    },
    "CreateSdroutingServiceVrfOspfFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospf",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing LAN OSPF feature for service VRF from a specific service feature profile"
    },
    "GetSdroutingServiceVrfOspfFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospf/{ospfId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing LAN OSPF feature for service VRF from a specific service feature profile"
    },
    "EditSdroutingServiceVrfOspfFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospf/{ospfId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing LAN OSPF feature for service VRF from a specific service feature profile"
    },
    "DeleteSdroutingServiceVrfOspfFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospf/{ospfId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing LAN OSPF feature for service VRF from a specific service feature profile"
    },
    "GetSdroutingServiceVrfOspfv3Ipv4Features": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospfv3/ipv4",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing LAN OSPFv3 IPv4 features from a specific service feature profile"
    },
    "CreateSdroutingServiceVrfOspfv3Ipv4Feature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospfv3/ipv4",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing LAN OSPFv3 IPv4 feature from a specific service feature profile"
    },
    "GetSdroutingServiceVrfOspfv3Ipv4Feature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing LAN OSPFv3 IPv4 feature from a specific service feature profile"
    },
    "EditSdroutingServiceVrfOspfv3Ipv4Feature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing LAN OSPFv3 IPv4 feature from a specific service feature profile"
    },
    "DeleteSdroutingServiceVrfOspfv3Ipv4Feature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing LAN OSPFv3 IPv4 feature from a specific service feature profile"
    },
    "GetSdroutingServiceVrfOspfv3Ipv6Features": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospfv3/ipv6",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing LAN OSPFv3 IPv6 features from a specific service feature profile"
    },
    "CreateSdroutingServiceVrfOspfv3Ipv6Feature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospfv3/ipv6",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing LAN OSPFv3 IPv6 feature from a specific service feature profile"
    },
    "GetSdroutingServiceVrfOspfv3Ipv6Feature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing LAN OSPFv3 IPv6 feature from a specific service feature profile"
    },
    "EditSdroutingServiceVrfOspfv3Ipv6Feature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing LAN OSPFv3 IPv6 feature from a specific service feature profile"
    },
    "DeleteSdroutingServiceVrfOspfv3Ipv6Feature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing LAN OSPFv3 IPv6 feature from a specific service feature profile"
    },
    "GetSdroutingServiceVRFFeatures": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing VRF features from a specific service feature profile"
    },
    "CreateSdroutingServiceVRFFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing VRF feature from a specific service feature profile"
    },
    "GetSdroutingServiceVrfBgpFeatures": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/routing/bgp",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing LAN BGP features from a specific service feature profile"
    },
    "CreateSdroutingServiceVrfBgpFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/routing/bgp",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing LAN BGP feature from a specific service feature profile"
    },
    "GetSdroutingServiceVrfBgpFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/routing/bgp/{bgpId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing LAN BGP feature from a specific service feature profile"
    },
    "EditSdroutingServiceVrfBgpFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/routing/bgp/{bgpId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing LAN BGP feature from a specific service feature profile"
    },
    "DeleteSdroutingServiceVrfBgpFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/routing/bgp/{bgpId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing LAN BGP feature from a specific service feature profile"
    },
    "GetSdroutingServiceVrfEigrpFeatures": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/routing/eigrp",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing VRF EIGRP features from a specific service feature profile"
    },
    "CreateSdroutingServiceVrfEigrpFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/routing/eigrp",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing VRF EIGRP feature from a specific service feature profile"
    },
    "GetSdroutingServiceVrfEigrpFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/routing/eigrp/{eigrpId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing VRF EIGRP feature from a specific service feature profile"
    },
    "EditSdroutingServiceVrfEigrpFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/routing/eigrp/{eigrpId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing VRF EIGRP feature from a specific service feature profile"
    },
    "DeleteSdroutingServiceVrfEigrpFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/routing/eigrp/{eigrpId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing VRF EIGRP feature from a specific service feature profile"
    },
    "GetSdroutingServiceVRFFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing VRF feature from a specific service feature profile"
    },
    "EditSdroutingServiceVRFFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing VRF feature from a specific service feature profile"
    },
    "DeleteSdroutingServiceVRFFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing VRF feature from a specific service feature profile"
    },
    "GetSdroutingServiceVRFDmvpnTunnelFeatures": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/dmvpn-tunnel",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing VRF DMVPN Tunnel features from a specific service feature profile"
    },
    "CreateSdroutingServiceVRFDmvpnTunnelFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/dmvpn-tunnel",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing VRF DMVPN Tunnel feature from a specific service feature profile"
    },
    "GetSdroutingServiceVRFDmvpnTunnelFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/dmvpn-tunnel/{tunnelId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing VRF DMVPN Tunnel feature from a specific service feature profile"
    },
    "EditSdroutingServiceVRFDmvpnTunnelFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/dmvpn-tunnel/{tunnelId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing VRF DMVPN Tunnel feature from a specific service feature profile"
    },
    "DeleteSdroutingServiceVRFDmvpnTunnelFeature": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/dmvpn-tunnel/{tunnelId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing VRF DMVPN Tunnel feature from a specific service feature profile"
    },
    "GetSdroutingServiceVrfInterfaceEthernetFeaturesForService": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ethernet",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all ethernet interface features from a specific service VRF feature in service feature profile"
    },
    "CreateSdroutingServiceVrfInterfaceEthernetFeatureForService": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ethernet",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing ethernet interface feature from a specific service VRF feature in service feature profile"
    },
    "GetSdroutingServiceVrfInterfaceEthernetFeatureByFeatureIdForService": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ethernet/{ethernetId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing ethernet interface feature from a specific service VRF feature by feature ID in service feature profile"
    },
    "EditSdroutingServiceVrfInterfaceEthernetFeatureForService": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ethernet/{ethernetId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing ethernet interface feature from a specific service VRF feature in service feature profile"
    },
    "DeleteSdroutingServiceVrfInterfaceEthernetFeatureForService": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ethernet/{ethernetId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing ethernet interface feature from a specific service VRF feature in service feature profile"
    },
    "GetVrfInterfaceEthernetAssociatedDhcpServerParcelsForService": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ethernet/{ethernetId}/dhcp-server",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the ethernet interface feature associated DHCP server feature in service feature profile"
    },
    "CreateVrfInterfaceEthernetAndDhcpServerParcelAssociationForService": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ethernet/{ethernetId}/dhcp-server",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a SD-Routing ethernet interface feature with a DHCP server feature for service feature profile"
    },
    "GetVrfInterfaceEthernetAssociatedDhcpServerParcelByFeatureIdForService": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ethernet/{ethernetId}/dhcp-server/{dhcpServerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the LAN ethernet interface feature associated DHCP server feature in service feature profile"
    },
    "EditVrfInterfaceEthernetAndDhcpServerParcelAssociationForService": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ethernet/{ethernetId}/dhcp-server/{dhcpServerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a SD-Routing LAN ethernet interface feature and a DHCP server feature association for service feature profile"
    },
    "DeleteVrfInterfaceEthernetAndDhcpServerAssociationForService": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ethernet/{ethernetId}/dhcp-server/{dhcpServerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a LAN ethernet interface feature and a DHCP server feature association for service feature profile"
    },
    "GetSdroutingServiceVrfInterfaceIpsecFeaturesForService": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ipsec",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all  IPSec interface features in a specific service VRF from a specific service feature profile"
    },
    "CreateSdroutingServiceVrfInterfaceIpsecFeatureForService": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ipsec",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing IPSec interface feature in a specific service VRF from a specific service feature profile"
    },
    "GetSdroutingServiceVrfInterfaceIpsecFeatureByFeatureIdForService": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ipsec/{ipsecId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing IPSec interface feature in a specific service VRF from a specific service feature profile"
    },
    "EditSdroutingServiceVrfInterfaceIpsecFeatureForService": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ipsec/{ipsecId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing IPSec interface feature in a specific service VRF from a specific service feature profile"
    },
    "DeleteSdroutingServiceVrfInterfaceIpsecFeatureForService": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/interface/ipsec/{ipsecId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing IPSec interface feature in a specific service VRF from a specific service feature profile"
    },
    "GetServiceVrfAssociatedRoutingBgpFeatures": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/bgp",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the LAN VRF associated BGP Features for service feature profile"
    },
    "CreateServiceVrfAndRoutingBgpFeatureAssociation": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/bgp",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a BGP feature with the LAN VRF feature for service feature profile"
    },
    "GetServiceVrfAssociatedRoutingBgpParcelByParcelId": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/bgp/{bgpId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get VRF parcel associated RoutingBGP Parcel by bgpId for service feature profile"
    },
    "EditServiceVrfAndRoutingBgpFeatureAssociation": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/bgp/{bgpId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Replace the BGP feature for LAN VRF feature in service feature profile"
    },
    "DeleteServiceVrfAndRoutingBgpAssociation": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/bgp/{bgpId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the LAN VRF feature and BGP feature association for service feature profile"
    },
    "GetServiceVrfAssociatedRoutingEigrpFeatures": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/eigrp",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the LAN VRF associated EIGRP Features for service feature profile"
    },
    "CreateServiceVrfAndRoutingEigrpFeatureAssociation": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/eigrp",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a EIGRP feature with the LAN VRF feature for service feature profile"
    },
    "GetServiceVrfAssociatedRoutingEigrpFeatureByFeatureId": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/eigrp/{eigrpId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the LAN VRF associated EIGRP feature by ID for service feature profile"
    },
    "EditServiceVrfAndRoutingEigrpFeatureAssociation": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/eigrp/{eigrpId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Replace the EIGRP feature for LAN VRF feature in service feature profile"
    },
    "DeleteServiceVrfAndRoutingEigrpAssociation": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/eigrp/{eigrpId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the LAN VRF feature and EIGRP feature association for service feature profile"
    },
    "GetServiceVrfAssociatedRoutingOspfFeatures": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospf",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the VRF associated OSPF features for service feature profile"
    },
    "CreateServiceVrfAndRoutingOspfParcelAssociation": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospf",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate an OSPF feature with the LAN VRF feature for service feature profile"
    },
    "GetServiceVrfAssociatedRoutingOspfFeatureById": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospf/{ospfId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the LAN VRF associated OSPF feature by ID for service feature profile"
    },
    "EditServiceVrfAndRoutingOspfFeatureAssociation": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospf/{ospfId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Replace the OSPF feature for LAN VRF feature in service feature profile"
    },
    "DeleteServiceVrfAndRoutingOspfAssociation": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospf/{ospfId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the LAN VRF feature and OSPF feature association in service feature profile"
    },
    "GetServiceVrfAssociatedRoutingOspfv3Ipv4Features": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospfv3/ipv4",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LAN VRF associated OSPFv3 IPv4 features for service feature profile"
    },
    "CreateServiceVrfAndRoutingOspfv3Ipv4FeatureAssociation": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospfv3/ipv4",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate an OSPFv3 IPv4 feature with the LAN VRF feature for service feature profile"
    },
    "GetServiceVrfAssociatedRoutingOspfv3Ipv4FeatureById": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the VRF feature associated OSPFv3 IPv4 feature by ID for service feature profile"
    },
    "EditServiceVrfAndRoutingOspfv3Ipv4FeatureAssociation": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Replace the OSPFv3 IPv4 feature for LAN VRF feature in service feature profile"
    },
    "DeleteServiceVrfAndRoutingOspfv3Ipv4Association": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the VRF feature and OSPFv3 IPv4 feature association for service feature profile"
    },
    "GetServiceVrfAssociatedRoutingOspfv3Ipv6Parcels": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospfv3/ipv6",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the LAN VRF associated OSPFv3 IPv6 features for service feature profile"
    },
    "CreateServiceVrfAndRoutingOspfv3Ipv6FeatureAssociation": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospfv3/ipv6",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate an OSPFv3 IPv6 feature with the LAN VRF feature for service feature profile"
    },
    "GetServiceVrfAssociatedRoutingOspfv3Ipv6FeatureById": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LAN VRF associated OSPFv3 IPv6 feature by feature ID for service feature profile"
    },
    "EditServiceVrfAndRoutingOspfv3Ipv6FeatureAssociation": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Replace the OSPFv3 IPv6 feature for LAN VRF feature in service feature profile"
    },
    "DeleteServiceVrfAndRoutingOspfv3Ipv6Association": {
      "path": "/v1/feature-profile/sd-routing/service/{serviceId}/vrf/{vrfId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the VRF feature and OSPFv3 IPv6 feature association for service feature profile"
    },
    "GetSdRoutingSseFeatureProfiles": {
      "path": "/v1/feature-profile/sd-routing/sse",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-ROUTING Feature Profiles with giving Family and profile type"
    },
    "CreateSdRoutingSseFeatureProfile": {
      "path": "/v1/feature-profile/sd-routing/sse",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-ROUTING SSE Feature Profile"
    },
    "GetSdRoutingSseFeatureProfileByProfileId": {
      "path": "/v1/feature-profile/sd-routing/sse/{sseId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SD-ROUTING SSE Feature Profile with sseId"
    },
    "EditSdRoutingSseFeatureProfile": {
      "path": "/v1/feature-profile/sd-routing/sse/{sseId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a SD-ROUTING SSE Feature Profile"
    },
    "DeleteSdRoutingSseFeatureProfile": {
      "path": "/v1/feature-profile/sd-routing/sse/{sseId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete Feature Profile"
    },
    "GetCiscoSseFeatureForSse": {
      "path": "/v1/feature-profile/sd-routing/sse/{sseId}/cisco",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Cisco Sse feature list for Sse feature profile"
    },
    "CreateCiscoSseFeatureForSse": {
      "path": "/v1/feature-profile/sd-routing/sse/{sseId}/cisco",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create Cisco Sse feature for sse feature profile type"
    },
    "GetCiscoSseFeatureByFeatureIdForSSE": {
      "path": "/v1/feature-profile/sd-routing/sse/{sseId}/cisco/{ciscoSseId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Cisco SSE Profile Feature by feature Id"
    },
    "EditCiscoSseFeature": {
      "path": "/v1/feature-profile/sd-routing/sse/{sseId}/cisco/{ciscoSseId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Cisco Sse feature"
    },
    "DeleteCiscoSseFeature": {
      "path": "/v1/feature-profile/sd-routing/sse/{sseId}/cisco/{ciscoSseId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Cisco Sse Feature "
    },
    "GetSdroutingSystemFeatureProfiles": {
      "path": "/v1/feature-profile/sd-routing/system",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing System Feature Profiles"
    },
    "CreateSdroutingSystemFeatureProfile": {
      "path": "/v1/feature-profile/sd-routing/system",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing System Feature Profile"
    },
    "GetSdroutingSystemFeatureProfile": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SD-Routing System Feature Profile"
    },
    "EditSdroutingSystemFeatureProfile": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a SD-Routing System Feature Profile"
    },
    "DeleteSdroutingSystemFeatureProfile": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a SD-Routing System Feature Profile"
    },
    "GetSdroutingAaaFeatures": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/aaa",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing AAA features from a specific system feature profile"
    },
    "CreateSdroutingAaaFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/aaa",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing AAA feature from a specific system feature profile"
    },
    "GetSdroutingAaaFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/aaa/{aaaId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing AAA feature from a specific system feature profile"
    },
    "EditSdroutingAaaFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/aaa/{aaaId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing AAA feature from a specific system feature profile"
    },
    "DeleteSdroutingAaaFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/aaa/{aaaId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing AAA feature from a specific system feature profile"
    },
    "GetSdroutingBannerFeatures": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/banner",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing banner features from a specific system feature profile"
    },
    "CreateSdroutingBannerFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/banner",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing banner feature from a specific system feature profile"
    },
    "GetSdroutingBannerFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/banner/{bannerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing banner feature from a specific system feature profile"
    },
    "EditSdroutingBannerFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/banner/{bannerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing banner feature from a specific system feature profile"
    },
    "DeleteSdroutingBannerFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/banner/{bannerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing banner feature from a specific system feature profile"
    },
    "GetSdroutingCertificateFeatures": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/certificate",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing certificate features from a specific system feature profile"
    },
    "CreateSdroutingCertificateFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/certificate",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing certificate feature from a specific system feature profile"
    },
    "GetSdroutingCertificateFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/certificate/{certificateId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing certificate feature from a specific system feature profile"
    },
    "EditSdroutingCertificateFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/certificate/{certificateId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing certificate feature from a specific system feature profile"
    },
    "DeleteSdroutingCertificateFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/certificate/{certificateId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing certificate feature from a specific system feature profile"
    },
    "GetSdroutingFlexiblePortSpeedFeatures": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/flexible-port-speed",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing flexible port speed features from a specific system feature profile"
    },
    "CreateSdroutingFlexiblePortSpeedFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/flexible-port-speed",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing flexible port speed feature from a specific system feature profile"
    },
    "GetSdroutingFlexiblePortSpeedFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/flexible-port-speed/{flexiblePortSpeedId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing flexible port speed feature from a specific system feature profile"
    },
    "EditSdroutingFlexiblePortSpeedFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/flexible-port-speed/{flexiblePortSpeedId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing flexible port speed feature from a specific system feature profile"
    },
    "DeleteSdroutingFlexiblePortSpeedFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/flexible-port-speed/{flexiblePortSpeedId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing flexible port speed feature from a specific system feature profile"
    },
    "GetSdroutingGlobalSettingFeatures": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/global",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing global setting features from a specific system feature profile"
    },
    "CreateSdroutingGlobalSettingFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/global",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing global setting feature from a specific system feature profile"
    },
    "GetSdroutingGlobalSettingFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/global/{globalId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing global setting feature from a specific system feature profile"
    },
    "EditSdroutingGlobalSettingFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/global/{globalId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing global setting feature from a specific system feature profile"
    },
    "DeleteSdroutingGlobalSettingFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/global/{globalId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing global setting feature from a specific system feature profile"
    },
    "GetSdroutingLoggingFeatures": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/logging",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing Logging features from a specific system feature profile"
    },
    "CreateSdroutingLoggingFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/logging",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing Logging feature from a specific system feature profile"
    },
    "GetSdroutingLoggingFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/logging/{loggingId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing Logging feature from a specific system feature profile"
    },
    "EditSdroutingLoggingFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/logging/{loggingId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing Logging feature from a specific system feature profile"
    },
    "DeleteSdroutingLoggingFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/logging/{loggingId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing Logging feature from a specific system feature profile"
    },
    "GetSdroutingNtpFeatures": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/ntp",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing NTP features from a specific system feature profile"
    },
    "CreateSdroutingNtpFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/ntp",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing NTP feature from a specific system feature profile"
    },
    "GetSdroutingNtpFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/ntp/{ntpId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing NTP feature from a specific system feature profile"
    },
    "EditSdroutingNtpFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/ntp/{ntpId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing NTP feature from a specific system feature profile"
    },
    "DeleteSdroutingNtpFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/ntp/{ntpId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing NTP feature from a specific system feature profile"
    },
    "GetSdroutingSnmpFeatures": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/snmp",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing SNMP features from a specific system feature profile"
    },
    "CreateSdroutingSnmpFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/snmp",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing SNMP feature from a specific system feature profile"
    },
    "GetSdroutingSnmpFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/snmp/{snmpId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing SNMP feature from a specific system feature profile"
    },
    "EditSdroutingSnmpFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/snmp/{snmpId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing SNMP feature from a specific system feature profile"
    },
    "DeleteSdroutingSnmpFeature": {
      "path": "/v1/feature-profile/sd-routing/system/{systemId}/snmp/{snmpId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing SNMP feature from a specific system feature profile"
    },
    "GetSdroutingTransportFeatureProfiles": {
      "path": "/v1/feature-profile/sd-routing/transport",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing Transport Feature Profiles"
    },
    "CreateSdroutingTransportFeatureProfile": {
      "path": "/v1/feature-profile/sd-routing/transport",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing Transport Feature Profile"
    },
    "GetSdroutingTransportFeatureProfile": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SD-Routing Transport Feature Profile"
    },
    "EditSdroutingTransportFeatureProfile": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a SD-Routing Transport Feature Profile"
    },
    "DeleteSdroutingTransportFeatureProfile": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a SD-Routing Transport Feature Profile"
    },
    "GetCellularControllerProfileParcelForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Cellular Controller Profile Features for Transport feature profile"
    },
    "CreateCellularControllerProfileParcelForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Cellular Controller Profile Feature for Transport feature profile"
    },
    "GetCellularControllerProfileParcelByParcelIdForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Cellular Controller Profile Feature by parcelId for Transport feature profile"
    },
    "EditCellularControllerProfileParcelForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Cellular Controller Profile Feature for Transport feature profile"
    },
    "DeleteCellularControllerProfileParcelForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Cellular Controller Profile Feature for Transport feature profile"
    },
    "GetCellularControllerAssociatedCellularProfileParcelsForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}/cellular-profile",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get CellularController associated Cellular Profile Features for transport feature profile"
    },
    "CreateCellularControllerAndCellularProfileParcelAssociationForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}/cellular-profile",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a cellularcontroller feature with a cellularprofile Parcel for transport feature profile"
    },
    "GetCellularControllerAssociatedCellularProfileParcelByParcelIdForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}/cellular-profile/{cellularProfileId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get CellularController feature associated CellularProfile Parcel by cellularProfileId for transport feature profile"
    },
    "EditCellularControllerAndCellularProfileParcelAssociationForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}/cellular-profile/{cellularProfileId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a CellularController feature and a CellularProfile Parcel association for transport feature profile"
    },
    "DeleteCellularControllerAndCellularProfileAssociationForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}/cellular-profile/{cellularProfileId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a CellularController feature and a CellularProfile Parcel association for transport feature profile"
    },
    "GetCellularControllerAssociatedGpsParcelsForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}/gps",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get CellularController associated GPS Features for transport feature profile"
    },
    "CreateCellularControllerAndGpsParcelAssociationForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}/gps",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a cellularcontroller feature with a GPS Parcel for transport feature profile"
    },
    "GetCellularControllerAssociatedGpsParcelByParcelIdForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}/gps/{gpsId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get CellularController feature associated GPS Feature by gpsId for transport feature profile"
    },
    "DeleteCellularControllerAndGpsAssociationForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-controller/{cellularControllerId}/gps/{gpsId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a CellularController feature and a GPS Feature association for transport feature profile"
    },
    "GetCellularProfileParcelForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-profile",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Cellular Profile Features for Transport feature profile"
    },
    "CreateCellularProfileParcelForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-profile",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Cellular Profile Feature for Transport feature profile"
    },
    "GetCellularProfileParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-profile/{cellularProfileId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Cellular Profile Feature by parcelId for Transport feature profile"
    },
    "EditCellularProfileParcelForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-profile/{cellularProfileId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Cellular Profile Feature for Transport feature profile"
    },
    "DeleteCellularProfileParcelForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/cellular-profile/{cellularProfileId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Cellular Profile Feature for Transport feature profile"
    },
    "GetSdroutingTransportGlobalVRFFeatures": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing Global VRF features from a specific transport feature profile"
    },
    "CreateSdroutingTransportGlobalVRFFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing Global VRF feature from a specific transport feature profile"
    },
    "GetSdroutingTransportGlobalVrfBgpFeatures": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/routing/bgp",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing WAN BGP features for global VRF from a specific transport feature profile"
    },
    "CreateSdroutingTransportGlobalVrfBgpFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/routing/bgp",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing WAN BGP feature for global VRF from a specific transport feature profile"
    },
    "GetSdroutingTransportGlobalVrfBgpFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/routing/bgp/{bgpId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing WAN BGP feature for global VRF from a specific transport feature profile"
    },
    "EditSdroutingTransportGlobalVrfBgpFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/routing/bgp/{bgpId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing WAN BGP feature for global VRF from a specific transport feature profile"
    },
    "DeleteSdroutingTransportGlobalVrfBgpFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/routing/bgp/{bgpId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing WAN BGP feature for global VRF from a specific transport feature profile"
    },
    "GetSdroutingTransportGlobalVRFFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing Global VRF feature from a specific transport feature profile"
    },
    "EditSdroutingTransportGlobalVRFFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing Global VRF feature from a specific transport feature profile"
    },
    "DeleteSdroutingTransportGlobalVRFFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing Global VRF feature from a specific transport feature profile"
    },
    "GetGlobalVRFInterfaceCellularParcelsForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Global VRF Interface Cellular Features for transport Parcel"
    },
    "CreateGlobalVRFInterfaceCellularParcelForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Global VRF Cellular interface Feature for transport feature profile"
    },
    "GetGlobalVRFInterfaceCellularAssociatedTrackerParcelsForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{cellularId}/tracker",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get GlobalVRFInterfaceCellular associated Tracker Parcels for transport feature profile"
    },
    "CreateGlobalVRFInterfaceCellularAndTrackerParcelAssociationForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{cellularId}/tracker",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a GlobalVRFInterfaceCellular parcel with a Tracker Parcel for transport feature profile"
    },
    "GetGlobalVRFInterfaceCellularAssociatedTrackerParcelByParcelIdForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{cellularId}/tracker/{trackerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get GlobalVRFInterfaceCellular associated Tracker Parcel by trackerId for transport feature profile"
    },
    "EditGlobalVRFInterfaceCellularAndTrackerParcelAssociationForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{cellularId}/tracker/{trackerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a GlobalVRFInterfaceCellular parcel and a Tracker Parcel association for transport feature profile"
    },
    "DeleteGlobalVRFInterfaceCellularAndTrackerAssociationForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{cellularId}/tracker/{trackerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a GlobalVRFInterfaceCellular and a Tracker Parcel association for transport feature profile"
    },
    "GetGlobalVRFInterfaceCellularAssociatedTrackerParcelsForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{cellularId}/trackergroup",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get GlobalVRFInterfaceCellular associated Tracker Group Features for transport feature profile"
    },
    "CreateGlobalVRFInterfaceCellularAndTrackerParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{cellularId}/trackergroup",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a GlobalVRFInterfaceCellular feature with a Tracker Group Parcel for transport feature profile"
    },
    "GetGlobalVRFInterfaceCellularAssociatedTrackerParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{cellularId}/trackergroup/{trackerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get GlobalVRFInterfaceCellular associated Tracker Group Feature by trackerId for transport feature profile"
    },
    "EditGlobalVRFInterfaceCellularAndTrackerParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{cellularId}/trackergroup/{trackerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a GlobalVRFInterfaceCellular feature and a Tracker Group Parcel association for transport feature profile"
    },
    "DeleteGlobalVRFInterfaceCellularAndTrackerAssociationForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{cellularId}/trackergroup/{trackerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a GlobalVRFInterfaceCellular and a Tracker Group Feature association for transport feature profile"
    },
    "GetGlobalVRFInterfaceCellularParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{intfId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Global VRF Cellular interface Feature by intfId for transport feature profile"
    },
    "EditGlobalVRFInterfaceCellularParcelForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{intfId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Global VRF Cellular Interface Feature for transport feature profile"
    },
    "DeleteGlobalVRFInterfaceCellularForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/cellular/{intfId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Global VRF Cellular interface Feature for transport feature profile"
    },
    "GetSdroutingTransportGlobalVrfInterfaceEthernetParcelsForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/ethernet",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all  Ethernet interface profile features from a specific global VRF feature in Transport Feature Profile"
    },
    "CreateSdroutingTransportGlobalVrfInterfaceEthernetParcelForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/ethernet",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing Ethernet interface profile feature from a specific global VRF feature in Transport Feature Profile"
    },
    "GetSdroutingTransportGlobalVrfInterfaceEthernetParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/ethernet/{ethernetId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing Ethernet interface profile feature from a specific global VRF feature by ethernetId in Transport Feature Profile"
    },
    "EditSdroutingTransportGlobalVrfInterfaceEthernetParcelForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/ethernet/{ethernetId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing Ethernet interface profile feature from a specific global VRF feature in Transport Feature Profile"
    },
    "DeleteSdroutingTransportGlobalVrfInterfaceEthernetParcelForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/ethernet/{ethernetId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing Ethernet interface profile feature from a specific global VRF feature in Transport Feature Profile"
    },
    "GetSdroutingTransportGlobalVrfInterfaceIpsecFeaturesForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/ipsec",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all  IPSec interface features in the global VRF from a specific transport feature profile"
    },
    "CreateSdroutingTransportGlobalVrfInterfaceIpsecFeatureForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/ipsec",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing IPSec interface feature in the global VRF from a specific transport feature profile"
    },
    "GetSdroutingTransportGlobalVrfInterfaceIpsecFeatureByFeatureIdForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/ipsec/{ipsecId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing IPSec interface feature in the global VRF from a specific transport feature profile"
    },
    "EditSdroutingTransportGlobalVrfInterfaceIpsecFeatureForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/ipsec/{ipsecId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing IPSec interface feature in the global VRF from a specific transport feature profile"
    },
    "DeleteSdroutingTransportGlobalVrfInterfaceIpsecFeatureForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/interface/ipsec/{ipsecId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing IPSec interface feature in the global VRF from a specific transport feature profile"
    },
    "CreateTransportGlobalVrfAndMulticloudConnectionParcelAssociation": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/multicloud-connection",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a Global VRF parcel with a Multicloud Connection Parcel for transport feature profile"
    },
    "GetTransportVrfAssociatedRoutingBgpFeatures": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/bgp",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the global VRF associated BGP features for transport feature profile"
    },
    "CreateTransportGlobalVrfAndRoutingBgpFeatureAssociation": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/bgp",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a BGP feature with the global VRF feature for transport feature profile"
    },
    "GetVrfAssociatedRoutingBgpFeatureById": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/bgp/{bgpId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Global VRF parcel associated BGP feature by ID for transport feature profile"
    },
    "EditTransportGlobalVrfAndRoutingBgpFeatureAssociation": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/bgp/{bgpId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Replace the BGP feature for the global VRF feature in transport feature profile"
    },
    "DeleteTransportGlobalVrfAndRoutingBgpAssociation": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/bgp/{bgpId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the global VRF and BGP feature association for transport feature profile"
    },
    "GetTransportVrfAssociatedRoutingOspfFeatures": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospf",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the global VRF associated OSPF features for transport feature profile"
    },
    "CreateTransportGlobalVrfAndRoutingOspfParcelAssociation": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospf",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate an OSPF feature with the global VRF feature for transport feature profile"
    },
    "GetVrfAssociatedRoutingOspfParcelByFeatureId": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospf/{ospfId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the Global VRF feature associated OSPF feature by ID for transport feature profile"
    },
    "EditTransportGlobalVrfAndRoutingOspfFeatureAssociation": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospf/{ospfId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Replace the OSPF feature for the global VRF feature in transport feature profile"
    },
    "DeleteTransportGlobalVrfAndRoutingOspfAssociation": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospf/{ospfId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the global VRF and the OSPF feature association for transport feature profile"
    },
    "GetTransportVrfAssociatedRoutingOspfv3Ipv4Features": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospfv3/ipv4",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the Global VRF associated OSPFv3 IPv4 features for transport feature profile"
    },
    "CreateTransportGlobalVrfAndRoutingOspfv3Ipv4FeatureAssociation": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospfv3/ipv4",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate an OSPFv3 IPv4 feature with the global VRF feature for transport feature profile"
    },
    "GetVrfAssociatedRoutingOspfv3Ipv4FeatureById": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the global VRF feature associated OSPFv3 IPv4 feature by ID for transport feature profile"
    },
    "EditTransportGlobalVrfAndRoutingOspfv3Ipv4FeatureAssociation": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Replace the OSPFv3 IPv4 feature for the global VRF feature in transport feature profile"
    },
    "DeleteTransportGlobalVrfAndRoutingOspfv3Ipv4Association": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the global VRF and the OSPFv3 IPv4 feature association for transport feature profile"
    },
    "GetTransportVrfAssociatedRoutingOspfv3Ipv6Features": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospfv3/ipv6",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the global VRF associated OSPFv3 IPv6 features for transport feature profile"
    },
    "CreateTransportGlobalVrfAndRoutingOspfv3Ipv6ParcelAssociation": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospfv3/ipv6",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate an OSPFv3 IPv6 feature with the global VRF feature for transport feature profile"
    },
    "GetVrfAssociatedRoutingOspfv3Ipv6FeatureById": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the Global VRF associated OSPFv3 IPv6 feature by ID for transport feature profile"
    },
    "EditTransportGlobalVrfAndRoutingOspfv3Ipv6FeatureAssociation": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Replace the OSPFv3 IPv6 feature for the global VRF feature in transport feature profile"
    },
    "DeleteTransportGlobalVrfAndRoutingOspfv3Ipv6Association": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/global-vrf/{vrfId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the global VRF feature and the OSPFv3 IPv6 feature association for transport feature profile"
    },
    "GetGPSProfileParcelForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/gps",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get GPS Profile Features for Transport feature profile"
    },
    "CreateGPSProfileParcelForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/gps",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a GPS Profile Feature for Transport feature profile"
    },
    "GetGPSProfileParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/gps/{gpsId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get GPS Profile Feature by parcelId for Transport feature profile"
    },
    "EditGPSProfileParcelForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/gps/{gpsId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a GPS Profile Feature for Transport feature profile"
    },
    "DeleteGPSProfileParcelForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/gps/{gpsId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a GPS Profile Feature for Transport feature profile"
    },
    "GetSdroutingTransportIpv4AclFeatures": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/ipv4-acl",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing IPv4 ACL features from a specific transport feature profile"
    },
    "CreateSdroutingTransportIpv4AclFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/ipv4-acl",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing IPv4 ACL feature from a specific transport feature profile"
    },
    "GetSdroutingTransportIpv4AclFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/ipv4-acl/{ipv4AclId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing IPv4 ACL feature from a specific transport feature profile"
    },
    "EditSdroutingTransportIpv4AclFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/ipv4-acl/{ipv4AclId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing IPv4 ACL feature from a specific transport feature profile"
    },
    "DeleteSdroutingTransportIpv4AclFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/ipv4-acl/{ipv4AclId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing IPv4 ACL feature from a specific transport feature profile"
    },
    "GetSdroutingManagementVRFFeatures": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/management-vrf",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing Management VRF features from a specific transport feature profile"
    },
    "CreateSdroutingManagementVRFFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/management-vrf",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing Management VRF feature from a specific transport feature profile"
    },
    "GetSdroutingManagementVRFFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/management-vrf/{vrfId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing Management VRF feature from a specific transport feature profile"
    },
    "EditSdroutingManagementVRFFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/management-vrf/{vrfId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing Management VRF feature from a specific transport feature profile"
    },
    "DeleteSdroutingManagementVRFFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/management-vrf/{vrfId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing Management VRF feature from a specific transport feature profile"
    },
    "GetSdroutingManagementVrfInterfaceEthernetParcelsForTransportProfile": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/management-vrf/{vrfId}/interface/ethernet",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all  Management Ethernet interface features from a specific management VRF feature in Transport Feature Profile"
    },
    "CreateSdroutingManagementVrfInterfaceEthernetParcelForTransportProfile": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/management-vrf/{vrfId}/interface/ethernet",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing Management Ethernet interface feature from a specific management VRF feature in Transport Feature Profile"
    },
    "GetSdroutingManagementVrfInterfaceEthernetParcelByParcelIdForTransportProfile": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/management-vrf/{vrfId}/interface/ethernet/{ethernetId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing Management Ethernet interface feature from a specific management VRF feature by ethernetId in Transport Feature Profile"
    },
    "EditSdroutingManagementVrfInterfaceEthernetParcelForTransportProfile": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/management-vrf/{vrfId}/interface/ethernet/{ethernetId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing Management Ethernet interface feature from a specific management VRF feature in Transport Feature Profile"
    },
    "DeleteSdroutingManagementVrfInterfaceEthernetParcelForTransportProfile": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/management-vrf/{vrfId}/interface/ethernet/{ethernetId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing Management Ethernet interface feature from a specific management VRF feature in Transport Feature Profile"
    },
    "GetLanVpnProfileParcelForService_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/multicloud-connection",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Lan Vpn Profile Parcels for Service feature profile"
    },
    "CreateMultiCloudConnection_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/multicloud-connection",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a MultiCloudConnection Parcel for transport feature profile"
    },
    "GetLanVpnProfileParcelByParcelIdForService_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/multicloud-connection/{multiCloudConnectionId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Lan Vpn Profile Parcel by parcelId for Service feature profile"
    },
    "EditMultiCloudConnection_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/multicloud-connection/{multiCloudConnectionId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a multicloud connection parcel"
    },
    "DeleteMultiCloudConnectionParcelForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/multicloud-connection/{multiCloudConnectionId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a MultiCloud Connection Profile Parcel for Transport feature profile"
    },
    "GetSdroutingTransportObjectTrackerFeatures": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/objecttracker",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing object tracker features from a specific transport feature profile"
    },
    "CreateSdroutingTransportObjectTrackerFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/objecttracker",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing object tracker feature from a specific transport feature profile"
    },
    "GetSdroutingTransportObjectTrackerFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/objecttracker/{objectTrackerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing object tracker feature from a specific transport feature profile"
    },
    "EditSdroutingTransportObjectTrackerFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/objecttracker/{objectTrackerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing object tracker feature from a specific transport feature profile"
    },
    "DeleteSdroutingTransportObjectTrackerFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/objecttracker/{objectTrackerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing object tracker feature from a specific transport feature profile"
    },
    "GetSdroutingTransportObjectTrackerGroupFeatures": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/objecttrackergroup",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing object tracker group features from a specific transport feature profile"
    },
    "CreateSdroutingTransportObjectTrackerGroupFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/objecttrackergroup",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing object tracker group feature from a specific transport feature profile"
    },
    "GetSdroutingTransportObjectTrackerGroupFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/objecttrackergroup/{objectTrackerGroupId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing object tracker group feature from a specific transport feature profile"
    },
    "EditSdroutingTransportObjectTrackerGroupFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/objecttrackergroup/{objectTrackerGroupId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing object tracker group feature from a specific transport feature profile"
    },
    "DeleteSdroutingTransportObjectTrackerGroupFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/objecttrackergroup/{objectTrackerGroupId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing object tracker group feature from a specific transport feature profile"
    },
    "GetSdroutingTransportRoutePolicyFeatures": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/route-policy",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing route policy features from a specific transport feature profile"
    },
    "CreateSdroutingTransportRoutePolicyFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/route-policy",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing route policy feature from a specific transport feature profile"
    },
    "GetSdroutingTransportRoutePolicyFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/route-policy/{routePolicyId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing route policy feature from a specific transport feature profile"
    },
    "EditSdroutingTransportRoutePolicyFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/route-policy/{routePolicyId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing route policy feature from a specific transport feature profile"
    },
    "DeleteSdroutingTransportRoutePolicyFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/route-policy/{routePolicyId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing route policy feature from a specific transport feature profile"
    },
    "GetSdroutingTransportRoutingOspfFeatures": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospf",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing WAN OSPF features from a specific transport feature profile"
    },
    "CreateSdroutingTransportRoutingOspfFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospf",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing WAN OSPF feature from a specific transport feature profile"
    },
    "GetSdroutingTransportRoutingOspfFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospf/{ospfId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing WAN OSPF feature from a specific transport feature profile"
    },
    "EditSdroutingTransportRoutingOspfFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospf/{ospfId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing WAN OSPF feature from a specific transport feature profile"
    },
    "DeleteSdroutingTransportRoutingOspfFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospf/{ospfId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing WAN OSPF feature from a specific transport feature profile"
    },
    "GetSdroutingTransportRoutingOspfv3Ipv4Features": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospfv3/ipv4",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing WAN OSPFv3 IPv4 features from a specific transport feature profile"
    },
    "CreateSdroutingTransportRoutingOspfv3Ipv4Feature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospfv3/ipv4",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing WAN OSPFv3 IPv4 feature from a specific transport feature profile"
    },
    "GetSdroutingTransportRoutingOspfv3Ipv4Feature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing WAN OSPFv3 IPv4 feature from a specific transport feature profile"
    },
    "EditSdroutingTransportRoutingOspfv3Ipv4Feature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing WAN OSPFv3 IPv4 feature from a specific transport feature profile"
    },
    "DeleteSdroutingTransportRoutingOspfv3Ipv4Feature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing WAN OSPFv3 IPv4 feature from a specific transport feature profile"
    },
    "GetSdroutingTransportRoutingOspfv3Ipv6Features": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospfv3/ipv6",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing WAN OSPFv3 IPv6 features from a specific transport feature profile"
    },
    "CreateSdroutingTransportRoutingOspfv3Ipv6Feature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospfv3/ipv6",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing WAN OSPFv3 IPv6 feature from a specific transport feature profile"
    },
    "GetSdroutingTransportRoutingOspfv3Ipv6Feature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing WAN OSPFv3 IPv6 feature from a specific transport feature profile"
    },
    "EditSdroutingTransportRoutingOspfv3Ipv6Feature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing WAN OSPFv3 IPv6 feature from a specific transport feature profile"
    },
    "DeleteSdroutingTransportRoutingOspfv3Ipv6Feature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing WAN OSPFv3 IPv6 feature from a specific transport feature profile"
    },
    "GetTrackerProfileParcelForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/tracker",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Tracker Profile Features for Transport feature profile"
    },
    "CreateTrackerProfileParcelForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/tracker",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Tracker Profile Feature for Transport feature profile"
    },
    "GetTrackerProfileParcelByParcelIdForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/tracker/{trackerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Tracker Profile Feature by parcelId for Transport feature profile"
    },
    "EditTrackerProfileParcelForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/tracker/{trackerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Tracker Profile Feature for Transport feature profile"
    },
    "DeleteTrackerProfileParcelForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/tracker/{trackerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Tracker Profile Feature for Transport feature profile"
    },
    "GetTrackerGroupProfileParcelForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/trackergroup",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get TrackerGroup Profile Features for Transport feature profile"
    },
    "CreateTrackerGroupProfileParcelForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/trackergroup",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a TrackerGroup Profile Feature for Transport feature profile"
    },
    "GetTrackerGroupProfileParcelByParcelIdForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/trackergroup/{trackergroupId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get TrackerGroup Profile Feature by parcelId for Transport feature profile"
    },
    "EditTrackerGroupProfileParcelForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/trackergroup/{trackergroupId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a TrackerGroup Profile Feature for Transport feature profile"
    },
    "DeleteTrackerGroupProfileParcelForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/trackergroup/{trackergroupId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a TrackerGroup Profile Feature for Transport feature profile"
    },
    "GetSdroutingTransportVRFFeatures": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing VRF features from a specific transport feature profile"
    },
    "CreateSdroutingTransportVRFFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing VRF feature from a specific transport feature profile"
    },
    "GetSdroutingTransportVrfBgpFeatures": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/routing/bgp",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SD-Routing WAN BGP features for VRF from a specific transport feature profile"
    },
    "CreateSdroutingTransportVrfBgpFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/routing/bgp",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing WAN BGP feature for VRF from a specific transport feature profile"
    },
    "GetSdroutingTransportVrfBgpFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/routing/bgp/{bgpId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing WAN BGP feature for VRF from a specific transport feature profile"
    },
    "EditSdroutingTransportVrfBgpFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/routing/bgp/{bgpId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing WAN BGP feature for VRF from a specific transport feature profile"
    },
    "DeleteSdroutingTransportVrfBgpFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/routing/bgp/{bgpId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing WAN BGP feature for VRF from a specific transport feature profile"
    },
    "GetSdroutingTransportVRFFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing VRF feature from a specific transport feature profile"
    },
    "EditSdroutingTransportVRFFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing VRF feature from a specific transport feature profile"
    },
    "DeleteSdroutingTransportVRFFeature": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing VRF feature from a specific transport feature profile"
    },
    "GetSdroutingTransportVrfInterfaceEthernetParcelsForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/interface/ethernet",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all  Ethernet interface features for a specific transport VRF feature in Transport Feature Profile"
    },
    "CreateSdroutingTransportVrfInterfaceEthernetParcelForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/interface/ethernet",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing Ethernet interface feature from a specific transport VRF feature in Transport Feature Profile"
    },
    "GetSdroutingTransportVrfInterfaceEthernetParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/interface/ethernet/{ethernetId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing Ethernet interface feature from a specific transport VRF feature by ethernetId in Transport Feature Profile"
    },
    "EditSdroutingTransportVrfInterfaceEthernetParcelForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/interface/ethernet/{ethernetId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing Ethernet interface feature from a specific transport VRF feature in Transport Feature Profile"
    },
    "DeleteSdroutingTransportVrfInterfaceEthernetParcelForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/interface/ethernet/{ethernetId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing Ethernet interface feature from a specific transport VRF feature in Transport Feature Profile"
    },
    "GetSdroutingTransportVrfInterfaceIpsecFeaturesForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/interface/ipsec",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all  IPSec interface features in a specific transport VRF from a specific transport feature profile"
    },
    "CreateSdroutingTransportVrfInterfaceIpsecFeatureForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/interface/ipsec",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SD-Routing IPSec interface feature in a specific transport VRF from a specific transport feature profile"
    },
    "GetSdroutingTransportVrfInterfaceIpsecFeatureByFeatureIdForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/interface/ipsec/{ipsecId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the SD-Routing IPSec interface feature in a specific transport VRF from a specific transport feature profile"
    },
    "EditSdroutingTransportVrfInterfaceIpsecFeatureForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/interface/ipsec/{ipsecId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit the SD-Routing IPSec interface feature in a specific transport VRF from a specific transport feature profile"
    },
    "DeleteSdroutingTransportVrfInterfaceIpsecFeatureForTransport": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/interface/ipsec/{ipsecId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the SD-Routing IPSec interface feature in a specific transport VRF from a specific transport feature profile"
    },
    "GetTransportVrfAssociatedRoutingBgpFeatures_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/bgp",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the WAN VRF associated BGP features for transport feature profile"
    },
    "CreateTransportVrfAndRoutingBgpFeatureAssociation": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/bgp",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a BGP feature with the WAN VRF feature for transport feature profile"
    },
    "GetTransportVrfAssociatedRoutingBgpById": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/bgp/{bgpId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the WAN VRF associated BGP feature by BGP feature ID for transport feature profile"
    },
    "EditTransportVrfAndRoutingBgpFeatureAssociation": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/bgp/{bgpId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Replace the BGP feature for the WAN VRF feature in transport feature profile"
    },
    "DeleteTransportVrfAndRoutingBgpAssociation": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/bgp/{bgpId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the WAN VRF and BGP association for transport feature profile"
    },
    "GetTransportVrfAssociatedRoutingOspfFeatures_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospf",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the WAN VRF associated OSPF features for transport feature profile"
    },
    "CreateTransportVrfAndRoutingOspfAssociation": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospf",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate an OSPF feature with the WAN VRF feature for transport feature profile"
    },
    "GetVrfAssociatedRoutingOspfById": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospf/{ospfId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the WAN VRF associated OSPF features by feature ID for transport feature profile"
    },
    "EditTransportVrfAndRoutingOspfFeatureAssociation": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospf/{ospfId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Replace the OSPF feature for the WAN VRF feature in transport feature profile"
    },
    "DeleteTransportVrfAndRoutingOspfAssociation": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospf/{ospfId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the VRF and OSPF feature association for transport feature profile"
    },
    "GetTransportVrfAssociatedRoutingOspfv3Ipv4Features_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospfv3/ipv4",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the VRF associated OSPFv3 IPv4 features for transport feature profile"
    },
    "CreateTransportVrfAndRoutingOspfv3Ipv4Association": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospfv3/ipv4",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate an OSPFv3 IPv4 feature with the WAN VRF feature for transport feature profile"
    },
    "GetVrfAssociatedRoutingOspfv3Ipv4FeatureById_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the VRF associated OSPFv3 IPv4 feature by ID for transport feature profile"
    },
    "EditTransportVrfAndRoutingOspfv3Ipv4Association": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Replace the OSPFv3 IPv4 feature for the WAN VRF feature in transport feature profile"
    },
    "DeleteTransportVrfAndRoutingOspfv3Ipv4Association": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the VRF and OSPFv3 IPv4 feature association for transport feature profile"
    },
    "GetTransportVrfAssociatedRoutingOspfv3Ipv6Features_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospfv3/ipv6",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the WAN VRF associated OSPFv3 IPv6 features for transport feature profile"
    },
    "CreateTransportVrfAndRoutingOspfv3Ipv6FeatureAssociation": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospfv3/ipv6",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate an OSPFv3 IPv6 feature with the WAN VRF feature for transport feature profile"
    },
    "GetVrfAssociatedRoutingOspfv3Ipv6FeatureById_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the WAN VRF feature associated OSPFv3 IPv6 feature by ID for transport feature profile"
    },
    "EditTransportVrfAndRoutingOspfv3Ipv6FeatureAssociation": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Replace the OSPFv3 IPv6 feature for the WAN VRF feature in transport feature profile"
    },
    "DeleteTransportVrfAndRoutingOspfv3Ipv6Association": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/vrf/{vrfId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the WAN VRF feature and OSPFv3 IPv6 feature association for transport feature profile"
    },
    "EditCellularControllerAndGpsParcelAssociationForTransport_1": {
      "path": "/v1/feature-profile/sd-routing/transport/{transportId}/{cellularControllerId}/gps/{gpsId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a CellularController feature and a GPS Parcel association for transport feature profile"
    },
    "GetSdwanFeatureProfileBySdwanFamily": {
      "path": "/v1/feature-profile/sdwan",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SDWAN Feature Profiles"
    },
    "GetCloudProbeProfileParcelByParcelIdForapplication-priority": {
      "path": "/v1/feature-profile/sdwan/application-priority/{applicationPriorityId}/cloud-probe/{cloudProbeId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Cloud Probe Profile Parcel by parcelId for application-priority feature profile"
    },
    "createPolicyApplicationProfileParcel": {
      "path": "/v1/feature-profile/sdwan/application-priority/{applicationPriorityId}/qos-policy",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create QOS Policy feature for application-priority feature profile"
    },
    "getPolicyApplicationProfileParcel": {
      "path": "/v1/feature-profile/sdwan/application-priority/{applicationPriorityId}/qos-policy/{qosPolicyId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get QOS Policy feature for application-priority feature profile"
    },
    "editPolicyApplicationProfileParcel": {
      "path": "/v1/feature-profile/sdwan/application-priority/{applicationPriorityId}/qos-policy/{qosPolicyId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit QOS Policy feature for application-priority feature profile"
    },
    "deletePolicyApplicationProfileParcel": {
      "path": "/v1/feature-profile/sdwan/application-priority/{applicationPriorityId}/qos-policy/{qosPolicyId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete QOS Policy feature for application-priority feature profile"
    },
    "CreateTrafficPolicyProfileParcelForapplication-priority": {
      "path": "/v1/feature-profile/sdwan/application-priority/{applicationPriorityId}/traffic-policy",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Traffic Policy Profile Parcel for application-priority feature profile"
    },
    "GetTrafficPolicyProfileParcelByParcelIdForapplication-priority": {
      "path": "/v1/feature-profile/sdwan/application-priority/{applicationPriorityId}/traffic-policy/{trafficPolicyId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Traffic Policy Profile Parcel by parcelId for application-priority feature profile"
    },
    "EditTrafficPolicyProfileParcelForapplication-priority": {
      "path": "/v1/feature-profile/sdwan/application-priority/{applicationPriorityId}/traffic-policy/{trafficPolicyId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Traffic Policy Profile Parcel for application-priority feature profile"
    },
    "DeleteTrafficPolicyProfileParcelForapplication-priority": {
      "path": "/v1/feature-profile/sdwan/application-priority/{applicationPriorityId}/traffic-policy/{trafficPolicyId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Traffic Policy Profile Parcel for application-priority feature profile"
    },
    "GetSdwanFeatureProfilesByFamilyAndType_1": {
      "path": "/v1/feature-profile/sdwan/cli",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SDWAN Feature Profiles with giving Family and profile type"
    },
    "CreateSdwanFeatureProfile": {
      "path": "/v1/feature-profile/sdwan/cli",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SDWAN  Feature Profile with profile type"
    },
    "GetSdwanCliConfigFeatureSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/cli/config/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a Sdwan Cli Config feature Schema by Schema Type"
    },
    "GetSdwanFeatureProfilesByFamilyAndType": {
      "path": "/v1/feature-profile/sdwan/cli/features",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SDWAN Feature Profiles with giving Family and profile type"
    },
    "GetSdwanFeatureProfileByProfileId": {
      "path": "/v1/feature-profile/sdwan/cli/{cliId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Feature Profile with Cli profile type"
    },
    "EditSdwanFeatureProfile": {
      "path": "/v1/feature-profile/sdwan/cli/{cliId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a SDWAN Feature Profile"
    },
    "DeleteSdwanFeatureProfileForCli": {
      "path": "/v1/feature-profile/sdwan/cli/{cliId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete Feature Profile"
    },
    "GetConfigProfileParcelForCLI": {
      "path": "/v1/feature-profile/sdwan/cli/{cliId}/config",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get config Profile Parcels for cli feature profile"
    },
    "CreateSdwanConfigProfileParcelForCli": {
      "path": "/v1/feature-profile/sdwan/cli/{cliId}/config",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a config Profile Parcel for cli feature profile"
    },
    "GetConfigProfileParcelByParcelIdForCLI": {
      "path": "/v1/feature-profile/sdwan/cli/{cliId}/config/{configId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get config Profile Parcel by configId for cli feature profile"
    },
    "EditConfigProfileParcelForCLI": {
      "path": "/v1/feature-profile/sdwan/cli/{cliId}/config/{configId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a config Profile Parcel for cli feature profile"
    },
    "DeleteConfigProfileParcelForCLI": {
      "path": "/v1/feature-profile/sdwan/cli/{cliId}/config/{configId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a config Profile Parcel for cli feature profile"
    },
    "GetSdwanDnsSecurityFeatureProfiles": {
      "path": "/v1/feature-profile/sdwan/dns-security",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SDWAN Feature Profiles with giving Family and profile type"
    },
    "CreateSdwanDnsSecurityFeatureProfile": {
      "path": "/v1/feature-profile/sdwan/dns-security",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SDWAN Dns Security Feature Profile"
    },
    "GetSdwanDnsSecurityFeatureProfileByProfileId": {
      "path": "/v1/feature-profile/sdwan/dns-security/{dnsSecurityId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Dns Security Feature Profile with dnsSecurityId"
    },
    "EditSdwanDnsSecurityFeatureProfile": {
      "path": "/v1/feature-profile/sdwan/dns-security/{dnsSecurityId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a SDWAN Dns Security Feature Profile"
    },
    "DeleteSdwanDnsSecurityFeatureProfile": {
      "path": "/v1/feature-profile/sdwan/dns-security/{dnsSecurityId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete Feature Profile"
    },
    "GetSigSecurityProfileParcel": {
      "path": "/v1/feature-profile/sdwan/dns-security/{dnsSecurityId}/dns",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Sig Security Profile Parcels for a given ParcelType"
    },
    "CreateSigSecurityProfileParcel": {
      "path": "/v1/feature-profile/sdwan/dns-security/{dnsSecurityId}/dns",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create Parcel for Sig Security Policy"
    },
    "GetSigSecurityProfileParcelByParcelId": {
      "path": "/v1/feature-profile/sdwan/dns-security/{dnsSecurityId}/dns/{dnsSecurityProfileParcelId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get SigSecurity Profile Parcel by parcelId"
    },
    "EditSigSecurityProfileParcel": {
      "path": "/v1/feature-profile/sdwan/dns-security/{dnsSecurityId}/dns/{dnsSecurityProfileParcelId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Sig Security Profile Parcel"
    },
    "DeleteSigSecurityProfileParcel": {
      "path": "/v1/feature-profile/sdwan/dns-security/{dnsSecurityId}/dns/{dnsSecurityProfileParcelId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a SigSecurity Profile Parcel "
    },
    "GetSdwanSecurityFeature_1": {
      "path": "/v1/feature-profile/sdwan/embedded-security/{securityId}/policy",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Security Features for a given ParcelType"
    },
    "CreateSdwanEmbeddedSecurityFeature": {
      "path": "/v1/feature-profile/sdwan/embedded-security/{securityId}/policy",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create Feature for Security Policy"
    },
    "GetSdwanSecurityFeatureByFeatureId_1": {
      "path": "/v1/feature-profile/sdwan/embedded-security/{securityId}/policy/{securityProfileParcelId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Security Feature by FeatureId"
    },
    "EditSdwanSecurityFeature_1": {
      "path": "/v1/feature-profile/sdwan/embedded-security/{securityId}/policy/{securityProfileParcelId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Security Feature"
    },
    "DeleteSdwanSecurityFeature_1": {
      "path": "/v1/feature-profile/sdwan/embedded-security/{securityId}/policy/{securityProfileParcelId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Security Feature "
    },
    "GetSdwanNgfirewallFeature": {
      "path": "/v1/feature-profile/sdwan/embedded-security/{securityId}/unified/ngfirewall",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Ngfirewall Feature"
    },
    "CreateSdwanNgfirewallFeature": {
      "path": "/v1/feature-profile/sdwan/embedded-security/{securityId}/unified/ngfirewall",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create Feature for Ngfirewall Policy"
    },
    "GetSdwanNgfirewallFeatureByFeatureId": {
      "path": "/v1/feature-profile/sdwan/embedded-security/{securityId}/unified/ngfirewall/{securityProfileParcelId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Ngfirewall Feature by FeatureId"
    },
    "EditSdwanNgfirewallFeature": {
      "path": "/v1/feature-profile/sdwan/embedded-security/{securityId}/unified/ngfirewall/{securityProfileParcelId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Ngfirewall Feature"
    },
    "DeleteSdwanNgfirewallFeature": {
      "path": "/v1/feature-profile/sdwan/embedded-security/{securityId}/unified/ngfirewall/{securityProfileParcelId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Ngfirewall Feature "
    },
    "GetSdwanOtherFeatureProfiles": {
      "path": "/v1/feature-profile/sdwan/other",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SDWAN Feature Profiles with giving Family and profile type"
    },
    "CreateSDWANOtherFeatureProfile": {
      "path": "/v1/feature-profile/sdwan/other",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SDWAN Other Feature Profile"
    },
    "GetSdwanOtherThousandeyesParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/other/thousandeyes/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Other Thousandeyes Parcel Schema by Schema Type"
    },
    "GetSdwanOtherFeatureProfileByProfileId": {
      "path": "/v1/feature-profile/sdwan/other/{otherId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Other Feature Profile with otherId"
    },
    "EditSdwanOtherFeatureProfile": {
      "path": "/v1/feature-profile/sdwan/other/{otherId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a SDWAN Other Feature Profile"
    },
    "DeleteSdwanOtherFeatureProfile": {
      "path": "/v1/feature-profile/sdwan/other/{otherId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete Feature Profile"
    },
    "GetThousandeyesProfileParcelForOther": {
      "path": "/v1/feature-profile/sdwan/other/{otherId}/thousandeyes",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Thousandeyes Profile Parcels for Other feature profile"
    },
    "CreateThousandeyesProfileParcelForOther": {
      "path": "/v1/feature-profile/sdwan/other/{otherId}/thousandeyes",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Thousandeyes Profile Parcel for Other feature profile"
    },
    "GetThousandeyesProfileParcelByParcelIdForOther": {
      "path": "/v1/feature-profile/sdwan/other/{otherId}/thousandeyes/{thousandeyesId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Thousandeyes Profile Parcel by parcelId for Other feature profile"
    },
    "EditThousandeyesProfileParcelForOther": {
      "path": "/v1/feature-profile/sdwan/other/{otherId}/thousandeyes/{thousandeyesId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Thousandeyes Profile Parcel for Other feature profile"
    },
    "DeleteThousandeyesProfileParcelForOther": {
      "path": "/v1/feature-profile/sdwan/other/{otherId}/thousandeyes/{thousandeyesId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Thousandeyes Profile Parcel for Other feature profile"
    },
    "GetUcseProfileFeatureForOther": {
      "path": "/v1/feature-profile/sdwan/other/{otherId}/ucse",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Ucse Profile feature for Other feature profile"
    },
    "CreateUcseProfileFeatureForOther": {
      "path": "/v1/feature-profile/sdwan/other/{otherId}/ucse",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Ucse Profile feature for Other feature profile"
    },
    "GetUcseProfileFeatureByIdFFeatureForOther": {
      "path": "/v1/feature-profile/sdwan/other/{otherId}/ucse/{ucseId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Ucse Profile feature by FeatureId for Other feature profile"
    },
    "EditUcseProfileFeatureForOther": {
      "path": "/v1/feature-profile/sdwan/other/{otherId}/ucse/{ucseId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Ucse Profile feature for Other feature profile"
    },
    "DeleteUcseProfileFeatureForOther": {
      "path": "/v1/feature-profile/sdwan/other/{otherId}/ucse/{ucseId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Ucse Profile feature for Other feature profile"
    },
    "GetSdwanSecurityFeature": {
      "path": "/v1/feature-profile/sdwan/policy-object/{policyObjectId}/unified/{securityProfileParcelType}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Security Features for a given ParcelType"
    },
    "CreateSdwanSecurityFeature": {
      "path": "/v1/feature-profile/sdwan/policy-object/{policyObjectId}/unified/{securityProfileParcelType}",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create Feature for Security Policy"
    },
    "GetSdwanSecurityFeatureByFeatureId": {
      "path": "/v1/feature-profile/sdwan/policy-object/{policyObjectId}/unified/{securityProfileParcelType}/{securityProfileParcelId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Security Feature by FeatureId"
    },
    "EditSdwanSecurityFeature": {
      "path": "/v1/feature-profile/sdwan/policy-object/{policyObjectId}/unified/{securityProfileParcelType}/{securityProfileParcelId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Security Feature"
    },
    "DeleteSdwanSecurityFeature": {
      "path": "/v1/feature-profile/sdwan/policy-object/{policyObjectId}/unified/{securityProfileParcelType}/{securityProfileParcelId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Security Feature "
    },
    "GetDataPrefixProfileParcelForPolicyObject": {
      "path": "/v1/feature-profile/sdwan/policy-object/{policyObjectId}/{policyObjectListType}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Data Prefix Profile Parcels for Policy Object feature profile"
    },
    "CreateDataPrefixProfileParcelForSecurityPolicyObject": {
      "path": "/v1/feature-profile/sdwan/policy-object/{policyObjectId}/{policyObjectListType}",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Data Prefix Profile Parcel for Security Policy Object feature profile"
    },
    "GetDataPrefixProfileParcelByParcelIdForPolicyObject": {
      "path": "/v1/feature-profile/sdwan/policy-object/{policyObjectId}/{policyObjectListType}/{listObjectId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Data Prefix Profile Parcel by parcelId for Policy Object feature profile"
    },
    "EditDataPrefixProfileParcelForPolicyObject": {
      "path": "/v1/feature-profile/sdwan/policy-object/{policyObjectId}/{policyObjectListType}/{listObjectId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Data Prefix Profile Parcel for Policy Object feature profile"
    },
    "DeleteDataPrefixProfileParcelForPolicyObject": {
      "path": "/v1/feature-profile/sdwan/policy-object/{policyObjectId}/{policyObjectListType}/{listObjectId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Data Prefix Profile Parcel for Policy Object feature profile"
    },
    "GetSdwanPolicyObjectDataPrefixParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/policy-object/{policyObjectListType}/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN PolicyObject DataPrefix Parcel Schema by Schema Type"
    },
    "GetSdwanServiceFeatureProfiles": {
      "path": "/v1/feature-profile/sdwan/service",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SDWAN Feature Profiles with giving Family and profile type"
    },
    "CreateSdwanServiceFeatureProfile": {
      "path": "/v1/feature-profile/sdwan/service",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SDWAN Service Feature Profile"
    },
    "GetSdwanServiceDhcpServerParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/service/dhcp-server/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Service DhcpServer Parcel Schema by Schema Type"
    },
    "GetSdwanServiceLanVpnInterfaceEthernetParcelSchemaBySchema": {
      "path": "/v1/feature-profile/sdwan/service/lan/vpn/interface/ethernet/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Service LanVpn InterfaceEthernet Schema by Schema Type"
    },
    "GetCedgeServiceLanVpnInterfaceGreSchemaBySchema": {
      "path": "/v1/feature-profile/sdwan/service/lan/vpn/interface/gre/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a Cedge Service LanVpn InterfaceGre Schema by Schema Type"
    },
    "getSdwanProfileParcelSchema": {
      "path": "/v1/feature-profile/sdwan/service/lan/vpn/interface/ipsec/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Service LanVpn InterfaceIpsec Schema by Schema Type"
    },
    "GetCedgeServiceLanVpnInterfaceSviParcelSchemaBySchema": {
      "path": "/v1/feature-profile/sdwan/service/lan/vpn/interface/svi/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a Cedge Service LanVpn InterfaceSvi Schema by Schema Type"
    },
    "GetSdwanServiceLanVpnParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/service/lan/vpn/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Service LanVpn Parcel Schema by Schema Type"
    },
    "GetSdwanServiceRoutingBgpParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/service/routing/bgp/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Service RoutingBgp Parcel Schema by Schema Type"
    },
    "GetSdwanServiceRoutingMulticastParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/service/routing/multicast/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a Cedge Service RoutingMulticast Parcel Schema by Schema Type"
    },
    "GetCedgeServiceSwitchportParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/service/switchport/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a Cedge Service Switchport Parcel Schema by Schema Type"
    },
    "GetSdwanServiceTrackerParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/service/tracker/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Service Tracker Parcel Schema by Schema Type"
    },
    "GetCedgeServiceTrackerGroupParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/service/trackergroup/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a Cedge Service TrackerGroup Parcel Schema by Schema Type"
    },
    "GetSdwanServiceWirelesslanParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/service/wirelesslan/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a sdwan Service Wirelesslan Parcel Schema by Schema Type"
    },
    "GetSdwanServiceFeatureProfileByProfileId": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Service Feature Profile with serviceId"
    },
    "EditSdwanServiceFeatureProfile": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a SDWAN Service Feature Profile"
    },
    "DeleteSdwanServiceFeatureProfile": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete Feature Profile"
    },
    "GetAppqoeProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/appqoe",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Appqoe Profile Parcels for Service feature profile"
    },
    "CreateAppqoeProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/appqoe",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Appqoe Profile Parcel for Service feature profile"
    },
    "GetAppqoeProfileParcelByParcelIdForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/appqoe/{appqoeId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Appqoe Profile Parcel by parcelId for Service feature profile"
    },
    "EditAppqoeProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/appqoe/{appqoeId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Appqoe Profile Parcel for Service feature profile"
    },
    "DeleteAppqoeProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/appqoe/{appqoeId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Appqoe Profile Parcel for Service feature profile"
    },
    "GetDhcpServerProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/dhcp-server",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Dhcp Server Profile Parcels for Service feature profile"
    },
    "CreateDhcpServerProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/dhcp-server",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Dhcp Server Profile Parcel for Service feature profile"
    },
    "GetDhcpServerProfileParcelByParcelIdForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/dhcp-server/{dhcpServerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Dhcp Server Profile Parcel by parcelId for Service feature profile"
    },
    "EditDhcpServerProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/dhcp-server/{dhcpServerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Dhcp Server Profile Parcel for Service feature profile"
    },
    "DeleteDhcpServerProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/dhcp-server/{dhcpServerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Dhcp Server Profile Parcel for Service feature profile"
    },
    "GetLanVpnProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Lan Vpn Profile Parcels for Service feature profile"
    },
    "CreateLanVpnProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Lan Vpn Profile Parcel for Service feature profile"
    },
    "GetLanVpnProfileParcelByParcelIdForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Lan Vpn Profile Parcel by parcelId for Service feature profile"
    },
    "EditLanVpnProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Lan Vpn Profile Parcel for Service feature profile"
    },
    "DeleteLanVpnProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Lan Vpn Profile Parcel for Service feature profile"
    },
    "GetInterfaceEthernetParcelsForServiceLanVpn": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get InterfaceEthernet Parcels for service LanVpn Parcel"
    },
    "CreateLanVpnInterfaceEthernetParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a LanVpn InterfaceEthernet parcel for service feature profile"
    },
    "GetLanVpnInterfaceEthernetParcelByParcelIdForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpn InterfaceEthernet Parcel by ethernetId for service feature profile"
    },
    "EditLanVpnInterfaceEthernetParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a LanVpn InterfaceEthernet Parcel for service feature profile"
    },
    "DeleteLanVpnInterfaceEthernetForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a  LanVpn InterfaceEthernet Parcel for service feature profile"
    },
    "GetLanVpnInterfaceEthernetAssociatedDhcpServerParcelsForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/dhcp-server",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpnInterfaceEthernet associated DhcpServer Parcels for service feature profile"
    },
    "GetLanVpnInterfaceEthernetAssociatedDhcpServerParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/dhcp-server/{dhcpServerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpnInterfaceEthernet associated DhcpServer Parcel by dhcpServerId for service feature profile"
    },
    "EditLanVpnInterfaceEthernetAndDhcpServerParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/dhcp-server/{dhcpServerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a LanVpnInterfaceEthernet parcel and a DhcpServer Parcel association for service feature profile"
    },
    "DeleteLanVpnInterfaceEthernetAndDhcpServerAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/dhcp-server/{dhcpServerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a LanVpnInterfaceEthernet and a DhcpServer Parcel association for service feature profile"
    },
    "GetLanVpnInterfaceEthernetAssociatedTrackerParcelsForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/tracker",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpnInterfaceEthernet associated Tracker Parcels for service feature profile"
    },
    "GetLanVpnInterfaceEthernetAssociatedTrackerParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/tracker/{trackerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpnInterfaceEthernet associated Tracker Parcel by trackerId for service feature profile"
    },
    "EditLanVpnInterfaceEthernetAndTrackerParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/tracker/{trackerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a LanVpnInterfaceEthernet parcel and a Tracker Parcel association for service feature profile"
    },
    "DeleteLanVpnInterfaceEthernetAndTrackerAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/tracker/{trackerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a LanVpnInterfaceEthernet and a Tracker Parcel association for service feature profile"
    },
    "GetLanVpnInterfaceEthernetAssociatedTrackerGroupParcelsForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/trackergroup",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpnInterfaceEthernet associated TrackerGroup Parcels for service feature profile"
    },
    "GetLanVpnInterfaceEthernetAssociatedTrackerGroupParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/trackergroup/{trackergroupId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpnInterfaceEthernet associated TrackerGroup Parcel by trackergroupId for service feature profile"
    },
    "EditLanVpnInterfaceEthernetAndTrackerGroupParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/trackergroup/{trackergroupId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a LanVpnInterfaceEthernet parcel and a TrackerGroup Parcel association for service feature profile"
    },
    "DeleteLanVpnInterfaceEthernetAndTrackerGroupAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ethernet/{ethernetId}/trackergroup/{trackergroupId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a LanVpnInterfaceEthernet and a TrackerGroup Parcel association for service feature profile"
    },
    "GetInterfaceGresForServiceLanVpn": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/gre",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get InterfaceGre for service LanVpn"
    },
    "CreateLanVpnInterfaceGreForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/gre",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a LanVpn InterfaceGre for service feature profile"
    },
    "GetLanVpnInterfaceGreByIdForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/gre/{greId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpn InterfaceGre by greId for service feature profile"
    },
    "EditLanVpnInterfaceGreForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/gre/{greId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a LanVpn InterfaceGre Feature for service feature profile"
    },
    "DeleteLanVpnInterfaceGreForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/gre/{greId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a  LanVpn InterfaceGre for service feature profile"
    },
    "getListOfProfileParcels": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ipsec",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get InterfaceIpsec Parcels for Service LanVpn Parcel"
    },
    "createIpSecProfileParcel": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ipsec",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a LanVpn InterfaceIpsec parcel for service feature profile"
    },
    "getProfileParcelByParcelId": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ipsec/{ipsecId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpn InterfaceIpsec Parcel by ethernetId for Service feature profile"
    },
    "editProfileParcel": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ipsec/{ipsecId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a LanVpn Interface Ipsec Parcel for Service feature profile"
    },
    "deleteProfileParcel": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ipsec/{ipsecId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a  LanVpn InterfaceIpsec Parcel for Service feature profile"
    },
    "GetLanVpnInterfaceIpsecAssociatedDhcpServerParcelsForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ipsec/{ipsecId}/dhcp-server",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpnInterfaceIpsec associated DhcpServer Parcels for service feature profile"
    },
    "GetLanVpnInterfaceIpsecAssociatedDhcpServerParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ipsec/{ipsecId}/dhcp-server/{dhcpServerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpnInterfaceIpsec associated DhcpServer Parcel by dhcpServerId for service feature profile"
    },
    "EditLanVpnInterfaceIpsecAndDhcpServerParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ipsec/{ipsecId}/dhcp-server/{dhcpServerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a LanVpnInterfaceIpsec parcel and a DhcpServer Parcel association for service feature profile"
    },
    "DeleteLanVpnInterfaceIpsecAndDhcpServerAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/ipsec/{ipsecId}/dhcp-server/{dhcpServerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a LanVpnInterfaceIpsec and a DhcpServer Parcel association for service feature profile"
    },
    "GetInterfaceSviParcelsForServiceLanVpn": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/svi",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get InterfaceSvi Parcels for service LanVpn Parcel"
    },
    "CreateLanVpnInterfaceSviParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/svi",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a LanVpn InterfaceSvi parcel for service feature profile"
    },
    "GetLanVpnInterfaceSviParcelByParcelIdForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/svi/{sviId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpn InterfaceSvi Parcel by sviId for service feature profile"
    },
    "EditLanVpnInterfaceSviParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/svi/{sviId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a LanVpn InterfaceSvi Parcel for service feature profile"
    },
    "DeleteLanVpnInterfaceSviForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/svi/{sviId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a  LanVpn InterfaceSvi Parcel for service feature profile"
    },
    "GetLanVpnInterfaceSviAssociatedDhcpServerParcelsForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/svi/{sviId}/dhcp-server",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpnInterfaceSvi associated DhcpServer Parcels for service feature profile"
    },
    "GetLanVpnInterfaceSviAssociatedDhcpServerParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/svi/{sviId}/dhcp-server/{dhcpServerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpnInterfaceSvi associated DhcpServer Parcel by dhcpServerId for service feature profile"
    },
    "EditLanVpnInterfaceSviAndDhcpServerParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/svi/{sviId}/dhcp-server/{dhcpServerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a LanVpnInterfaceSvi parcel and a DhcpServer Parcel association for service feature profile"
    },
    "DeleteLanVpnInterfaceSviAndDhcpServerAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/interface/svi/{sviId}/dhcp-server/{dhcpServerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a LanVpnInterfaceSvi and a DhcpServer Parcel association for service feature profile"
    },
    "GetLanVpnAssociatedRoutingBgpParcelsForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/bgp",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpn associated Routing Bgp Parcels for service feature profile"
    },
    "CreateLanVpnAndRoutingBgpParcelAssociationForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/bgp",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a lanvpn parcel with a routingbgp Parcel for service feature profile"
    },
    "GetLanVpnAssociatedRoutingBgpParcelByParcelIdForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/bgp/{bgpId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpn parcel associated RoutingBgp Parcel by bgpId for service feature profile"
    },
    "EditLanVpnAndRoutingBgpParcelAssociationForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/bgp/{bgpId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a LanVpn parcel and a RoutingBgp Parcel association for service feature profile"
    },
    "DeleteLanVpnAndRoutingBgpAssociationForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/bgp/{bgpId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a LanVpn parcel and a RoutingBgp Parcel association for service feature profile"
    },
    "GetLanVpnAssociatedRoutingEigrpParcelsForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/eigrp",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpn associated Routing Eigrp Features for service feature profile"
    },
    "CreateLanVpnAndRoutingEigrpParcelAssociationForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/eigrp",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a lanvpn feature with a routingeigrp Feature for service feature profile"
    },
    "GetLanVpnAssociatedRoutingEigrpParcelByParcelIdForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/eigrp/{eigrpId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpn feature associated RoutingEigrp Feature by eigrpId for service feature profile"
    },
    "EditLanVpnAndRoutingEigrpParcelAssociationForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/eigrp/{eigrpId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a LanVpn feature and a RoutingEigrp Feature association for service feature profile"
    },
    "DeleteLanVpnAndRoutingEigrpAssociationForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/eigrp/{eigrpId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a LanVpn feature and a RoutingEigrp Feature association for service feature profile"
    },
    "GetLanVpnAssociatedRoutingMulticastParcelsForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/multicast",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpn associated Routing Multicast Parcels for service feature profile"
    },
    "CreateLanVpnAndRoutingMulticastParcelAssociationForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/multicast",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a lanvpn parcel with a routingmulticast Parcel for service feature profile"
    },
    "GetLanVpnAssociatedRoutingMulticastParcelByParcelIdForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/multicast/{multicastId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpn parcel associated RoutingMulticast Parcel by multicastId for service feature profile"
    },
    "EditLanVpnAndRoutingMulticastParcelAssociationForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/multicast/{multicastId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a LanVpn parcel and a RoutingMulticast Parcel association for service feature profile"
    },
    "DeleteLanVpnAndRoutingMulticastAssociationForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/multicast/{multicastId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a LanVpn parcel and a RoutingMulticast Parcel association for service feature profile"
    },
    "GetLanVpnAssociatedRoutingOspfParcelsForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospf",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpn associated Routing Ospf Parcels for service feature profile"
    },
    "CreateLanVpnAndRoutingOspfParcelAssociationForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospf",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a lanvpn parcel with a routingospf Parcel for service feature profile"
    },
    "GetLanVpnAssociatedRoutingOspfParcelByParcelIdForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospf/{ospfId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpn parcel associated RoutingOspf Parcel by ospfId for service feature profile"
    },
    "EditLanVpnAndRoutingOspfParcelAssociationForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospf/{ospfId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a LanVpn parcel and a RoutingOspf Parcel association for service feature profile"
    },
    "DeleteLanVpnAndRoutingOspfAssociationForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospf/{ospfId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a LanVpn parcel and a RoutingOspf Parcel association for service feature profile"
    },
    "GetLanVpnAssociatedRoutingOspfv3IPv4ParcelsForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospfv3/ipv4",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpn associated IPv4 address family OSPFv3 Parcels for service feature profile"
    },
    "CreateLanVpnAndRoutingOspfv3IPv4ParcelAssociationForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospfv3/ipv4",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a LAN VPN parcel with a IPv4 address family OSPFv3 Parcel for service feature profile"
    },
    "GetLanVpnAssociatedRoutingOspfv3IPv4ParcelByParcelIdForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpn parcel associated IPv4 address family OSPFv3 IPv4 Parcel by ospfv3Id for service feature profile"
    },
    "EditLanVpnAndRoutingOspfv3IPv4ParcelAssociationForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a LAN VPN parcel and a routing OSPFv3 IPv4 Parcel association for service feature profile"
    },
    "DeleteLanVpnAndRoutingOspfv3AssociationForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a LAN VPN parcel and a IPv4 OSPFv3 parcel association for service feature profile"
    },
    "GetLanVpnAssociatedRoutingOspfv3IPv6ParcelsForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospfv3/ipv6",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpn associated IPv6 address family OSPFv3 Parcels for service feature profile"
    },
    "CreateLanVpnAndRoutingOspfv3IPv6ParcelAssociationForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospfv3/ipv6",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a LAN VPN parcel with a IPv6 address family OSPFv3 Parcel for service feature profile"
    },
    "GetLanVpnAssociatedRoutingOspfv3IPv6ParcelByParcelIdForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get LanVpn parcel associated IPv6 address family OSPFv3 IPv6 Parcel by ospfv3Id for service feature profile"
    },
    "EditLanVpnAndRoutingOspfv3IPv6ParcelAssociationForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a LAN VPN parcel and a routing OSPFv3 IPv6 Parcel association for service feature profile"
    },
    "DeleteLanVpnAndRoutingOspfv3AssociationForService_1": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a LAN VPN parcel and a IPv6 OSPFv3 parcel association for service feature profile"
    },
    "CreateLanVpnInterfaceEthernetAndDhcpServerParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnParcelId}/interface/ethernet/{ethernetId}/dhcp-server",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a LanVpnInterfaceEthernet parcel with a DhcpServer Parcel for service feature profile"
    },
    "CreateLanVpnInterfaceEthernetAndTrackerParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnParcelId}/interface/ethernet/{ethernetId}/tracker",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a LanVpnInterfaceEthernet parcel with a Tracker Parcel for service feature profile"
    },
    "CreateLanVpnInterfaceEthernetAndTrackerGroupParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnParcelId}/interface/ethernet/{ethernetId}/trackergroup",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a LanVpnInterfaceEthernet parcel with a TrackerGroup Parcel for service feature profile"
    },
    "CreateLanVpnInterfaceIpsecAndDhcpServerParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnParcelId}/interface/ipsec/{ipsecId}/dhcp-server",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a LanVpnInterfaceIpsec parcel with a DhcpServer Parcel for service feature profile"
    },
    "CreateLanVpnInterfaceSviAndDhcpServerParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/lan/vpn/{vpnParcelId}/interface/svi/{sviId}/dhcp-server",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a LanVpnInterfaceSvi parcel with a DhcpServer Parcel for service feature profile"
    },
    "GetRoutingBgpProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/bgp",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Routing Bgp Profile Parcels for Service feature profile"
    },
    "CreateRoutingBgpProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/bgp",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Routing Bgp Profile Parcel for Service feature profile"
    },
    "GetRoutingBgpProfileParcelByParcelIdForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/bgp/{bgpId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Routing Bgp Profile Parcel by parcelId for Service feature profile"
    },
    "EditRoutingBgpProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/bgp/{bgpId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Routing Bgp Profile Parcel for Service feature profile"
    },
    "DeleteRoutingBgpProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/bgp/{bgpId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Routing Bgp Profile Parcel for Service feature profile"
    },
    "GetRoutingEigrpProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/eigrp",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Routing Eigrp Profile Features for Service feature profile"
    },
    "CreateRoutingEigrpProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/eigrp",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Routing Eigrp Profile Feature for Service feature profile"
    },
    "GetRoutingEigrpProfileParcelByParcelIdForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/eigrp/{eigrpId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Routing Eigrp Profile Feature by parcelId for Service feature profile"
    },
    "EditRoutingEigrpProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/eigrp/{eigrpId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Routing Eigrp Profile Feature for Service feature profile"
    },
    "DeleteRoutingEigrpProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/eigrp/{eigrpId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Routing Eigrp Profile Feature for Service feature profile"
    },
    "GetRoutingMulticastProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/multicast",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Routing Multicast Profile Parcels for Service feature profile"
    },
    "CreateRoutingMulticastProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/multicast",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Routing Multicast Profile Parcel for Service feature profile"
    },
    "GetRoutingMulticastProfileParcelByParcelIdForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/multicast/{multicastId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Routing Multicast Profile Parcel by parcelId for Service feature profile"
    },
    "EditRoutingMulticastProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/multicast/{multicastId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Routing Multicast Profile Parcel for Service feature profile"
    },
    "DeleteRoutingMulticastProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/multicast/{multicastId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Routing Multicast Profile Parcel for Service feature profile"
    },
    "GetRoutingOspfProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospf",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Routing Ospf Profile Parcels for Service feature profile"
    },
    "CreateRoutingOspfProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospf",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Routing Ospf Profile Parcel for Service feature profile"
    },
    "GetRoutingOspfProfileParcelByParcelIdForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospf/{ospfId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Routing Ospf Profile Parcel by parcelId for Service feature profile"
    },
    "EditRoutingOspfProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospf/{ospfId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Routing Ospf Profile Parcel for Service feature profile"
    },
    "DeleteRoutingOspfProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospf/{ospfId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Routing Ospf Profile Parcel for Service feature profile"
    },
    "GetRoutingOspfv3Ipv4AfProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospfv3/ipv4",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Routing OSPFv3 IPv4 Address Family Profile Parcels for Service feature profile"
    },
    "CreateRoutingOspfv3Ipv4AfProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospfv3/ipv4",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Routing OSPFv3 IPv4 Address Family Profile Parcel for Service feature profile"
    },
    "GetRoutingOspfv3IPv4AfProfileParcelByParcelIdForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Routing OSPFv3 IPv4 Address Family Profile Parcel by parcelId for Service feature profile"
    },
    "EditRoutingOspfv3IPv4AfProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Routing OSPFv3 IPv4 Address Family Profile Parcel for Service feature profile"
    },
    "DeleteRoutingOspfv3IPv4AfProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Routing OSPFv3 IPv4 Address Family Profile Parcel for Service feature profile"
    },
    "GetRoutingOspfv3Ipv6AfProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospfv3/ipv6",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Routing OSPFv3 IPv6 Address Family Profile Parcels for Service feature profile"
    },
    "CreateRoutingOspfv3Ipv6AfProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospfv3/ipv6",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Routing OSPFv3 IPv6 Address Family Profile Parcel for Service feature profile"
    },
    "GetRoutingOspfv3IPv6AfProfileParcelByParcelIdForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Routing OSPFv3 IPv6 Address Family Profile Parcel by parcelId for Service feature profile"
    },
    "EditRoutingOspfv3IPv6AfProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Routing OSPFv3 IPv6 Address Family Profile Parcel for Service feature profile"
    },
    "DeleteRoutingOspfv3IPv6AfProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Routing OSPFv3 IPv6 Address Family Profile Parcel for Service feature profile"
    },
    "GetSwitchportParcelsForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/switchport",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Switchport Parcels for service feature profile"
    },
    "CedgeServiceProfileSwitchportParcelRestfulResource": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/switchport",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a switchport Parcel to a service feature profile"
    },
    "GetSwitchportParcelByParcelIdForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/switchport/{switchportId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Switchport Parcel by switchportId for service feature profile"
    },
    "EditSwitchportParcelAssociationForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/switchport/{switchportId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Switchport Parcel association for service feature profile"
    },
    "DeleteSwitchportProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/switchport/{switchportId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Switchport Parcel for service feature profile"
    },
    "GetTrackerProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/tracker",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Tracker Profile Parcels for Service feature profile"
    },
    "CreateTrackerProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/tracker",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Tracker Profile Parcel for Service feature profile"
    },
    "GetTrackerProfileParcelByParcelIdForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/tracker/{trackerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Tracker Profile Parcel by parcelId for Service feature profile"
    },
    "EditTrackerProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/tracker/{trackerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Tracker Profile Parcel for Service feature profile"
    },
    "DeleteTrackerProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/tracker/{trackerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Tracker Profile Parcel for Service feature profile"
    },
    "GetTrackerGroupProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/trackergroup",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get TrackerGroup Profile Parcels for Service feature profile"
    },
    "CreateTrackerGroupProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/trackergroup",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a TrackerGroup Profile Parcel for Service feature profile"
    },
    "GetTrackerGroupProfileParcelByParcelIdForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/trackergroup/{trackergroupId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get TrackerGroup Profile Parcel by parcelId for Service feature profile"
    },
    "EditTrackerGroupProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/trackergroup/{trackergroupId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a TrackerGroup Profile Parcel for Service feature profile"
    },
    "DeleteTrackerGroupProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/trackergroup/{trackergroupId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a TrackerGroup Profile Parcel for Service feature profile"
    },
    "GetWirelesslanProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/wirelesslan",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Wirelesslan Profile Parcels for Service feature profile"
    },
    "CreateWirelesslanProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/wirelesslan",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Wirelesslan Profile Parcel for Service feature profile"
    },
    "GetWirelesslanProfileParcelByParcelIdForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/wirelesslan/{wirelesslanId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Wirelesslan Profile Parcel by parcelId for Service feature profile"
    },
    "EditWirelesslanProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/wirelesslan/{wirelesslanId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Wirelesslan Profile Parcel for Service feature profile"
    },
    "DeleteWirelesslanProfileParcelForService": {
      "path": "/v1/feature-profile/sdwan/service/{serviceId}/wirelesslan/{wirelesslanId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Wirelesslan Profile Parcel for Service feature profile"
    },
    "GetSdwanSigSecurityFeatureProfiles": {
      "path": "/v1/feature-profile/sdwan/sig-security",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SDWAN Feature Profiles with giving Family and profile type"
    },
    "CreateSdwanSigSecurityFeatureProfile": {
      "path": "/v1/feature-profile/sdwan/sig-security",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SDWAN Sig Security Feature Profile"
    },
    "GetSdwanSigSecurityFeatureProfileByProfileId": {
      "path": "/v1/feature-profile/sdwan/sig-security/{sigSecurityId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Sig Security Feature Profile with sigSecurityId"
    },
    "EditSdwanSigSecurityFeatureProfile": {
      "path": "/v1/feature-profile/sdwan/sig-security/{sigSecurityId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a SDWAN Sig Security Feature Profile"
    },
    "DeleteSdwanSigSecurityFeatureProfile": {
      "path": "/v1/feature-profile/sdwan/sig-security/{sigSecurityId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete Feature Profile"
    },
    "GetSigSecurityProfileParcel_1": {
      "path": "/v1/feature-profile/sdwan/sig-security/{sigSecurityId}/sig",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Sig Security Profile Parcels for a given ParcelType"
    },
    "CreateSigSecurityProfileParcel_1": {
      "path": "/v1/feature-profile/sdwan/sig-security/{sigSecurityId}/sig",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create Parcel for Sig Security Policy"
    },
    "GetSigSecurityProfileParcelByParcelId_1": {
      "path": "/v1/feature-profile/sdwan/sig-security/{sigSecurityId}/sig/{sigSecurityProfileParcelId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get SigSecurity Profile Parcel by parcelId"
    },
    "EditSigSecurityProfileParcel_1": {
      "path": "/v1/feature-profile/sdwan/sig-security/{sigSecurityId}/sig/{sigSecurityProfileParcelId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Sig Security Profile Parcel"
    },
    "DeleteSigSecurityProfileParcel_1": {
      "path": "/v1/feature-profile/sdwan/sig-security/{sigSecurityId}/sig/{sigSecurityProfileParcelId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a SigSecurity Profile Parcel "
    },
    "GetSdwanSystemFeatureProfiles": {
      "path": "/v1/feature-profile/sdwan/system",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SDWAN Feature Profiles with giving Family and profile type"
    },
    "CreateSdwanSystemFeatureProfile": {
      "path": "/v1/feature-profile/sdwan/system",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SDWAN System Feature Profile"
    },
    "GetSdwanSystemAaaParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/system/aaa/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN System Aaa Parcel Schema by Schema Type"
    },
    "GetSdwanSystemBannerParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/system/banner/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN System Banner Parcel Schema by Schema Type"
    },
    "GetSdwanSystemBasicFeatureSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/system/basic/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN System Basic Feature Schema by Schema Type"
    },
    "GetSdwanSystemBfdParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/system/bfd/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN System Bfd Parcel Schema by Schema Type"
    },
    "GetCedgeSystemGlobalParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/system/global/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a Cedge System Global Parcel Schema by Schema Type"
    },
    "GetSdwanSystemLoggingParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/system/logging/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN System Logging Parcel Schema by Schema Type"
    },
    "GetCedgeSystemMrfParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/system/mrf/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a Cedge System Mrf Parcel Schema by Schema Type"
    },
    "GetSdwanSystemNtpParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/system/ntp/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN System Ntp Parcel Schema by Schema Type"
    },
    "GetSdwanSystemOmpParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/system/omp/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN System Omp Parcel Schema by Schema Type"
    },
    "GetSdwanSystemSnmpParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/system/snmp/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN System Snmp Parcel Schema by Schema Type"
    },
    "GetSdwanSystemFeatureProfileByProfileId": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN System Feature Profile with systemId"
    },
    "EditSdwanSystemFeatureProfile": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a SDWAN System Feature Profile"
    },
    "DeleteSdwanSystemFeatureProfile": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete Feature Profile"
    },
    "GetAaaProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/aaa",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Aaa Profile Parcels for System feature profile"
    },
    "CreateAaaProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/aaa",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Aaa Profile Parcel for System feature profile"
    },
    "GetAaaProfileParcelByParcelIdForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/aaa/{aaaId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Aaa Profile Parcel by parcelId for System feature profile"
    },
    "EditAaaProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/aaa/{aaaId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Aaa Profile Parcel for System feature profile"
    },
    "DeleteAaaProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/aaa/{aaaId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Aaa Profile Parcel for System feature profile"
    },
    "GetBannerProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/banner",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Banner Profile Parcels for System feature profile"
    },
    "CreateBannerProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/banner",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Banner Profile Parcel for System feature profile"
    },
    "GetBannerProfileParcelByParcelIdForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/banner/{bannerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Banner Profile Parcel by parcelId for System feature profile"
    },
    "EditBannerProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/banner/{bannerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Banner Profile Parcel for System feature profile"
    },
    "DeleteBannerProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/banner/{bannerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Banner Profile Parcel for System feature profile"
    },
    "GetBasicProfileFeatureForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/basic",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Basic Profile Feature for System feature profile"
    },
    "CreateBasicProfileFeatureForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/basic",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Basic Profile Feature for System feature profile"
    },
    "GetBasicProfileFeatureByFeatureIdForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/basic/{basicId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Basic Profile Feature by FeatureId for System feature profile"
    },
    "EditBasicProfileFeatureForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/basic/{basicId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Basic Profile Feature for System feature profile"
    },
    "DeleteBasicProfileFeatureForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/basic/{basicId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Basic Profile Feature for System feature profile"
    },
    "GetBfdProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/bfd",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Bfd Profile Parcels for System feature profile"
    },
    "CreateBfdProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/bfd",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Bfd Profile Parcel for System feature profile"
    },
    "GetBfdProfileParcelByParcelIdForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/bfd/{bfdId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Bfd Profile Parcel by parcelId for System feature profile"
    },
    "EditBfdProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/bfd/{bfdId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Bfd Profile Parcel for System feature profile"
    },
    "DeleteBfdProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/bfd/{bfdId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Bfd Profile Parcel for System feature profile"
    },
    "GetGlobalProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/global",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Global Profile Parcels for System feature profile"
    },
    "CreateGlobalProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/global",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Global Profile Parcel for System feature profile"
    },
    "GetGlobalProfileParcelByParcelIdForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/global/{globalId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Global Profile Parcel by parcelId for System feature profile"
    },
    "EditGlobalProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/global/{globalId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Global Profile Parcel for System feature profile"
    },
    "DeleteGlobalProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/global/{globalId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Global Profile Parcel for System feature profile"
    },
    "GetLoggingProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/logging",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Logging Profile Parcels for System feature profile"
    },
    "CreateLoggingProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/logging",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Logging Profile Parcel for System feature profile"
    },
    "GetLoggingProfileParcelByParcelIdForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/logging/{loggingId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Logging Profile Parcel by parcelId for System feature profile"
    },
    "EditLoggingProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/logging/{loggingId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Logging Profile Parcel for System feature profile"
    },
    "DeleteLoggingProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/logging/{loggingId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Logging Profile Parcel for System feature profile"
    },
    "GetMrfProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/mrf",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Mrf Profile Parcels for System feature profile"
    },
    "CreateMrfProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/mrf",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Mrf Profile Parcel for System feature profile"
    },
    "GetMrfProfileParcelByParcelIdForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/mrf/{mrfId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Mrf Profile Parcel by parcelId for System feature profile"
    },
    "EditMrfProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/mrf/{mrfId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Mrf Profile Parcel for System feature profile"
    },
    "DeleteMrfProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/mrf/{mrfId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Mrf Profile Parcel for System feature profile"
    },
    "GetNtpProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/ntp",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Ntp Profile Parcels for System feature profile"
    },
    "CreateNtpProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/ntp",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Ntp Profile Parcel for System feature profile"
    },
    "GetNtpProfileParcelByParcelIdForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/ntp/{ntpId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Ntp Profile Parcel by parcelId for System feature profile"
    },
    "EditNtpProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/ntp/{ntpId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Ntp Profile Parcel for System feature profile"
    },
    "DeleteNtpProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/ntp/{ntpId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Ntp Profile Parcel for System feature profile"
    },
    "GetOmpProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/omp",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Omp Profile Parcels for System feature profile"
    },
    "CreateOmpProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/omp",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Omp Profile Parcel for System feature profile"
    },
    "GetOmpProfileParcelByParcelIdForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/omp/{ompId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Omp Profile Parcel by parcelId for System feature profile"
    },
    "EditOmpProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/omp/{ompId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Omp Profile Parcel for System feature profile"
    },
    "DeleteOmpProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/omp/{ompId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Omp Profile Parcel for System feature profile"
    },
    "GetSecurityForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/security",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Security for System feature profile"
    },
    "CreateSecurityForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/security",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create Security for System feature profile"
    },
    "GetSecurityBySecurityIdForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/security/{securityId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Security by securityId for System feature profile"
    },
    "EditSecurityForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/security/{securityId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update Security for System feature profile"
    },
    "DeleteSecurityForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/security/{securityId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete Security for System feature profile"
    },
    "GetSnmpProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/snmp",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Snmp Profile Parcels for System feature profile"
    },
    "CreateSnmpProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/snmp",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Snmp Profile Parcel for System feature profile"
    },
    "GetSnmpProfileParcelByParcelIdForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/snmp/{snmpId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Snmp Profile Parcel by parcelId for System feature profile"
    },
    "EditSnmpProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/snmp/{snmpId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Snmp Profile Parcel for System feature profile"
    },
    "DeleteSnmpProfileParcelForSystem": {
      "path": "/v1/feature-profile/sdwan/system/{systemId}/snmp/{snmpId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Snmp Profile Parcel for System feature profile"
    },
    "GetSdwanTransportFeatureProfiles": {
      "path": "/v1/feature-profile/sdwan/transport",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all SDWAN Feature Profiles with giving Family and profile type"
    },
    "CreateSdwanTransportFeatureProfile": {
      "path": "/v1/feature-profile/sdwan/transport",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a SDWAN Transport Feature Profile"
    },
    "GetSdwanTransportCellularControllerParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/transport/cellular-controller/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Transport CellularController Parcel Schema by Schema Type"
    },
    "GetSdwanTransportCellularProfileParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/transport/cellular-profile/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Transport CellularProfile Parcel Schema by Schema Type"
    },
    "GetSdwanTransportIpv6TrackerParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/transport/ipv6-tracker/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Transport IPv6 Tracker Parcel Schema by Schema Type"
    },
    "GetCedgeTransportIpv6TrackerGroupParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/transport/ipv6-trackergroup/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a Cedge Transport IPv6 TrackerGroup Parcel Schema by Schema Type"
    },
    "GetSdwanTransportManagementVpnInterfaceEthernetParcelSchemaBySchema": {
      "path": "/v1/feature-profile/sdwan/transport/management/vpn/interface/ethernet/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Transport ManagementVpn InterfaceEthernet Schema by Schema Type"
    },
    "GetSdwanTransportManagementVpnParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/transport/management/vpn/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Transport ManagementVpn Parcel Schema by Schema Type"
    },
    "GetSdwanTransportRoutingBgpParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/transport/routing/bgp/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Transport RoutingBgp Parcel Schema by Schema Type"
    },
    "GetCedgeTransportT1e1controllerParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/transport/t1-e1-controller/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a Cedge Transport T1e1controller Parcel Schema by Schema Type"
    },
    "GetSdwanTransportTrackerParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/transport/tracker/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Transport Tracker Parcel Schema by Schema Type"
    },
    "GetCedgeTransportTrackerGroupParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/transport/trackergroup/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a Cedge Transport TrackerGroup Parcel Schema by Schema Type"
    },
    "GetSdwanTransportWanVpnCellularInterfaceParcelSchemaBySchema": {
      "path": "/v1/feature-profile/sdwan/transport/wan/vpn/interface/cellular/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Transport WanVpn CellularInterface Schema by Schema Type"
    },
    "GetSdwanTransportWanVpnInterfaceEthernetParcelSchemaBySchema": {
      "path": "/v1/feature-profile/sdwan/transport/wan/vpn/interface/ethernet/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Transport WanVpn InterfaceEthernet Schema by Schema Type"
    },
    "GetCedgeTransportWanVpnInterfaceGreParcelSchemaBySchema": {
      "path": "/v1/feature-profile/sdwan/transport/wan/vpn/interface/gre/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a Cedge Transport WanVpn InterfaceGre Schema by Schema Type"
    },
    "getSdwanProfileParcelSchema_1": {
      "path": "/v1/feature-profile/sdwan/transport/wan/vpn/interface/ipsec/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Transport WanVpn InterfaceIpsec Schema by Schema Type"
    },
    "GetCedgeTransportWanVpnInterfaceSerialParcelSchemaBySchema": {
      "path": "/v1/feature-profile/sdwan/transport/wan/vpn/interface/serial/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a Cedge Transport WanVpn InterfaceSerial Schema by Schema Type"
    },
    "GetSdwanTransportWanVpnParcelSchemaBySchemaType": {
      "path": "/v1/feature-profile/sdwan/transport/wan/vpn/schema",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Transport WanVpn Parcel Schema by Schema Type"
    },
    "GetSdwanTransportFeatureProfileByProfileId": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get a SDWAN Transport Feature Profile with transportId"
    },
    "EditSdwanTransportFeatureProfile": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Edit a SDWAN Transport Feature Profile"
    },
    "DeleteSdwanTransportFeatureProfile": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete Feature Profile"
    },
    "GetCellularControllerProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Cellular Controller Profile Parcels for Transport feature profile"
    },
    "CreateCellularControllerProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Cellular Controller Profile Parcel for Transport feature profile"
    },
    "GetCellularControllerProfileParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Cellular Controller Profile Parcel by parcelId for Transport feature profile"
    },
    "EditCellularControllerProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Cellular Controller Profile Parcel for Transport feature profile"
    },
    "DeleteCellularControllerProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Cellular Controller Profile Parcel for Transport feature profile"
    },
    "GetCellularControllerAssociatedCellularProfileParcelsForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}/cellular-profile",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get CellularController associated Cellular Profile Parcels for transport feature profile"
    },
    "CreateCellularControllerAndCellularProfileParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}/cellular-profile",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a cellularcontroller parcel with a cellularprofile Parcel for transport feature profile"
    },
    "GetCellularControllerAssociatedCellularProfileParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}/cellular-profile/{cellularProfileId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get CellularController parcel associated CellularProfile Parcel by cellularProfileId for transport feature profile"
    },
    "EditCellularControllerAndCellularProfileParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}/cellular-profile/{cellularProfileId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a CellularController parcel and a CellularProfile Parcel association for transport feature profile"
    },
    "DeleteCellularControllerAndCellularProfileAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}/cellular-profile/{cellularProfileId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a CellularController parcel and a CellularProfile Parcel association for transport feature profile"
    },
    "GetCellularControllerAssociatedGpsParcelsForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}/gps",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get CellularController associated Gps Parcels for transport feature profile"
    },
    "CreateCellularControllerAndGpsParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}/gps",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a cellularcontroller parcel with a gps Parcel for transport feature profile"
    },
    "GetCellularControllerAssociatedGpsParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}/gps/{gpsId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get CellularController parcel associated Gps Parcel by gpsId for transport feature profile"
    },
    "EditCellularControllerAndGpsParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}/gps/{gpsId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a CellularController parcel and a Gps Parcel association for transport feature profile"
    },
    "DeleteCellularControllerAndGpsAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-controller/{cellularControllerId}/gps/{gpsId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a CellularController parcel and a Gps Parcel association for transport feature profile"
    },
    "GetCellularProfileProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-profile",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Cellular Profile Profile Parcels for Transport feature profile"
    },
    "CreateCellularProfileProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-profile",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Cellular Profile Profile Parcel for Transport feature profile"
    },
    "GetCellularProfileProfileParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-profile/{cellularProfileId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Cellular Profile Profile Parcel by parcelId for Transport feature profile"
    },
    "EditCellularProfileProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-profile/{cellularProfileId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Cellular Profile Profile Parcel for Transport feature profile"
    },
    "DeleteCellularProfileProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/cellular-profile/{cellularProfileId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Cellular Profile Profile Parcel for Transport feature profile"
    },
    "GetEsimCellularControllerProfileFeatureForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/esimcellular-controller",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get eSim Cellular Controller Features for Transport feature profile"
    },
    "CreateEsimCellularControllerProfileFeatureForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/esimcellular-controller",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a eSim Cellular Controller Feature for Transport feature profile"
    },
    "GetEsimCellularControllerProfileFeatureByFeatureIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/esimcellular-controller/{esimCellularControllerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get eSim Cellular Controller Feature by Feature Id for Transport feature profile"
    },
    "EditEsimCellularControllerProfileFeatureForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/esimcellular-controller/{esimCellularControllerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a eSim Cellular Controller Feature for Transport feature profile"
    },
    "DeleteEsimCellularControllerProfileFeatureForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/esimcellular-controller/{esimCellularControllerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a eSim Cellular Controller Feature for Transport feature profile"
    },
    "GetEsimCellularProfileProfileFeatureForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/esimcellular-profile",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get EsimCellular Profile Features for Transport feature profile"
    },
    "CreateEsimCellularProfileProfileFeatureForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/esimcellular-profile",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a EsimCellular Profile Feature for Transport feature profile"
    },
    "GetEsimCellularProfileByFeatureIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/esimcellular-profile/{esimCellularProfileId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get EsimCellular Profile Feature by Feature Id for Transport feature profile"
    },
    "EditEsimCellularProfileProfileFeatureForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/esimcellular-profile/{esimCellularProfileId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a EsimCellular Profile Feature for Transport feature profile"
    },
    "DeleteEsimCellularProfileProfileFeatureForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/esimcellular-profile/{esimCellularProfileId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a EsimCellular Profile Feature for Transport feature profile"
    },
    "GetGpsProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/gps",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Gps Profile Parcels for Transport feature profile"
    },
    "CreateGpsProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/gps",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Gps Profile Parcel for Transport feature profile"
    },
    "GetGpsProfileParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/gps/{gpsId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Gps Profile Parcel by parcelId for Transport feature profile"
    },
    "EditGpsProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/gps/{gpsId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Gps Profile Parcel for Transport feature profile"
    },
    "DeleteGpsProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/gps/{gpsId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Gps Profile Parcel for Transport feature profile"
    },
    "GetIpv6TrackerProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/ipv6-tracker",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get IPv6 Tracker Profile Parcels for Transport feature profile"
    },
    "CreateIpv6TrackerProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/ipv6-tracker",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a IPv6 Tracker Profile Parcel for Transport feature profile"
    },
    "GetIpv6TrackerProfileParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/ipv6-tracker/{ipv6-trackerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get IPv6 Tracker Profile Parcel by parcelId for Transport feature profile"
    },
    "EditIpv6TrackerProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/ipv6-tracker/{ipv6-trackerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a IPv6 Tracker Profile Parcel for Transport feature profile"
    },
    "DeleteIpv6TrackerProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/ipv6-tracker/{ipv6-trackerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a IPv6 Tracker Profile Parcel for Transport feature profile"
    },
    "GetIpv6TrackerGroupProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/ipv6-trackergroup",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get IPv6 TrackerGroup Profile Parcels for Transport feature profile"
    },
    "CreateIpv6TrackerGroupProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/ipv6-trackergroup",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a IPv6 TrackerGroup Profile Parcel for Transport feature profile"
    },
    "GetIpv6TrackerGroupProfileParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/ipv6-trackergroup/{ipv6-trackergroupId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get IPv6 TrackerGroup Profile Parcel by parcelId for Transport feature profile"
    },
    "EditIpv6TrackerGroupProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/ipv6-trackergroup/{ipv6-trackergroupId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a IPv6 TrackerGroup Profile Parcel for Transport feature profile"
    },
    "DeleteIpv6TrackerGroupProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/ipv6-trackergroup/{ipv6-trackergroupId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a IPv6 TrackerGroup Profile Parcel for Transport feature profile"
    },
    "GetManagementVpnProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/management/vpn",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Management Vpn Profile Parcels for Transport feature profile"
    },
    "CreateManagementVpnProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/management/vpn",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Management Vpn Profile Parcel for Transport feature profile"
    },
    "GetManagementVpnProfileParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/management/vpn/{vpnId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Management Vpn Profile Parcel by parcelId for Transport feature profile"
    },
    "EditManagementVpnProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/management/vpn/{vpnId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Management Vpn Profile Parcel for Transport feature profile"
    },
    "DeleteManagementVpnProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/management/vpn/{vpnId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Management Vpn Profile Parcel for Transport feature profile"
    },
    "GetInterfaceEthernetParcelsForTransportManagementVpn": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/management/vpn/{vpnId}/interface/ethernet",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get InterfaceEthernet Parcels for transport ManagementVpn Parcel"
    },
    "CreateManagementVpnInterfaceEthernetParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/management/vpn/{vpnId}/interface/ethernet",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a ManagementVpn InterfaceEthernet parcel for transport feature profile"
    },
    "GetManagementVpnInterfaceEthernetParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/management/vpn/{vpnId}/interface/ethernet/{ethernetId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get ManagementVpn InterfaceEthernet Parcel by ethernetId for transport feature profile"
    },
    "EditManagementVpnInterfaceEthernetParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/management/vpn/{vpnId}/interface/ethernet/{ethernetId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a ManagementVpn InterfaceEthernet Parcel for transport feature profile"
    },
    "DeleteManagementVpnInterfaceEthernetForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/management/vpn/{vpnId}/interface/ethernet/{ethernetId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a  ManagementVpn InterfaceEthernet Parcel for transport feature profile"
    },
    "GetRoutingBgpProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/bgp",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Routing Bgp Profile Parcels for Transport feature profile"
    },
    "CreateRoutingBgpProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/bgp",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Routing Bgp Profile Parcel for Transport feature profile"
    },
    "GetRoutingBgpProfileParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/bgp/{bgpId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Routing Bgp Profile Parcel by parcelId for Transport feature profile"
    },
    "EditRoutingBgpProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/bgp/{bgpId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Routing Bgp Profile Parcel for Transport feature profile"
    },
    "DeleteRoutingBgpProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/bgp/{bgpId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Routing Bgp Profile Parcel for Transport feature profile"
    },
    "GetRoutingOspfProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospf",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Routing Ospf Profile Parcels for Transport feature profile"
    },
    "CreateRoutingOspfProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospf",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Routing Ospf Profile Parcel for Transport feature profile"
    },
    "GetRoutingOspfProfileParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospf/{ospfId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Routing Ospf Profile Parcel by parcelId for Transport feature profile"
    },
    "EditRoutingOspfProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospf/{ospfId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Routing Ospf Profile Parcel for Transport feature profile"
    },
    "DeleteRoutingOspfProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospf/{ospfId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Routing Ospf Profile Parcel for Transport feature profile"
    },
    "GetRoutingOspfv3Ipv4AfProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospfv3/ipv4",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all routing OSPFv3 IPv4 address family profile parcels for transport feature profile"
    },
    "CreateRoutingOspfv3Ipv4AfProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospfv3/ipv4",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a routing OSPFv3 IPv4 address family profile parcel for transport feature profile"
    },
    "GetRoutingOspfv3Ipv4AfProfileParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the routing OSPFv3 IPv4 address family profile parcel by ID for transport feature profile"
    },
    "EditRoutingOspfv3Ipv4AfProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a routing OSPFv3 IPv4 address family profile parcel for transport feature profile"
    },
    "DeleteRoutingOspfv3Ipv4AfProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the routing OSPFv3 IPv4 address family profile parcel by ID for transport feature profile"
    },
    "GetRoutingOspfv3Ipv6AfProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospfv3/ipv6",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get all routing OSPFv3 IPv6 address family profile parcels for transport feature profile"
    },
    "CreateRoutingOspfv3Ipv6AfProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospfv3/ipv6",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a routing OSPFv3 IPv6 address family profile parcel for transport feature profile"
    },
    "GetRoutingOspfv3Ipv6AfProfileParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get the routing OSPFv3 IPv6 address family profile parcel by ID for transport feature profile"
    },
    "EditRoutingOspfv3Ipv6AfProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a routing OSPFv3 IPv6 address family profile parcel for transport feature profile"
    },
    "DeleteRoutingOspfv3Ipv6AfProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete the routing OSPFv3 IPv6 address family profile parcel by ID for transport feature profile"
    },
    "GetT1e1controllerProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/t1-e1-controller",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get T1e1controller Profile Parcels for Transport feature profile"
    },
    "CreateT1e1controllerProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/t1-e1-controller",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a T1e1controller Profile Parcel for Transport feature profile"
    },
    "GetT1e1controllerProfileParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/t1-e1-controller/{t1e1controllerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get T1e1controller Profile Parcel by parcelId for Transport feature profile"
    },
    "EditT1e1controllerProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/t1-e1-controller/{t1e1controllerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a T1e1controller Profile Parcel for Transport feature profile"
    },
    "DeleteT1e1controllerProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/t1-e1-controller/{t1e1controllerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a T1e1controller Profile Parcel for Transport feature profile"
    },
    "GetTrackerProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/tracker",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Tracker Profile Parcels for Transport feature profile"
    },
    "CreateTrackerProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/tracker",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Tracker Profile Parcel for Transport feature profile"
    },
    "GetTrackerProfileParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/tracker/{trackerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Tracker Profile Parcel by parcelId for Transport feature profile"
    },
    "EditTrackerProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/tracker/{trackerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Tracker Profile Parcel for Transport feature profile"
    },
    "DeleteTrackerProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/tracker/{trackerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Tracker Profile Parcel for Transport feature profile"
    },
    "GetTrackerGroupProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/trackergroup",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get TrackerGroup Profile Parcels for Transport feature profile"
    },
    "CreateTrackerGroupProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/trackergroup",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a TrackerGroup Profile Parcel for Transport feature profile"
    },
    "GetTrackerGroupProfileParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/trackergroup/{trackergroupId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get TrackerGroup Profile Parcel by parcelId for Transport feature profile"
    },
    "EditTrackerGroupProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/trackergroup/{trackergroupId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a TrackerGroup Profile Parcel for Transport feature profile"
    },
    "DeleteTrackerGroupProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/trackergroup/{trackergroupId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a TrackerGroup Profile Parcel for Transport feature profile"
    },
    "GetWanVpnProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Wan Vpn Profile Parcels for Transport feature profile"
    },
    "CreateWanVpnProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a Wan Vpn Profile Parcel for Transport feature profile"
    },
    "GetWanVpnProfileParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Wan Vpn Profile Parcel by parcelId for Transport feature profile"
    },
    "EditWanVpnProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a Wan Vpn Profile Parcel for Transport feature profile"
    },
    "DeleteWanVpnProfileParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a Wan Vpn Profile Parcel for Transport feature profile"
    },
    "GetInterfaceCellularParcelsForTransportWanVpn": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get Interface Cellular Parcels for transport Wan Vpn Parcel"
    },
    "CreateWanVpnInterfaceCellularParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a wanvpn Cellular interface Parcel for transport feature profile"
    },
    "GetWanVpnInterfaceCellularAssociatedIpv6TrackerParcelsForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/ipv6-tracker",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpnInterfaceCellular associated IPv6 Tracker Parcels for transport feature profile"
    },
    "GetWanVpnInterfaceCellularAssociatedIpv6TrackerParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/ipv6-tracker/{ipv6-trackerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpnInterfaceCellular associated IPv6 Tracker Parcel by ipv6-trackerId for transport feature profile"
    },
    "EditWanVpnInterfaceCellularAndIpv6TrackerParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/ipv6-tracker/{ipv6-trackerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a WanVpnInterfaceCellular parcel and a IPv6 Tracker Parcel association for transport feature profile"
    },
    "DeleteWanVpnInterfaceCellularAndIpv6TrackerAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/ipv6-tracker/{ipv6-trackerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a WanVpnInterfaceCellular and a IPv6 Tracker Parcel association for transport feature profile"
    },
    "GetWanVpnInterfaceCellularAssociatedIpv6TrackerGroupParcelsForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/ipv6-trackergroup",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpnInterfaceCellular associated IPv6 TrackerGroup Parcels for transport feature profile"
    },
    "GetWanVpnInterfaceCellularAssociatedIpv6TrackerGroupParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/ipv6-trackergroup/{ipv6-trackergroupId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpnInterfaceCellular associated IPv6 TrackerGroup Parcel by ipv6-trackergroupId for transport feature profile"
    },
    "EditWanVpnInterfaceCellularAndIpv6TrackerGroupParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/ipv6-trackergroup/{ipv6-trackergroupId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a WanVpnInterfaceCellular parcel and a IPv6 TrackerGroup Parcel association for transport feature profile"
    },
    "DeleteWanVpnInterfaceCellularAndIpv6TrackerGroupAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/ipv6-trackergroup/{ipv6-trackergroupId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a WanVpnInterfaceCellular and a IPv6 TrackerGroup Parcel association for transport feature profile"
    },
    "GetWanVpnInterfaceCellularAssociatedTrackerParcelsForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/tracker",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpnInterfaceCellular associated Tracker Parcels for transport feature profile"
    },
    "GetWanVpnInterfaceCellularAssociatedTrackerParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/tracker/{trackerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpnInterfaceCellular associated Tracker Parcel by trackerId for transport feature profile"
    },
    "EditWanVpnInterfaceCellularAndTrackerParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/tracker/{trackerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a WanVpnInterfaceCellular parcel and a Tracker Parcel association for transport feature profile"
    },
    "DeleteWanVpnInterfaceCellularAndTrackerAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/tracker/{trackerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a WanVpnInterfaceCellular and a Tracker Parcel association for transport feature profile"
    },
    "GetWanVpnInterfaceCellularAssociatedTrackerGroupParcelsForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/trackergroup",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpnInterfaceCellular associated Tracker Group Parcels for transport feature profile"
    },
    "GetWanVpnInterfaceCellularAssociatedTrackerGroupParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/trackergroup/{trackerGroupId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpnInterfaceCellular associated Tracker Group Parcel by trackerId for transport feature profile"
    },
    "EditWanVpnInterfaceCellularAndTrackerGroupParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/trackergroup/{trackerGroupId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a WanVpnInterfaceCellular parcel and a Tracker Group Parcel association for transport feature profile"
    },
    "DeleteWanVpnInterfaceCellularAndTrackerGroupAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{cellularId}/trackergroup/{trackerGroupId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a WanVpnInterfaceCellular and a Tracker Group Parcel association for transport feature profile"
    },
    "GetWanVpnInterfaceCellularParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{intfId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get wanvpn Cellular interface Parcel by intfId for transport feature profile"
    },
    "EditWanVpnInterfaceCellularParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{intfId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a wanvpn Cellular Interface Parcel for transport feature profile"
    },
    "DeleteWanVpnInterfaceCellularForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/cellular/{intfId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a wanvpn Cellular interface Parcel for transport feature profile"
    },
    "GetInterfaceEthernetParcelsForTransportWanVpn": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get InterfaceEthernet Parcels for transport WanVpn Parcel"
    },
    "CreateWanVpnInterfaceEthernetParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a WanVpn InterfaceEthernet parcel for transport feature profile"
    },
    "GetWanVpnInterfaceEthernetParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpn InterfaceEthernet Parcel by ethernetId for transport feature profile"
    },
    "EditWanVpnInterfaceEthernetParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a WanVpn InterfaceEthernet Parcel for transport feature profile"
    },
    "DeleteWanVpnInterfaceEthernetForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a  WanVpn InterfaceEthernet Parcel for transport feature profile"
    },
    "GetWanVpnInterfaceEthernetAssociatedIpv6TrackerParcelsForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/ipv6-tracker",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpnInterfaceEthernet associated IPv6 Tracker Parcels for transport feature profile"
    },
    "GetWanVpnInterfaceEthernetAssociatedIpv6TrackerParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/ipv6-tracker/{ipv6-trackerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpnInterfaceEthernet associated IPv6 Tracker Parcel by ipv6-trackerId for transport feature profile"
    },
    "EditWanVpnInterfaceEthernetAndIpv6TrackerParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/ipv6-tracker/{ipv6-trackerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a WanVpnInterfaceEthernet parcel and a IPv6 Tracker Parcel association for transport feature profile"
    },
    "DeleteWanVpnInterfaceEthernetAndIpv6TrackerAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/ipv6-tracker/{ipv6-trackerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a WanVpnInterfaceEthernet and a IPv6 Tracker Parcel association for transport feature profile"
    },
    "GetWanVpnInterfaceEthernetAssociatedIpv6TrackerGroupParcelsForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/ipv6-trackergroup",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpnInterfaceEthernet associated IPv6 TrackerGroup Parcels for transport feature profile"
    },
    "GetWanVpnInterfaceEthernetAssociatedIpv6TrackerGroupParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/ipv6-trackergroup/{ipv6-trackergroupId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpnInterfaceEthernet associated IPv6 TrackerGroup Parcel by ipv6-trackergroupId for transport feature profile"
    },
    "EditWanVpnInterfaceEthernetAndIpv6TrackerGroupParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/ipv6-trackergroup/{ipv6-trackergroupId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a WanVpnInterfaceEthernet parcel and a IPv6 TrackerGroup Parcel association for transport feature profile"
    },
    "DeleteWanVpnInterfaceEthernetAndIpv6TrackerGroupAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/ipv6-trackergroup/{ipv6-trackergroupId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a WanVpnInterfaceEthernet and a IPv6 TrackerGroup Parcel association for transport feature profile"
    },
    "GetWanVpnInterfaceEthernetAssociatedTrackerParcelsForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/tracker",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpnInterfaceEthernet associated Tracker Parcels for transport feature profile"
    },
    "GetWanVpnInterfaceEthernetAssociatedTrackerParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/tracker/{trackerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpnInterfaceEthernet associated Tracker Parcel by trackerId for transport feature profile"
    },
    "EditWanVpnInterfaceEthernetAndTrackerParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/tracker/{trackerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a WanVpnInterfaceEthernet parcel and a Tracker Parcel association for transport feature profile"
    },
    "DeleteWanVpnInterfaceEthernetAndTrackerAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/tracker/{trackerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a WanVpnInterfaceEthernet and a Tracker Parcel association for transport feature profile"
    },
    "GetWanVpnInterfaceEthernetAssociatedTrackerGroupParcelsForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/trackergroup",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpnInterfaceEthernet associated TrackerGroup Parcels for transport feature profile"
    },
    "GetWanVpnInterfaceEthernetAssociatedTrackerGroupParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/trackergroup/{trackergroupId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpnInterfaceEthernet associated TrackerGroup Parcel by trackergroupId for transport feature profile"
    },
    "EditWanVpnInterfaceEthernetAndTrackerGroupParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/trackergroup/{trackergroupId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a WanVpnInterfaceEthernet parcel and a TrackerGroup Parcel association for transport feature profile"
    },
    "DeleteWanVpnInterfaceEthernetAndTrackerGroupAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ethernet/{ethernetId}/trackergroup/{trackergroupId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a WanVpnInterfaceEthernet and a TrackerGroup Parcel association for transport feature profile"
    },
    "GetInterfaceGreParcelsForTransportWanVpn": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/gre",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get InterfaceGre Parcels for transport WanVpn Parcel"
    },
    "CreateWanVpnInterfaceGreParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/gre",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a WanVpn InterfaceGre parcel for transport feature profile"
    },
    "GetWanVpnInterfaceGreParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/gre/{greId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpn InterfaceGre Parcel by greId for transport feature profile"
    },
    "EditWanVpnInterfaceGreParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/gre/{greId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a WanVpn InterfaceGre Parcel for transport feature profile"
    },
    "DeleteWanVpnInterfaceGreForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/gre/{greId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a  WanVpn InterfaceGre Parcel for transport feature profile"
    },
    "GetWanVpnInterfaceGreAssociatedTrackerParcelsForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/gre/{greId}/tracker",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpnInterfaceGre associated Tracker Parcels for transport feature profile"
    },
    "CreateWanVpnInterfaceGreAndTrackerParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/gre/{greId}/tracker",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a WanVpnInterfaceGre parcel with a Tracker Parcel for transport feature profile"
    },
    "GetWanVpnInterfaceGreAssociatedTrackerParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/gre/{greId}/tracker/{trackerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpnInterfaceGre associated Tracker Parcel by trackerId for transport feature profile"
    },
    "EditWanVpnInterfaceGreAndTrackerParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/gre/{greId}/tracker/{trackerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a WanVpnInterfaceGre parcel and a Tracker Parcel association for transport feature profile"
    },
    "DeleteWanVpnInterfaceGreAndTrackerAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/gre/{greId}/tracker/{trackerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a WanVpnInterfaceGre and a Tracker Parcel association for transport feature profile"
    },
    "getListOfProfileParcels_1": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ipsec",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get InterfaceIpsec Parcels for transport WanVpn Parcel"
    },
    "createIpSecProfileParcel_1": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ipsec",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a WanVpn InterfaceIpsec parcel for transport feature profile"
    },
    "getProfileParcelByParcelId_1": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ipsec/{ipsecId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpn InterfaceIpsec Parcel by ethernetId for transport feature profile"
    },
    "editProfileParcel_1": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ipsec/{ipsecId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a WanVpn InterfaceIpsec Parcel for transport feature profile"
    },
    "deleteProfileParcel_1": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ipsec/{ipsecId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a  WanVpn InterfaceIpsec Parcel for transport feature profile"
    },
    "GetWanVpnInterfaceIpsecAssociatedTrackerParcelsForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ipsec/{ipsecId}/tracker",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpnInterfaceIpsec associated Tracker Parcels for transport feature profile"
    },
    "GetWanVpnInterfaceIpsecAssociatedTrackerParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ipsec/{ipsecId}/tracker/{trackerId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpnInterfaceIpsec associated Tracker Parcel by trackerId for transport feature profile"
    },
    "EditWanVpnInterfaceIpsecAndTrackerParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ipsec/{ipsecId}/tracker/{trackerId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a WanVpnInterfaceIpsec parcel and a Tracker Parcel association for transport feature profile"
    },
    "DeleteWanVpnInterfaceIpsecAndTrackerAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/ipsec/{ipsecId}/tracker/{trackerId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a WanVpnInterfaceIpsec and a Tracker Parcel association for transport feature profile"
    },
    "GetInterfaceSerialParcelsForTransportWanVpn": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/serial",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get InterfaceSerial Parcels for transport WanVpn Parcel"
    },
    "CreateWanVpnInterfaceSerialParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/serial",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Create a WanVpn InterfaceSerial parcel for transport feature profile"
    },
    "GetWanVpnInterfaceSerialParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/serial/{serialId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpn InterfaceSerial Parcel by serialId for transport feature profile"
    },
    "EditWanVpnInterfaceSerialParcelForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/serial/{serialId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a WanVpn InterfaceSerial Parcel for transport feature profile"
    },
    "DeleteWanVpnInterfaceSerialForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/interface/serial/{serialId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a  WanVpn InterfaceSerial Parcel for transport feature profile"
    },
    "GetWanVpnAssociatedRoutingBgpParcelsForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/bgp",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpn associated Routing Bgp Parcels for transport feature profile"
    },
    "CreateWanVpnAndRoutingBgpParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/bgp",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a wanvpn parcel with a routingbgp Parcel for transport feature profile"
    },
    "GetWanVpnAssociatedRoutingBgpParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/bgp/{bgpId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpn parcel associated RoutingBgp Parcel by bgpId for transport feature profile"
    },
    "EditWanVpnAndRoutingBgpParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/bgp/{bgpId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a WanVpn parcel and a RoutingBgp Parcel association for transport feature profile"
    },
    "DeleteWanVpnAndRoutingBgpAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/bgp/{bgpId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a WanVpn parcel and a RoutingBgp Parcel association for transport feature profile"
    },
    "GetWanVpnAssociatedRoutingOspfParcelsForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospf",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpn associated Routing Ospf Parcels for transport feature profile"
    },
    "CreateWanVpnAndRoutingOspfParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospf",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a wan/vpn parcel with a routing/ospf Parcel for transport feature profile"
    },
    "GetWanVpnAssociatedRoutingOspfParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospf/{ospfId}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WanVpn parcel associated RoutingOspf Parcel by ospfId for transport feature profile"
    },
    "EditWanVpnAndRoutingOspfParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospf/{ospfId}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a WanVpn parcel and a RoutingOspf Parcel association for transport feature profile"
    },
    "DeleteWanVpnAndRoutingOspfAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospf/{ospfId}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a WanVpn parcel and a RoutingOspf Parcel association for transport feature profile"
    },
    "GetWanVpnAssociatedRoutingOspfv3IPv4AfParcelsForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospfv3/ipv4",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WAN VPN associated routing OSPFv3 IPv4 address family parcels for transport feature profile"
    },
    "CreateWanVpnAndRoutingOspfv3Ipv4AfParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospfv3/ipv4",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a WAN VPN parcel with a routing OSPFv3 parcel for transport feature profile"
    },
    "GetWanVpnAssociatedRoutingOspfv3IPv4AfParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WAN VPN parcel associated OSPFv3 IPv4 parcel by ID for transport feature profile"
    },
    "EditWanVpnAndRoutingOspfv3IPv4AfParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a WAN VPN parcel and a routing OSPFv3 parcel association for transport feature profile"
    },
    "DeleteWanVpnAndRoutingOspfv3IPv4AssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospfv3/ipv4/{ospfv3Id}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a WAN VPN parcel and a routing OSPFv3 parcel association for transport feature profile"
    },
    "GetWanVpnAssociatedRoutingOspfv3IPv6AfParcelsForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospfv3/ipv6",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WAN VPN associated routing OSPFv3 IPv6 address family parcels for transport feature profile"
    },
    "CreateWanVpnAndRoutingOspfv3Ipv6AfParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospfv3/ipv6",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a WAN VPN parcel with a routing OSPFv3 parcel for transport feature profile"
    },
    "GetWanVpnAssociatedRoutingOspfv3IPv6AfParcelByParcelIdForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "get",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "get",
      "description": "Get WAN VPN parcel associated OSPFv3 IPv6 parcel by ID for transport feature profile"
    },
    "EditWanVpnAndRoutingOspfv3IPv6AfParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "put",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "update",
      "description": "Update a WAN VPN parcel and a routing OSPFv3 parcel association for transport feature profile"
    },
    "DeleteWanVpnAndRoutingOspfv3IPv6AssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnId}/routing/ospfv3/ipv6/{ospfv3Id}",
      "method": "delete",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "delete",
      "description": "Delete a WAN VPN parcel and a routing OSPFv3 parcel association for transport feature profile"
    },
    "CreateWanVpnInterfaceCellularAndIpv6TrackerParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnParcelId}/interface/cellular/{cellularId}/ipv6-tracker",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a WanVpnInterfaceCellular parcel with a IPv6 Tracker Parcel for transport feature profile"
    },
    "CreateWanVpnInterfaceCellularAndIpv6TrackerGroupParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnParcelId}/interface/cellular/{cellularId}/ipv6-trackergroup",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a WanVpnInterfaceCellular parcel with a IPv6 TrackerGroup Parcel for transport feature profile"
    },
    "CreateWanVpnInterfaceCellularAndTrackerParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnParcelId}/interface/cellular/{cellularId}/tracker",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a WanVpnInterfaceCellular parcel with a Tracker Parcel for transport feature profile"
    },
    "CreateWanVpnInterfaceCellularAndTrackerGroupParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnParcelId}/interface/cellular/{cellularId}/trackergroup",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a WanVpnInterfaceCellular parcel with a TrackerGroup Parcel for transport feature profile"
    },
    "CreateWanVpnInterfaceEthernetAndIpv6TrackerParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnParcelId}/interface/ethernet/{ethernetId}/ipv6-tracker",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a WanVpnInterfaceEthernet parcel with a IPv6 Tracker Parcel for transport feature profile"
    },
    "CreateWanVpnInterfaceEthernetAndIpv6TrackerGroupParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnParcelId}/interface/ethernet/{ethernetId}/ipv6-trackergroup",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a WanVpnInterfaceEthernet parcel with a IPv6 TrackerGroup Parcel for transport feature profile"
    },
    "CreateWanVpnInterfaceEthernetAndTrackerParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnParcelId}/interface/ethernet/{ethernetId}/tracker",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a WanVpnInterfaceEthernet parcel with a Tracker Parcel for transport feature profile"
    },
    "CreateWanVpnInterfaceEthernetAndTrackerGroupParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnParcelId}/interface/ethernet/{ethernetId}/trackergroup",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a WanVpnInterfaceEthernet parcel with a TrackerGroup Parcel for transport feature profile"
    },
    "CreateWanVpnInterfaceIpsecAndTrackerParcelAssociationForTransport": {
      "path": "/v1/feature-profile/sdwan/transport/{transportId}/wan/vpn/{vpnParcelId}/interface/ipsec/{ipsecId}/tracker",
      "method": "post",
      "sdk_endpoint": "v1.feature_profile",
      "sdk_method": "create",
      "description": "Associate a WanVpnInterfaceIpsec parcel with a Tracker Parcel for transport feature profile"
    },
    "assignMSLALicenses": {
      "path": "/v1/licensing/assign-licenses",
      "method": "post",
      "sdk_endpoint": "v1.licensing",
      "sdk_method": "create",
      "description": "Assign licenses to devices"
    },
    "getMSLADevices": {
      "path": "/v1/licensing/devices",
      "method": "get",
      "sdk_endpoint": "v1.licensing",
      "sdk_method": "get",
      "description": "Retrieve list of all devices along with license details if assigned"
    },
    "getLicenseByUuid": {
      "path": "/v1/licensing/edit-licenses/{uuid}",
      "method": "get",
      "sdk_endpoint": "v1.licensing",
      "sdk_method": "get",
      "description": "Edit licenses associated to a device"
    },
    "getMSLALicenses": {
      "path": "/v1/licensing/licenses",
      "method": "post",
      "sdk_endpoint": "v1.licensing",
      "sdk_method": "create",
      "description": "Get applicable licenses based on platform class"
    },
    "releaseLicenses": {
      "path": "/v1/licensing/release-licenses",
      "method": "put",
      "sdk_endpoint": "v1.licensing",
      "sdk_method": "update",
      "description": "Release licenses assigned to the devices"
    },
    "getSAVADistribution": {
      "path": "/v1/licensing/sa-va-distribution",
      "method": "post",
      "sdk_endpoint": "v1.licensing",
      "sdk_method": "create",
      "description": "Get Smart account and virtual account distribution of selected licenses"
    },
    "updateInterconnectGateway_1": {
      "path": "/v1/multicloud/interconnect/gateways/{interconnect-gateway-name}",
      "method": "put",
      "sdk_endpoint": "v1.multicloud",
      "sdk_method": "update",
      "description": "Edit Interconnect Gateway Information."
    },
    "GetPolicyGroupBySolution": {
      "path": "/v1/policy-group",
      "method": "get",
      "sdk_endpoint": "v1.policy_group",
      "sdk_method": "get",
      "description": "Get a Policy Group by Solution"
    },
    "CreatePolicyGroup": {
      "path": "/v1/policy-group",
      "method": "post",
      "sdk_endpoint": "v1.policy_group",
      "sdk_method": "create",
      "description": "Create a new Policy Group"
    },
    "GetPolicyGroup": {
      "path": "/v1/policy-group/{policyGroupId}",
      "method": "get",
      "sdk_endpoint": "v1.policy_group",
      "sdk_method": "get",
      "description": "Get a Policy Group by ID"
    },
    "EditPolicyGroup": {
      "path": "/v1/policy-group/{policyGroupId}",
      "method": "put",
      "sdk_endpoint": "v1.policy_group",
      "sdk_method": "update",
      "description": "Edit a Policy Group"
    },
    "DeletePolicyGroup": {
      "path": "/v1/policy-group/{policyGroupId}",
      "method": "delete",
      "sdk_endpoint": "v1.policy_group",
      "sdk_method": "delete",
      "description": "Delete Policy Group"
    },
    "GetPolicyGroupAssociation": {
      "path": "/v1/policy-group/{policyGroupId}/device/associate",
      "method": "get",
      "sdk_endpoint": "v1.policy_group",
      "sdk_method": "get",
      "description": "Get devices association with a policy group"
    },
    "UpdatePolicyGroupAssociation": {
      "path": "/v1/policy-group/{policyGroupId}/device/associate",
      "method": "put",
      "sdk_endpoint": "v1.policy_group",
      "sdk_method": "update",
      "description": "Move the devices from one policy group to another"
    },
    "CreatePolicyGroupAssociation": {
      "path": "/v1/policy-group/{policyGroupId}/device/associate",
      "method": "post",
      "sdk_endpoint": "v1.policy_group",
      "sdk_method": "create",
      "description": "Create associations with device and a policy group"
    },
    "DeletePolicyGroupAssociation": {
      "path": "/v1/policy-group/{policyGroupId}/device/associate",
      "method": "delete",
      "sdk_endpoint": "v1.policy_group",
      "sdk_method": "delete",
      "description": "Delete Policy Group Association from devices"
    },
    "deployPolicyGroup": {
      "path": "/v1/policy-group/{policyGroupId}/device/deploy",
      "method": "post",
      "sdk_endpoint": "v1.policy_group",
      "sdk_method": "create",
      "description": "deploy policy group to devices"
    },
    "getPolicyGroupDeviceVariables": {
      "path": "/v1/policy-group/{policyGroupId}/device/variables",
      "method": "get",
      "sdk_endpoint": "v1.policy_group",
      "sdk_method": "get",
      "description": "Get device variables"
    },
    "createPolicyGroupDeviceVariables": {
      "path": "/v1/policy-group/{policyGroupId}/device/variables",
      "method": "put",
      "sdk_endpoint": "v1.policy_group",
      "sdk_method": "update",
      "description": "assign values to device variables"
    },
    "fetchPolicyGroupDeviceVariables": {
      "path": "/v1/policy-group/{policyGroupId}/device/variables",
      "method": "post",
      "sdk_endpoint": "v1.policy_group",
      "sdk_method": "create",
      "description": "Fetch device variables"
    },
    "getPolicyGroupDeviceVariablesSchema": {
      "path": "/v1/policy-group/{policyGroupId}/device/variables/schema",
      "method": "get",
      "sdk_endpoint": "v1.policy_group",
      "sdk_method": "get",
      "description": "get device variables schema"
    },
    "getPolicyGroupDeviceConfigurationPreview": {
      "path": "/v1/policy-group/{policyGroupId}/device/{deviceId}/preview",
      "method": "post",
      "sdk_endpoint": "v1.policy_group",
      "sdk_method": "create",
      "description": "Get a preview of the configuration for a device"
    },
    "getAllReportTemplates": {
      "path": "/v1/reports",
      "method": "get",
      "sdk_endpoint": "v1.reports",
      "sdk_method": "get",
      "description": "Get all report templates information"
    },
    "createReportTemplate": {
      "path": "/v1/reports",
      "method": "post",
      "sdk_endpoint": "v1.reports",
      "sdk_method": "create",
      "description": "Create a new report template"
    },
    "downloadReportPreviewFile": {
      "path": "/v1/reports/preview/download",
      "method": "get",
      "sdk_endpoint": "v1.reports",
      "sdk_method": "get",
      "description": "Download a report preview file"
    },
    "getReportTemplateById": {
      "path": "/v1/reports/{reportId}",
      "method": "get",
      "sdk_endpoint": "v1.reports",
      "sdk_method": "get",
      "description": "Get report template by id"
    },
    "updateReportTemplate": {
      "path": "/v1/reports/{reportId}",
      "method": "put",
      "sdk_endpoint": "v1.reports",
      "sdk_method": "update",
      "description": "Modify the report template configuration"
    },
    "deleteReportTemplate": {
      "path": "/v1/reports/{reportId}",
      "method": "delete",
      "sdk_endpoint": "v1.reports",
      "sdk_method": "delete",
      "description": "Delete the report template by report ID"
    },
    "ReportAction": {
      "path": "/v1/reports/{reportId}/action/{action}",
      "method": "put",
      "sdk_endpoint": "v1.reports",
      "sdk_method": "update",
      "description": "User operations for report template"
    },
    "getAllReportTasksByReportId": {
      "path": "/v1/reports/{reportId}/tasks",
      "method": "get",
      "sdk_endpoint": "v1.reports",
      "sdk_method": "get",
      "description": "Get report tasks detail by id"
    },
    "deleteReportTaskByTaskId": {
      "path": "/v1/reports/{reportId}/tasks/{taskId}",
      "method": "delete",
      "sdk_endpoint": "v1.reports",
      "sdk_method": "delete",
      "description": "Delete report task by id"
    },
    "downloadReportDataFile": {
      "path": "/v1/reports/{reportId}/tasks/{taskId}/download",
      "method": "get",
      "sdk_endpoint": "v1.reports",
      "sdk_method": "get",
      "description": "Download a report file"
    },
    "fetchSdoToken": {
      "path": "/v1/securedeviceonboarding/fetchSdoToken",
      "method": "post",
      "sdk_endpoint": "v1.securedeviceonboarding",
      "sdk_method": "create",
      "description": "POST for fetching Secure Device Onboarding Token needed for Secure Device Onboarding APIs for eSim"
    },
    "getUrlForSdoIdentityService": {
      "path": "/v1/securedeviceonboarding/getUrlForSdoIdentityService",
      "method": "get",
      "sdk_endpoint": "v1.securedeviceonboarding",
      "sdk_method": "get",
      "description": "Get URL for Secure Device Onboarding Identity Service that generates Session ID required for authentication to get Secure Device Onboarding token"
    },
    "createProviderCredentials": {
      "path": "/v1/securedeviceonboarding/providercredentials",
      "method": "post",
      "sdk_endpoint": "v1.securedeviceonboarding",
      "sdk_method": "create",
      "description": "Create service provider credentials"
    },
    "getAllAccounts": {
      "path": "/v1/securedeviceonboarding/providerscredentials",
      "method": "get",
      "sdk_endpoint": "v1.securedeviceonboarding",
      "sdk_method": "get",
      "description": "Get all providers credentials"
    },
    "getRatePlansByAcctId": {
      "path": "/v1/securedeviceonboarding/rateplans",
      "method": "get",
      "sdk_endpoint": "v1.securedeviceonboarding",
      "sdk_method": "get",
      "description": "Get rate plans by account Id"
    },
    "getProvidersInfo": {
      "path": "/v1/securedeviceonboarding/registeredproviders",
      "method": "get",
      "sdk_endpoint": "v1.securedeviceonboarding",
      "sdk_method": "get",
      "description": "Get Registered Providers Info"
    },
    "getCommPlansByAcctId": {
      "path": "/v1/securedeviceonboarding/{accountId}/commplans",
      "method": "get",
      "sdk_endpoint": "v1.securedeviceonboarding",
      "sdk_method": "get",
      "description": "Get communication plans by account Id"
    },
    "deleteProviderCredentials": {
      "path": "/v1/securedeviceonboarding/{accountId}/providerCredentials",
      "method": "delete",
      "sdk_endpoint": "v1.securedeviceonboarding",
      "sdk_method": "delete",
      "description": "Delete provider credentials"
    },
    "getProviderCredentialsByAccountId": {
      "path": "/v1/securedeviceonboarding/{accountId}/providercredentials",
      "method": "get",
      "sdk_endpoint": "v1.securedeviceonboarding",
      "sdk_method": "get",
      "description": "Get provider credentials by account id"
    },
    "editProviderCredentials": {
      "path": "/v1/securedeviceonboarding/{accountId}/providercredentials",
      "method": "put",
      "sdk_endpoint": "v1.securedeviceonboarding",
      "sdk_method": "update",
      "description": "Edit service provider credentials"
    },
    "getDeviceDataUsage": {
      "path": "/v1/securedeviceonboarding/{deviceUUID}/deviceusage",
      "method": "get",
      "sdk_endpoint": "v1.securedeviceonboarding",
      "sdk_method": "get",
      "description": "Get device data usage using device uuid"
    },
    "serviceChainMapping": {
      "path": "/v1/service-insertion/service-chain-mapping",
      "method": "get",
      "sdk_endpoint": "v1.service_insertion",
      "sdk_method": "get",
      "description": "Gets all the Service Chain Mapping with service chain definition name and service chain number."
    },
    "getDevicesForTemplate": {
      "path": "/v1/smart-licensing/association",
      "method": "get",
      "sdk_endpoint": "v1.smart_licensing",
      "sdk_method": "get",
      "description": "Get the devices associated with a template"
    },
    "license": {
      "path": "/v1/smart-licensing/license",
      "method": "get",
      "sdk_endpoint": "v1.smart_licensing",
      "sdk_method": "get",
      "description": "Get licenses from vManage db"
    },
    "syncLicenses_2": {
      "path": "/v1/smart-licensing/sync",
      "method": "post",
      "sdk_endpoint": "v1.smart_licensing",
      "sdk_method": "create",
      "description": "Sync licenses from CSSM to vManage db"
    },
    "saveTemplate": {
      "path": "/v1/smart-licensing/template",
      "method": "post",
      "sdk_endpoint": "v1.smart_licensing",
      "sdk_method": "create",
      "description": "Create and assign license template."
    },
    "deleteTemplate": {
      "path": "/v1/smart-licensing/template/{templateId}",
      "method": "delete",
      "sdk_endpoint": "v1.smart_licensing",
      "sdk_method": "delete",
      "description": "Delete a license template"
    },
    "getUserSettings": {
      "path": "/v1/smart-licensing/user-settings",
      "method": "get",
      "sdk_endpoint": "v1.smart_licensing",
      "sdk_method": "get",
      "description": "Get smart licensing user settings"
    },
    "GetTopologyGroupBySolution": {
      "path": "/v1/topology-group",
      "method": "get",
      "sdk_endpoint": "v1.topology_group",
      "sdk_method": "get",
      "description": "Get a Topology Group by Solution"
    },
    "CreateTopologyGroup": {
      "path": "/v1/topology-group",
      "method": "post",
      "sdk_endpoint": "v1.topology_group",
      "sdk_method": "create",
      "description": "Create a new Topology Group"
    },
    "GetTopologyGroup": {
      "path": "/v1/topology-group/{topologyGroupId}",
      "method": "get",
      "sdk_endpoint": "v1.topology_group",
      "sdk_method": "get",
      "description": "Get a Topology Group by ID"
    },
    "EditTopologyGroup": {
      "path": "/v1/topology-group/{topologyGroupId}",
      "method": "put",
      "sdk_endpoint": "v1.topology_group",
      "sdk_method": "update",
      "description": "Edit a Topology Group"
    },
    "DeleteTopologyGroup": {
      "path": "/v1/topology-group/{topologyGroupId}",
      "method": "delete",
      "sdk_endpoint": "v1.topology_group",
      "sdk_method": "delete",
      "description": "Delete Topology Group"
    },
    "deployTopologyGroup": {
      "path": "/v1/topology-group/{topologyGroupId}/device/deploy",
      "method": "post",
      "sdk_endpoint": "v1.topology_group",
      "sdk_method": "create",
      "description": "deploy Topology group to devices"
    },
    "getTopologyGroupDeviceConfigurationPreview": {
      "path": "/v1/topology-group/{topologyGroupId}/device/{deviceId}/preview",
      "method": "post",
      "sdk_endpoint": "v1.topology_group",
      "sdk_method": "create",
      "description": "Get a preview of the configuration for a device"
    },
    "generateDeviceInterfaceStatisticsData": {
      "path": "/v2/data/device/statistics/interfacestatistics",
      "method": "get",
      "sdk_endpoint": "v2.data",
      "sdk_method": "get",
      "description": "Get device statistics data"
    },
    "getCountWithInterfaceStatistics": {
      "path": "/v2/data/device/statistics/interfacestatistics/doccount",
      "method": "get",
      "sdk_endpoint": "v2.data",
      "sdk_method": "get",
      "description": "Get response count of a query"
    },
    "getStatDataFieldsByInterfaceStatistics": {
      "path": "/v2/data/device/statistics/interfacestatistics/fields",
      "method": "get",
      "sdk_endpoint": "v2.data",
      "sdk_method": "get",
      "description": "Get statistics fields and types"
    },
    "getWaniRecommendations": {
      "path": "/wani/recommendations",
      "method": "get",
      "sdk_endpoint": "wani.recommendations",
      "sdk_method": "get",
      "description": "Get recommendations from WANI"
    },
    "getAppliedWaniRecommendations": {
      "path": "/wani/recommendations/applied",
      "method": "get",
      "sdk_endpoint": "wani.recommendations",
      "sdk_method": "get",
      "description": "Get applied recommendations"
    },
    "getListActivationStatus": {
      "path": "/wani/{listType}/{listId}/listActivationStatus",
      "method": "get",
      "sdk_endpoint": "wani.{listType}",
      "sdk_method": "get",
      "description": "get list activation status"
    },
    "getPolicyActivationStatus": {
      "path": "/wani/{policyType}/{policyId}/policyActivationStatus",
      "method": "get",
      "sdk_endpoint": "wani.{policyType}",
      "sdk_method": "get",
      "description": "get policy activation status"
    },
    "webexAccessCode": {
      "path": "/webex/accesscode",
      "method": "get",
      "sdk_endpoint": "webex.accesscode",
      "sdk_method": "get",
      "description": "Webex Access Code Details"
    },
    "getWebexDataCenters": {
      "path": "/webex/datacenter",
      "method": "post",
      "sdk_endpoint": "webex.datacenter",
      "sdk_method": "create",
      "description": "TEMP-Insert webex data center details manually for test setup"
    },
    "deleteWebexDataCenters": {
      "path": "/webex/datacenter",
      "method": "delete",
      "sdk_endpoint": "webex.datacenter",
      "sdk_method": "delete",
      "description": "Delete webex data center data in DB"
    },
    "updateWebexDataCenters": {
      "path": "/webex/datacenter/sync",
      "method": "post",
      "sdk_endpoint": "webex.datacenter",
      "sdk_method": "create",
      "description": "TEMP-Update webex data center data in DB with data from Webex API"
    },
    "getWebexDataCentersSyncStatus": {
      "path": "/webex/datacenter/syncstatus",
      "method": "get",
      "sdk_endpoint": "webex.datacenter",
      "sdk_method": "get",
      "description": "Get webex data center sync status from DB"
    },
    "setWebexDataCentersSyncStatus": {
      "path": "/webex/datacenter/syncstatus",
      "method": "put",
      "sdk_endpoint": "webex.datacenter",
      "sdk_method": "update",
      "description": "Set webex data center sync needed            to false"
    },
    "redirectWebexDataCenters": {
      "path": "/webex/redirect",
      "method": "get",
      "sdk_endpoint": "webex.redirect",
      "sdk_method": "get",
      "description": "Redirect Info"
    }
  }
}