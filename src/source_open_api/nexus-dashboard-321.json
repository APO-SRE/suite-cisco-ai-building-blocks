{
    "openapi": "3.0.2",
    "info": {
        "title": "Nexus Dashboard",
        "description": "APIs for platform operations on Nexus Dashboard",
        "version": "3.2.1"
    },
    "servers": [
        {
            "url": "/"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "description": "Returns an authentication token, which can be used for subsequent API calls.\nYou can provide a username, password, and login domain to authenticate an existing Nexus Dashboard user.",
                "requestBody": {
                    "content": {
                        "application/json; charset=utf-8": {
                            "schema": {
                                "properties": {
                                    "domain": {
                                        "example": "local",
                                        "type": "string"
                                    },
                                    "userName": {
                                        "description": "User ID as created by Nexus Dashboard admin or remote identity provider",
                                        "example": "admin",
                                        "type": "string"
                                    },
                                    "userPasswd": {
                                        "example": "password",
                                        "format": "password",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "userName",
                                    "userPasswd",
                                    "domain"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "Login Request Body",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "jwttoken": "eyJhbGciOiJSUzI1NiIsImtpZCI6InB5a2I5YTlkN2g2dmh5b3dsYXlrdnJ5aHg2aHg1ZXZiIiwidHlwIjoiSldUIn0.eyJhdnBhaXIiOiJzaGVsbDpkb21haW5zPWFsbC9hZG1pbi8iLCJleHAiOjE2MjM3ODExNjcsImlhdCI6MTYyMzc3OTk2NywiaWQiOiI0OGQxMDViZGZiYzQ5YTVmY2YzOWExMGI5NjEzODZlNjFkZmU0MDA4NWNiMDMxNWQ4MThiNzYxYzU3MzVkYWZhIiwiaXNzIjoibmQiLCJpc3MtaG9zdCI6IjE3Mi4yMC40My41NiIsInJiYWMiOlt7ImRvbWFpbiI6ImFsbCIsInJvbGVzUiI6MTY3NzcyMTYsInJvbGVzVyI6MSwicm9sZXMiOltbImFkbWluIiwiV3JpdGVQcml2Il0sWyJhcHAtdXNlciIsIlJlYWRQcml2Il1dfV0sInNlc3Npb25pZCI6IlF3PTY9eUVMNU9GZXFUWGhQMUFlNGhVNyIsInVzZXJmbGFncyI6MCwidXNlcmlkIjoyNTAwMiwidXNlcm5hbWUiOiJhZG1pbiIsInVzZXJ0eXBlIjoibG9jYWwifQ.315RV3oZkw5aeqLiSg4ad0yg-V-ScVBxla1DgsJHUDbHBBZJdqnu26I8aMcQ640xLgKmfmb8uABBPZkO7BY2XqgbSZIjEpLwxIAg92MpAqs1YbEAU06wY5jXDawfZKqSsubxEt0fPU_UF8falx-Fb7Nyms5HjzzAtsEiaT2yBKHFZpvKsDf7RHq6kxxdlNYIeAVSx8iLrxS3ky0QMC_z2qR4ne7ZrCDAjlfyVRFcwB6HRXXXGdrxlk35qQnPu3sFfFTrlDhgrd6DM1YkSttWXMrDmejLClkUsSLAD7Z3IQGpl451VoMvG9cVJaycXjKsFj2kXuKyUKviwtJuZSQPTw",
                                    "rbac": "[{\"domain\":\"all\",\"rolesR\":16777216,\"rolesW\":1,\"roles\":[[\"admin\",\"WritePriv\"],[\"app-user\",\"ReadPriv\"]]}]",
                                    "statusCode": 200,
                                    "token": "eyJhbGciOiJSUzI1NiIsImtpZCI6InB5a2I5YTlkN2g2dmh5b3dsYXlrdnJ5aHg2aHg1ZXZiIiwidHlwIjoiSldUIn0.eyJhdnBhaXIiOiJzaGVsbDpkb21haW5zPWFsbC9hZG1pbi8iLCJleHAiOjE2MjM3ODExNjcsImlhdCI6MTYyMzc3OTk2NywiaWQiOiI0OGQxMDViZGZiYzQ5YTVmY2YzOWExMGI5NjEzODZlNjFkZmU0MDA4NWNiMDMxNWQ4MThiNzYxYzU3MzVkYWZhIiwiaXNzIjoibmQiLCJpc3MtaG9zdCI6IjE3Mi4yMC40My41NiIsInJiYWMiOlt7ImRvbWFpbiI6ImFsbCIsInJvbGVzUiI6MTY3NzcyMTYsInJvbGVzVyI6MSwicm9sZXMiOltbImFkbWluIiwiV3JpdGVQcml2Il0sWyJhcHAtdXNlciIsIlJlYWRQcml2Il1dfV0sInNlc3Npb25pZCI6IlF3PTY9eUVMNU9GZXFUWGhQMUFlNGhVNyIsInVzZXJmbGFncyI6MCwidXNlcmlkIjoyNTAwMiwidXNlcm5hbWUiOiJhZG1pbiIsInVzZXJ0eXBlIjoibG9jYWwifQ.315RV3oZkw5aeqLiSg4ad0yg-V-ScVBxla1DgsJHUDbHBBZJdqnu26I8aMcQ640xLgKmfmb8uABBPZkO7BY2XqgbSZIjEpLwxIAg92MpAqs1YbEAU06wY5jXDawfZKqSsubxEt0fPU_UF8falx-Fb7Nyms5HjzzAtsEiaT2yBKHFZpvKsDf7RHq6kxxdlNYIeAVSx8iLrxS3ky0QMC_z2qR4ne7ZrCDAjlfyVRFcwB6HRXXXGdrxlk35qQnPu3sFfFTrlDhgrd6DM1YkSttWXMrDmejLClkUsSLAD7Z3IQGpl451VoMvG9cVJaycXjKsFj2kXuKyUKviwtJuZSQPTw",
                                    "username": "admin",
                                    "usertype": "local"
                                },
                                "schema": {
                                    "properties": {
                                        "jwttoken": {
                                            "type": "string"
                                        },
                                        "rbac": {
                                            "type": "string"
                                        },
                                        "statusCode": {
                                            "type": "integer"
                                        },
                                        "token": {
                                            "type": "string"
                                        },
                                        "username": {
                                            "type": "string"
                                        },
                                        "usertype": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Login Response"
                    },
                    "401": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "example": "Invalid Username/Password",
                                            "type": "string"
                                        },
                                        "statusCode": {
                                            "example": 401,
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Invalid Username/Password"
                    }
                },
                "summary": "Login",
                "tags": [
                    "Authentication"
                ]
            }
        },
        "/nexus/api/federation/v4/federations": {
            "get": {
                "description": "Get a list of resources of type Federation",
                "parameters": [
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "items": [
                                        {
                                            "metadata": {
                                                "account": "",
                                                "creationTimestamp": "0001-01-01T00:00:00Z",
                                                "generation": 0,
                                                "id": "federation::v4::Federation::1e9675fd-e40a-67f9-b900-fcaae1762f4a",
                                                "kind": "federation/v4.Federation",
                                                "modificationTimestamp": "0001-01-01T00:00:00Z",
                                                "org": "",
                                                "resourceVersion": 0,
                                                "schemaVersion": "",
                                                "statusGeneration": 0
                                            },
                                            "spec": {
                                                "name": "federation-ins15-dev-ova5"
                                            },
                                            "status": {
                                                "federationID": "1e9675fd-e40a-67f9-b900-fcaae1762f4a",
                                                "managerReachability": "Up"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "count": 1
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Federation_v4_federation_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a list of Federation",
                "tags": [
                    "Federation Management"
                ]
            },
            "post": {
                "description": "Create a resource of type Federation",
                "parameters": [
                    {
                        "in": "query",
                        "name": "forceAdd",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "spec": {
                                    "name": "federation-ins15-dev-ova5"
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/Federation_v4_federation_POST"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "federation::v4::Federation::1e9675fd-e40a-67f9-b900-fcaae1762f4a",
                                        "kind": "federation/v4.Federation",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "name": "federation-ins15-dev-ova5"
                                    },
                                    "status": {
                                        "federationID": "1e9675fd-e40a-67f9-b900-fcaae1762f4a",
                                        "managerReachability": "Up"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Federation_v4_federation_GET"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Create a Federation",
                "tags": [
                    "Federation Management"
                ]
            }
        },
        "/nexus/api/federation/v4/federations/{statusFederationID}": {
            "delete": {
                "description": "Delete a resource of type Federation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "statusFederationID",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "forceAdd",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Delete a federation",
                "tags": [
                    "Federation Management"
                ]
            },
            "get": {
                "description": "Get a resource of type Federation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "statusFederationID",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "federation::v4::Federation::1e9675fd-e40a-67f9-b900-fcaae1762f4a",
                                        "kind": "federation/v4.Federation",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "name": "federation-ins15-dev-ova5"
                                    },
                                    "status": {
                                        "federationID": "1e9675fd-e40a-67f9-b900-fcaae1762f4a",
                                        "managerReachability": "Up"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Federation_v4_federation_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a federation",
                "tags": [
                    "Federation Management"
                ]
            }
        },
        "/nexus/api/federation/v4/members": {
            "get": {
                "description": "Get a list of resources of type Federation Member",
                "parameters": [
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "items": [
                                        {
                                            "meta": {
                                                "annotations": {},
                                                "createTimestamp": "0001-01-01T00:00:00Z",
                                                "deleteTimestamp": "",
                                                "domain": "",
                                                "finalizers": {},
                                                "id": "federation::v4::Member::1be4c63e-9052-611e-7ea4-d86aea4f8a43",
                                                "intraTypeID": "1be4c63e-9052-611e-7ea4-d86aea4f8a43",
                                                "intraTypeIDKey": "__uuid",
                                                "key": "federation/v4.Member",
                                                "labels": {},
                                                "modTimestamp": "0001-01-01T00:00:00Z",
                                                "namespace": "",
                                                "org": "",
                                                "resourceVersion": 0,
                                                "schemaVersion": "",
                                                "specGenID": 0,
                                                "status": 0,
                                                "statusGenID": 0
                                            },
                                            "spec": {
                                                "host": "172.20.43.54",
                                                "loginDomain": "",
                                                "password": "",
                                                "userName": ""
                                            },
                                            "status": {
                                                "clusterInfo": [
                                                    {
                                                        "currentState": "Active",
                                                        "dataIP": "",
                                                        "managementIP": "172.20.43.54",
                                                        "managementIPv6": "",
                                                        "name": "ins15-dev-ova52-sn1",
                                                        "serialNumber": "A8453219BDF2",
                                                        "version": ""
                                                    }
                                                ],
                                                "federationID": "1e9675fd-e40a-67f9-b900-fcaae1762f4a",
                                                "manager": false,
                                                "memberID": "1be4c63e-9052-611e-7ea4-d86aea4f8a43",
                                                "name": "ins15-dev-ova52",
                                                "reachability": "Up"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "count": 1
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Member_v4_federation_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a list of Federation Member",
                "tags": [
                    "Federation Management"
                ]
            },
            "post": {
                "description": "Add a resource of type Federation Member (Create a Federation before adding Federation Member)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "forceAdd",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "spec": {
                                    "host": "172.20.43.53",
                                    "loginDomain": "local",
                                    "password": "aW5zMzk2NSE=",
                                    "userName": "admin"
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/Member_v4_federation_POST"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "federation::v4::Member::7478e110-8a93-2291-35bb-51994c8c5ea0",
                                        "kind": "federation/v4.Member",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "host": "172.20.43.53",
                                        "loginDomain": "",
                                        "password": "",
                                        "userName": ""
                                    },
                                    "status": {
                                        "clusterInfo": [
                                            {
                                                "currentState": "Unknown",
                                                "dataIP": "",
                                                "managementIP": "",
                                                "managementIPv6": "",
                                                "name": "",
                                                "serialNumber": "",
                                                "version": ""
                                            }
                                        ],
                                        "federationID": "",
                                        "manager": false,
                                        "memberID": "7478e110-8a93-2291-35bb-51994c8c5ea0",
                                        "name": "ins15-dev-ova5",
                                        "reachability": "Up"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Member_v4_federation_GET"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Add a federation member",
                "tags": [
                    "Federation Management"
                ]
            }
        },
        "/nexus/api/federation/v4/members/{statusMemberID}": {
            "delete": {
                "description": "Delete a resource of type Federation Member",
                "parameters": [
                    {
                        "in": "path",
                        "name": "statusMemberID",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "forceDelete",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Delete a federation member",
                "tags": [
                    "Federation Management"
                ]
            },
            "get": {
                "description": "Get a resource of type Federation Member",
                "parameters": [
                    {
                        "in": "path",
                        "name": "statusMemberID",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "meta": {
                                        "annotations": {},
                                        "createTimestamp": "0001-01-01T00:00:00Z",
                                        "deleteTimestamp": "",
                                        "domain": "",
                                        "finalizers": {},
                                        "id": "federation::v4::Member::1be4c63e-9052-611e-7ea4-d86aea4f8a43",
                                        "intraTypeID": "1be4c63e-9052-611e-7ea4-d86aea4f8a43",
                                        "intraTypeIDKey": "__uuid",
                                        "key": "federation/v4.Member",
                                        "labels": {},
                                        "modTimestamp": "0001-01-01T00:00:00Z",
                                        "namespace": "",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "specGenID": 0,
                                        "status": 0,
                                        "statusGenID": 0
                                    },
                                    "spec": {
                                        "host": "172.20.43.54",
                                        "loginDomain": "",
                                        "password": "",
                                        "userName": ""
                                    },
                                    "status": {
                                        "clusterInfo": [
                                            {
                                                "currentState": "Active",
                                                "dataIP": "",
                                                "managementIP": "172.20.43.54",
                                                "managementIPv6": "",
                                                "name": "ins15-dev-ova52-sn1",
                                                "serialNumber": "A8453219BDF2",
                                                "version": ""
                                            }
                                        ],
                                        "federationID": "1e9675fd-e40a-67f9-b900-fcaae1762f4a",
                                        "manager": false,
                                        "memberID": "1be4c63e-9052-611e-7ea4-d86aea4f8a43",
                                        "name": "ins15-dev-ova52",
                                        "reachability": "Up"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Member_v4_federation_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a federation member",
                "tags": [
                    "Federation Management"
                ]
            }
        },
        "/nexus/api/sitemanagement/v4/fabrics": {
            "post": {
                "description": "Get all Fabrics/sites available in the remote controller",
                "parameters": [
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fabric_v4_sitemanagement_POST"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fabric_v4_sitemanagement_GET"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get all Fabrics/sites",
                "tags": [
                    "Site Management"
                ]
            }
        },
        "/nexus/api/sitemanagement/v4/sitegroups": {
            "get": {
                "description": "Retrieve a list of elements of type SiteGroup version v4",
                "parameters": [
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SiteGroup_v4_sitemanagement_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "Site Management"
                ]
            },
            "post": {
                "description": "Create an existing object of type SiteGroup",
                "parameters": [
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SiteGroup_v4_sitemanagement_POST"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SiteGroup_v4_sitemanagement_GET"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "Site Management"
                ]
            }
        },
        "/nexus/api/sitemanagement/v4/sitegroups/{specName}": {
            "delete": {
                "description": "Delete an element of type SiteGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "forceDelete",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "Site Management"
                ]
            },
            "get": {
                "description": "Retrieve an instance of SiteGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SiteGroup_v4_sitemanagement_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "Site Management"
                ]
            },
            "patch": {
                "description": "Modify an existing object of type SiteGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Any_PATCH"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SiteGroup_v4_sitemanagement_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "Site Management"
                ]
            },
            "put": {
                "description": "Modify an existing object of type SiteGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SiteGroup_v4_sitemanagement_PUT"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SiteGroup_v4_sitemanagement_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "Site Management"
                ]
            }
        },
        "/nexus/api/sitemanagement/v4/sites": {
            "get": {
                "description": "Get a list of resources of type Site",
                "parameters": [
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "items": [
                                        {
                                            "items": [
                                                {
                                                    "metadata": {
                                                        "account": "",
                                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                                        "generation": 0,
                                                        "id": "sitemanagement::v4::Site::16efd182-77b2-47fd-b1c2-24d2a8dec50b",
                                                        "kind": "sitemanagement/v4.Site",
                                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                                        "org": "",
                                                        "resourceVersion": 0,
                                                        "schemaVersion": "",
                                                        "statusGeneration": 0
                                                    },
                                                    "spec": {
                                                        "host": "10.195.219.153:443",
                                                        "latitude": "10",
                                                        "loginDomain": "",
                                                        "longitude": "",
                                                        "name": "sanity1",
                                                        "password": "",
                                                        "siteConfig": {
                                                            "aci": {
                                                                "InbandEPGDN": ""
                                                            }
                                                        },
                                                        "siteType": "ACI",
                                                        "useProxy": false,
                                                        "userName": ""
                                                    },
                                                    "status": {
                                                        "controllers": [
                                                            {
                                                                "dataIP": "192.192.0.1",
                                                                "dataURL": "192.192.0.1:443",
                                                                "fabricDomain": "dev-infra12",
                                                                "managementIP": "10.195.219.153",
                                                                "managementURL": "10.195.219.153:443",
                                                                "sn": "WZP2306007E",
                                                                "version": "5.0(2e)"
                                                            }
                                                        ],
                                                        "federationInfo": {
                                                            "federationMemberUUID": "",
                                                            "local": true,
                                                            "name": "ins15-dev-ova5",
                                                            "siteFingerprint": "",
                                                            "siteUUID": "16efd182-77b2-47fd-b1c2-24d2a8dec50b"
                                                        },
                                                        "launchURL": "",
                                                        "notifyReason": "pollingsite",
                                                        "pollingDetectionDone": true,
                                                        "pollingType": "MgmtIPs",
                                                        "siteData": {
                                                            "aci": {
                                                                "appUserName": "SNApp_ins15-dev-ova5"
                                                            }
                                                        },
                                                        "siteHealth": "40",
                                                        "siteReachabilty": {
                                                            "description": "site reachable",
                                                            "nodeReachability": [
                                                                {
                                                                    "ip": "10.195.219.153",
                                                                    "state": "Up"
                                                                }
                                                            ],
                                                            "state": "Up"
                                                        },
                                                        "switches": [
                                                            {
                                                                "inbandIP": "192.192.0.102",
                                                                "model": "",
                                                                "outofbandIP": "10.195.219.46",
                                                                "sn": "FDO2139294Q",
                                                                "type": "leaf",
                                                                "version": "n9000-14.2(4k)"
                                                            },
                                                            {
                                                                "inbandIP": "192.192.0.101",
                                                                "model": "",
                                                                "outofbandIP": "10.195.219.45",
                                                                "sn": "FDO21392TCH",
                                                                "type": "leaf",
                                                                "version": "n9000-14.2(4k)"
                                                            },
                                                            {
                                                                "inbandIP": "0.0.0.0",
                                                                "model": "",
                                                                "outofbandIP": "0.0.0.0",
                                                                "sn": "FDO22270CLP",
                                                                "type": "spine",
                                                                "version": "n9000-14.2(4k)"
                                                            },
                                                            {
                                                                "inbandIP": "192.192.0.104",
                                                                "model": "",
                                                                "outofbandIP": "10.195.219.48",
                                                                "sn": "FDO222800NQ",
                                                                "type": "leaf",
                                                                "version": "n9000-14.2(4k)"
                                                            },
                                                            {
                                                                "inbandIP": "192.192.0.103",
                                                                "model": "",
                                                                "outofbandIP": "10.195.219.47",
                                                                "sn": "FDO22282UV6",
                                                                "type": "leaf",
                                                                "version": "n9000-14.2(4k)"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "metadata": {
                                                "count": 1
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "count": 1
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Site_v4_sitemanagement_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a list of site",
                "tags": [
                    "Site Management"
                ]
            },
            "post": {
                "description": "Create a resource of type Site",
                "parameters": [
                    {
                        "in": "query",
                        "name": "forceAdd",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "spec": {
                                    "host": "10.195.219.153",
                                    "latitude": "10",
                                    "name": "sanity1",
                                    "password": "Q2lzY29pbnMzOTY1IQ==",
                                    "siteType": "ACI",
                                    "userName": "admin"
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/Site_v4_sitemanagement_POST"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "sitemanagement::v4::Site::67fa9bc4-fc4a-4de3-9644-8d9b71db3ec3",
                                        "kind": "sitemanagement/v4.Site",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "host": "10.195.219.153:443",
                                        "latitude": "10",
                                        "loginDomain": "",
                                        "longitude": "",
                                        "name": "sanity1",
                                        "password": "",
                                        "siteConfig": {
                                            "aci": {
                                                "InbandEPGDN": ""
                                            }
                                        },
                                        "siteType": "ACI",
                                        "useProxy": false,
                                        "userName": ""
                                    },
                                    "status": {
                                        "federationInfo": {
                                            "federationMemberUUID": "",
                                            "local": true,
                                            "name": "ins15-dev-ova5",
                                            "siteFingerprint": "",
                                            "siteUUID": "67fa9bc4-fc4a-4de3-9644-8d9b71db3ec3"
                                        },
                                        "launchURL": "",
                                        "notifyReason": "",
                                        "pollingDetectionDone": false,
                                        "pollingType": "AllIPs",
                                        "siteData": {
                                            "aci": {
                                                "appUserName": ""
                                            }
                                        },
                                        "siteHealth": "",
                                        "siteReachabilty": {
                                            "description": "site provision started",
                                            "state": "Unknown"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Site_v4_sitemanagement_GET"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Create a site",
                "tags": [
                    "Site Management"
                ]
            }
        },
        "/nexus/api/sitemanagement/v4/sites/{specName}": {
            "delete": {
                "description": "Delete a resource of type Site",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "forceDelete",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Delete a site",
                "tags": [
                    "Site Management"
                ]
            },
            "get": {
                "description": "Get a resource of type Site",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "items": [
                                        {
                                            "metadata": {
                                                "account": "",
                                                "creationTimestamp": "0001-01-01T00:00:00Z",
                                                "generation": 0,
                                                "id": "sitemanagement::v4::Site::16efd182-77b2-47fd-b1c2-24d2a8dec50b",
                                                "kind": "sitemanagement/v4.Site",
                                                "modificationTimestamp": "0001-01-01T00:00:00Z",
                                                "org": "",
                                                "resourceVersion": 0,
                                                "schemaVersion": "",
                                                "statusGeneration": 0
                                            },
                                            "spec": {
                                                "host": "10.195.219.153:443",
                                                "latitude": "10",
                                                "loginDomain": "",
                                                "longitude": "",
                                                "name": "sanity1",
                                                "password": "",
                                                "siteConfig": {
                                                    "aci": {
                                                        "InbandEPGDN": ""
                                                    }
                                                },
                                                "siteType": "ACI",
                                                "useProxy": false,
                                                "userName": ""
                                            },
                                            "status": {
                                                "controllers": [
                                                    {
                                                        "dataIP": "192.192.0.1",
                                                        "dataURL": "192.192.0.1:443",
                                                        "fabricDomain": "dev-infra12",
                                                        "managementIP": "10.195.219.153",
                                                        "managementURL": "10.195.219.153:443",
                                                        "sn": "WZP2306007E",
                                                        "version": "5.0(2e)"
                                                    }
                                                ],
                                                "federationInfo": {
                                                    "federationMemberUUID": "",
                                                    "local": true,
                                                    "name": "ins15-dev-ova5",
                                                    "siteFingerprint": "",
                                                    "siteUUID": "16efd182-77b2-47fd-b1c2-24d2a8dec50b"
                                                },
                                                "launchURL": "",
                                                "notifyReason": "pollingsite",
                                                "pollingDetectionDone": true,
                                                "pollingType": "MgmtIPs",
                                                "siteData": {
                                                    "aci": {
                                                        "appUserName": "SNApp_ins15-dev-ova5"
                                                    }
                                                },
                                                "siteHealth": "40",
                                                "siteReachabilty": {
                                                    "description": "site reachable",
                                                    "nodeReachability": [
                                                        {
                                                            "ip": "10.195.219.153",
                                                            "state": "Up"
                                                        }
                                                    ],
                                                    "state": "Up"
                                                },
                                                "switches": [
                                                    {
                                                        "inbandIP": "192.192.0.102",
                                                        "model": "",
                                                        "outofbandIP": "10.195.219.46",
                                                        "sn": "FDO2139294Q",
                                                        "type": "leaf",
                                                        "version": "n9000-14.2(4k)"
                                                    },
                                                    {
                                                        "inbandIP": "192.192.0.101",
                                                        "model": "",
                                                        "outofbandIP": "10.195.219.45",
                                                        "sn": "FDO21392TCH",
                                                        "type": "leaf",
                                                        "version": "n9000-14.2(4k)"
                                                    },
                                                    {
                                                        "inbandIP": "0.0.0.0",
                                                        "model": "",
                                                        "outofbandIP": "0.0.0.0",
                                                        "sn": "FDO22270CLP",
                                                        "type": "spine",
                                                        "version": "n9000-14.2(4k)"
                                                    },
                                                    {
                                                        "inbandIP": "192.192.0.104",
                                                        "model": "",
                                                        "outofbandIP": "10.195.219.48",
                                                        "sn": "FDO222800NQ",
                                                        "type": "leaf",
                                                        "version": "n9000-14.2(4k)"
                                                    },
                                                    {
                                                        "inbandIP": "192.192.0.103",
                                                        "model": "",
                                                        "outofbandIP": "10.195.219.47",
                                                        "sn": "FDO22282UV6",
                                                        "type": "leaf",
                                                        "version": "n9000-14.2(4k)"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "count": 1
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Site_v4_sitemanagement_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a site",
                "tags": [
                    "Site Management"
                ]
            },
            "put": {
                "description": "Modify a resource of type  Site",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "spec": {
                                    "latitude": "200",
                                    "name": "sanity1"
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/Site_v4_sitemanagement_PUT"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "sitemanagement::v4::Site::16efd182-77b2-47fd-b1c2-24d2a8dec50b",
                                        "kind": "sitemanagement/v4.Site",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "host": "10.195.219.153:443",
                                        "latitude": "200",
                                        "loginDomain": "",
                                        "longitude": "",
                                        "name": "sanity1",
                                        "password": "",
                                        "siteConfig": {
                                            "aci": {
                                                "InbandEPGDN": ""
                                            }
                                        },
                                        "siteType": "ACI",
                                        "useProxy": false,
                                        "userName": ""
                                    },
                                    "status": {
                                        "controllers": [
                                            {
                                                "dataIP": "192.192.0.1",
                                                "dataURL": "192.192.0.1:443",
                                                "fabricDomain": "dev-infra12",
                                                "managementIP": "10.195.219.153",
                                                "managementURL": "10.195.219.153:443",
                                                "sn": "WZP2306007E",
                                                "version": "5.0(2e)"
                                            }
                                        ],
                                        "federationInfo": {
                                            "federationMemberUUID": "",
                                            "local": true,
                                            "name": "ins15-dev-ova5",
                                            "siteFingerprint": "",
                                            "siteUUID": "16efd182-77b2-47fd-b1c2-24d2a8dec50b"
                                        },
                                        "launchURL": "",
                                        "notifyReason": "pollingsite",
                                        "pollingDetectionDone": true,
                                        "pollingType": "MgmtIPs",
                                        "siteData": {
                                            "aci": {
                                                "appUserName": "SNApp_ins15-dev-ova5"
                                            }
                                        },
                                        "siteHealth": "40",
                                        "siteReachabilty": {
                                            "description": "site reachable",
                                            "nodeReachability": [
                                                {
                                                    "ip": "10.195.219.153",
                                                    "state": "Up"
                                                }
                                            ],
                                            "state": "Up"
                                        },
                                        "switches": [
                                            {
                                                "inbandIP": "192.192.0.102",
                                                "model": "",
                                                "outofbandIP": "10.195.219.46",
                                                "sn": "FDO2139294Q",
                                                "type": "leaf",
                                                "version": "n9000-14.2(4k)"
                                            },
                                            {
                                                "inbandIP": "192.192.0.101",
                                                "model": "",
                                                "outofbandIP": "10.195.219.45",
                                                "sn": "FDO21392TCH",
                                                "type": "leaf",
                                                "version": "n9000-14.2(4k)"
                                            },
                                            {
                                                "inbandIP": "0.0.0.0",
                                                "model": "",
                                                "outofbandIP": "0.0.0.0",
                                                "sn": "FDO22270CLP",
                                                "type": "spine",
                                                "version": "n9000-14.2(4k)"
                                            },
                                            {
                                                "inbandIP": "192.192.0.104",
                                                "model": "",
                                                "outofbandIP": "10.195.219.48",
                                                "sn": "FDO222800NQ",
                                                "type": "leaf",
                                                "version": "n9000-14.2(4k)"
                                            },
                                            {
                                                "inbandIP": "192.192.0.103",
                                                "model": "",
                                                "outofbandIP": "10.195.219.47",
                                                "sn": "FDO22282UV6",
                                                "type": "leaf",
                                                "version": "n9000-14.2(4k)"
                                            }
                                        ]
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Site_v4_sitemanagement_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Modify a site",
                "tags": [
                    "Site Management"
                ]
            }
        },
        "/nexus/infra/api/aaa/v4/defaultauth": {
            "get": {
                "description": "Get a list of resources of type DefaultAuth",
                "parameters": [
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "items": [
                                        {
                                            "metadata": {
                                                "account": "",
                                                "creationTimestamp": "0001-01-01T00:00:00Z",
                                                "generation": 0,
                                                "id": "",
                                                "kind": "aaa/v4.DefaultAuth",
                                                "modificationTimestamp": "0001-01-01T00:00:00Z",
                                                "org": "",
                                                "resourceVersion": 0,
                                                "schemaVersion": "",
                                                "statusGeneration": 0
                                            },
                                            "spec": {
                                                "defaultDomain": "default",
                                                "domainName": "xxxxx"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "count": 1
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultAuth_v4_aaa_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a list of default authentication login domain",
                "tags": [
                    "Authentication"
                ]
            }
        },
        "/nexus/infra/api/aaa/v4/defaultauth/{specDefaultDomain}": {
            "get": {
                "description": "Get a resource of type DefaultAuth",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specDefaultDomain",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "",
                                        "kind": "aaa/v4.DefaultAuth",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "defaultDomain": "default",
                                        "domainName": "xxxxx"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultAuth_v4_aaa_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get default authentication login domain",
                "tags": [
                    "Authentication"
                ]
            },
            "put": {
                "description": "Modify a resource of type DefaultAuth",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specDefaultDomain",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "spec": {
                                    "defaultDomain": "default",
                                    "domainName": "xxxxx"
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/DefaultAuth_v4_aaa_PUT"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "",
                                        "kind": "aaa/v4.DefaultAuth",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "defaultDomain": "default",
                                        "domainName": "xxxxx"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultAuth_v4_aaa_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Modify a default authentication login domain",
                "tags": [
                    "Authentication"
                ]
            }
        },
        "/nexus/infra/api/aaa/v4/gatewayconfiguration": {
            "get": {
                "description": "Get a list of resources of type GatewayConfiguration",
                "parameters": [
                    {
                        "in": "query",
                        "name": "showSecret",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "items": [
                                        {
                                            "metadata": {
                                                "account": "",
                                                "creationTimestamp": "0001-01-01T00:00:00Z",
                                                "generation": 0,
                                                "id": "",
                                                "kind": "aaa/v4.GatewayConfiguration",
                                                "modificationTimestamp": "0001-01-01T00:00:00Z",
                                                "org": "",
                                                "resourceVersion": 0,
                                                "schemaVersion": "",
                                                "statusGeneration": 0
                                            },
                                            "spec": {
                                                "httpServerOptions": {
                                                    "certificateMetadata": {
                                                        "certificate": "-----BEGIN CERTIFICATE-----\nCERTIFICATE\n-----END CERTIFICATE-----\n",
                                                        "domainName": "Domain123",
                                                        "intermediateCA": "-----BEGIN CERTIFICATE-----\nCERTIFICATE\n-----END CERTIFICATE-----\n",
                                                        "notAfter": "0001-01-01T00:00:00Z",
                                                        "notBefore": "0001-01-01T00:00:00Z",
                                                        "rootCA": "-----BEGIN CERTIFICATE-----\nCERTIFICATE\n-----END CERTIFICATE-----\n\n"
                                                    },
                                                    "minVersion": "TLS12",
                                                    "serverName": ""
                                                },
                                                "idleSessionTimeoutSeconds": 3600,
                                                "jwtSessionTimeoutSeconds": 1200,
                                                "name": "config123"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "count": 1
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayConfiguration_v4_aaa_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a list of API gateway configuration",
                "tags": [
                    "API Gateway"
                ]
            }
        },
        "/nexus/infra/api/aaa/v4/gatewayconfiguration/{specName}": {
            "get": {
                "description": "Get a resource of type GatewayConfiguration",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "showSecret",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "",
                                        "kind": "aaa/v4.GatewayConfiguration",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "httpServerOptions": {
                                            "certificateMetadata": {
                                                "certificate": "-----BEGIN CERTIFICATE-----\nCERTIFICATE\n-----END CERTIFICATE-----\n",
                                                "domainName": "Domain123",
                                                "intermediateCA": "-----BEGIN CERTIFICATE-----\nCERTIFICATE\n-----END CERTIFICATE-----\n",
                                                "notAfter": "0001-01-01T00:00:00Z",
                                                "notBefore": "0001-01-01T00:00:00Z",
                                                "rootCA": "-----BEGIN CERTIFICATE-----\nCERTIFICATE\n-----END CERTIFICATE-----\n\n"
                                            },
                                            "minVersion": "TLS12",
                                            "serverName": ""
                                        },
                                        "idleSessionTimeoutSeconds": 3600,
                                        "jwtSessionTimeoutSeconds": 1200,
                                        "name": "config123"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayConfiguration_v4_aaa_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get API gateway configuration",
                "tags": [
                    "API Gateway"
                ]
            },
            "put": {
                "description": "Modify a resource of type GatewayConfiguration",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "spec": {
                                    "httpServerOptions": {
                                        "certificateMetadata": {
                                            "certificate": "-----BEGIN CERTIFICATE-----\nCERTIFICATE\n-----END CERTIFICATE-----\n",
                                            "domainName": "Domain123",
                                            "intermediateCA": "-----BEGIN CERTIFICATE-----\nCERTIFICATE\n-----END CERTIFICATE-----\n",
                                            "notAfter": "0001-01-01T00:00:00Z",
                                            "notBefore": "0001-01-01T00:00:00Z",
                                            "rootCA": "-----BEGIN CERTIFICATE-----\nCERTIFICATE\n-----END CERTIFICATE-----\n\n"
                                        },
                                        "minVersion": "TLS12",
                                        "serverName": ""
                                    },
                                    "idleSessionTimeoutSeconds": 3600,
                                    "jwtSessionTimeoutSeconds": 1200,
                                    "name": "config123"
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/GatewayConfiguration_v4_aaa_PUT"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "",
                                        "kind": "aaa/v4.GatewayConfiguration",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "httpServerOptions": {
                                            "certificateMetadata": {
                                                "certificate": "-----BEGIN CERTIFICATE-----\nCERTIFICATE\n-----END CERTIFICATE-----\n",
                                                "domainName": "Domain123",
                                                "intermediateCA": "-----BEGIN CERTIFICATE-----\nCERTIFICATE\n-----END CERTIFICATE-----\n",
                                                "notAfter": "0001-01-01T00:00:00Z",
                                                "notBefore": "0001-01-01T00:00:00Z",
                                                "rootCA": "-----BEGIN CERTIFICATE-----\nCERTIFICATE\n-----END CERTIFICATE-----\n\n"
                                            },
                                            "minVersion": "TLS12",
                                            "serverName": ""
                                        },
                                        "idleSessionTimeoutSeconds": 3600,
                                        "jwtSessionTimeoutSeconds": 1200,
                                        "name": "config123"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayConfiguration_v4_aaa_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Modify a gateway configuration",
                "tags": [
                    "API Gateway"
                ]
            }
        },
        "/nexus/infra/api/aaa/v4/localusers": {
            "get": {
                "description": "Get a list of resources of type LocalUser",
                "parameters": [
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "items": [
                                        {
                                            "metadata": {
                                                "account": "",
                                                "creationTimestamp": "0001-01-01T00:00:00Z",
                                                "generation": 0,
                                                "id": "",
                                                "kind": "aaa/v4.LocalUser",
                                                "modificationTimestamp": "0001-01-01T00:00:00Z",
                                                "org": "",
                                                "resourceVersion": 0,
                                                "schemaVersion": "",
                                                "statusGeneration": 0
                                            },
                                            "spec": {
                                                "email": "xxxxxx@xxxxxx.xxx",
                                                "firstName": "First",
                                                "lastName": "Last",
                                                "loginID": "nduser123",
                                                "passwordPolicy": {
                                                    "passwordChangeTime": "0001-01-01T00:00:00Z",
                                                    "reuseLimitation": 0,
                                                    "timeIntervalLimitation": 0
                                                },
                                                "phone": "+11111111111",
                                                "rbac": {
                                                    "domains": {
                                                        "all": {
                                                            "roles": {
                                                                "xxx": "Write",
                                                                "yyy": "Read",
                                                                "zzz": "Write"
                                                            }
                                                        }
                                                    }
                                                },
                                                "remoteIDClaim": "",
                                                "userID": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
                                                "xLaunch": false
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "count": 1
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/LocalUser_v4_aaa_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a list of local user",
                "tags": [
                    "User Management"
                ]
            },
            "post": {
                "description": "Create a resource of type LocalUser",
                "parameters": [
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "spec": {
                                    "email": "xxxxxx@xxxxxx.xxx",
                                    "firstName": "First",
                                    "lastName": "Last",
                                    "loginID": "nduser123",
                                    "password": "XXXXXXXX",
                                    "passwordPolicy": {
                                        "reuseLimitation": 0,
                                        "timeIntervalLimitation": 0
                                    },
                                    "phone": "+11111111111",
                                    "rbac": {
                                        "domains": {
                                            "all": {
                                                "roles": {
                                                    "xxx": "Write",
                                                    "yyy": "Read",
                                                    "zzz": "Write"
                                                }
                                            }
                                        }
                                    },
                                    "remoteIDClaim": "",
                                    "xLaunch": false
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/LocalUser_v4_aaa_POST"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "",
                                        "kind": "aaa/v4.LocalUser",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "email": "xxxxxx@xxxxxx.xxx",
                                        "firstName": "First",
                                        "lastName": "Last",
                                        "loginID": "nduser123",
                                        "passwordPolicy": {
                                            "passwordChangeTime": "0001-01-01T00:00:00Z",
                                            "reuseLimitation": 0,
                                            "timeIntervalLimitation": 0
                                        },
                                        "phone": "+11111111111",
                                        "rbac": {
                                            "domains": {
                                                "all": {
                                                    "roles": {
                                                        "xxx": "Write",
                                                        "yyy": "Read",
                                                        "zzz": "Write"
                                                    }
                                                }
                                            }
                                        },
                                        "remoteIDClaim": "",
                                        "userID": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
                                        "xLaunch": false
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/LocalUser_v4_aaa_GET"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Create a local user",
                "tags": [
                    "User Management"
                ]
            }
        },
        "/nexus/infra/api/aaa/v4/localusers/{specLoginID}": {
            "delete": {
                "description": "Delete a resource of type LocalUser",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specLoginID",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Delete a local user",
                "tags": [
                    "User Management"
                ]
            },
            "get": {
                "description": "Get a resource of type LocalUser",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specLoginID",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "",
                                        "kind": "aaa/v4.LocalUser",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "email": "xxxxxx@xxxxxx.xxx",
                                        "firstName": "First",
                                        "lastName": "Last",
                                        "loginID": "nduser123",
                                        "passwordPolicy": {
                                            "passwordChangeTime": "0001-01-01T00:00:00Z",
                                            "reuseLimitation": 0,
                                            "timeIntervalLimitation": 0
                                        },
                                        "phone": "+11111111111",
                                        "rbac": {
                                            "domains": {
                                                "all": {
                                                    "roles": {
                                                        "xxx": "Write",
                                                        "yyy": "Read",
                                                        "zzz": "Write"
                                                    }
                                                }
                                            }
                                        },
                                        "remoteIDClaim": "",
                                        "userID": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
                                        "xLaunch": false
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/LocalUser_v4_aaa_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a local user",
                "tags": [
                    "User Management"
                ]
            },
            "put": {
                "description": "Modify a resource of type LocalUser",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specLoginID",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "spec": {
                                    "email": "xxxxxx@xxxxxx.xxx",
                                    "firstName": "First",
                                    "lastName": "Last",
                                    "loginID": "nduser123",
                                    "password": "XXXXXXXX",
                                    "passwordPolicy": {
                                        "reuseLimitation": 0,
                                        "timeIntervalLimitation": 0
                                    },
                                    "phone": "+11111111111",
                                    "rbac": {
                                        "domains": {
                                            "all": {
                                                "roles": {
                                                    "xxx": "Write",
                                                    "yyy": "Read",
                                                    "zzz": "Write"
                                                }
                                            }
                                        }
                                    },
                                    "remoteIDClaim": "",
                                    "xLaunch": false
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/LocalUser_v4_aaa_PUT"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "",
                                        "kind": "aaa/v4.LocalUser",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "email": "xxxxxx@xxxxxx.xxx",
                                        "firstName": "First",
                                        "lastName": "Last",
                                        "loginID": "nduser123",
                                        "passwordPolicy": {
                                            "passwordChangeTime": "0001-01-01T00:00:00Z",
                                            "reuseLimitation": 0,
                                            "timeIntervalLimitation": 0
                                        },
                                        "phone": "+11111111111",
                                        "rbac": {
                                            "domains": {
                                                "all": {
                                                    "roles": {
                                                        "xxx": "Write",
                                                        "yyy": "Read",
                                                        "zzz": "Write"
                                                    }
                                                }
                                            }
                                        },
                                        "remoteIDClaim": "",
                                        "userID": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
                                        "xLaunch": false
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/LocalUser_v4_aaa_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Modify a local user",
                "tags": [
                    "User Management"
                ]
            }
        },
        "/nexus/infra/api/aaa/v4/logindomains": {
            "get": {
                "description": "Get a list of resources of type LoginDomain",
                "parameters": [
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "items": [
                                        {
                                            "metadata": {
                                                "account": "",
                                                "creationTimestamp": "0001-01-01T00:00:00Z",
                                                "generation": 0,
                                                "id": "",
                                                "kind": "aaa/v4.LoginDomain",
                                                "modificationTimestamp": "0001-01-01T00:00:00Z",
                                                "org": "",
                                                "resourceVersion": 0,
                                                "schemaVersion": "",
                                                "statusGeneration": 0
                                            },
                                            "spec": {
                                                "description": "Single Provider Argo LDAP AD Group Payload",
                                                "domain": "LDAP_Argo_With_ADGroup",
                                                "realm": "LDAP",
                                                "servers": {
                                                    "ldap": {
                                                        "adGroup": {
                                                            "Configured AD Group": {
                                                                "domains": {
                                                                    "all": {
                                                                        "roles": {
                                                                            "xxx": "Write",
                                                                            "yyy": "Read",
                                                                            "zzz": "Write"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "option": "LDAPGroupMap",
                                                        "providers": {
                                                            "1.2.3.4": {
                                                                "attribute": "Configured attribute",
                                                                "baseDN": "Configured BaseDN",
                                                                "bindDN": "Configured BindDN",
                                                                "description": "LDAP Provider",
                                                                "filterDN": "(sAMAccountName={username})",
                                                                "monitor": false,
                                                                "monitorPassword": "",
                                                                "monitorUsername": "",
                                                                "port": 389,
                                                                "priority": 0,
                                                                "retries": 5,
                                                                "sslCert": "",
                                                                "sslEnabled": false,
                                                                "sslStrictnessLevel": "Strict",
                                                                "timeout": 50
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "status": {}
                                        }
                                    ],
                                    "metadata": {
                                        "count": 1
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/LoginDomain_v4_aaa_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a list of login domain",
                "tags": [
                    "Authentication"
                ]
            },
            "post": {
                "description": "Create a resource of type LoginDomain",
                "parameters": [
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "spec": {
                                    "description": "Single Provider Argo LDAP AD Group Payload",
                                    "domain": "LDAP_Argo_With_ADGroup",
                                    "realm": "LDAP",
                                    "servers": {
                                        "ldap": {
                                            "adGroup": {
                                                "Configured AD Group": {
                                                    "domains": {
                                                        "all": {
                                                            "roles": {
                                                                "xxx": "Write",
                                                                "yyy": "Read",
                                                                "zzz": "Write"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "option": "LDAPGroupMap",
                                            "providers": {
                                                "1.2.3.4": {
                                                    "attribute": "Configured attribute",
                                                    "baseDN": "Configured BaseDN",
                                                    "bindDN": "Configured BindDN",
                                                    "description": "LDAP Provider",
                                                    "filterDN": "(sAMAccountName={username})",
                                                    "key": "XXXXXXXXXX",
                                                    "monitor": false,
                                                    "monitorPassword": "",
                                                    "monitorUsername": "",
                                                    "port": 389,
                                                    "priority": 0,
                                                    "retries": 5,
                                                    "sslCert": "",
                                                    "sslEnabled": false,
                                                    "sslStrictnessLevel": "Strict",
                                                    "timeout": 50
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/LoginDomain_v4_aaa_POST"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "",
                                        "kind": "aaa/v4.LoginDomain",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "description": "Single Provider Argo LDAP AD Group Payload",
                                        "domain": "LDAP_Argo_With_ADGroup",
                                        "realm": "LDAP",
                                        "servers": {
                                            "ldap": {
                                                "adGroup": {
                                                    "Configured AD Group": {
                                                        "domains": {
                                                            "all": {
                                                                "roles": {
                                                                    "xxx": "Write",
                                                                    "yyy": "Read",
                                                                    "zzz": "Write"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "option": "LDAPGroupMap",
                                                "providers": {
                                                    "1.2.3.4": {
                                                        "attribute": "Configured attribute",
                                                        "baseDN": "Configured BaseDN",
                                                        "bindDN": "Configured BindDN",
                                                        "description": "LDAP Provider",
                                                        "filterDN": "(sAMAccountName={username})",
                                                        "key": "",
                                                        "monitor": false,
                                                        "monitorPassword": "",
                                                        "monitorUsername": "",
                                                        "port": 389,
                                                        "priority": 0,
                                                        "retries": 5,
                                                        "sslCert": "",
                                                        "sslEnabled": false,
                                                        "sslStrictnessLevel": "Strict",
                                                        "timeout": 50
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "status": {}
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/LoginDomain_v4_aaa_GET"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Create a login domain",
                "tags": [
                    "Authentication"
                ]
            }
        },
        "/nexus/infra/api/aaa/v4/logindomains/{specDomain}": {
            "delete": {
                "description": "Delete a resource of type LoginDomain",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specDomain",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Delete a login domain",
                "tags": [
                    "Authentication"
                ]
            },
            "get": {
                "description": "Get a resource of type LoginDomain",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specDomain",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "",
                                        "kind": "aaa/v4.LoginDomain",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "description": "Single Provider Argo LDAP AD Group Payload",
                                        "domain": "LDAP_Argo_With_ADGroup",
                                        "realm": "LDAP",
                                        "servers": {
                                            "ldap": {
                                                "adGroup": {
                                                    "Configured AD Group": {
                                                        "domains": {
                                                            "all": {
                                                                "roles": {
                                                                    "xxx": "Write",
                                                                    "yyy": "Read",
                                                                    "zzz": "Write"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "option": "LDAPGroupMap",
                                                "providers": {
                                                    "1.2.3.4": {
                                                        "attribute": "Configured attribute",
                                                        "baseDN": "Configured BaseDN",
                                                        "bindDN": "Configured BindDN",
                                                        "description": "LDAP Provider",
                                                        "filterDN": "(sAMAccountName={username})",
                                                        "monitor": false,
                                                        "monitorPassword": "",
                                                        "monitorUsername": "",
                                                        "port": 389,
                                                        "priority": 0,
                                                        "retries": 5,
                                                        "sslCert": "",
                                                        "sslEnabled": false,
                                                        "sslStrictnessLevel": "Strict",
                                                        "timeout": 50
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "status": {}
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/LoginDomain_v4_aaa_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a login domain",
                "tags": [
                    "Authentication"
                ]
            },
            "put": {
                "description": "Modify a resource of type LoginDomain",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specDomain",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "spec": {
                                    "description": "Single Provider Argo LDAP AD Group Payload",
                                    "domain": "LDAP_Argo_With_ADGroup",
                                    "realm": "LDAP",
                                    "servers": {
                                        "ldap": {
                                            "adGroup": {
                                                "Configured AD Group": {
                                                    "domains": {
                                                        "all": {
                                                            "roles": {
                                                                "xxx": "Read",
                                                                "yyy": "Read",
                                                                "zzz": "Read"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "option": "LDAPGroupMap",
                                            "providers": {
                                                "1.2.3.4": {
                                                    "attribute": "Configured attribute",
                                                    "baseDN": "Configured BaseDN",
                                                    "bindDN": "Configured BindDN",
                                                    "description": "LDAP Provider",
                                                    "filterDN": "(sAMAccountName={username})",
                                                    "key": "XXXXXXXXXX",
                                                    "monitor": false,
                                                    "monitorPassword": "",
                                                    "monitorUsername": "",
                                                    "port": 389,
                                                    "priority": 0,
                                                    "retries": 5,
                                                    "sslCert": "",
                                                    "sslEnabled": false,
                                                    "sslStrictnessLevel": "Strict",
                                                    "timeout": 50
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/LoginDomain_v4_aaa_PUT"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "",
                                        "kind": "aaa/v4.LoginDomain",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "description": "Single Provider Argo LDAP AD Group Payload",
                                        "domain": "LDAP_Argo_With_ADGroup",
                                        "realm": "LDAP",
                                        "servers": {
                                            "ldap": {
                                                "adGroup": {
                                                    "Configured AD Group": {
                                                        "domains": {
                                                            "all": {
                                                                "roles": {
                                                                    "xxx": "Read",
                                                                    "yyy": "Read",
                                                                    "zzz": "Read"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "option": "LDAPGroupMap",
                                                "providers": {
                                                    "1.2.3.4": {
                                                        "attribute": "Configured attribute",
                                                        "baseDN": "Configured BaseDN",
                                                        "bindDN": "Configured BindDN",
                                                        "description": "LDAP Provider",
                                                        "filterDN": "(sAMAccountName={username})",
                                                        "key": "",
                                                        "monitor": false,
                                                        "monitorPassword": "",
                                                        "monitorUsername": "",
                                                        "port": 389,
                                                        "priority": 0,
                                                        "retries": 5,
                                                        "sslCert": "",
                                                        "sslEnabled": false,
                                                        "sslStrictnessLevel": "Strict",
                                                        "timeout": 50
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "status": {}
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/LoginDomain_v4_aaa_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Modify a login domain",
                "tags": [
                    "Authentication"
                ]
            }
        },
        "/nexus/infra/api/aaa/v4/remoteusers": {
            "get": {
                "description": "Get a list of resources of type RemoteUser",
                "parameters": [
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "items": [
                                        {
                                            "metadata": {
                                                "account": "",
                                                "creationTimestamp": "0001-01-01T00:00:00Z",
                                                "generation": 0,
                                                "id": "",
                                                "kind": "aaa/v4.RemoteUser",
                                                "modificationTimestamp": "0001-01-01T00:00:00Z",
                                                "org": "",
                                                "resourceVersion": 0,
                                                "schemaVersion": "",
                                                "statusGeneration": 0
                                            },
                                            "spec": {
                                                "ciscoAVPair": "shell:domains=all/xxx|zzz/yyy|vvv",
                                                "description": "",
                                                "loginDomain": "LDAP_Argo",
                                                "loginID": "xyz123",
                                                "loginTime": "0001-01-01T00:00:00Z",
                                                "rbac": {
                                                    "domains": {
                                                        "all": {
                                                            "roles": {
                                                                "vvv": "Read",
                                                                "xxx": "Write",
                                                                "yyy": "Read",
                                                                "zzz": "Write"
                                                            }
                                                        }
                                                    }
                                                },
                                                "unixuserid": 0,
                                                "userID": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "count": 1
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/RemoteUser_v4_aaa_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a list of remote user",
                "tags": [
                    "User Management"
                ]
            }
        },
        "/nexus/infra/api/aaa/v4/remoteusers/{specLoginID}": {
            "get": {
                "description": "Get a resource of type RemoteUser",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specLoginID",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "",
                                        "kind": "aaa/v4.RemoteUser",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "ciscoAVPair": "shell:domains=all/xxx|zzz/yyy|vvv",
                                        "description": "",
                                        "loginDomain": "LDAP_Argo",
                                        "loginID": "xyz123",
                                        "loginTime": "0001-01-01T00:00:00Z",
                                        "rbac": {
                                            "domains": {
                                                "all": {
                                                    "roles": {
                                                        "vvv": "Read",
                                                        "xxx": "Write",
                                                        "yyy": "Read",
                                                        "zzz": "Write"
                                                    }
                                                }
                                            }
                                        },
                                        "unixuserid": 0,
                                        "userID": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/RemoteUser_v4_aaa_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a remote user",
                "tags": [
                    "User Management"
                ]
            }
        },
        "/nexus/infra/api/aaa/v4/securitydomains": {
            "get": {
                "description": "Get a list of resources of type SecurityDomain",
                "parameters": [
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "items": [
                                        {
                                            "metadata": {
                                                "account": "",
                                                "creationTimestamp": "0001-01-01T00:00:00Z",
                                                "deletionTimestamp": "0001-01-01T00:00:00Z",
                                                "generation": 0,
                                                "id": "",
                                                "kind": "aaa/v4.SecurityDomain",
                                                "modificationTimestamp": "0001-01-01T00:00:00Z",
                                                "org": "",
                                                "resourceVersion": 0,
                                                "schemaVersion": "",
                                                "statusGeneration": 0
                                            },
                                            "spec": {
                                                "description": "domain1 description",
                                                "name": "domain1"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "count": 1
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/SecurityDomain_v4_aaa_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a list of security domain",
                "tags": [
                    "API Gateway"
                ]
            },
            "post": {
                "description": "Create a resource of type SecurityDomain",
                "parameters": [
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "spec": {
                                    "description": "domain1 description",
                                    "name": "domain1"
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/SecurityDomain_v4_aaa_POST"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "deletionTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "",
                                        "kind": "aaa/v4.SecurityDomain",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "description": "domain2 description",
                                        "name": "domain2"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/SecurityDomain_v4_aaa_GET"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Create a security domain",
                "tags": [
                    "API Gateway"
                ]
            }
        },
        "/nexus/infra/api/aaa/v4/securitydomains/{specName}": {
            "delete": {
                "description": "Delete a resource of type SecurityDomain",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Delete a security domain",
                "tags": [
                    "API Gateway"
                ]
            },
            "get": {
                "description": "Get a resource of type SecurityDomain",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "deletionTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "",
                                        "kind": "aaa/v4.SecurityDomain",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "description": "domain1 description",
                                        "name": "domain1"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/SecurityDomain_v4_aaa_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a security domain",
                "tags": [
                    "API Gateway"
                ]
            },
            "put": {
                "description": "Modify a resource of type SecurityDomain",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "spec": {
                                    "description": "New domain1 description",
                                    "name": "domain1"
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/SecurityDomain_v4_aaa_PUT"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "deletionTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "",
                                        "kind": "aaa/v4.SecurityDomain",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "description": "New domain1 description",
                                        "name": "domain1"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/SecurityDomain_v4_aaa_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Modify a security domain",
                "tags": [
                    "API Gateway"
                ]
            }
        },
        "/nexus/infra/api/aaa/v4/trustedjwtkeys": {
            "get": {
                "description": "Get a list of resources of type TrustedJWTKeys",
                "parameters": [
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "items": [
                                        {
                                            "metadata": {
                                                "account": "",
                                                "creationTimestamp": "0001-01-01T00:00:00Z",
                                                "generation": 0,
                                                "id": "",
                                                "kind": "aaa/v4.TrustedJWTKeys",
                                                "modificationTimestamp": "0001-01-01T00:00:00Z",
                                                "org": "",
                                                "resourceVersion": 0,
                                                "schemaVersion": "",
                                                "statusGeneration": 0
                                            },
                                            "spec": {
                                                "appName": "app123",
                                                "keyID": "KID123",
                                                "publicKey": "publicKey123",
                                                "remoteIDClaim": "claim123"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "count": 1
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/TrustedJWTKeys_v4_aaa_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a list of trusted JWT key",
                "tags": [
                    "API Gateway"
                ]
            },
            "post": {
                "description": "Create a resource of type TrustedJWTKeys",
                "parameters": [
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "spec": {
                                    "appName": "app123",
                                    "keyID": "KID123",
                                    "publicKey": "publicKey123",
                                    "remoteIDClaim": "claim123"
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/TrustedJWTKeys_v4_aaa_POST"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "",
                                        "kind": "aaa/v4.TrustedJWTKeys",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "appName": "app123",
                                        "keyID": "KID123",
                                        "publicKey": "publicKey123",
                                        "remoteIDClaim": "claim123"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/TrustedJWTKeys_v4_aaa_GET"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Create a trusted JWT key",
                "tags": [
                    "API Gateway"
                ]
            }
        },
        "/nexus/infra/api/aaa/v4/trustedjwtkeys/{specKeyID}": {
            "delete": {
                "description": "Delete a resource of type TrustedJWTKeys",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specKeyID",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Delete a trusted JWT key",
                "tags": [
                    "API Gateway"
                ]
            },
            "get": {
                "description": "Get a resource of type TrustedJWTKeys",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specKeyID",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "",
                                        "kind": "aaa/v4.TrustedJWTKeys",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "appName": "app123",
                                        "keyID": "KID123",
                                        "publicKey": "publicKey123",
                                        "remoteIDClaim": "claim123"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/TrustedJWTKeys_v4_aaa_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a trusted JWT key",
                "tags": [
                    "API Gateway"
                ]
            },
            "put": {
                "description": "Modify a resource of type TrustedJWTKeys",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specKeyID",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "spec": {
                                    "appName": "app123",
                                    "keyID": "KID123",
                                    "publicKey": "publicKey123",
                                    "remoteIDClaim": "claim123"
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/TrustedJWTKeys_v4_aaa_PUT"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "",
                                        "kind": "aaa/v4.TrustedJWTKeys",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "appName": "app123",
                                        "keyID": "KID123",
                                        "publicKey": "publicKey123",
                                        "remoteIDClaim": "claim123"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/TrustedJWTKeys_v4_aaa_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Modify a trusted JWT key",
                "tags": [
                    "API Gateway"
                ]
            }
        },
        "/nexus/infra/api/aaa/v4/userapikeys": {
            "get": {
                "description": "Get a list of resources of type UserAPIKey",
                "parameters": [
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "items": [
                                        {
                                            "metadata": {
                                                "account": "",
                                                "creationTimestamp": "0001-01-01T00:00:00Z",
                                                "generation": 0,
                                                "id": "",
                                                "kind": "aaa/v4.UserAPIKey",
                                                "modificationTimestamp": "0001-01-01T00:00:00Z",
                                                "org": "",
                                                "resourceVersion": 0,
                                                "schemaVersion": "",
                                                "statusGeneration": 0
                                            },
                                            "spec": {
                                                "apiKey": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
                                                "apiKeyName": "",
                                                "userName": "local-nduser123",
                                                "uuid": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "count": 1
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/UserAPIKey_v4_aaa_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a list of user API key",
                "tags": [
                    "User Management"
                ]
            },
            "post": {
                "description": "Create a resource of type UserAPIKey",
                "parameters": [
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAPIKey_v4_aaa_POST"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "",
                                        "kind": "aaa/v4.UserAPIKey",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "apiKey": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
                                        "apiKeyName": "",
                                        "userName": "local-nduser123",
                                        "uuid": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/UserAPIKey_v4_aaa_GET"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Create a user API key",
                "tags": [
                    "User Management"
                ]
            }
        },
        "/nexus/infra/api/aaa/v4/userapikeys/{specUuid}": {
            "delete": {
                "description": "Delete a resource of type UserAPIKey",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specUuid",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Delete a user API key",
                "tags": [
                    "User Management"
                ]
            },
            "get": {
                "description": "Get a resource of type UserAPIKey",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specUuid",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "",
                                        "kind": "aaa/v4.UserAPIKey",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "apiKey": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
                                        "apiKeyName": "",
                                        "userName": "local-nduser123",
                                        "uuid": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/UserAPIKey_v4_aaa_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a user API key",
                "tags": [
                    "User Management"
                ]
            },
            "put": {
                "description": "Modify a resource of type UserAPIKey",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specUuid",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "spec": {
                                    "apiKey": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
                                    "apiKeyName": "Key1",
                                    "userName": "local-nduser123",
                                    "uuid": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX"
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/UserAPIKey_v4_aaa_PUT"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "",
                                        "kind": "aaa/v4.UserAPIKey",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "apiKey": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
                                        "apiKeyName": "Key1",
                                        "userName": "local-nduser123",
                                        "uuid": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/UserAPIKey_v4_aaa_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Modify a user API key",
                "tags": [
                    "User Management"
                ]
            }
        },
        "/nexus/infra/api/aaa/v4/userpreferences": {
            "get": {
                "description": "Get a list of resources of type UserPreference",
                "parameters": [
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "items": [
                                        {
                                            "metadata": {
                                                "account": "",
                                                "creationTimestamp": "0001-01-01T00:00:00Z",
                                                "generation": 0,
                                                "id": "",
                                                "kind": "aaa/v4.UserPreference",
                                                "modificationTimestamp": "0001-01-01T00:00:00Z",
                                                "org": "",
                                                "resourceVersion": 0,
                                                "schemaVersion": "",
                                                "statusGeneration": 0
                                            },
                                            "spec": {
                                                "displayedAppInstances": {
                                                    "app:version": {
                                                        "appID": "app:version",
                                                        "lastUpdated": "0001-01-01T00:00:00Z"
                                                    }
                                                },
                                                "lastLoggedInVersion": "X.Y.Z.00",
                                                "loginID": "local-nduser123",
                                                "showWelcomeScreen": true,
                                                "uiIdleTimeoutSeconds": 1200
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "count": 1
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/UserPreference_v4_aaa_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a list of user preference",
                "tags": [
                    "User Management"
                ]
            }
        },
        "/nexus/infra/api/aaa/v4/userpreferences/{specLoginID}": {
            "get": {
                "description": "Get a resource of type UserPreference",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specLoginID",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "",
                                        "kind": "aaa/v4.UserPreference",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "displayedAppInstances": {
                                            "app:version": {
                                                "appID": "app:version",
                                                "lastUpdated": "0001-01-01T00:00:00Z"
                                            }
                                        },
                                        "lastLoggedInVersion": "X.Y.Z.00",
                                        "loginID": "local-nduser123",
                                        "showWelcomeScreen": true,
                                        "uiIdleTimeoutSeconds": 1200
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/UserPreference_v4_aaa_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get user preference",
                "tags": [
                    "User Management"
                ]
            },
            "put": {
                "description": "Modify a resource of type UserPreference",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specLoginID",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Csrf-Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "spec": {
                                    "displayedAppInstances": {
                                        "app:version": {
                                            "appID": "app:version",
                                            "lastUpdated": "0001-01-01T00:00:00Z"
                                        }
                                    },
                                    "lastLoggedInVersion": "X.Y.Z.00",
                                    "loginID": "local-nduser123",
                                    "showWelcomeScreen": true,
                                    "uiIdleTimeoutSeconds": 1200
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/UserPreference_v4_aaa_PUT"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "",
                                        "kind": "aaa/v4.UserPreference",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 0,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "displayedAppInstances": {
                                            "app:version": {
                                                "appID": "app:version",
                                                "lastUpdated": "0001-01-01T00:00:00Z"
                                            }
                                        },
                                        "lastLoggedInVersion": "X.Y.Z.00",
                                        "loginID": "local-nduser123",
                                        "showWelcomeScreen": true,
                                        "uiIdleTimeoutSeconds": 1200
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/UserPreference_v4_aaa_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Modify a user preference",
                "tags": [
                    "User Management"
                ]
            }
        },
        "/nexus/infra/api/certmanagement/v4/trustedcas": {
            "get": {
                "description": "Retrieve a list of elements of type TrustedCA version v4",
                "parameters": [
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrustedCA_v4_certmanagement_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "Site Management"
                ]
            },
            "post": {
                "description": "Create an existing object of type TrustedCA",
                "parameters": [
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TrustedCA_v4_certmanagement_POST"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrustedCA_v4_certmanagement_GET"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "Site Management"
                ]
            }
        },
        "/nexus/infra/api/certmanagement/v4/trustedcas/{specName}": {
            "delete": {
                "description": "Delete an element of type TrustedCA",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "Site Management"
                ]
            },
            "get": {
                "description": "Retrieve an instance of TrustedCA",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrustedCA_v4_certmanagement_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "Site Management"
                ]
            },
            "put": {
                "description": "Modify an existing object of type TrustedCA",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TrustedCA_v4_certmanagement_PUT"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrustedCA_v4_certmanagement_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "Site Management"
                ]
            }
        },
        "/nexus/infra/api/credmgr/v4/credentials": {
            "get": {
                "description": "Retrieve a list of elements of type Credential version v4",
                "parameters": [
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Credential_v4_credmgr_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "Site Management"
                ]
            },
            "post": {
                "description": "Create an existing object of type Credential",
                "parameters": [
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Credential_v4_credmgr_POST"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Credential_v4_credmgr_GET"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "Site Management"
                ]
            }
        },
        "/nexus/infra/api/credmgr/v4/credentials/{specName}": {
            "delete": {
                "description": "Delete an element of type Credential",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "Site Management"
                ]
            },
            "get": {
                "description": "Retrieve an instance of Credential",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "showCredential",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Credential_v4_credmgr_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "Site Management"
                ]
            },
            "patch": {
                "description": "Modify an existing object of type Credential",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Any_PATCH"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Credential_v4_credmgr_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "Site Management"
                ]
            },
            "put": {
                "description": "Modify an existing object of type Credential",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Credential_v4_credmgr_PUT"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Credential_v4_credmgr_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "Site Management"
                ]
            }
        },
        "/nexus/infra/api/eventmonitoring/v1/eventconfigs": {
            "get": {
                "description": "Get a list of event configuration being monitored",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventConfig_v1_eventmonitoring_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a list of event configurations being monitored",
                "tags": [
                    "Event Monitoring"
                ]
            }
        },
        "/nexus/infra/api/eventmonitoring/v1/eventrecords": {
            "get": {
                "description": "Get a list of event records created as part of the parent event configuration being monitored",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventRecord_v1_eventmonitoring_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a list of event records",
                "tags": [
                    "Event Monitoring"
                ]
            }
        },
        "/nexus/infra/api/eventmonitoring/v1/namespaces/{namespace}/eventconfigs": {
            "get": {
                "description": "Get a list of event configuration being monitored",
                "parameters": [
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventConfig_v1_eventmonitoring_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a list of event configurations being monitored",
                "tags": [
                    "Event Monitoring"
                ]
            }
        },
        "/nexus/infra/api/eventmonitoring/v1/namespaces/{namespace}/eventconfigs/{specId}": {
            "get": {
                "description": "Get a single event configuration resource being monitored",
                "parameters": [
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "specId",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventConfig_v1_eventmonitoring_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get an event configuration",
                "tags": [
                    "Event Monitoring"
                ]
            }
        },
        "/nexus/infra/api/eventmonitoring/v1/namespaces/{namespace}/eventrecords": {
            "get": {
                "description": "Get a list of event records created as part of the parent event configuration being monitored",
                "parameters": [
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventRecord_v1_eventmonitoring_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a list of event records",
                "tags": [
                    "Event Monitoring"
                ]
            }
        },
        "/nexus/infra/api/eventmonitoring/v1/namespaces/{namespace}/eventrecords/{specMetaName}": {
            "get": {
                "description": "Get a single event record created as part of the parent event configuration being monitored",
                "parameters": [
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "specMetaName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventRecord_v1_eventmonitoring_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get an event record",
                "tags": [
                    "Event Monitoring"
                ]
            },
            "put": {
                "description": "Modify an event record",
                "parameters": [
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "specMetaName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EventRecord_v1_eventmonitoring_PUT"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventRecord_v1_eventmonitoring_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Modify an event record",
                "tags": [
                    "Event Monitoring"
                ]
            }
        },
        "/nexus/infra/api/platform/v1/clusters": {
            "get": {
                "description": "Get all clusters",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "items": [
                                        {
                                            "metadata": {
                                                "account": "",
                                                "creationTimestamp": "2022-08-09T22:55:34Z",
                                                "deletionTimestamp": "0001-01-01T00:00:00Z",
                                                "finalizers": {
                                                    "falcon.case.cncf.io/clusterconfig-protection": true
                                                },
                                                "generation": 0,
                                                "id": "9a5f9c2c-2594-4f8b-b86d-7c4eea57c136",
                                                "kind": "platform/v1.Cluster",
                                                "modificationTimestamp": "0001-01-01T00:00:00Z",
                                                "org": "",
                                                "resourceVersion": 2875,
                                                "schemaVersion": "",
                                                "statusGeneration": 0
                                            },
                                            "spec": {
                                                "appNetwork": {
                                                    "subnet": "1.2.3.4/16",
                                                    "subnetv6": ""
                                                },
                                                "displayName": "youCanOnlyChangeThisName",
                                                "dnsDomain": "clustername.case.local",
                                                "name": "clustername",
                                                "nameServers": [
                                                    "9.10.11.12"
                                                ],
                                                "ntpServers": [
                                                    "1.2.3.4"
                                                ],
                                                "proxyConfig": {
                                                    "ignoreHosts": [
                                                        "17.18.19.20"
                                                    ],
                                                    "password": "",
                                                    "servers": [
                                                        {
                                                            "password": "",
                                                            "type": "HTTPS",
                                                            "url": "https://notareallink.local",
                                                            "username": ""
                                                        }
                                                    ],
                                                    "username": ""
                                                },
                                                "searchDomains": [
                                                    "21.22.23.24"
                                                ],
                                                "serviceNetwork": {
                                                    "subnet": "5.6.7.8/16",
                                                    "subnetv6": ""
                                                }
                                            },
                                            "status": {
                                                "currentVersion": "2.2.2a",
                                                "error": {
                                                    "message": "",
                                                    "time": ""
                                                },
                                                "targetVersion": "",
                                                "uuid": "1234"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "count": 1
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Cluster_v1_platform_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get all clusters",
                "tags": [
                    "Node Management"
                ]
            }
        },
        "/nexus/infra/api/platform/v1/clusters/{specName}": {
            "get": {
                "description": "Get a cluster",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "2022-08-09T22:55:34Z",
                                        "deletionTimestamp": "0001-01-01T00:00:00Z",
                                        "finalizers": {
                                            "falcon.case.cncf.io/clusterconfig-protection": true
                                        },
                                        "generation": 0,
                                        "id": "9a5f9c2c-2594-4f8b-b86d-7c4eea57c136",
                                        "kind": "platform/v1.Cluster",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 2875,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "appNetwork": {
                                            "subnet": "1.2.3.4/16",
                                            "subnetv6": ""
                                        },
                                        "displayName": "youCanOnlyChangeThisName",
                                        "dnsDomain": "clustername.case.local",
                                        "name": "clustername",
                                        "nameServers": [
                                            "9.10.11.12"
                                        ],
                                        "ntpServers": [
                                            "1.2.3.4"
                                        ],
                                        "proxyConfig": {
                                            "ignoreHosts": [
                                                "17.18.19.20"
                                            ],
                                            "password": "",
                                            "servers": [
                                                {
                                                    "password": "",
                                                    "type": "HTTPS",
                                                    "url": "https://notareallink.local",
                                                    "username": ""
                                                }
                                            ],
                                            "username": ""
                                        },
                                        "searchDomains": [
                                            "21.22.23.24"
                                        ],
                                        "serviceNetwork": {
                                            "subnet": "5.6.7.8/16",
                                            "subnetv6": ""
                                        }
                                    },
                                    "status": {
                                        "currentVersion": "2.2.2a",
                                        "error": {
                                            "message": "",
                                            "time": ""
                                        },
                                        "targetVersion": "",
                                        "uuid": "1234"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Cluster_v1_platform_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a cluster",
                "tags": [
                    "Node Management"
                ]
            },
            "put": {
                "description": "Modify a cluster",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json; charset=utf-8": {
                            "example": {
                                "spec": {
                                    "appNetwork": {
                                        "subnet": "1.2.3.4/16",
                                        "subnetv6": ""
                                    },
                                    "dnsDomain": "clustername.case.local",
                                    "nameServers": [
                                        "9.10.11.12"
                                    ],
                                    "ntpServers": [
                                        "1.2.3.4"
                                    ],
                                    "proxyConfig": {
                                        "ignoreHosts": [
                                            "17.18.19.20"
                                        ],
                                        "password": "",
                                        "servers": [
                                            {
                                                "password": "",
                                                "type": "HTTP",
                                                "url": "http://notareallink.local",
                                                "username": ""
                                            },
                                            {
                                                "password": "",
                                                "type": "HTTPS",
                                                "url": "https://notareallink.local",
                                                "username": ""
                                            }
                                        ],
                                        "username": ""
                                    },
                                    "searchDomains": [
                                        "21.22.23.24"
                                    ],
                                    "serviceNetwork": {
                                        "subnet": "5.6.7.8/16",
                                        "subnetv6": ""
                                    }
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/Cluster_v1_platform_PUT"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "annotations": {
                                            "status.crd.case.cncf.io": "true"
                                        },
                                        "creationTimestamp": "2022-08-09T22:55:34Z",
                                        "deletionTimestamp": "0001-01-01T00:00:00Z",
                                        "finalizers": {
                                            "falcon.case.cncf.io/clusterconfig-protection": true
                                        },
                                        "generation": 0,
                                        "id": "9a5f9c2c-2594-4f8b-b86d-7c4eea57c136",
                                        "kind": "platform/v1.Cluster",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 45252,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "appNetwork": {
                                            "subnet": "1.2.3.4/16",
                                            "subnetv6": ""
                                        },
                                        "displayName": "youCanOnlyChangeThisName",
                                        "dnsDomain": "clustername.case.local",
                                        "name": "clustername",
                                        "nameServers": [
                                            "9.10.11.12"
                                        ],
                                        "ntpServers": [
                                            "1.2.3.4"
                                        ],
                                        "proxyConfig": {
                                            "ignoreHosts": [
                                                "17.18.19.20"
                                            ],
                                            "password": "",
                                            "servers": [
                                                {
                                                    "password": "",
                                                    "type": "HTTP",
                                                    "url": "http://notareallink.local",
                                                    "username": ""
                                                },
                                                {
                                                    "password": "",
                                                    "type": "HTTPS",
                                                    "url": "https://notareallink.local",
                                                    "username": ""
                                                }
                                            ],
                                            "username": ""
                                        },
                                        "searchDomains": [
                                            "21.22.23.24"
                                        ],
                                        "serviceNetwork": {
                                            "subnet": "5.6.7.8/16",
                                            "subnetv6": ""
                                        }
                                    },
                                    "status": {
                                        "currentVersion": "2.2.2a",
                                        "error": {
                                            "message": "",
                                            "time": ""
                                        },
                                        "targetVersion": "",
                                        "uuid": "1234"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Cluster_v1_platform_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Modify a cluster",
                "tags": [
                    "Node Management"
                ]
            }
        },
        "/nexus/infra/api/platform/v1/externalips": {
            "get": {
                "description": "Get all external IPs",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "items": [
                                        {
                                            "metadata": {
                                                "account": "",
                                                "annotations": {
                                                    "status.crd.case.cncf.io": "true"
                                                },
                                                "creationTimestamp": "2022-08-10T01:52:10Z",
                                                "deletionTimestamp": "0001-01-01T00:00:00Z",
                                                "generation": 0,
                                                "id": "2a5fb7e8-88a7-4b3c-a623-0542a03e6d2b",
                                                "kind": "platform/v1.ExternalIp",
                                                "modificationTimestamp": "0001-01-01T00:00:00Z",
                                                "org": "",
                                                "resourceVersion": 46588,
                                                "schemaVersion": "",
                                                "statusGeneration": 0
                                            },
                                            "spec": {
                                                "ip": [
                                                    "1.2.3.4"
                                                ],
                                                "name": "data-external-services",
                                                "targetNetwork": "Data"
                                            },
                                            "status": {
                                                "error": {
                                                    "message": "",
                                                    "time": ""
                                                },
                                                "externalIpAllocation": {
                                                    "1.2.3.4": "cisco-mso"
                                                }
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "count": 1
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalIp_v1_platform_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get all external IPs",
                "tags": [
                    "Node Management"
                ]
            },
            "post": {
                "description": "Create an external IP",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json; charset=utf-8": {
                            "example": {
                                "spec": {
                                    "ip": [
                                        "1.2.3.4"
                                    ],
                                    "name": "data-external-services",
                                    "targetNetwork": "Data"
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/ExternalIp_v1_platform_POST"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "annotations": {
                                            "status.crd.case.cncf.io": "true"
                                        },
                                        "creationTimestamp": "2022-08-10T01:52:10Z",
                                        "deletionTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "2a5fb7e8-88a7-4b3c-a623-0542a03e6d2b",
                                        "kind": "platform/v1.ExternalIp",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 48174,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "ip": [
                                            "1.2.3.4"
                                        ],
                                        "name": "data-external-services",
                                        "targetNetwork": "Data"
                                    },
                                    "status": {
                                        "error": {
                                            "message": "",
                                            "time": ""
                                        },
                                        "externalIpAllocation": {}
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalIp_v1_platform_GET"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Create an external IP",
                "tags": [
                    "Node Management"
                ]
            }
        },
        "/nexus/infra/api/platform/v1/externalips/{specName}": {
            "get": {
                "description": "Get an external IP",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "annotations": {
                                            "status.crd.case.cncf.io": "true"
                                        },
                                        "creationTimestamp": "2022-08-10T01:52:10Z",
                                        "deletionTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "2a5fb7e8-88a7-4b3c-a623-0542a03e6d2b",
                                        "kind": "platform/v1.ExternalIp",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 46588,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "ip": [
                                            "1.2.3.4"
                                        ],
                                        "name": "data-external-services",
                                        "targetNetwork": "Data"
                                    },
                                    "status": {
                                        "error": {
                                            "message": "",
                                            "time": ""
                                        },
                                        "externalIpAllocation": {
                                            "1.2.3.4": "cisco-mso"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalIp_v1_platform_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get an external IP",
                "tags": [
                    "Node Management"
                ]
            },
            "put": {
                "description": "Modify an external IP",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json; charset=utf-8": {
                            "example": {
                                "spec": {
                                    "ip": [
                                        "1.2.3.4"
                                    ],
                                    "targetNetwork": "Data"
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/ExternalIp_v1_platform_PUT"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "annotations": {
                                            "status.crd.case.cncf.io": "true"
                                        },
                                        "creationTimestamp": "2022-08-10T01:52:10Z",
                                        "deletionTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "2a5fb7e8-88a7-4b3c-a623-0542a03e6d2b",
                                        "kind": "platform/v1.ExternalIp",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 48174,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "ip": [
                                            "1.2.3.4"
                                        ],
                                        "name": "data-external-services",
                                        "targetNetwork": "Data"
                                    },
                                    "status": {
                                        "error": {
                                            "message": "",
                                            "time": ""
                                        },
                                        "externalIpAllocation": {}
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalIp_v1_platform_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Modify an external IP",
                "tags": [
                    "Node Management"
                ]
            }
        },
        "/nexus/infra/api/platform/v1/networkstorages": {
            "get": {
                "description": "Get all network storages",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "items": [
                                        {}
                                    ],
                                    "metadata": {
                                        "count": 1
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/NetworkStorage_v1_platform_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get all network storages",
                "tags": [
                    "Node Management"
                ]
            },
            "post": {
                "description": "Create a network storage",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/NetworkStorage_v1_platform_POST"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/NetworkStorage_v1_platform_GET"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Create a network storage",
                "tags": [
                    "Node Management"
                ]
            }
        },
        "/nexus/infra/api/platform/v1/networkstorages/{specName}": {
            "delete": {
                "description": "Delete a network storage",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Delete a network storage",
                "tags": [
                    "Node Management"
                ]
            },
            "get": {
                "description": "Get an network storage",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/NetworkStorage_v1_platform_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a network storage",
                "tags": [
                    "Node Management"
                ]
            },
            "put": {
                "description": "Modify a network storage",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/NetworkStorage_v1_platform_PUT"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/NetworkStorage_v1_platform_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Modify a network storage",
                "tags": [
                    "Node Management"
                ]
            }
        },
        "/nexus/infra/api/platform/v1/nodes": {
            "get": {
                "description": "Get all nodes",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "items": [
                                        {
                                            "metadata": {
                                                "account": "",
                                                "creationTimestamp": "2022-08-09T22:55:47Z",
                                                "deletionTimestamp": "0001-01-01T00:00:00Z",
                                                "finalizers": {
                                                    "falcon.case.cncf.io/nodeconfig-protection": true
                                                },
                                                "generation": 0,
                                                "id": "4d973423-80bc-41e9-a684-1b9a07335fce",
                                                "kind": "platform/v1.Node",
                                                "modificationTimestamp": "0001-01-01T00:00:00Z",
                                                "org": "",
                                                "resourceVersion": 40318,
                                                "schemaVersion": "",
                                                "statusGeneration": 0
                                            },
                                            "spec": {
                                                "bgpConfig": {
                                                    "as": 1,
                                                    "peers": [
                                                        {
                                                            "as": 2,
                                                            "ip": "5.6.7.811",
                                                            "ipv6": ""
                                                        }
                                                    ]
                                                },
                                                "inbNetwork": {
                                                    "gateway": "5.6.7.8",
                                                    "gatewayv6": "",
                                                    "subnet": "5.6.7.801/24",
                                                    "subnetv6": "",
                                                    "vlanID": 3001
                                                },
                                                "name": "clustername-nodename",
                                                "oobNetwork": {
                                                    "gateway": "1.2.3.4",
                                                    "gatewayv6": "",
                                                    "subnet": "1.2.3.472/24",
                                                    "subnetv6": ""
                                                },
                                                "registered": true,
                                                "role": "Master",
                                                "serialNumber": "FAKESN"
                                            },
                                            "status": {
                                                "bootTime": "2022-08-09T22:38:56Z",
                                                "clusterName": "clustername",
                                                "error": {
                                                    "message": "",
                                                    "time": ""
                                                },
                                                "firmwareUpgradeTime": "2022-08-09T22:38:56Z",
                                                "k8sStatus": "ready",
                                                "machineType": "BareMetal",
                                                "model": "SE-NODE-G2",
                                                "platformType": "Physical",
                                                "serfStatus": "alive",
                                                "state": "Active",
                                                "uuid": "1234",
                                                "version": "2.2.2a"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "count": 1
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Node_v1_platform_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get all nodes",
                "tags": [
                    "Node Management"
                ]
            }
        },
        "/nexus/infra/api/platform/v1/nodes/{specName}": {
            "delete": {
                "description": "Delete a node",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Delete a node",
                "tags": [
                    "Node Management"
                ]
            },
            "get": {
                "description": "Get a node",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "2022-08-09T22:55:47Z",
                                        "deletionTimestamp": "0001-01-01T00:00:00Z",
                                        "finalizers": {
                                            "falcon.case.cncf.io/nodeconfig-protection": true
                                        },
                                        "generation": 0,
                                        "id": "4d973423-80bc-41e9-a684-1b9a07335fce",
                                        "kind": "platform/v1.Node",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 40318,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "bgpConfig": {
                                            "as": 1,
                                            "peers": [
                                                {
                                                    "as": 2,
                                                    "ip": "5.6.7.811",
                                                    "ipv6": ""
                                                }
                                            ]
                                        },
                                        "inbNetwork": {
                                            "gateway": "5.6.7.8",
                                            "gatewayv6": "",
                                            "subnet": "5.6.7.801/24",
                                            "subnetv6": "",
                                            "vlanID": 3001
                                        },
                                        "name": "clustername-nodename",
                                        "oobNetwork": {
                                            "gateway": "1.2.3.4",
                                            "gatewayv6": "",
                                            "subnet": "1.2.3.472/24",
                                            "subnetv6": ""
                                        },
                                        "registered": true,
                                        "role": "Master",
                                        "serialNumber": "FAKESN"
                                    },
                                    "status": {
                                        "bootTime": "2022-08-09T22:38:56Z",
                                        "clusterName": "clustername",
                                        "error": {
                                            "message": "",
                                            "time": ""
                                        },
                                        "firmwareUpgradeTime": "2022-08-09T22:38:56Z",
                                        "k8sStatus": "ready",
                                        "machineType": "BareMetal",
                                        "model": "SE-NODE-G2",
                                        "platformType": "Physical",
                                        "serfStatus": "alive",
                                        "state": "Active",
                                        "uuid": "1234",
                                        "version": "2.2.2a"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Node_v1_platform_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a node",
                "tags": [
                    "Node Management"
                ]
            },
            "put": {
                "description": "Modify a node",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json; charset=utf-8": {
                            "example": {
                                "spec": {
                                    "bgpConfig": {
                                        "as": 1,
                                        "peers": [
                                            {
                                                "as": 2,
                                                "ip": "5.6.7.8"
                                            }
                                        ]
                                    },
                                    "inbNetwork": {
                                        "gateway": "5.6.7.8",
                                        "gatewayv6": "",
                                        "subnet": "5.6.7.801/24",
                                        "subnetv6": "",
                                        "vlanID": 3001
                                    },
                                    "oobNetwork": {
                                        "gateway": "1.2.3.4",
                                        "gatewayv6": "",
                                        "subnet": "1.2.3.472/24",
                                        "subnetv6": ""
                                    },
                                    "registered": true,
                                    "role": "Master",
                                    "serialNumber": "FAKESN"
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/Node_v1_platform_PUT"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "2022-08-09T22:55:47Z",
                                        "deletionTimestamp": "0001-01-01T00:00:00Z",
                                        "finalizers": {
                                            "falcon.case.cncf.io/nodeconfig-protection": true
                                        },
                                        "generation": 0,
                                        "id": "4d973423-80bc-41e9-a684-1b9a07335fce",
                                        "kind": "platform/v1.Node",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 40894,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "bgpConfig": {
                                            "as": 1,
                                            "peers": [
                                                {
                                                    "as": 2,
                                                    "ip": "5.6.7.8",
                                                    "ipv6": ""
                                                }
                                            ]
                                        },
                                        "inbNetwork": {
                                            "gateway": "5.6.7.8",
                                            "gatewayv6": "",
                                            "subnet": "5.6.7.801/24",
                                            "subnetv6": "",
                                            "vlanID": 3001
                                        },
                                        "name": "clustername-nodename",
                                        "oobNetwork": {
                                            "gateway": "1.2.3.4",
                                            "gatewayv6": "",
                                            "subnet": "1.2.3.472/24",
                                            "subnetv6": ""
                                        },
                                        "registered": true,
                                        "role": "Master",
                                        "serialNumber": "FAKESN"
                                    },
                                    "status": {
                                        "bootTime": "2022-08-09T22:38:56Z",
                                        "clusterName": "clustername",
                                        "error": {
                                            "message": "",
                                            "time": ""
                                        },
                                        "firmwareUpgradeTime": "2022-08-09T22:38:56Z",
                                        "k8sStatus": "ready",
                                        "machineType": "BareMetal",
                                        "model": "SE-NODE-G2",
                                        "platformType": "Physical",
                                        "serfStatus": "alive",
                                        "state": "Active",
                                        "uuid": "1234",
                                        "version": "2.2.2a"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Node_v1_platform_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Modify a node",
                "tags": [
                    "Node Management"
                ]
            }
        },
        "/nexus/infra/api/platform/v1/routes": {
            "get": {
                "description": "Get all routes",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "items": [
                                        {
                                            "metadata": {
                                                "account": "",
                                                "creationTimestamp": "2022-08-10T02:20:16Z",
                                                "deletionTimestamp": "0001-01-01T00:00:00Z",
                                                "generation": 0,
                                                "id": "718efb0c-3d6d-492c-a559-274bb8383072",
                                                "kind": "platform/v1.Route",
                                                "modificationTimestamp": "0001-01-01T00:00:00Z",
                                                "org": "",
                                                "resourceVersion": 52711,
                                                "schemaVersion": "",
                                                "statusGeneration": 0
                                            },
                                            "spec": {
                                                "destination": "99.99.2.0/24",
                                                "targetNetwork": "Management"
                                            },
                                            "status": {
                                                "error": {
                                                    "message": "",
                                                    "time": ""
                                                }
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "count": 1
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Route_v1_platform_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get all routes",
                "tags": [
                    "Node Management"
                ]
            },
            "post": {
                "description": "Create a route",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json; charset=utf-8": {
                            "example": {
                                "spec": {
                                    "destination": "99.99.2.0/24",
                                    "targetNetwork": "Management"
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/Route_v1_platform_POST"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "2022-08-10T02:20:16Z",
                                        "deletionTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "718efb0c-3d6d-492c-a559-274bb8383072",
                                        "kind": "platform/v1.Route",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 52711,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "destination": "99.99.2.0/24",
                                        "targetNetwork": "Management"
                                    },
                                    "status": {
                                        "error": {
                                            "message": "",
                                            "time": ""
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Route_v1_platform_GET"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Create a route",
                "tags": [
                    "Node Management"
                ]
            }
        },
        "/nexus/infra/api/platform/v1/routes/{specDestination}": {
            "delete": {
                "description": "Delete a route",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specDestination",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Delete a route",
                "tags": [
                    "Node Management"
                ]
            },
            "get": {
                "description": "Get a route",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specDestination",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "2022-08-10T02:20:16Z",
                                        "deletionTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "718efb0c-3d6d-492c-a559-274bb8383072",
                                        "kind": "platform/v1.Route",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 52711,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "destination": "99.99.2.0/24",
                                        "targetNetwork": "Management"
                                    },
                                    "status": {
                                        "error": {
                                            "message": "",
                                            "time": ""
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Route_v1_platform_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a route",
                "tags": [
                    "Node Management"
                ]
            },
            "put": {
                "description": "Modify a route",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specDestination",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json; charset=utf-8": {
                            "example": {
                                "spec": {
                                    "targetNetwork": "Management"
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/Route_v1_platform_PUT"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "2022-08-10T02:20:16Z",
                                        "deletionTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "718efb0c-3d6d-492c-a559-274bb8383072",
                                        "kind": "platform/v1.Route",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 52711,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "destination": "99.99.2.0/24",
                                        "targetNetwork": "Management"
                                    },
                                    "status": {
                                        "error": {
                                            "message": "",
                                            "time": ""
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Route_v1_platform_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Modify a route",
                "tags": [
                    "Node Management"
                ]
            }
        },
        "/nexus/infra/api/platform/v1/syslogsyncs": {
            "get": {
                "description": "Get all syslog servers",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "items": [
                                        {
                                            "metadata": {
                                                "account": "",
                                                "annotations": {
                                                    "status.crd.case.cncf.io": "true"
                                                },
                                                "creationTimestamp": "2022-08-10T02:24:52Z",
                                                "deletionTimestamp": "0001-01-01T00:00:00Z",
                                                "generation": 0,
                                                "id": "fc571007-9906-4b3e-b89a-077022a283d2",
                                                "kind": "platform/v1.SyslogSync",
                                                "modificationTimestamp": "0001-01-01T00:00:00Z",
                                                "org": "",
                                                "resourceVersion": 53882,
                                                "schemaVersion": "",
                                                "statusGeneration": 0
                                            },
                                            "spec": {
                                                "address": "99.99.1.0",
                                                "enabled": true,
                                                "forwardingFacility": "Local0",
                                                "port": 8080,
                                                "severity": "Alert",
                                                "transport": "TCP"
                                            },
                                            "status": {
                                                "error": {
                                                    "message": "",
                                                    "time": ""
                                                }
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "count": 1
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/SyslogSync_v1_platform_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get all syslog servers",
                "tags": [
                    "Node Management"
                ]
            },
            "post": {
                "description": "Create a syslog server",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json; charset=utf-8": {
                            "example": {
                                "spec": {
                                    "address": "99.99.1.0",
                                    "enabled": true,
                                    "forwardingFacility": "Local0",
                                    "port": 8080,
                                    "severity": "Alert",
                                    "transport": "TCP"
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/SyslogSync_v1_platform_POST"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "annotations": {
                                            "status.crd.case.cncf.io": "true"
                                        },
                                        "creationTimestamp": "2022-08-10T02:24:52Z",
                                        "deletionTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "fc571007-9906-4b3e-b89a-077022a283d2",
                                        "kind": "platform/v1.SyslogSync",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 53882,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "address": "99.99.1.0",
                                        "enabled": true,
                                        "forwardingFacility": "Local0",
                                        "port": 8080,
                                        "severity": "Alert",
                                        "transport": "TCP"
                                    },
                                    "status": {
                                        "error": {
                                            "message": "",
                                            "time": ""
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/SyslogSync_v1_platform_GET"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Create a syslog server",
                "tags": [
                    "Node Management"
                ]
            }
        },
        "/nexus/infra/api/platform/v1/syslogsyncs/{specAddress}": {
            "delete": {
                "description": "Delete a syslog server",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specAddress",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Delete a syslog server",
                "tags": [
                    "Node Management"
                ]
            },
            "get": {
                "description": "Get a syslog server",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specAddress",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "annotations": {
                                            "status.crd.case.cncf.io": "true"
                                        },
                                        "creationTimestamp": "2022-08-10T02:24:52Z",
                                        "deletionTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "fc571007-9906-4b3e-b89a-077022a283d2",
                                        "kind": "platform/v1.SyslogSync",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 53882,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "address": "99.99.1.0",
                                        "enabled": true,
                                        "forwardingFacility": "Local0",
                                        "port": 8080,
                                        "severity": "Alert",
                                        "transport": "TCP"
                                    },
                                    "status": {
                                        "error": {
                                            "message": "",
                                            "time": ""
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/SyslogSync_v1_platform_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a syslog server",
                "tags": [
                    "Node Management"
                ]
            },
            "put": {
                "description": "Modify a syslog server",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specAddress",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json; charset=utf-8": {
                            "example": {
                                "spec": {
                                    "enabled": true,
                                    "forwardingFacility": "Local0",
                                    "port": 8080,
                                    "severity": "Alert",
                                    "transport": "TCP"
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/SyslogSync_v1_platform_PUT"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "annotations": {
                                            "status.crd.case.cncf.io": "true"
                                        },
                                        "creationTimestamp": "2022-08-10T02:24:52Z",
                                        "deletionTimestamp": "0001-01-01T00:00:00Z",
                                        "generation": 0,
                                        "id": "fc571007-9906-4b3e-b89a-077022a283d2",
                                        "kind": "platform/v1.SyslogSync",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 53882,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "address": "99.99.1.0",
                                        "enabled": true,
                                        "forwardingFacility": "Local0",
                                        "port": 8080,
                                        "severity": "Alert",
                                        "transport": "TCP"
                                    },
                                    "status": {
                                        "error": {
                                            "message": "",
                                            "time": ""
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/SyslogSync_v1_platform_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Modify a syslog server",
                "tags": [
                    "Node Management"
                ]
            }
        },
        "/nexus/infra/api/platform/v2/clusters": {
            "get": {
                "description": "Get all clusters",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by matchExpression",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Order results by field",
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For ordered results, use ascending order. true | false, default: true",
                        "in": "query",
                        "name": "inc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Page size for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Navigate paginated results backwards. true | false, default: false.",
                        "in": "query",
                        "name": "previousPage",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Number of entries on the page for paginated results.",
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'lastReported'. Format: integer N. Report items starting with page N+1 if moving forward, N-1 if moving backwards.",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Used with Pagination. Mutually exclusive with 'offset'. Format: refer to pagination documentation",
                        "in": "query",
                        "name": "lastReported",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "items": [
                                        {
                                            "metadata": {
                                                "account": "",
                                                "creationTimestamp": "2022-08-09T22:55:34Z",
                                                "deletionTimestamp": "0001-01-01T00:00:00Z",
                                                "finalizers": {
                                                    "falcon.case.cncf.io/clusterconfig-protection": true
                                                },
                                                "generation": 0,
                                                "id": "9a5f9c2c-2594-4f8b-b86d-7c4eea57c136",
                                                "kind": "platform/v1.Cluster",
                                                "modificationTimestamp": "0001-01-01T00:00:00Z",
                                                "org": "",
                                                "resourceVersion": 2875,
                                                "schemaVersion": "",
                                                "statusGeneration": 0
                                            },
                                            "spec": {
                                                "appNetwork": {
                                                    "subnet": "1.2.3.4/16",
                                                    "subnetv6": ""
                                                },
                                                "displayName": "youCanOnlyChangeThisName",
                                                "dnsDomain": "clustername.case.local",
                                                "name": "clustername",
                                                "nameServers": [
                                                    "9.10.11.12"
                                                ],
                                                "ntpConfig": {
                                                    "keys": [
                                                        {
                                                            "authType": "md5",
                                                            "id": 1,
                                                            "key": "123",
                                                            "trusted": true
                                                        }
                                                    ],
                                                    "servers": [
                                                        {
                                                            "host": "1.2.3.4",
                                                            "keyID": 1,
                                                            "trusted": true
                                                        }
                                                    ]
                                                },
                                                "proxyConfig": {
                                                    "ignoreHosts": [
                                                        "17.18.19.20"
                                                    ],
                                                    "password": "",
                                                    "servers": [
                                                        {
                                                            "password": "",
                                                            "type": "HTTPS",
                                                            "url": "https://notareallink.local",
                                                            "username": ""
                                                        }
                                                    ],
                                                    "username": ""
                                                },
                                                "searchDomains": [
                                                    "21.22.23.24"
                                                ],
                                                "serviceNetwork": {
                                                    "subnet": "5.6.7.8/16",
                                                    "subnetv6": ""
                                                }
                                            },
                                            "status": {
                                                "currentVersion": "2.2.2a",
                                                "error": {
                                                    "message": "",
                                                    "time": ""
                                                },
                                                "targetVersion": "",
                                                "uuid": "1234"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "count": 1
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Cluster_v2_platform_GETLIST"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get all clusters",
                "tags": [
                    "Node Management"
                ]
            }
        },
        "/nexus/infra/api/platform/v2/clusters/{specName}": {
            "get": {
                "description": "Get a cluster",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "creationTimestamp": "2022-08-09T22:55:34Z",
                                        "deletionTimestamp": "0001-01-01T00:00:00Z",
                                        "finalizers": {
                                            "falcon.case.cncf.io/clusterconfig-protection": true
                                        },
                                        "generation": 0,
                                        "id": "9a5f9c2c-2594-4f8b-b86d-7c4eea57c136",
                                        "kind": "platform/v1.Cluster",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 2875,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "appNetwork": {
                                            "subnet": "1.2.3.4/16",
                                            "subnetv6": ""
                                        },
                                        "displayName": "youCanOnlyChangeThisName",
                                        "dnsDomain": "clustername.case.local",
                                        "name": "clustername",
                                        "nameServers": [
                                            "9.10.11.12"
                                        ],
                                        "ntpConfig": {
                                            "keys": [
                                                {
                                                    "authType": "md5",
                                                    "id": 1,
                                                    "key": "123",
                                                    "trusted": true
                                                }
                                            ],
                                            "servers": [
                                                {
                                                    "host": "1.2.3.4",
                                                    "keyID": 1,
                                                    "trusted": true
                                                }
                                            ]
                                        },
                                        "proxyConfig": {
                                            "ignoreHosts": [
                                                "17.18.19.20"
                                            ],
                                            "password": "",
                                            "servers": [
                                                {
                                                    "password": "",
                                                    "type": "HTTPS",
                                                    "url": "https://notareallink.local",
                                                    "username": ""
                                                }
                                            ],
                                            "username": ""
                                        },
                                        "searchDomains": [
                                            "21.22.23.24"
                                        ],
                                        "serviceNetwork": {
                                            "subnet": "5.6.7.8/16",
                                            "subnetv6": ""
                                        }
                                    },
                                    "status": {
                                        "currentVersion": "2.2.2a",
                                        "error": {
                                            "message": "",
                                            "time": ""
                                        },
                                        "targetVersion": "",
                                        "uuid": "1234"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Cluster_v2_platform_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a cluster",
                "tags": [
                    "Node Management"
                ]
            },
            "put": {
                "description": "Modify a cluster",
                "parameters": [
                    {
                        "in": "path",
                        "name": "specName",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-Rbac",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Sessionid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Usertype",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Nd-UILogin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "X-Aci-Avpair",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json; charset=utf-8": {
                            "example": {
                                "spec": {
                                    "appNetwork": {
                                        "subnet": "1.2.3.4/16",
                                        "subnetv6": ""
                                    },
                                    "dnsDomain": "clustername.case.local",
                                    "nameServers": [
                                        "9.10.11.12"
                                    ],
                                    "ntpConfig": {
                                        "keys": [
                                            {
                                                "authType": "md5",
                                                "id": 1,
                                                "key": "123",
                                                "trusted": true
                                            }
                                        ],
                                        "servers": [
                                            {
                                                "host": "1.2.3.4",
                                                "keyID": 1,
                                                "trusted": true
                                            }
                                        ]
                                    },
                                    "proxyConfig": {
                                        "ignoreHosts": [
                                            "17.18.19.20"
                                        ],
                                        "password": "",
                                        "servers": [
                                            {
                                                "password": "",
                                                "type": "HTTP",
                                                "url": "http://notareallink.local",
                                                "username": ""
                                            },
                                            {
                                                "password": "",
                                                "type": "HTTPS",
                                                "url": "https://notareallink.local",
                                                "username": ""
                                            }
                                        ],
                                        "username": ""
                                    },
                                    "searchDomains": [
                                        "21.22.23.24"
                                    ],
                                    "serviceNetwork": {
                                        "subnet": "5.6.7.8/16",
                                        "subnetv6": ""
                                    }
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/Cluster_v2_platform_PUT"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "metadata": {
                                        "account": "",
                                        "annotations": {
                                            "status.crd.case.cncf.io": "true"
                                        },
                                        "creationTimestamp": "2022-08-09T22:55:34Z",
                                        "deletionTimestamp": "0001-01-01T00:00:00Z",
                                        "finalizers": {
                                            "falcon.case.cncf.io/clusterconfig-protection": true
                                        },
                                        "generation": 0,
                                        "id": "9a5f9c2c-2594-4f8b-b86d-7c4eea57c136",
                                        "kind": "platform/v1.Cluster",
                                        "modificationTimestamp": "0001-01-01T00:00:00Z",
                                        "org": "",
                                        "resourceVersion": 45252,
                                        "schemaVersion": "",
                                        "statusGeneration": 0
                                    },
                                    "spec": {
                                        "appNetwork": {
                                            "subnet": "1.2.3.4/16",
                                            "subnetv6": ""
                                        },
                                        "displayName": "youCanOnlyChangeThisName",
                                        "dnsDomain": "clustername.case.local",
                                        "name": "clustername",
                                        "nameServers": [
                                            "9.10.11.12"
                                        ],
                                        "ntpConfig": {
                                            "keys": [
                                                {
                                                    "authType": "md5",
                                                    "id": 1,
                                                    "key": "123",
                                                    "trusted": true
                                                }
                                            ],
                                            "servers": [
                                                {
                                                    "host": "1.2.3.4",
                                                    "keyID": 1,
                                                    "trusted": true
                                                }
                                            ]
                                        },
                                        "proxyConfig": {
                                            "ignoreHosts": [
                                                "17.18.19.20"
                                            ],
                                            "password": "",
                                            "servers": [
                                                {
                                                    "password": "",
                                                    "type": "HTTP",
                                                    "url": "http://notareallink.local",
                                                    "username": ""
                                                },
                                                {
                                                    "password": "",
                                                    "type": "HTTPS",
                                                    "url": "https://notareallink.local",
                                                    "username": ""
                                                }
                                            ],
                                            "username": ""
                                        },
                                        "searchDomains": [
                                            "21.22.23.24"
                                        ],
                                        "serviceNetwork": {
                                            "subnet": "5.6.7.8/16",
                                            "subnetv6": ""
                                        }
                                    },
                                    "status": {
                                        "currentVersion": "2.2.2a",
                                        "error": {
                                            "message": "",
                                            "time": ""
                                        },
                                        "targetVersion": "",
                                        "uuid": "1234"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Cluster_v2_platform_GET"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Modify a cluster",
                "tags": [
                    "Node Management"
                ]
            }
        },
        "/refresh": {
            "post": {
                "description": "Refreshes an existing authentication token.\nAuthentication tokens are valid for a specific period of time and you must refresh it if you want to continue using the token beyond the configured duration. You can change the default token duration in the Nexus Dashboard UI.",
                "parameters": [
                    {
                        "in": "cookie",
                        "name": "AuthCookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json; charset=utf-8": {
                                "example": {
                                    "jwttoken": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijk0MjhseDEzaHMxemJldmpodnI1a3NrZ3k0Mm0wYTJtIiwidHlwIjoiSldUIn0.eyJhdnBhaXIiOiJzaGVsbDpkb21haW5zPWFsbC9hZG1pbi8iLCJleHAiOjE2MjM3ODQ1MTgsImlhdCI6MTYyMzc4MzMxOCwiaWQiOiI0OGQxMDViZGZiYzQ5YTVmY2YzOWExMGI5NjEzODZlNjFkZmU0MDA4NWNiMDMxNWQ4MThiNzYxYzU3MzVkYWZhIiwiaXNzIjoibmQiLCJpc3MtaG9zdCI6IjE3Mi4yMC40My42MCIsInJiYWMiOlt7ImRvbWFpbiI6ImFsbCIsInJvbGVzIjpbWyJhZG1pbiIsIldyaXRlUHJpdiJdLFsiYXBwLXVzZXIiLCJSZWFkUHJpdiJdXSwicm9sZXNSIjoxNjc3NzIxNiwicm9sZXNXIjoxfV0sInNlc3Npb25pZCI6IkhESEdWeWoyMEdtdXJiNUFjZnVmZGxWayIsInVzZXJmbGFncyI6MCwidXNlcmlkIjoyNTAwMiwidXNlcm5hbWUiOiJhZG1pbiIsInVzZXJ0eXBlIjoibG9jYWwifQ.ukudy7-iAYGa-Hy8Hal18emmNqNdQrHimRfMA8Ys9YC8ccR8v1tIPRgbL8_7d_v2jAqfR0H6rEmiKeD9zMM6ycbnLhBTVrSdMK8vnsHj_fpvTB-h6iujyybbsUWFBFdL1-EjnFZHqHnXlqOXiyZkcbnNeBnkD27aUPDQEQokioXeWE0vVTvjUoJ4SxVwhRsxpcVHxqbVVptvDw_7HW8xGFWfzPlBQOAf0o4IhUqnLB4FEIZwBy_S52GFeOIgQfyMxmeeFpbnzJcM0eGpouT_jNdpS7b52U75P4EbG1f7Cz3EUcbAktfZOEz5kQG6XAV5W2EYe370h042A9RXBXyQKQ",
                                    "rbac": "[{\"domain\":\"all\",\"rolesR\":16777216,\"rolesW\":1,\"roles\":[[\"admin\",\"WritePriv\"],[\"app-user\",\"ReadPriv\"]]}]",
                                    "statusCode": 200,
                                    "username": "admin",
                                    "usertype": "local"
                                },
                                "schema": {
                                    "properties": {
                                        "jwttoken": {
                                            "type": "string"
                                        },
                                        "rbac": {
                                            "type": "string"
                                        },
                                        "statusCode": {
                                            "type": "integer"
                                        },
                                        "username": {
                                            "type": "string"
                                        },
                                        "usertype": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Refresh Response"
                    }
                },
                "summary": "Refresh Authentication Token",
                "tags": [
                    "Authentication"
                ]
            }
        },
        "/api/action/class/backuprestore/status": {
            "get": {
                "description": "Status of current backup/restore operation if any, or the latest completed (successfully or unsuccessfully) one",
                "tags": [
                    "Backup Restore"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/br_status"
                                }
                            }
                        },
                        "description": "Current status"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "$ref": "#/components/responses/br_error_response"
                    }
                },
                "summary": "Get backup/restore status"
            }
        },
        "/api/action/class/backuprestore/backup/{name}": {
            "get": {
                "description": "Get details for a backup / Download a backup file",
                "tags": [
                    "Backup Restore"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Backup name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "action",
                        "description": "Set download action to download the backup file",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "",
                                "download"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Backup",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Backup information",
                                    "$ref": "#/components/schemas/br_backup_info"
                                }
                            },
                            "application/octect-stream": {
                                "schema": {
                                    "description": "Backup file content",
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "$ref": "#/components/responses/br_error_response"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "$ref": "#/components/responses/br_error_response"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "$ref": "#/components/responses/br_error_response"
                    }
                }
            },
            "delete": {
                "description": "Delete a backup",
                "tags": [
                    "Backup Restore"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Name of the backup to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Backup successfully deleted"
                    },
                    "404": {
                        "description": "Not Found",
                        "$ref": "#/components/responses/br_error_response"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "$ref": "#/components/responses/br_error_response"
                    }
                }
            }
        },
        "/api/action/class/backuprestore/backup": {
            "get": {
                "description": "Get the list of all backups",
                "tags": [
                    "Backup Restore"
                ],
                "responses": {
                    "200": {
                        "description": "Backup list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/br_backup_info"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "$ref": "#/components/responses/br_error_response"
                    }
                }
            },
            "post": {
                "description": "Start a new backup",
                "tags": [
                    "Backup Restore"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the backup to create"
                                    },
                                    "type": {
                                        "description": "Type of the backup to create",
                                        "$ref": "#/components/schemas/br_type"
                                    },
                                    "destination": {
                                        "type": "string",
                                        "description": "Name of the remote location where the file will be saved or empty for local backup"
                                    },
                                    "encryptionKey": {
                                        "type": "string",
                                        "description": "Backup file encryption key"
                                    }
                                },
                                "required": [
                                    "name",
                                    "type",
                                    "destination",
                                    "encryptionKey"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request accepted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "$ref": "#/components/responses/br_error_response"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden",
                        "$ref": "#/components/responses/br_error_response"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "$ref": "#/components/responses/br_error_response"
                    }
                }
            }
        },
        "/api/config/class/backuprestore/backup/schedule/{name}": {
            "get": {
                "tags": [
                    "Backup Restore"
                ],
                "responses": {
                    "200": {
                        "description": "Backup schedule info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/br_schedule_info"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "$ref": "#/components/responses/br_error_response"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "$ref": "#/components/responses/br_error_response"
                    }
                }
            },
            "put": {
                "tags": [
                    "Backup Restore"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Name of the backup schedule to modify",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/br_schedule_request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Backup schedule modified successfully"
                    },
                    "400": {
                        "description": "Bad Request",
                        "$ref": "#/components/responses/br_error_response"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "$ref": "#/components/responses/br_error_response"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "$ref": "#/components/responses/br_error_response"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Backup Restore"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Name of the backup schedule to delete",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Backup schedule delete successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "$ref": "#/components/responses/br_error_response"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "$ref": "#/components/responses/br_error_response"
                    }
                }
            }
        },
        "/api/config/class/backuprestore/backup/schedule": {
            "get": {
                "description": "Get list of backup schedules",
                "tags": [
                    "Backup Restore"
                ],
                "responses": {
                    "200": {
                        "description": "List of backup schedules",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/br_schedule_info"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new backup schedule",
                "tags": [
                    "Backup Restore"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/br_schedule_request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Backup schedule successfully created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "$ref": "#/components/responses/br_error_response"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "$ref": "#/components/responses/br_error_response"
                    }
                }
            }
        },
        "/api/action/class/backuprestore/restore/file-import": {
            "post": {
                "summary": "Import and validate a backup file to restore",
                "description": "Import a backup file and perform the validation",
                "tags": [
                    "Backup Restore"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/br_file_import_request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request accepted"
                    },
                    "400": {
                        "description": "Bad request",
                        "$ref": "#/components/responses/br_error_response"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden",
                        "$ref": "#/components/responses/br_error_response"
                    },
                    "500": {
                        "description": "Internal server error",
                        "$ref": "#/components/responses/br_error_response"
                    }
                }
            },
            "delete": {
                "summary": "Cancel file-import request",
                "description": "Cancel file-import request",
                "tags": [
                    "Backup Restore"
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "$ref": "#/components/responses/br_error_response"
                    },
                    "500": {
                        "description": "Internal server error",
                        "$ref": "#/components/responses/br_error_response"
                    }
                }
            }
        },
        "/api/action/class/backuprestore/restore": {
            "post": {
                "summary": "Perform a restore",
                "description": "Perform a restore operation",
                "tags": [
                    "Backup Restore"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/br_restore_request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request accepted"
                    },
                    "400": {
                        "description": "Bad request",
                        "$ref": "#/components/responses/br_error_response"
                    },
                    "403": {
                        "description": "Forbidden",
                        "$ref": "#/components/responses/br_error_response"
                    },
                    "500": {
                        "description": "Internal server error",
                        "$ref": "#/components/responses/br_error_response"
                    }
                }
            }
        },
        "/api/config/class/securecopystorage": {
            "get": {
                "description": "Get list of scp/sftp remote locations",
                "tags": [
                    "Backup Restore"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/br_secure_copy"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "$ref": "#/components/responses/br_error_response"
                    }
                }
            },
            "post": {
                "description": "Create a new scp/sftp remote location",
                "tags": [
                    "Backup Restore"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/br_secure_copy"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request accepted"
                    },
                    "400": {
                        "description": "Bad request",
                        "$ref": "#/components/responses/br_error_response"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden",
                        "$ref": "#/components/responses/br_sc_error_forbidden"
                    },
                    "500": {
                        "description": "Internal server error",
                        "$ref": "#/components/responses/br_error_response"
                    }
                }
            }
        },
        "/api/config/class/securecopystorage/{name}": {
            "get": {
                "description": "Get a remote scp/sftp location",
                "tags": [
                    "Backup Restore"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "Name of the scp/sftp remote location to get",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/br_schedule_info"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "$ref": "#/components/responses/br_error_response"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "$ref": "#/components/responses/br_error_response"
                    }
                }
            },
            "put": {
                "description": "Modify a scp/sftp remote location",
                "tags": [
                    "Backup Restore"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "Name of the scp/sftp remote location to modify",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/br_secure_copy"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Scp/sftp remote location modifiedsuccessful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden",
                        "$ref": "#/components/responses/br_sc_error_forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "$ref": "#/components/responses/br_error_response"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "$ref": "#/components/responses/br_error_response"
                    }
                }
            },
            "delete": {
                "description": "Delete a remote scp/sftp location",
                "tags": [
                    "Backup Restore"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "Name of the scp/sftp remote location to delete",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Scp/sftp remote location deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "$ref": "#/components/responses/br_error_response"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "$ref": "#/components/responses/br_error_response"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ACIConfig_v4_sitemanagement_GET": {
                "properties": {
                    "InbandEPGDN": {
                        "description": "inband epg dn configured for site",
                        "type": "string"
                    }
                }
            },
            "ACIConfig_v4_sitemanagement_POST": {
                "properties": {
                    "InbandEPGDN": {
                        "description": "inband epg dn configured for site",
                        "type": "string"
                    }
                }
            },
            "ACIConfig_v4_sitemanagement_PUT": {
                "properties": {
                    "InbandEPGDN": {
                        "description": "inband epg dn configured for site",
                        "type": "string"
                    }
                }
            },
            "ACIFabricResponse_v4_sitemanagement_GET": {
                "properties": {
                    "inbepgdn": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "ACIFabricResponse_v4_sitemanagement_POST": {
                "properties": {
                    "inbepgdn": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "ACIFabricResponse_v4_sitemanagement_PUT": {
                "properties": {
                    "inbepgdn": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "ACIStatus_v4_sitemanagement_GET": {
                "properties": {
                    "appUserName": {
                        "description": "appuser created in the ACI/cloudACI controller",
                        "type": "string"
                    }
                }
            },
            "ACIStatus_v4_sitemanagement_POST": {
                "properties": {
                    "appUserName": {
                        "description": "appuser created in the ACI/cloudACI controller",
                        "type": "string"
                    }
                }
            },
            "ACIStatus_v4_sitemanagement_PUT": {
                "properties": {
                    "appUserName": {
                        "description": "appuser created in the ACI/cloudACI controller",
                        "type": "string"
                    }
                }
            },
            "AccountSpecWrapper_v1_argo.cisco.com_GET": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "identity": {
                        "type": "string"
                    }
                }
            },
            "AccountSpecWrapper_v1_argo.cisco.com_POST": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "identity": {
                        "type": "string"
                    }
                }
            },
            "AccountSpecWrapper_v1_argo.cisco.com_PUT": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "identity": {
                        "type": "string"
                    }
                }
            },
            "AccountSpec_v1_argo.cisco.com_GET": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "identity": {
                        "type": "string"
                    }
                }
            },
            "AccountSpec_v1_argo.cisco.com_POST": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "identity": {
                        "type": "string"
                    }
                }
            },
            "AccountSpec_v1_argo.cisco.com_PUT": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "identity": {
                        "type": "string"
                    }
                }
            },
            "AlertConfig_v1_eventmonitoring_GET": {
                "description": "Alert configuration being monitored as part of event configuration",
                "properties": {
                    "allowEmptyResult": {
                        "description": "allow metric result to be empty",
                        "type": "boolean"
                    },
                    "autoclear": {
                        "description": "whether the alert can be auto cleared or needs mandatory customer ack",
                        "type": "boolean"
                    },
                    "isEncrypted": {
                        "description": "Whether the alert config needs to be encrypted",
                        "type": "boolean"
                    },
                    "metricExpression": {
                        "description": "Prometheus metric being tracked such as cluster-wide CPU usage",
                        "type": "string"
                    },
                    "recordLabels": {
                        "description": "Query result labels that differentiate between multiple entities being tracked under the same parent event configuration",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "severityConditions": {
                        "description": "Types of severity conditions to track",
                        "items": {
                            "$ref": "#/components/schemas/SeverityCondition_v1_eventmonitoring_GET"
                        },
                        "type": "array"
                    }
                }
            },
            "AlertConfig_v1_eventmonitoring_POST": {
                "description": "Alert configuration being monitored as part of event configuration",
                "properties": {
                    "allowEmptyResult": {
                        "description": "allow metric result to be empty",
                        "type": "boolean"
                    },
                    "autoclear": {
                        "description": "whether the alert can be auto cleared or needs mandatory customer ack",
                        "type": "boolean"
                    },
                    "isEncrypted": {
                        "description": "Whether the alert config needs to be encrypted",
                        "type": "boolean"
                    },
                    "metricExpression": {
                        "description": "Prometheus metric being tracked such as cluster-wide CPU usage",
                        "type": "string"
                    },
                    "recordLabels": {
                        "description": "Query result labels that differentiate between multiple entities being tracked under the same parent event configuration",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "severityConditions": {
                        "description": "Types of severity conditions to track",
                        "items": {
                            "$ref": "#/components/schemas/SeverityCondition_v1_eventmonitoring_POST"
                        },
                        "type": "array"
                    }
                }
            },
            "AlertConfig_v1_eventmonitoring_PUT": {
                "description": "Alert configuration being monitored as part of event configuration",
                "properties": {
                    "allowEmptyResult": {
                        "description": "allow metric result to be empty",
                        "type": "boolean"
                    },
                    "autoclear": {
                        "description": "whether the alert can be auto cleared or needs mandatory customer ack",
                        "type": "boolean"
                    },
                    "isEncrypted": {
                        "description": "Whether the alert config needs to be encrypted",
                        "type": "boolean"
                    },
                    "metricExpression": {
                        "description": "Prometheus metric being tracked such as cluster-wide CPU usage",
                        "type": "string"
                    },
                    "recordLabels": {
                        "description": "Query result labels that differentiate between multiple entities being tracked under the same parent event configuration",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "severityConditions": {
                        "description": "Types of severity conditions to track",
                        "items": {
                            "$ref": "#/components/schemas/SeverityCondition_v1_eventmonitoring_PUT"
                        },
                        "type": "array"
                    }
                }
            },
            "AnnotationLockValue_v4_sitemanagement_GET": {
                "properties": {
                    "value": {
                        "description": "annotation lock value",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                }
            },
            "AnnotationLockValue_v4_sitemanagement_POST": {
                "properties": {
                    "value": {
                        "description": "annotation lock value",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                }
            },
            "AnnotationLockValue_v4_sitemanagement_PUT": {
                "properties": {
                    "value": {
                        "description": "annotation lock value",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                }
            },
            "Any_GET": {
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "type": "object"
                    },
                    "status": {
                        "type": "object"
                    }
                },
                "required": [
                    "metadata"
                ]
            },
            "Any_PATCH": {
                "items": {
                    "anyOf": [
                        {
                            "properties": {
                                "op": {
                                    "description": "The type of operation to perform",
                                    "enum": [
                                        "add",
                                        "replace",
                                        "test"
                                    ],
                                    "example": "replace",
                                    "type": "string"
                                },
                                "path": {
                                    "description": "A JSON Pointer string specifying the part of the document to operate on",
                                    "example": "spec.favPet.age",
                                    "type": "string"
                                },
                                "value": {
                                    "description": "A JSON value used in \"add\", \"replace\", and \"test\" operations",
                                    "example": 38
                                }
                            },
                            "required": [
                                "op",
                                "path",
                                "value"
                            ],
                            "type": "object"
                        },
                        {
                            "properties": {
                                "op": {
                                    "description": "The type of operation to perform",
                                    "enum": [
                                        "remove"
                                    ],
                                    "example": "remove",
                                    "type": "string"
                                },
                                "path": {
                                    "description": "A JSON Pointer string specifying the part of the document to operate on",
                                    "example": "spec.favPet.name",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "op",
                                "path"
                            ],
                            "type": "object"
                        },
                        {
                            "properties": {
                                "from": {
                                    "description": "A JSON Pointer string specifying the part of the document to operate on",
                                    "example": "spec.favPet.name",
                                    "type": "string"
                                },
                                "op": {
                                    "description": "The type of operation to perform",
                                    "enum": [
                                        "move",
                                        "copy"
                                    ],
                                    "example": "move",
                                    "type": "string"
                                },
                                "path": {
                                    "description": "A JSON Pointer string specifying the part of the document to operate on",
                                    "example": "spec.favPet.name",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "op",
                                "from",
                                "path"
                            ],
                            "type": "object"
                        }
                    ]
                },
                "type": "array"
            },
            "Any_PUT": {
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "type": "object"
                    },
                    "status": {
                        "type": "object"
                    }
                }
            },
            "AppInstances_v4_aaa_GET": {
                "properties": {
                    "appID": {
                        "description": "Application ID",
                        "type": "string"
                    },
                    "lastUpdated": {
                        "description": "Application last updated timestamp",
                        "type": "string"
                    }
                }
            },
            "AppInstances_v4_aaa_POST": {
                "properties": {
                    "appID": {
                        "description": "Application ID",
                        "type": "string"
                    },
                    "lastUpdated": {
                        "description": "Application last updated timestamp",
                        "type": "string"
                    }
                }
            },
            "AppInstances_v4_aaa_PUT": {
                "properties": {
                    "appID": {
                        "description": "Application ID",
                        "type": "string"
                    },
                    "lastUpdated": {
                        "description": "Application last updated timestamp",
                        "type": "string"
                    }
                }
            },
            "ApplicationSpecWrapper_v1_argo.cisco.com_GET": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "realm": {
                        "type": "string"
                    },
                    "resources": {
                        "items": {
                            "$ref": "#/components/schemas/ResourceDescriptor_v1_argo.cisco.com_GET"
                        },
                        "type": "array"
                    },
                    "services": {
                        "items": {
                            "$ref": "#/components/schemas/ServiceDescriptor_v1_argo.cisco.com_GET"
                        },
                        "type": "array"
                    },
                    "urlList": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "urlTree": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "ApplicationSpecWrapper_v1_argo.cisco.com_POST": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "realm": {
                        "type": "string"
                    },
                    "resources": {
                        "items": {
                            "$ref": "#/components/schemas/ResourceDescriptor_v1_argo.cisco.com_POST"
                        },
                        "type": "array"
                    },
                    "services": {
                        "items": {
                            "$ref": "#/components/schemas/ServiceDescriptor_v1_argo.cisco.com_POST"
                        },
                        "type": "array"
                    },
                    "urlList": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "urlTree": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "ApplicationSpecWrapper_v1_argo.cisco.com_PUT": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "realm": {
                        "type": "string"
                    },
                    "resources": {
                        "items": {
                            "$ref": "#/components/schemas/ResourceDescriptor_v1_argo.cisco.com_PUT"
                        },
                        "type": "array"
                    },
                    "services": {
                        "items": {
                            "$ref": "#/components/schemas/ServiceDescriptor_v1_argo.cisco.com_PUT"
                        },
                        "type": "array"
                    },
                    "urlList": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "urlTree": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "ApplicationSpec_v1_argo.cisco.com_GET": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "realm": {
                        "type": "string"
                    },
                    "resources": {
                        "items": {
                            "$ref": "#/components/schemas/ResourceDescriptor_v1_argo.cisco.com_GET"
                        },
                        "type": "array"
                    },
                    "services": {
                        "items": {
                            "$ref": "#/components/schemas/ServiceDescriptor_v1_argo.cisco.com_GET"
                        },
                        "type": "array"
                    },
                    "urlList": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "urlTree": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "ApplicationSpec_v1_argo.cisco.com_POST": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "realm": {
                        "type": "string"
                    },
                    "resources": {
                        "items": {
                            "$ref": "#/components/schemas/ResourceDescriptor_v1_argo.cisco.com_POST"
                        },
                        "type": "array"
                    },
                    "services": {
                        "items": {
                            "$ref": "#/components/schemas/ServiceDescriptor_v1_argo.cisco.com_POST"
                        },
                        "type": "array"
                    },
                    "urlList": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "urlTree": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "ApplicationSpec_v1_argo.cisco.com_PUT": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "realm": {
                        "type": "string"
                    },
                    "resources": {
                        "items": {
                            "$ref": "#/components/schemas/ResourceDescriptor_v1_argo.cisco.com_PUT"
                        },
                        "type": "array"
                    },
                    "services": {
                        "items": {
                            "$ref": "#/components/schemas/ServiceDescriptor_v1_argo.cisco.com_PUT"
                        },
                        "type": "array"
                    },
                    "urlList": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "urlTree": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "CertificateMetadata_v4_aaa_GET": {
                "properties": {
                    "certificate": {
                        "description": "RSA Certificate",
                        "type": "string"
                    },
                    "domainName": {
                        "description": "Domain Name",
                        "type": "string"
                    },
                    "intermediateCA": {
                        "description": "Intermediate Certificate",
                        "type": "string"
                    },
                    "key": {
                        "description": "Base64 encoded RSA Key",
                        "type": "string"
                    },
                    "notAfter": {
                        "description": "Certificate Validity in RFC3339 format",
                        "type": "string"
                    },
                    "notBefore": {
                        "description": "Certificate Validity in RFC3339 format",
                        "type": "string"
                    },
                    "rootCA": {
                        "description": "Root Certificate",
                        "type": "string"
                    }
                }
            },
            "CertificateMetadata_v4_aaa_POST": {
                "properties": {
                    "certificate": {
                        "description": "RSA Certificate",
                        "type": "string"
                    },
                    "domainName": {
                        "description": "Domain Name",
                        "type": "string"
                    },
                    "intermediateCA": {
                        "description": "Intermediate Certificate",
                        "type": "string"
                    },
                    "key": {
                        "description": "Base64 encoded RSA Key",
                        "type": "string"
                    },
                    "rootCA": {
                        "description": "Root Certificate",
                        "type": "string"
                    }
                }
            },
            "CertificateMetadata_v4_aaa_PUT": {
                "properties": {
                    "certificate": {
                        "description": "RSA Certificate",
                        "type": "string"
                    },
                    "domainName": {
                        "description": "Domain Name",
                        "type": "string"
                    },
                    "intermediateCA": {
                        "description": "Intermediate Certificate",
                        "type": "string"
                    },
                    "key": {
                        "description": "Base64 encoded RSA Key",
                        "type": "string"
                    },
                    "rootCA": {
                        "description": "Root Certificate",
                        "type": "string"
                    }
                }
            },
            "CloudACIConfig_v4_sitemanagement_GET": {
                "properties": {
                    "InbandEPGDN": {
                        "description": "inband epg dn configured for site",
                        "type": "string"
                    }
                }
            },
            "CloudACIConfig_v4_sitemanagement_POST": {
                "properties": {
                    "InbandEPGDN": {
                        "description": "inband epg dn configured for site",
                        "type": "string"
                    }
                }
            },
            "CloudACIConfig_v4_sitemanagement_PUT": {
                "properties": {
                    "InbandEPGDN": {
                        "description": "inband epg dn configured for site",
                        "type": "string"
                    }
                }
            },
            "CloudACIFabricResponse_v4_sitemanagement_GET": {
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "CloudACIFabricResponse_v4_sitemanagement_POST": {
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "CloudACIFabricResponse_v4_sitemanagement_PUT": {
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "CloudACIStatus_v4_sitemanagement_GET": {
                "properties": {
                    "appUserName": {
                        "description": "appuser created in the ACI/cloudACI controller",
                        "type": "string"
                    },
                    "provider": {
                        "description": "cloudACI provider name",
                        "type": "string"
                    },
                    "regionCount": {
                        "description": "cloudACI region count",
                        "type": "string"
                    },
                    "regionName": {
                        "description": "cloudACI region name",
                        "type": "string"
                    },
                    "routerCount": {
                        "description": "cloudACI router count",
                        "type": "string"
                    },
                    "virtualNetworkCount": {
                        "description": "cloudACI virtual network count",
                        "type": "string"
                    },
                    "vpcCount": {
                        "description": "cloudACI vpc count",
                        "type": "string"
                    }
                }
            },
            "CloudACIStatus_v4_sitemanagement_POST": {
                "properties": {
                    "appUserName": {
                        "description": "appuser created in the ACI/cloudACI controller",
                        "type": "string"
                    },
                    "provider": {
                        "description": "cloudACI provider name",
                        "type": "string"
                    },
                    "regionCount": {
                        "description": "cloudACI region count",
                        "type": "string"
                    },
                    "regionName": {
                        "description": "cloudACI region name",
                        "type": "string"
                    },
                    "routerCount": {
                        "description": "cloudACI router count",
                        "type": "string"
                    },
                    "virtualNetworkCount": {
                        "description": "cloudACI virtual network count",
                        "type": "string"
                    },
                    "vpcCount": {
                        "description": "cloudACI vpc count",
                        "type": "string"
                    }
                }
            },
            "CloudACIStatus_v4_sitemanagement_PUT": {
                "properties": {
                    "appUserName": {
                        "description": "appuser created in the ACI/cloudACI controller",
                        "type": "string"
                    },
                    "provider": {
                        "description": "cloudACI provider name",
                        "type": "string"
                    },
                    "regionCount": {
                        "description": "cloudACI region count",
                        "type": "string"
                    },
                    "regionName": {
                        "description": "cloudACI region name",
                        "type": "string"
                    },
                    "routerCount": {
                        "description": "cloudACI router count",
                        "type": "string"
                    },
                    "virtualNetworkCount": {
                        "description": "cloudACI virtual network count",
                        "type": "string"
                    },
                    "vpcCount": {
                        "description": "cloudACI vpc count",
                        "type": "string"
                    }
                }
            },
            "ClusterNode_v4_federation_GET": {
                "properties": {
                    "currentState": {
                        "description": "Current state of the node",
                        "enum": [
                            "Unknown",
                            "Init",
                            "Active",
                            "Discovering",
                            "Undiscovered",
                            "Unregistered",
                            "Deleted",
                            "Incompatible",
                            "Rebooting",
                            "Unhealthy",
                            "Failover"
                        ],
                        "type": "string"
                    },
                    "dataIP": {
                        "description": "data/in-band IP of the node",
                        "type": "string"
                    },
                    "managementIP": {
                        "description": "management/out-of-band IP of the node",
                        "type": "string"
                    },
                    "managementIPv6": {
                        "description": "management/out-of-band IPv6 of the node",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the node",
                        "type": "string"
                    },
                    "serialNumber": {
                        "description": "serial number of the node",
                        "type": "string"
                    },
                    "version": {
                        "description": "Image version of the node",
                        "type": "string"
                    }
                }
            },
            "ClusterNode_v4_federation_POST": {
                "properties": {
                    "currentState": {
                        "description": "Current state of the node",
                        "enum": [
                            "Unknown",
                            "Init",
                            "Active",
                            "Discovering",
                            "Undiscovered",
                            "Unregistered",
                            "Deleted",
                            "Incompatible",
                            "Rebooting",
                            "Unhealthy",
                            "Failover"
                        ],
                        "type": "string"
                    },
                    "dataIP": {
                        "description": "data/in-band IP of the node",
                        "type": "string"
                    },
                    "managementIP": {
                        "description": "management/out-of-band IP of the node",
                        "type": "string"
                    },
                    "managementIPv6": {
                        "description": "management/out-of-band IPv6 of the node",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the node",
                        "type": "string"
                    },
                    "serialNumber": {
                        "description": "serial number of the node",
                        "type": "string"
                    },
                    "version": {
                        "description": "Image version of the node",
                        "type": "string"
                    }
                }
            },
            "ClusterNode_v4_federation_PUT": {
                "properties": {
                    "currentState": {
                        "description": "Current state of the node",
                        "enum": [
                            "Unknown",
                            "Init",
                            "Active",
                            "Discovering",
                            "Undiscovered",
                            "Unregistered",
                            "Deleted",
                            "Incompatible",
                            "Rebooting",
                            "Unhealthy",
                            "Failover"
                        ],
                        "type": "string"
                    },
                    "dataIP": {
                        "description": "data/in-band IP of the node",
                        "type": "string"
                    },
                    "managementIP": {
                        "description": "management/out-of-band IP of the node",
                        "type": "string"
                    },
                    "managementIPv6": {
                        "description": "management/out-of-band IPv6 of the node",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the node",
                        "type": "string"
                    },
                    "serialNumber": {
                        "description": "serial number of the node",
                        "type": "string"
                    },
                    "version": {
                        "description": "Image version of the node",
                        "type": "string"
                    }
                }
            },
            "ClusterSpecNTPConfig_v2_platform_GET": {
                "description": "Cluster NTP config",
                "properties": {
                    "keys": {
                        "description": "Cluster NTP keys",
                        "items": {
                            "$ref": "#/components/schemas/ClusterSpecNTPKey_v2_platform_GET"
                        },
                        "type": "array"
                    },
                    "servers": {
                        "description": "Cluster NTP servers",
                        "items": {
                            "$ref": "#/components/schemas/ClusterSpecNTPServer_v2_platform_GET"
                        },
                        "type": "array"
                    }
                }
            },
            "ClusterSpecNTPConfig_v2_platform_POST": {
                "description": "Cluster NTP config",
                "properties": {
                    "keys": {
                        "description": "Cluster NTP keys",
                        "items": {
                            "$ref": "#/components/schemas/ClusterSpecNTPKey_v2_platform_POST"
                        },
                        "type": "array"
                    },
                    "servers": {
                        "description": "Cluster NTP servers",
                        "items": {
                            "$ref": "#/components/schemas/ClusterSpecNTPServer_v2_platform_POST"
                        },
                        "type": "array"
                    }
                }
            },
            "ClusterSpecNTPConfig_v2_platform_PUT": {
                "description": "Cluster NTP config",
                "properties": {
                    "keys": {
                        "description": "Cluster NTP keys",
                        "items": {
                            "$ref": "#/components/schemas/ClusterSpecNTPKey_v2_platform_PUT"
                        },
                        "type": "array"
                    },
                    "servers": {
                        "description": "Cluster NTP servers",
                        "items": {
                            "$ref": "#/components/schemas/ClusterSpecNTPServer_v2_platform_PUT"
                        },
                        "type": "array"
                    }
                }
            },
            "ClusterSpecNTPKey_v2_platform_GET": {
                "description": "Cluster NTP key",
                "properties": {
                    "authType": {
                        "description": "Cluster NTP server key hash type",
                        "enum": [
                            "MD5",
                            "SHA1",
                            "AES128CMAC"
                        ],
                        "type": "string"
                    },
                    "id": {
                        "description": "Cluster NTP server key ID",
                        "type": "integer"
                    },
                    "key": {
                        "description": "Cluster NTP server symmetrical key",
                        "type": "string"
                    },
                    "trusted": {
                        "description": "Cluster NTP server key is trusted",
                        "type": "boolean"
                    }
                }
            },
            "ClusterSpecNTPKey_v2_platform_POST": {
                "description": "Cluster NTP key",
                "properties": {
                    "authType": {
                        "description": "Cluster NTP server key hash type",
                        "enum": [
                            "MD5",
                            "SHA1",
                            "AES128CMAC"
                        ],
                        "type": "string"
                    },
                    "id": {
                        "description": "Cluster NTP server key ID",
                        "type": "integer"
                    },
                    "key": {
                        "description": "Cluster NTP server symmetrical key",
                        "type": "string"
                    },
                    "trusted": {
                        "description": "Cluster NTP server key is trusted",
                        "type": "boolean"
                    }
                }
            },
            "ClusterSpecNTPKey_v2_platform_PUT": {
                "description": "Cluster NTP key",
                "properties": {
                    "authType": {
                        "description": "Cluster NTP server key hash type",
                        "enum": [
                            "MD5",
                            "SHA1",
                            "AES128CMAC"
                        ],
                        "type": "string"
                    },
                    "id": {
                        "description": "Cluster NTP server key ID",
                        "type": "integer"
                    },
                    "key": {
                        "description": "Cluster NTP server symmetrical key",
                        "type": "string"
                    },
                    "trusted": {
                        "description": "Cluster NTP server key is trusted",
                        "type": "boolean"
                    }
                }
            },
            "ClusterSpecNTPServer_v2_platform_GET": {
                "description": "Cluster NTP Server",
                "properties": {
                    "host": {
                        "description": "Cluster NTP server ip/fqdn",
                        "type": "string"
                    },
                    "keyID": {
                        "description": "Cluster NTP server symmetrical key ID",
                        "type": "string"
                    },
                    "prefer": {
                        "description": "Cluster NTP server is preferred",
                        "type": "boolean"
                    }
                }
            },
            "ClusterSpecNTPServer_v2_platform_POST": {
                "description": "Cluster NTP Server",
                "properties": {
                    "host": {
                        "description": "Cluster NTP server ip/fqdn",
                        "type": "string"
                    },
                    "keyID": {
                        "description": "Cluster NTP server symmetrical key ID",
                        "type": "string"
                    },
                    "prefer": {
                        "description": "Cluster NTP server is preferred",
                        "type": "boolean"
                    }
                }
            },
            "ClusterSpecNTPServer_v2_platform_PUT": {
                "description": "Cluster NTP Server",
                "properties": {
                    "host": {
                        "description": "Cluster NTP server ip/fqdn",
                        "type": "string"
                    },
                    "keyID": {
                        "description": "Cluster NTP server symmetrical key ID",
                        "type": "string"
                    },
                    "prefer": {
                        "description": "Cluster NTP server is preferred",
                        "type": "boolean"
                    }
                }
            },
            "ClusterSpecNetwork_v1_platform_GET": {
                "description": "Cluster network subnet configuration",
                "properties": {
                    "subnet": {
                        "description": "IPv4 network address and mask",
                        "type": "string"
                    },
                    "subnetv6": {
                        "description": "IPv6 network address and mask",
                        "type": "string"
                    }
                }
            },
            "ClusterSpecNetwork_v1_platform_POST": {
                "description": "Cluster network subnet configuration",
                "properties": {
                    "subnet": {
                        "description": "IPv4 network address and mask",
                        "type": "string"
                    },
                    "subnetv6": {
                        "description": "IPv6 network address and mask",
                        "type": "string"
                    }
                }
            },
            "ClusterSpecNetwork_v1_platform_PUT": {
                "description": "Cluster network subnet configuration",
                "properties": {
                    "subnet": {
                        "description": "IPv4 network address and mask",
                        "type": "string"
                    },
                    "subnetv6": {
                        "description": "IPv6 network address and mask",
                        "type": "string"
                    }
                }
            },
            "ClusterSpecNetwork_v2_platform_GET": {
                "description": "Cluster network subnet configuration",
                "properties": {
                    "subnet": {
                        "description": "IPv4 network address and mask",
                        "type": "string"
                    },
                    "subnetv6": {
                        "description": "IPv6 network address and mask",
                        "type": "string"
                    }
                }
            },
            "ClusterSpecNetwork_v2_platform_POST": {
                "description": "Cluster network subnet configuration",
                "properties": {
                    "subnet": {
                        "description": "IPv4 network address and mask",
                        "type": "string"
                    },
                    "subnetv6": {
                        "description": "IPv6 network address and mask",
                        "type": "string"
                    }
                }
            },
            "ClusterSpecNetwork_v2_platform_PUT": {
                "description": "Cluster network subnet configuration",
                "properties": {
                    "subnet": {
                        "description": "IPv4 network address and mask",
                        "type": "string"
                    },
                    "subnetv6": {
                        "description": "IPv6 network address and mask",
                        "type": "string"
                    }
                }
            },
            "ClusterSpecProxyConfig_v1_platform_GET": {
                "description": "Cluster proxy server & ignorehosts config",
                "properties": {
                    "ignoreHosts": {
                        "description": "Proxy ignore host list",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "password": {
                        "description": "Cluster proxy password",
                        "type": "string"
                    },
                    "servers": {
                        "description": "Proxy server list",
                        "items": {
                            "$ref": "#/components/schemas/ClusterSpecProxyServer_v1_platform_GET"
                        },
                        "type": "array"
                    },
                    "username": {
                        "description": "Cluster proxy username",
                        "type": "string"
                    }
                }
            },
            "ClusterSpecProxyConfig_v1_platform_POST": {
                "description": "Cluster proxy server & ignorehosts config",
                "properties": {
                    "ignoreHosts": {
                        "description": "Proxy ignore host list",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "password": {
                        "description": "Cluster proxy password",
                        "type": "string"
                    },
                    "servers": {
                        "description": "Proxy server list",
                        "items": {
                            "$ref": "#/components/schemas/ClusterSpecProxyServer_v1_platform_POST"
                        },
                        "type": "array"
                    },
                    "username": {
                        "description": "Cluster proxy username",
                        "type": "string"
                    }
                }
            },
            "ClusterSpecProxyConfig_v1_platform_PUT": {
                "description": "Cluster proxy server & ignorehosts config",
                "properties": {
                    "ignoreHosts": {
                        "description": "Proxy ignore host list",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "password": {
                        "description": "Cluster proxy password",
                        "type": "string"
                    },
                    "servers": {
                        "description": "Proxy server list",
                        "items": {
                            "$ref": "#/components/schemas/ClusterSpecProxyServer_v1_platform_PUT"
                        },
                        "type": "array"
                    },
                    "username": {
                        "description": "Cluster proxy username",
                        "type": "string"
                    }
                }
            },
            "ClusterSpecProxyServer_v1_platform_GET": {
                "description": "Cluster proxy server config",
                "properties": {
                    "password": {
                        "description": "Proxy password",
                        "type": "string"
                    },
                    "type": {
                        "description": "Proxy type",
                        "enum": [
                            "HTTP",
                            "HTTPS"
                        ],
                        "type": "string"
                    },
                    "url": {
                        "description": "Proxy url",
                        "type": "string"
                    },
                    "username": {
                        "description": "Proxy username",
                        "type": "string"
                    }
                }
            },
            "ClusterSpecProxyServer_v1_platform_POST": {
                "description": "Cluster proxy server config",
                "properties": {
                    "password": {
                        "description": "Proxy password",
                        "type": "string"
                    },
                    "type": {
                        "description": "Proxy type",
                        "enum": [
                            "HTTP",
                            "HTTPS"
                        ],
                        "type": "string"
                    },
                    "url": {
                        "description": "Proxy url",
                        "type": "string"
                    },
                    "username": {
                        "description": "Proxy username",
                        "type": "string"
                    }
                }
            },
            "ClusterSpecProxyServer_v1_platform_PUT": {
                "description": "Cluster proxy server config",
                "properties": {
                    "password": {
                        "description": "Proxy password",
                        "type": "string"
                    },
                    "type": {
                        "description": "Proxy type",
                        "enum": [
                            "HTTP",
                            "HTTPS"
                        ],
                        "type": "string"
                    },
                    "url": {
                        "description": "Proxy url",
                        "type": "string"
                    },
                    "username": {
                        "description": "Proxy username",
                        "type": "string"
                    }
                }
            },
            "ClusterSpecWrapper_v1_platform_GET": {
                "properties": {
                    "appNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_GET",
                        "description": "Cluster app network"
                    },
                    "displayName": {
                        "description": "Cluster Display name",
                        "type": "string"
                    },
                    "dnsDomain": {
                        "description": "DNS domain",
                        "type": "string"
                    },
                    "name": {
                        "description": "Cluster name",
                        "type": "string"
                    },
                    "nameServers": {
                        "description": "DNS name servers",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "networkMode": {
                        "description": "Shows what IP protocols are configured on this cluster",
                        "enum": [
                            "SingleStack-IPV4",
                            "SingleStack-IPV6",
                            "DualStack"
                        ],
                        "type": "string"
                    },
                    "ntpServers": {
                        "description": "Cluster NTP servers",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "proxyConfig": {
                        "$ref": "#/components/schemas/ClusterSpecProxyConfig_v1_platform_GET",
                        "description": "Cluster proxy config"
                    },
                    "searchDomains": {
                        "description": "DNS search domains",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "serviceNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_GET",
                        "description": "Cluster service network"
                    }
                }
            },
            "ClusterSpecWrapper_v1_platform_POST": {
                "properties": {
                    "appNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_POST",
                        "description": "Cluster app network"
                    },
                    "displayName": {
                        "description": "Cluster Display name",
                        "type": "string"
                    },
                    "dnsDomain": {
                        "description": "DNS domain",
                        "type": "string"
                    },
                    "name": {
                        "description": "Cluster name",
                        "type": "string"
                    },
                    "nameServers": {
                        "description": "DNS name servers",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "networkMode": {
                        "description": "Shows what IP protocols are configured on this cluster",
                        "enum": [
                            "SingleStack-IPV4",
                            "SingleStack-IPV6",
                            "DualStack"
                        ],
                        "type": "string"
                    },
                    "ntpServers": {
                        "description": "Cluster NTP servers",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "proxyConfig": {
                        "$ref": "#/components/schemas/ClusterSpecProxyConfig_v1_platform_POST",
                        "description": "Cluster proxy config"
                    },
                    "searchDomains": {
                        "description": "DNS search domains",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "serviceNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_POST",
                        "description": "Cluster service network"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ClusterSpecWrapper_v1_platform_PUT": {
                "properties": {
                    "appNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_PUT",
                        "description": "Cluster app network"
                    },
                    "displayName": {
                        "description": "Cluster Display name",
                        "type": "string"
                    },
                    "dnsDomain": {
                        "description": "DNS domain",
                        "type": "string"
                    },
                    "name": {
                        "description": "Cluster name",
                        "type": "string"
                    },
                    "nameServers": {
                        "description": "DNS name servers",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "networkMode": {
                        "description": "Shows what IP protocols are configured on this cluster",
                        "enum": [
                            "SingleStack-IPV4",
                            "SingleStack-IPV6",
                            "DualStack"
                        ],
                        "type": "string"
                    },
                    "ntpServers": {
                        "description": "Cluster NTP servers",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "proxyConfig": {
                        "$ref": "#/components/schemas/ClusterSpecProxyConfig_v1_platform_PUT",
                        "description": "Cluster proxy config"
                    },
                    "searchDomains": {
                        "description": "DNS search domains",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "serviceNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_PUT",
                        "description": "Cluster service network"
                    }
                }
            },
            "ClusterSpecWrapper_v2_platform_GET": {
                "properties": {
                    "appNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_GET",
                        "description": "Cluster app network"
                    },
                    "displayName": {
                        "description": "Cluster Display name",
                        "type": "string"
                    },
                    "dnsDomain": {
                        "description": "DNS domain",
                        "type": "string"
                    },
                    "name": {
                        "description": "Cluster name",
                        "type": "string"
                    },
                    "nameServers": {
                        "description": "DNS name servers",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "networkMode": {
                        "description": "Shows what IP protocols are configured on this cluster",
                        "enum": [
                            "SingleStack-IPV4",
                            "SingleStack-IPV6",
                            "DualStack"
                        ],
                        "type": "string"
                    },
                    "ntpConfig": {
                        "$ref": "#/components/schemas/ClusterSpecNTPConfig_v2_platform_GET",
                        "description": "NTP servers and keys"
                    },
                    "proxyConfig": {
                        "$ref": "#/components/schemas/ClusterSpecProxyConfig_v1_platform_GET",
                        "description": "Cluster proxy config"
                    },
                    "searchDomains": {
                        "description": "DNS search domains",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "serviceNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_GET",
                        "description": "Cluster service network"
                    }
                }
            },
            "ClusterSpecWrapper_v2_platform_POST": {
                "properties": {
                    "appNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_POST",
                        "description": "Cluster app network"
                    },
                    "displayName": {
                        "description": "Cluster Display name",
                        "type": "string"
                    },
                    "dnsDomain": {
                        "description": "DNS domain",
                        "type": "string"
                    },
                    "name": {
                        "description": "Cluster name",
                        "type": "string"
                    },
                    "nameServers": {
                        "description": "DNS name servers",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "networkMode": {
                        "description": "Shows what IP protocols are configured on this cluster",
                        "enum": [
                            "SingleStack-IPV4",
                            "SingleStack-IPV6",
                            "DualStack"
                        ],
                        "type": "string"
                    },
                    "ntpConfig": {
                        "$ref": "#/components/schemas/ClusterSpecNTPConfig_v2_platform_POST",
                        "description": "NTP servers and keys"
                    },
                    "proxyConfig": {
                        "$ref": "#/components/schemas/ClusterSpecProxyConfig_v1_platform_POST",
                        "description": "Cluster proxy config"
                    },
                    "searchDomains": {
                        "description": "DNS search domains",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "serviceNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_POST",
                        "description": "Cluster service network"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ClusterSpecWrapper_v2_platform_PUT": {
                "properties": {
                    "appNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_PUT",
                        "description": "Cluster app network"
                    },
                    "displayName": {
                        "description": "Cluster Display name",
                        "type": "string"
                    },
                    "dnsDomain": {
                        "description": "DNS domain",
                        "type": "string"
                    },
                    "name": {
                        "description": "Cluster name",
                        "type": "string"
                    },
                    "nameServers": {
                        "description": "DNS name servers",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "networkMode": {
                        "description": "Shows what IP protocols are configured on this cluster",
                        "enum": [
                            "SingleStack-IPV4",
                            "SingleStack-IPV6",
                            "DualStack"
                        ],
                        "type": "string"
                    },
                    "ntpConfig": {
                        "$ref": "#/components/schemas/ClusterSpecNTPConfig_v2_platform_PUT",
                        "description": "NTP servers and keys"
                    },
                    "proxyConfig": {
                        "$ref": "#/components/schemas/ClusterSpecProxyConfig_v1_platform_PUT",
                        "description": "Cluster proxy config"
                    },
                    "searchDomains": {
                        "description": "DNS search domains",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "serviceNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_PUT",
                        "description": "Cluster service network"
                    }
                }
            },
            "ClusterSpec_v1_platform_GET": {
                "description": "Cluster configuration",
                "properties": {
                    "appNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_GET",
                        "description": "Cluster app network"
                    },
                    "displayName": {
                        "description": "Cluster Display name",
                        "type": "string"
                    },
                    "dnsDomain": {
                        "description": "DNS domain",
                        "type": "string"
                    },
                    "name": {
                        "description": "Cluster name",
                        "type": "string"
                    },
                    "nameServers": {
                        "description": "DNS name servers",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "networkMode": {
                        "description": "Shows what IP protocols are configured on this cluster",
                        "enum": [
                            "SingleStack-IPV4",
                            "SingleStack-IPV6",
                            "DualStack"
                        ],
                        "type": "string"
                    },
                    "ntpServers": {
                        "description": "Cluster NTP servers",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "proxyConfig": {
                        "$ref": "#/components/schemas/ClusterSpecProxyConfig_v1_platform_GET",
                        "description": "Cluster proxy config"
                    },
                    "searchDomains": {
                        "description": "DNS search domains",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "serviceNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_GET",
                        "description": "Cluster service network"
                    }
                }
            },
            "ClusterSpec_v1_platform_POST": {
                "description": "Cluster configuration",
                "properties": {
                    "appNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_POST",
                        "description": "Cluster app network"
                    },
                    "displayName": {
                        "description": "Cluster Display name",
                        "type": "string"
                    },
                    "dnsDomain": {
                        "description": "DNS domain",
                        "type": "string"
                    },
                    "name": {
                        "description": "Cluster name",
                        "type": "string"
                    },
                    "nameServers": {
                        "description": "DNS name servers",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "networkMode": {
                        "description": "Shows what IP protocols are configured on this cluster",
                        "enum": [
                            "SingleStack-IPV4",
                            "SingleStack-IPV6",
                            "DualStack"
                        ],
                        "type": "string"
                    },
                    "ntpServers": {
                        "description": "Cluster NTP servers",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "proxyConfig": {
                        "$ref": "#/components/schemas/ClusterSpecProxyConfig_v1_platform_POST",
                        "description": "Cluster proxy config"
                    },
                    "searchDomains": {
                        "description": "DNS search domains",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "serviceNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_POST",
                        "description": "Cluster service network"
                    }
                }
            },
            "ClusterSpec_v1_platform_PUT": {
                "description": "Cluster configuration",
                "properties": {
                    "appNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_PUT",
                        "description": "Cluster app network"
                    },
                    "displayName": {
                        "description": "Cluster Display name",
                        "type": "string"
                    },
                    "dnsDomain": {
                        "description": "DNS domain",
                        "type": "string"
                    },
                    "name": {
                        "description": "Cluster name",
                        "type": "string"
                    },
                    "nameServers": {
                        "description": "DNS name servers",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "networkMode": {
                        "description": "Shows what IP protocols are configured on this cluster",
                        "enum": [
                            "SingleStack-IPV4",
                            "SingleStack-IPV6",
                            "DualStack"
                        ],
                        "type": "string"
                    },
                    "ntpServers": {
                        "description": "Cluster NTP servers",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "proxyConfig": {
                        "$ref": "#/components/schemas/ClusterSpecProxyConfig_v1_platform_PUT",
                        "description": "Cluster proxy config"
                    },
                    "searchDomains": {
                        "description": "DNS search domains",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "serviceNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_PUT",
                        "description": "Cluster service network"
                    }
                }
            },
            "ClusterSpec_v2_platform_GET": {
                "description": "Cluster configuration",
                "properties": {
                    "appNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_GET",
                        "description": "Cluster app network"
                    },
                    "displayName": {
                        "description": "Cluster Display name",
                        "type": "string"
                    },
                    "dnsDomain": {
                        "description": "DNS domain",
                        "type": "string"
                    },
                    "name": {
                        "description": "Cluster name",
                        "type": "string"
                    },
                    "nameServers": {
                        "description": "DNS name servers",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "networkMode": {
                        "description": "Shows what IP protocols are configured on this cluster",
                        "enum": [
                            "SingleStack-IPV4",
                            "SingleStack-IPV6",
                            "DualStack"
                        ],
                        "type": "string"
                    },
                    "ntpConfig": {
                        "$ref": "#/components/schemas/ClusterSpecNTPConfig_v2_platform_GET",
                        "description": "NTP servers and keys"
                    },
                    "proxyConfig": {
                        "$ref": "#/components/schemas/ClusterSpecProxyConfig_v1_platform_GET",
                        "description": "Cluster proxy config"
                    },
                    "searchDomains": {
                        "description": "DNS search domains",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "serviceNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_GET",
                        "description": "Cluster service network"
                    }
                }
            },
            "ClusterSpec_v2_platform_POST": {
                "description": "Cluster configuration",
                "properties": {
                    "appNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_POST",
                        "description": "Cluster app network"
                    },
                    "displayName": {
                        "description": "Cluster Display name",
                        "type": "string"
                    },
                    "dnsDomain": {
                        "description": "DNS domain",
                        "type": "string"
                    },
                    "name": {
                        "description": "Cluster name",
                        "type": "string"
                    },
                    "nameServers": {
                        "description": "DNS name servers",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "networkMode": {
                        "description": "Shows what IP protocols are configured on this cluster",
                        "enum": [
                            "SingleStack-IPV4",
                            "SingleStack-IPV6",
                            "DualStack"
                        ],
                        "type": "string"
                    },
                    "ntpConfig": {
                        "$ref": "#/components/schemas/ClusterSpecNTPConfig_v2_platform_POST",
                        "description": "NTP servers and keys"
                    },
                    "proxyConfig": {
                        "$ref": "#/components/schemas/ClusterSpecProxyConfig_v1_platform_POST",
                        "description": "Cluster proxy config"
                    },
                    "searchDomains": {
                        "description": "DNS search domains",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "serviceNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_POST",
                        "description": "Cluster service network"
                    }
                }
            },
            "ClusterSpec_v2_platform_PUT": {
                "description": "Cluster configuration",
                "properties": {
                    "appNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_PUT",
                        "description": "Cluster app network"
                    },
                    "displayName": {
                        "description": "Cluster Display name",
                        "type": "string"
                    },
                    "dnsDomain": {
                        "description": "DNS domain",
                        "type": "string"
                    },
                    "name": {
                        "description": "Cluster name",
                        "type": "string"
                    },
                    "nameServers": {
                        "description": "DNS name servers",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "networkMode": {
                        "description": "Shows what IP protocols are configured on this cluster",
                        "enum": [
                            "SingleStack-IPV4",
                            "SingleStack-IPV6",
                            "DualStack"
                        ],
                        "type": "string"
                    },
                    "ntpConfig": {
                        "$ref": "#/components/schemas/ClusterSpecNTPConfig_v2_platform_PUT",
                        "description": "NTP servers and keys"
                    },
                    "proxyConfig": {
                        "$ref": "#/components/schemas/ClusterSpecProxyConfig_v1_platform_PUT",
                        "description": "Cluster proxy config"
                    },
                    "searchDomains": {
                        "description": "DNS search domains",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "serviceNetwork": {
                        "$ref": "#/components/schemas/ClusterSpecNetwork_v1_platform_PUT",
                        "description": "Cluster service network"
                    }
                }
            },
            "ClusterStatusError_v1_platform_GET": {
                "description": "error is the last observed error, if any.",
                "properties": {
                    "message": {
                        "description": "message is a string detailing the encountered error",
                        "type": "string"
                    },
                    "time": {
                        "description": "time is the timestamp when the error was encountered.",
                        "type": "string"
                    }
                }
            },
            "ClusterStatusError_v1_platform_POST": {
                "description": "error is the last observed error, if any.",
                "properties": {
                    "message": {
                        "description": "message is a string detailing the encountered error",
                        "type": "string"
                    },
                    "time": {
                        "description": "time is the timestamp when the error was encountered.",
                        "type": "string"
                    }
                }
            },
            "ClusterStatusError_v1_platform_PUT": {
                "description": "error is the last observed error, if any.",
                "properties": {
                    "message": {
                        "description": "message is a string detailing the encountered error",
                        "type": "string"
                    },
                    "time": {
                        "description": "time is the timestamp when the error was encountered.",
                        "type": "string"
                    }
                }
            },
            "ClusterStatusWrapper_v1_platform_GET": {
                "properties": {
                    "currentVersion": {
                        "description": "Cluster version",
                        "type": "string"
                    },
                    "error": {
                        "$ref": "#/components/schemas/ClusterStatusError_v1_platform_GET",
                        "description": "error is the last observed error, if any."
                    },
                    "state": {
                        "description": "State of dual-stack mode in cluster",
                        "enum": [
                            "Active",
                            "MigratingToDualStack"
                        ],
                        "type": "string"
                    },
                    "targetVersion": {
                        "description": "If mid-upgrade, the version this cluster is updating to",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Cluster uuid",
                        "type": "string"
                    }
                }
            },
            "ClusterStatusWrapper_v1_platform_POST": {
                "properties": {
                    "currentVersion": {
                        "description": "Cluster version",
                        "type": "string"
                    },
                    "error": {
                        "$ref": "#/components/schemas/ClusterStatusError_v1_platform_POST",
                        "description": "error is the last observed error, if any."
                    },
                    "state": {
                        "description": "State of dual-stack mode in cluster",
                        "enum": [
                            "Active",
                            "MigratingToDualStack"
                        ],
                        "type": "string"
                    },
                    "targetVersion": {
                        "description": "If mid-upgrade, the version this cluster is updating to",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Cluster uuid",
                        "type": "string"
                    }
                }
            },
            "ClusterStatusWrapper_v1_platform_PUT": {
                "properties": {
                    "currentVersion": {
                        "description": "Cluster version",
                        "type": "string"
                    },
                    "error": {
                        "$ref": "#/components/schemas/ClusterStatusError_v1_platform_PUT",
                        "description": "error is the last observed error, if any."
                    },
                    "state": {
                        "description": "State of dual-stack mode in cluster",
                        "enum": [
                            "Active",
                            "MigratingToDualStack"
                        ],
                        "type": "string"
                    },
                    "targetVersion": {
                        "description": "If mid-upgrade, the version this cluster is updating to",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Cluster uuid",
                        "type": "string"
                    }
                }
            },
            "ClusterStatusWrapper_v2_platform_GET": {
                "properties": {
                    "currentVersion": {
                        "description": "Cluster version",
                        "type": "string"
                    },
                    "error": {
                        "$ref": "#/components/schemas/ClusterStatusError_v1_platform_GET",
                        "description": "error is the last observed error, if any."
                    },
                    "state": {
                        "description": "State of dual-stack mode in cluster",
                        "enum": [
                            "Active",
                            "MigratingToDualStack"
                        ],
                        "type": "string"
                    },
                    "targetVersion": {
                        "description": "If mid-upgrade, the version this cluster is updating to",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Cluster uuid",
                        "type": "string"
                    }
                }
            },
            "ClusterStatusWrapper_v2_platform_POST": {
                "properties": {
                    "currentVersion": {
                        "description": "Cluster version",
                        "type": "string"
                    },
                    "error": {
                        "$ref": "#/components/schemas/ClusterStatusError_v1_platform_POST",
                        "description": "error is the last observed error, if any."
                    },
                    "state": {
                        "description": "State of dual-stack mode in cluster",
                        "enum": [
                            "Active",
                            "MigratingToDualStack"
                        ],
                        "type": "string"
                    },
                    "targetVersion": {
                        "description": "If mid-upgrade, the version this cluster is updating to",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Cluster uuid",
                        "type": "string"
                    }
                }
            },
            "ClusterStatusWrapper_v2_platform_PUT": {
                "properties": {
                    "currentVersion": {
                        "description": "Cluster version",
                        "type": "string"
                    },
                    "error": {
                        "$ref": "#/components/schemas/ClusterStatusError_v1_platform_PUT",
                        "description": "error is the last observed error, if any."
                    },
                    "state": {
                        "description": "State of dual-stack mode in cluster",
                        "enum": [
                            "Active",
                            "MigratingToDualStack"
                        ],
                        "type": "string"
                    },
                    "targetVersion": {
                        "description": "If mid-upgrade, the version this cluster is updating to",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Cluster uuid",
                        "type": "string"
                    }
                }
            },
            "ClusterStatus_v1_platform_GET": {
                "description": "Cluster status information",
                "properties": {
                    "currentVersion": {
                        "description": "Cluster version",
                        "type": "string"
                    },
                    "error": {
                        "$ref": "#/components/schemas/ClusterStatusError_v1_platform_GET",
                        "description": "error is the last observed error, if any."
                    },
                    "state": {
                        "description": "State of dual-stack mode in cluster",
                        "enum": [
                            "Active",
                            "MigratingToDualStack"
                        ],
                        "type": "string"
                    },
                    "targetVersion": {
                        "description": "If mid-upgrade, the version this cluster is updating to",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Cluster uuid",
                        "type": "string"
                    }
                }
            },
            "ClusterStatus_v1_platform_POST": {
                "description": "Cluster status information",
                "properties": {
                    "currentVersion": {
                        "description": "Cluster version",
                        "type": "string"
                    },
                    "error": {
                        "$ref": "#/components/schemas/ClusterStatusError_v1_platform_POST",
                        "description": "error is the last observed error, if any."
                    },
                    "state": {
                        "description": "State of dual-stack mode in cluster",
                        "enum": [
                            "Active",
                            "MigratingToDualStack"
                        ],
                        "type": "string"
                    },
                    "targetVersion": {
                        "description": "If mid-upgrade, the version this cluster is updating to",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Cluster uuid",
                        "type": "string"
                    }
                }
            },
            "ClusterStatus_v1_platform_PUT": {
                "description": "Cluster status information",
                "properties": {
                    "currentVersion": {
                        "description": "Cluster version",
                        "type": "string"
                    },
                    "error": {
                        "$ref": "#/components/schemas/ClusterStatusError_v1_platform_PUT",
                        "description": "error is the last observed error, if any."
                    },
                    "state": {
                        "description": "State of dual-stack mode in cluster",
                        "enum": [
                            "Active",
                            "MigratingToDualStack"
                        ],
                        "type": "string"
                    },
                    "targetVersion": {
                        "description": "If mid-upgrade, the version this cluster is updating to",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Cluster uuid",
                        "type": "string"
                    }
                }
            },
            "Cluster_v1_platform_GET": {
                "description": "Resource that represents configuration of the cluster",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/ClusterSpecWrapper_v1_platform_GET"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ClusterStatusWrapper_v1_platform_GET"
                    }
                },
                "required": [
                    "spec",
                    "status"
                ]
            },
            "Cluster_v1_platform_GETLIST": {
                "description": "Resource that represents configuration of the cluster",
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Cluster_v1_platform_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "Cluster_v1_platform_POST": {
                "description": "Resource that represents configuration of the cluster",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/ClusterSpecWrapper_v1_platform_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "Cluster_v1_platform_PUT": {
                "description": "Resource that represents configuration of the cluster",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/ClusterSpecWrapper_v1_platform_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "Cluster_v2_platform_GET": {
                "description": "Resource that represents configuration of the cluster",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/ClusterSpecWrapper_v2_platform_GET"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ClusterStatusWrapper_v2_platform_GET"
                    }
                },
                "required": [
                    "spec",
                    "status"
                ]
            },
            "Cluster_v2_platform_GETLIST": {
                "description": "Resource that represents configuration of the cluster",
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Cluster_v2_platform_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "Cluster_v2_platform_POST": {
                "description": "Resource that represents configuration of the cluster",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/ClusterSpecWrapper_v2_platform_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "Cluster_v2_platform_PUT": {
                "description": "Resource that represents configuration of the cluster",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/ClusterSpecWrapper_v2_platform_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "CredentialSpecWrapper_v4_credmgr_GET": {
                "properties": {
                    "credentials": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "CredentialSpecWrapper_v4_credmgr_POST": {
                "properties": {
                    "credentials": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "CredentialSpecWrapper_v4_credmgr_PUT": {
                "properties": {
                    "credentials": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "CredentialSpec_v4_credmgr_GET": {
                "properties": {
                    "credentials": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "CredentialSpec_v4_credmgr_POST": {
                "properties": {
                    "credentials": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "CredentialSpec_v4_credmgr_PUT": {
                "properties": {
                    "credentials": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Credential_v4_credmgr_GET": {
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/CredentialSpecWrapper_v4_credmgr_GET"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "Credential_v4_credmgr_GETLIST": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Credential_v4_credmgr_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "Credential_v4_credmgr_POST": {
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/CredentialSpecWrapper_v4_credmgr_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "Credential_v4_credmgr_PUT": {
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/CredentialSpecWrapper_v4_credmgr_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "CustomerSpecWrapper_v1_argo.cisco.com_GET": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "identity": {
                        "type": "string"
                    },
                    "realm": {
                        "type": "string"
                    }
                }
            },
            "CustomerSpecWrapper_v1_argo.cisco.com_POST": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "identity": {
                        "type": "string"
                    },
                    "realm": {
                        "type": "string"
                    }
                }
            },
            "CustomerSpecWrapper_v1_argo.cisco.com_PUT": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "identity": {
                        "type": "string"
                    },
                    "realm": {
                        "type": "string"
                    }
                }
            },
            "CustomerSpec_v1_argo.cisco.com_GET": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "identity": {
                        "type": "string"
                    },
                    "realm": {
                        "type": "string"
                    }
                }
            },
            "CustomerSpec_v1_argo.cisco.com_POST": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "identity": {
                        "type": "string"
                    },
                    "realm": {
                        "type": "string"
                    }
                }
            },
            "CustomerSpec_v1_argo.cisco.com_PUT": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "identity": {
                        "type": "string"
                    },
                    "realm": {
                        "type": "string"
                    }
                }
            },
            "DCNMConfig_v4_sitemanagement_GET": {
                "properties": {
                    "fabricName": {
                        "description": "DCNM fabric name",
                        "type": "string"
                    },
                    "fabricTechnology": {
                        "description": "DCNM/NDFC fabric technology - VxlanFabric, External, EBGPVxlanFabric, EBGPRoutedFabric,  LanClassic, Meta, IosXEVxlanFabric, Srv6Fabric, LanMonitor, SwitchGroup, MsoSiteGroup, SanFabric,  IpfmFabric, IpfmClassic, VlanFabric",
                        "type": "string"
                    },
                    "fabricType": {
                        "description": "DCNM fabric type",
                        "type": "string"
                    }
                }
            },
            "DCNMConfig_v4_sitemanagement_POST": {
                "properties": {
                    "fabricName": {
                        "description": "DCNM fabric name",
                        "type": "string"
                    },
                    "fabricTechnology": {
                        "description": "DCNM/NDFC fabric technology - VxlanFabric, External, EBGPVxlanFabric, EBGPRoutedFabric,  LanClassic, Meta, IosXEVxlanFabric, Srv6Fabric, LanMonitor, SwitchGroup, MsoSiteGroup, SanFabric,  IpfmFabric, IpfmClassic, VlanFabric",
                        "type": "string"
                    },
                    "fabricType": {
                        "description": "DCNM fabric type",
                        "type": "string"
                    }
                }
            },
            "DCNMConfig_v4_sitemanagement_PUT": {
                "properties": {
                    "fabricName": {
                        "description": "DCNM fabric name",
                        "type": "string"
                    },
                    "fabricTechnology": {
                        "description": "DCNM/NDFC fabric technology - VxlanFabric, External, EBGPVxlanFabric, EBGPRoutedFabric,  LanClassic, Meta, IosXEVxlanFabric, Srv6Fabric, LanMonitor, SwitchGroup, MsoSiteGroup, SanFabric,  IpfmFabric, IpfmClassic, VlanFabric",
                        "type": "string"
                    },
                    "fabricType": {
                        "description": "DCNM fabric type",
                        "type": "string"
                    }
                }
            },
            "DCNMFabricResponse_v4_sitemanagement_GET": {
                "properties": {
                    "inUse": {
                        "description": "DCNM Site already on-boarded",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "DCNM fabric name",
                        "type": "string"
                    },
                    "parentName": {
                        "description": "DCNM parent fabric name",
                        "type": "string"
                    },
                    "technology": {
                        "description": "DCNM/NDFC fabric technology - VxlanFabric, External, EBGPVxlanFabric, EBGPRoutedFabric, LanClassic,  Meta, IosXEVxlanFabric, Srv6Fabric, LanMonitor, SwitchGroup, MsoSiteGroup, SanFabric,  IpfmFabric, IpfmClassic, VlanFabric",
                        "type": "string"
                    },
                    "type": {
                        "description": "DCNM Site fabric type",
                        "type": "string"
                    }
                }
            },
            "DCNMFabricResponse_v4_sitemanagement_POST": {
                "properties": {
                    "inUse": {
                        "description": "DCNM Site already on-boarded",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "DCNM fabric name",
                        "type": "string"
                    },
                    "parentName": {
                        "description": "DCNM parent fabric name",
                        "type": "string"
                    },
                    "technology": {
                        "description": "DCNM/NDFC fabric technology - VxlanFabric, External, EBGPVxlanFabric, EBGPRoutedFabric, LanClassic,  Meta, IosXEVxlanFabric, Srv6Fabric, LanMonitor, SwitchGroup, MsoSiteGroup, SanFabric,  IpfmFabric, IpfmClassic, VlanFabric",
                        "type": "string"
                    },
                    "type": {
                        "description": "DCNM Site fabric type",
                        "type": "string"
                    }
                }
            },
            "DCNMFabricResponse_v4_sitemanagement_PUT": {
                "properties": {
                    "inUse": {
                        "description": "DCNM Site already on-boarded",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "DCNM fabric name",
                        "type": "string"
                    },
                    "parentName": {
                        "description": "DCNM parent fabric name",
                        "type": "string"
                    },
                    "technology": {
                        "description": "DCNM/NDFC fabric technology - VxlanFabric, External, EBGPVxlanFabric, EBGPRoutedFabric, LanClassic,  Meta, IosXEVxlanFabric, Srv6Fabric, LanMonitor, SwitchGroup, MsoSiteGroup, SanFabric,  IpfmFabric, IpfmClassic, VlanFabric",
                        "type": "string"
                    },
                    "type": {
                        "description": "DCNM Site fabric type",
                        "type": "string"
                    }
                }
            },
            "DCNMHA_v4_sitemanagement_GET": {
                "properties": {
                    "inbandIP": {
                        "description": "DCNM controller node inbandIP",
                        "type": "string"
                    },
                    "mode": {
                        "description": "DCNM controller node mode - active/standby/standalone",
                        "type": "string"
                    },
                    "outofbandIP": {
                        "description": "DCNM controller node outofbandIP",
                        "type": "string"
                    },
                    "version": {
                        "description": "DCNM controller node version",
                        "type": "string"
                    }
                }
            },
            "DCNMHA_v4_sitemanagement_POST": {
                "properties": {
                    "inbandIP": {
                        "description": "DCNM controller node inbandIP",
                        "type": "string"
                    },
                    "mode": {
                        "description": "DCNM controller node mode - active/standby/standalone",
                        "type": "string"
                    },
                    "outofbandIP": {
                        "description": "DCNM controller node outofbandIP",
                        "type": "string"
                    },
                    "version": {
                        "description": "DCNM controller node version",
                        "type": "string"
                    }
                }
            },
            "DCNMHA_v4_sitemanagement_PUT": {
                "properties": {
                    "inbandIP": {
                        "description": "DCNM controller node inbandIP",
                        "type": "string"
                    },
                    "mode": {
                        "description": "DCNM controller node mode - active/standby/standalone",
                        "type": "string"
                    },
                    "outofbandIP": {
                        "description": "DCNM controller node outofbandIP",
                        "type": "string"
                    },
                    "version": {
                        "description": "DCNM controller node version",
                        "type": "string"
                    }
                }
            },
            "DCNMStatus_v4_sitemanagement_GET": {
                "properties": {
                    "fabric": {
                        "$ref": "#/components/schemas/NXOSFabric_v4_sitemanagement_GET"
                    },
                    "ha": {
                        "items": {
                            "$ref": "#/components/schemas/DCNMHA_v4_sitemanagement_GET"
                        },
                        "type": "array"
                    }
                }
            },
            "DCNMStatus_v4_sitemanagement_POST": {
                "properties": {
                    "fabric": {
                        "$ref": "#/components/schemas/NXOSFabric_v4_sitemanagement_POST"
                    },
                    "ha": {
                        "items": {
                            "$ref": "#/components/schemas/DCNMHA_v4_sitemanagement_POST"
                        },
                        "type": "array"
                    }
                }
            },
            "DCNMStatus_v4_sitemanagement_PUT": {
                "properties": {
                    "fabric": {
                        "$ref": "#/components/schemas/NXOSFabric_v4_sitemanagement_PUT"
                    },
                    "ha": {
                        "items": {
                            "$ref": "#/components/schemas/DCNMHA_v4_sitemanagement_PUT"
                        },
                        "type": "array"
                    }
                }
            },
            "DefaultAuthSpecWrapper_v4_aaa_GET": {
                "properties": {
                    "defaultDomain": {
                        "description": "Default auth domain object",
                        "type": "string"
                    },
                    "domainName": {
                        "description": "Login domain name",
                        "type": "string"
                    }
                }
            },
            "DefaultAuthSpecWrapper_v4_aaa_POST": {
                "properties": {
                    "defaultDomain": {
                        "description": "Default auth domain object",
                        "type": "string"
                    },
                    "domainName": {
                        "description": "Login domain name",
                        "type": "string"
                    }
                },
                "required": [
                    "defaultDomain"
                ]
            },
            "DefaultAuthSpecWrapper_v4_aaa_PUT": {
                "properties": {
                    "defaultDomain": {
                        "description": "Default auth domain object",
                        "type": "string"
                    },
                    "domainName": {
                        "description": "Login domain name",
                        "type": "string"
                    }
                }
            },
            "DefaultAuthSpec_v4_aaa_GET": {
                "properties": {
                    "defaultDomain": {
                        "description": "Default auth domain object",
                        "type": "string"
                    },
                    "domainName": {
                        "description": "Login domain name",
                        "type": "string"
                    }
                }
            },
            "DefaultAuthSpec_v4_aaa_POST": {
                "properties": {
                    "defaultDomain": {
                        "description": "Default auth domain object",
                        "type": "string"
                    },
                    "domainName": {
                        "description": "Login domain name",
                        "type": "string"
                    }
                }
            },
            "DefaultAuthSpec_v4_aaa_PUT": {
                "properties": {
                    "defaultDomain": {
                        "description": "Default auth domain object",
                        "type": "string"
                    },
                    "domainName": {
                        "description": "Login domain name",
                        "type": "string"
                    }
                }
            },
            "DefaultAuth_v4_aaa_GET": {
                "description": "Default Auth Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/DefaultAuthSpecWrapper_v4_aaa_GET"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "DefaultAuth_v4_aaa_GETLIST": {
                "description": "Default Auth Resource",
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/DefaultAuth_v4_aaa_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "DefaultAuth_v4_aaa_POST": {
                "description": "Default Auth Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/DefaultAuthSpecWrapper_v4_aaa_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "DefaultAuth_v4_aaa_PUT": {
                "description": "Default Auth Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/DefaultAuthSpecWrapper_v4_aaa_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "DirectoryEntrySpecWrapper_v1_argo.cisco.com_GET": {
                "properties": {
                    "application": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    },
                    "databaseName": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "operations": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "realm": {
                        "type": "string"
                    }
                }
            },
            "DirectoryEntrySpecWrapper_v1_argo.cisco.com_POST": {
                "properties": {
                    "application": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    },
                    "databaseName": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "operations": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "realm": {
                        "type": "string"
                    }
                }
            },
            "DirectoryEntrySpecWrapper_v1_argo.cisco.com_PUT": {
                "properties": {
                    "application": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    },
                    "databaseName": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "operations": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "realm": {
                        "type": "string"
                    }
                }
            },
            "DirectoryEntrySpec_v1_argo.cisco.com_GET": {
                "properties": {
                    "application": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    },
                    "databaseName": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "operations": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "realm": {
                        "type": "string"
                    }
                }
            },
            "DirectoryEntrySpec_v1_argo.cisco.com_POST": {
                "properties": {
                    "application": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    },
                    "databaseName": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "operations": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "realm": {
                        "type": "string"
                    }
                }
            },
            "DirectoryEntrySpec_v1_argo.cisco.com_PUT": {
                "properties": {
                    "application": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    },
                    "databaseName": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "operations": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "realm": {
                        "type": "string"
                    }
                }
            },
            "EventConfigSpecWrapper_v1_eventmonitoring_GET": {
                "properties": {
                    "alertConfig": {
                        "$ref": "#/components/schemas/AlertConfig_v1_eventmonitoring_GET",
                        "description": "Alert configuration being monitored as part of event configuration"
                    },
                    "dataSourceKey": {
                        "description": "Data source for the config",
                        "type": "string"
                    },
                    "id": {
                        "description": "domain.metaName appended with name for event configuration",
                        "type": "string"
                    },
                    "involvedObject": {
                        "description": "ND resource or object being monitored",
                        "type": "string"
                    },
                    "labels": {
                        "description": "Labels supported to elaborate on the resources that the event configuration is connected with",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "message": {
                        "description": "Description about the event configuration being monitored",
                        "type": "string"
                    },
                    "name": {
                        "description": "Unique name for event configuration",
                        "type": "string"
                    },
                    "prettifiedName": {
                        "description": "User readable name for event configuration",
                        "type": "string"
                    },
                    "reason": {
                        "description": "Reason for the alert being raised",
                        "type": "string"
                    },
                    "retentionPolicy": {
                        "$ref": "#/components/schemas/RetentionPolicy_v1_eventmonitoring_GET",
                        "description": "Retention policy for the generated event records as part of the parent event configuration"
                    },
                    "source": {
                        "description": "Source of the issue",
                        "type": "string"
                    },
                    "triggerGroups": {
                        "description": "List of triggers that govern the stream types where the alert can be broadcasted",
                        "items": {
                            "$ref": "#/components/schemas/TriggerGroup_v1_eventmonitoring_GET"
                        },
                        "type": "array"
                    }
                }
            },
            "EventConfigSpecWrapper_v1_eventmonitoring_POST": {
                "properties": {
                    "alertConfig": {
                        "$ref": "#/components/schemas/AlertConfig_v1_eventmonitoring_POST",
                        "description": "Alert configuration being monitored as part of event configuration"
                    },
                    "dataSourceKey": {
                        "description": "Data source for the config",
                        "type": "string"
                    },
                    "id": {
                        "description": "domain.metaName appended with name for event configuration",
                        "type": "string"
                    },
                    "involvedObject": {
                        "description": "ND resource or object being monitored",
                        "type": "string"
                    },
                    "labels": {
                        "description": "Labels supported to elaborate on the resources that the event configuration is connected with",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "message": {
                        "description": "Description about the event configuration being monitored",
                        "type": "string"
                    },
                    "name": {
                        "description": "Unique name for event configuration",
                        "type": "string"
                    },
                    "prettifiedName": {
                        "description": "User readable name for event configuration",
                        "type": "string"
                    },
                    "reason": {
                        "description": "Reason for the alert being raised",
                        "type": "string"
                    },
                    "retentionPolicy": {
                        "$ref": "#/components/schemas/RetentionPolicy_v1_eventmonitoring_POST",
                        "description": "Retention policy for the generated event records as part of the parent event configuration"
                    },
                    "source": {
                        "description": "Source of the issue",
                        "type": "string"
                    },
                    "triggerGroups": {
                        "description": "List of triggers that govern the stream types where the alert can be broadcasted",
                        "items": {
                            "$ref": "#/components/schemas/TriggerGroup_v1_eventmonitoring_POST"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "EventConfigSpecWrapper_v1_eventmonitoring_PUT": {
                "properties": {
                    "alertConfig": {
                        "$ref": "#/components/schemas/AlertConfig_v1_eventmonitoring_PUT",
                        "description": "Alert configuration being monitored as part of event configuration"
                    },
                    "dataSourceKey": {
                        "description": "Data source for the config",
                        "type": "string"
                    },
                    "id": {
                        "description": "domain.metaName appended with name for event configuration",
                        "type": "string"
                    },
                    "involvedObject": {
                        "description": "ND resource or object being monitored",
                        "type": "string"
                    },
                    "labels": {
                        "description": "Labels supported to elaborate on the resources that the event configuration is connected with",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "message": {
                        "description": "Description about the event configuration being monitored",
                        "type": "string"
                    },
                    "name": {
                        "description": "Unique name for event configuration",
                        "type": "string"
                    },
                    "prettifiedName": {
                        "description": "User readable name for event configuration",
                        "type": "string"
                    },
                    "reason": {
                        "description": "Reason for the alert being raised",
                        "type": "string"
                    },
                    "retentionPolicy": {
                        "$ref": "#/components/schemas/RetentionPolicy_v1_eventmonitoring_PUT",
                        "description": "Retention policy for the generated event records as part of the parent event configuration"
                    },
                    "source": {
                        "description": "Source of the issue",
                        "type": "string"
                    },
                    "triggerGroups": {
                        "description": "List of triggers that govern the stream types where the alert can be broadcasted",
                        "items": {
                            "$ref": "#/components/schemas/TriggerGroup_v1_eventmonitoring_PUT"
                        },
                        "type": "array"
                    }
                }
            },
            "EventConfigSpec_v1_eventmonitoring_GET": {
                "description": "Spec portion of EventConfig resource",
                "properties": {
                    "alertConfig": {
                        "$ref": "#/components/schemas/AlertConfig_v1_eventmonitoring_GET",
                        "description": "Alert configuration being monitored as part of event configuration"
                    },
                    "dataSourceKey": {
                        "description": "Data source for the config",
                        "type": "string"
                    },
                    "id": {
                        "description": "domain.metaName appended with name for event configuration",
                        "type": "string"
                    },
                    "involvedObject": {
                        "description": "ND resource or object being monitored",
                        "type": "string"
                    },
                    "labels": {
                        "description": "Labels supported to elaborate on the resources that the event configuration is connected with",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "message": {
                        "description": "Description about the event configuration being monitored",
                        "type": "string"
                    },
                    "name": {
                        "description": "Unique name for event configuration",
                        "type": "string"
                    },
                    "prettifiedName": {
                        "description": "User readable name for event configuration",
                        "type": "string"
                    },
                    "reason": {
                        "description": "Reason for the alert being raised",
                        "type": "string"
                    },
                    "retentionPolicy": {
                        "$ref": "#/components/schemas/RetentionPolicy_v1_eventmonitoring_GET",
                        "description": "Retention policy for the generated event records as part of the parent event configuration"
                    },
                    "source": {
                        "description": "Source of the issue",
                        "type": "string"
                    },
                    "triggerGroups": {
                        "description": "List of triggers that govern the stream types where the alert can be broadcasted",
                        "items": {
                            "$ref": "#/components/schemas/TriggerGroup_v1_eventmonitoring_GET"
                        },
                        "type": "array"
                    }
                }
            },
            "EventConfigSpec_v1_eventmonitoring_POST": {
                "description": "Spec portion of EventConfig resource",
                "properties": {
                    "alertConfig": {
                        "$ref": "#/components/schemas/AlertConfig_v1_eventmonitoring_POST",
                        "description": "Alert configuration being monitored as part of event configuration"
                    },
                    "dataSourceKey": {
                        "description": "Data source for the config",
                        "type": "string"
                    },
                    "id": {
                        "description": "domain.metaName appended with name for event configuration",
                        "type": "string"
                    },
                    "involvedObject": {
                        "description": "ND resource or object being monitored",
                        "type": "string"
                    },
                    "labels": {
                        "description": "Labels supported to elaborate on the resources that the event configuration is connected with",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "message": {
                        "description": "Description about the event configuration being monitored",
                        "type": "string"
                    },
                    "name": {
                        "description": "Unique name for event configuration",
                        "type": "string"
                    },
                    "prettifiedName": {
                        "description": "User readable name for event configuration",
                        "type": "string"
                    },
                    "reason": {
                        "description": "Reason for the alert being raised",
                        "type": "string"
                    },
                    "retentionPolicy": {
                        "$ref": "#/components/schemas/RetentionPolicy_v1_eventmonitoring_POST",
                        "description": "Retention policy for the generated event records as part of the parent event configuration"
                    },
                    "source": {
                        "description": "Source of the issue",
                        "type": "string"
                    },
                    "triggerGroups": {
                        "description": "List of triggers that govern the stream types where the alert can be broadcasted",
                        "items": {
                            "$ref": "#/components/schemas/TriggerGroup_v1_eventmonitoring_POST"
                        },
                        "type": "array"
                    }
                }
            },
            "EventConfigSpec_v1_eventmonitoring_PUT": {
                "description": "Spec portion of EventConfig resource",
                "properties": {
                    "alertConfig": {
                        "$ref": "#/components/schemas/AlertConfig_v1_eventmonitoring_PUT",
                        "description": "Alert configuration being monitored as part of event configuration"
                    },
                    "dataSourceKey": {
                        "description": "Data source for the config",
                        "type": "string"
                    },
                    "id": {
                        "description": "domain.metaName appended with name for event configuration",
                        "type": "string"
                    },
                    "involvedObject": {
                        "description": "ND resource or object being monitored",
                        "type": "string"
                    },
                    "labels": {
                        "description": "Labels supported to elaborate on the resources that the event configuration is connected with",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "message": {
                        "description": "Description about the event configuration being monitored",
                        "type": "string"
                    },
                    "name": {
                        "description": "Unique name for event configuration",
                        "type": "string"
                    },
                    "prettifiedName": {
                        "description": "User readable name for event configuration",
                        "type": "string"
                    },
                    "reason": {
                        "description": "Reason for the alert being raised",
                        "type": "string"
                    },
                    "retentionPolicy": {
                        "$ref": "#/components/schemas/RetentionPolicy_v1_eventmonitoring_PUT",
                        "description": "Retention policy for the generated event records as part of the parent event configuration"
                    },
                    "source": {
                        "description": "Source of the issue",
                        "type": "string"
                    },
                    "triggerGroups": {
                        "description": "List of triggers that govern the stream types where the alert can be broadcasted",
                        "items": {
                            "$ref": "#/components/schemas/TriggerGroup_v1_eventmonitoring_PUT"
                        },
                        "type": "array"
                    }
                }
            },
            "EventConfigStatusWrapper_v1_eventmonitoring_GET": {
                "properties": {
                    "error": {
                        "description": "Last observed error, if any.",
                        "type": "string"
                    },
                    "eventStore": {
                        "$ref": "#/components/schemas/EventStore_v1_eventmonitoring_GET",
                        "description": "Store of event records with currently active lifecycle"
                    }
                }
            },
            "EventConfigStatusWrapper_v1_eventmonitoring_POST": {
                "properties": {
                    "error": {
                        "description": "Last observed error, if any.",
                        "type": "string"
                    },
                    "eventStore": {
                        "$ref": "#/components/schemas/EventStore_v1_eventmonitoring_POST",
                        "description": "Store of event records with currently active lifecycle"
                    }
                }
            },
            "EventConfigStatusWrapper_v1_eventmonitoring_PUT": {
                "properties": {
                    "error": {
                        "description": "Last observed error, if any.",
                        "type": "string"
                    },
                    "eventStore": {
                        "$ref": "#/components/schemas/EventStore_v1_eventmonitoring_PUT",
                        "description": "Store of event records with currently active lifecycle"
                    }
                }
            },
            "EventConfigStatus_v1_eventmonitoring_GET": {
                "description": "Status portion of EventConfig resource",
                "properties": {
                    "error": {
                        "description": "Last observed error, if any.",
                        "type": "string"
                    },
                    "eventStore": {
                        "$ref": "#/components/schemas/EventStore_v1_eventmonitoring_GET",
                        "description": "Store of event records with currently active lifecycle"
                    }
                }
            },
            "EventConfigStatus_v1_eventmonitoring_POST": {
                "description": "Status portion of EventConfig resource",
                "properties": {
                    "error": {
                        "description": "Last observed error, if any.",
                        "type": "string"
                    },
                    "eventStore": {
                        "$ref": "#/components/schemas/EventStore_v1_eventmonitoring_POST",
                        "description": "Store of event records with currently active lifecycle"
                    }
                }
            },
            "EventConfigStatus_v1_eventmonitoring_PUT": {
                "description": "Status portion of EventConfig resource",
                "properties": {
                    "error": {
                        "description": "Last observed error, if any.",
                        "type": "string"
                    },
                    "eventStore": {
                        "$ref": "#/components/schemas/EventStore_v1_eventmonitoring_PUT",
                        "description": "Store of event records with currently active lifecycle"
                    }
                }
            },
            "EventConfig_v1_eventmonitoring_GET": {
                "description": "Configuration to monitor a specific or group of resources on ND",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/EventConfigSpecWrapper_v1_eventmonitoring_GET"
                    },
                    "status": {
                        "$ref": "#/components/schemas/EventConfigStatusWrapper_v1_eventmonitoring_GET"
                    }
                },
                "required": [
                    "spec",
                    "status"
                ]
            },
            "EventConfig_v1_eventmonitoring_GETLIST": {
                "description": "Configuration to monitor a specific or group of resources on ND",
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/EventConfig_v1_eventmonitoring_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "EventConfig_v1_eventmonitoring_POST": {
                "description": "Configuration to monitor a specific or group of resources on ND",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/EventConfigSpecWrapper_v1_eventmonitoring_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "EventConfig_v1_eventmonitoring_PUT": {
                "description": "Configuration to monitor a specific or group of resources on ND",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/EventConfigSpecWrapper_v1_eventmonitoring_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "EventDomainSpecWrapper_v1_eventmonitoring_GET": {
                "properties": {
                    "eventConfigs": {
                        "description": "List of child event configurations",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "metaName": {
                        "description": "Unique Domain name",
                        "type": "string"
                    }
                }
            },
            "EventDomainSpecWrapper_v1_eventmonitoring_POST": {
                "properties": {
                    "eventConfigs": {
                        "description": "List of child event configurations",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "metaName": {
                        "description": "Unique Domain name",
                        "type": "string"
                    }
                },
                "required": [
                    "metaName"
                ]
            },
            "EventDomainSpecWrapper_v1_eventmonitoring_PUT": {
                "properties": {
                    "eventConfigs": {
                        "description": "List of child event configurations",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "metaName": {
                        "description": "Unique Domain name",
                        "type": "string"
                    }
                }
            },
            "EventDomainSpec_v1_eventmonitoring_GET": {
                "description": "Spec portion of EventDomain resource",
                "properties": {
                    "eventConfigs": {
                        "description": "List of child event configurations",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "metaName": {
                        "description": "Unique Domain name",
                        "type": "string"
                    }
                }
            },
            "EventDomainSpec_v1_eventmonitoring_POST": {
                "description": "Spec portion of EventDomain resource",
                "properties": {
                    "eventConfigs": {
                        "description": "List of child event configurations",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "metaName": {
                        "description": "Unique Domain name",
                        "type": "string"
                    }
                }
            },
            "EventDomainSpec_v1_eventmonitoring_PUT": {
                "description": "Spec portion of EventDomain resource",
                "properties": {
                    "eventConfigs": {
                        "description": "List of child event configurations",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "metaName": {
                        "description": "Unique Domain name",
                        "type": "string"
                    }
                }
            },
            "EventDomain_v1_eventmonitoring_GET": {
                "description": "Domain that contains a list of event configurations being monitored",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/EventDomainSpecWrapper_v1_eventmonitoring_GET"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "EventDomain_v1_eventmonitoring_GETLIST": {
                "description": "Domain that contains a list of event configurations being monitored",
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/EventDomain_v1_eventmonitoring_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "EventDomain_v1_eventmonitoring_POST": {
                "description": "Domain that contains a list of event configurations being monitored",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/EventDomainSpecWrapper_v1_eventmonitoring_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "EventDomain_v1_eventmonitoring_PUT": {
                "description": "Domain that contains a list of event configurations being monitored",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/EventDomainSpecWrapper_v1_eventmonitoring_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "EventOccurrence_v1_eventmonitoring_GET": {
                "description": "Current status of the event record being monitored",
                "properties": {
                    "alertDescription": {
                        "description": "Description of the alert being raised",
                        "type": "string"
                    },
                    "clearedTime": {
                        "description": "Timestamp when the alert is cleared",
                        "type": "string"
                    },
                    "correlatedFaults": {
                        "description": "List of event records which are correlated to the current record",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "encrypted": {
                        "description": "Whether event record information is encrypted",
                        "type": "boolean"
                    },
                    "eventCount": {
                        "description": "Number of events captured during \"Active\" alert state",
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isRootCause": {
                        "description": "Whether the event record is marked as the root cause of the alerts raised by other correlated event records",
                        "type": "boolean"
                    },
                    "resultValue": {
                        "description": "Current result value of the resource being monitored as part of event configuration",
                        "type": "string"
                    },
                    "severity": {
                        "description": "Severity of the event configuration being monitored with respect to the threshold",
                        "enum": [
                            "critical",
                            "major",
                            "minor",
                            "warning"
                        ],
                        "type": "string"
                    },
                    "streamHistory": {
                        "description": "List of streams where event record alert information is broadcasted and the status of the stream operation",
                        "items": {
                            "$ref": "#/components/schemas/RecordStream_v1_eventmonitoring_GET"
                        },
                        "type": "array"
                    }
                }
            },
            "EventOccurrence_v1_eventmonitoring_POST": {
                "description": "Current status of the event record being monitored",
                "properties": {
                    "alertDescription": {
                        "description": "Description of the alert being raised",
                        "type": "string"
                    },
                    "clearedTime": {
                        "description": "Timestamp when the alert is cleared",
                        "type": "string"
                    },
                    "correlatedFaults": {
                        "description": "List of event records which are correlated to the current record",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "encrypted": {
                        "description": "Whether event record information is encrypted",
                        "type": "boolean"
                    },
                    "eventCount": {
                        "description": "Number of events captured during \"Active\" alert state",
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isRootCause": {
                        "description": "Whether the event record is marked as the root cause of the alerts raised by other correlated event records",
                        "type": "boolean"
                    },
                    "resultValue": {
                        "description": "Current result value of the resource being monitored as part of event configuration",
                        "type": "string"
                    },
                    "severity": {
                        "description": "Severity of the event configuration being monitored with respect to the threshold",
                        "enum": [
                            "critical",
                            "major",
                            "minor",
                            "warning"
                        ],
                        "type": "string"
                    },
                    "streamHistory": {
                        "description": "List of streams where event record alert information is broadcasted and the status of the stream operation",
                        "items": {
                            "$ref": "#/components/schemas/RecordStream_v1_eventmonitoring_POST"
                        },
                        "type": "array"
                    }
                }
            },
            "EventOccurrence_v1_eventmonitoring_PUT": {
                "description": "Current status of the event record being monitored",
                "properties": {
                    "alertDescription": {
                        "description": "Description of the alert being raised",
                        "type": "string"
                    },
                    "clearedTime": {
                        "description": "Timestamp when the alert is cleared",
                        "type": "string"
                    },
                    "correlatedFaults": {
                        "description": "List of event records which are correlated to the current record",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "encrypted": {
                        "description": "Whether event record information is encrypted",
                        "type": "boolean"
                    },
                    "eventCount": {
                        "description": "Number of events captured during \"Active\" alert state",
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isRootCause": {
                        "description": "Whether the event record is marked as the root cause of the alerts raised by other correlated event records",
                        "type": "boolean"
                    },
                    "resultValue": {
                        "description": "Current result value of the resource being monitored as part of event configuration",
                        "type": "string"
                    },
                    "severity": {
                        "description": "Severity of the event configuration being monitored with respect to the threshold",
                        "enum": [
                            "critical",
                            "major",
                            "minor",
                            "warning"
                        ],
                        "type": "string"
                    },
                    "streamHistory": {
                        "description": "List of streams where event record alert information is broadcasted and the status of the stream operation",
                        "items": {
                            "$ref": "#/components/schemas/RecordStream_v1_eventmonitoring_PUT"
                        },
                        "type": "array"
                    }
                }
            },
            "EventRecordSpecWrapper_v1_eventmonitoring_GET": {
                "properties": {
                    "acked": {
                        "description": "Tracks customer acknowledgment of the raised alert",
                        "type": "boolean"
                    },
                    "alertState": {
                        "description": "Tracks the last observed state of the alert (Active / Cleared) for the parent event configuration being monitored",
                        "enum": [
                            "Active",
                            "Cleared"
                        ],
                        "type": "string"
                    },
                    "metaName": {
                        "description": "Unique name for event record",
                        "type": "string"
                    },
                    "recordId": {
                        "description": "Encrypted record id for the resource being monitored",
                        "type": "string"
                    }
                }
            },
            "EventRecordSpecWrapper_v1_eventmonitoring_POST": {
                "properties": {
                    "acked": {
                        "description": "Tracks customer acknowledgment of the raised alert",
                        "type": "boolean"
                    },
                    "alertState": {
                        "description": "Tracks the last observed state of the alert (Active / Cleared) for the parent event configuration being monitored",
                        "enum": [
                            "Active",
                            "Cleared"
                        ],
                        "type": "string"
                    },
                    "metaName": {
                        "description": "Unique name for event record",
                        "type": "string"
                    },
                    "recordId": {
                        "description": "Encrypted record id for the resource being monitored",
                        "type": "string"
                    }
                },
                "required": [
                    "metaName"
                ]
            },
            "EventRecordSpecWrapper_v1_eventmonitoring_PUT": {
                "properties": {
                    "acked": {
                        "description": "Tracks customer acknowledgment of the raised alert",
                        "type": "boolean"
                    },
                    "alertState": {
                        "description": "Tracks the last observed state of the alert (Active / Cleared) for the parent event configuration being monitored",
                        "enum": [
                            "Active",
                            "Cleared"
                        ],
                        "type": "string"
                    },
                    "metaName": {
                        "description": "Unique name for event record",
                        "type": "string"
                    },
                    "recordId": {
                        "description": "Encrypted record id for the resource being monitored",
                        "type": "string"
                    }
                }
            },
            "EventRecordSpec_v1_eventmonitoring_GET": {
                "description": "Spec portion of EventRecord resource",
                "properties": {
                    "acked": {
                        "description": "Tracks customer acknowledgment of the raised alert",
                        "type": "boolean"
                    },
                    "alertState": {
                        "description": "Tracks the last observed state of the alert (Active / Cleared) for the parent event configuration being monitored",
                        "enum": [
                            "Active",
                            "Cleared"
                        ],
                        "type": "string"
                    },
                    "metaName": {
                        "description": "Unique name for event record",
                        "type": "string"
                    },
                    "recordId": {
                        "description": "Encrypted record id for the resource being monitored",
                        "type": "string"
                    }
                }
            },
            "EventRecordSpec_v1_eventmonitoring_POST": {
                "description": "Spec portion of EventRecord resource",
                "properties": {
                    "acked": {
                        "description": "Tracks customer acknowledgment of the raised alert",
                        "type": "boolean"
                    },
                    "alertState": {
                        "description": "Tracks the last observed state of the alert (Active / Cleared) for the parent event configuration being monitored",
                        "enum": [
                            "Active",
                            "Cleared"
                        ],
                        "type": "string"
                    },
                    "metaName": {
                        "description": "Unique name for event record",
                        "type": "string"
                    },
                    "recordId": {
                        "description": "Encrypted record id for the resource being monitored",
                        "type": "string"
                    }
                }
            },
            "EventRecordSpec_v1_eventmonitoring_PUT": {
                "description": "Spec portion of EventRecord resource",
                "properties": {
                    "acked": {
                        "description": "Tracks customer acknowledgment of the raised alert",
                        "type": "boolean"
                    },
                    "alertState": {
                        "description": "Tracks the last observed state of the alert (Active / Cleared) for the parent event configuration being monitored",
                        "enum": [
                            "Active",
                            "Cleared"
                        ],
                        "type": "string"
                    },
                    "metaName": {
                        "description": "Unique name for event record",
                        "type": "string"
                    },
                    "recordId": {
                        "description": "Encrypted record id for the resource being monitored",
                        "type": "string"
                    }
                }
            },
            "EventRecordStatusWrapper_v1_eventmonitoring_GET": {
                "properties": {
                    "eventOccurrence": {
                        "$ref": "#/components/schemas/EventOccurrence_v1_eventmonitoring_GET",
                        "description": "Current status of the event record being monitored"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Set of (key,values) uniquely identifying a resource being monitored as part of event configuration",
                        "type": "object"
                    },
                    "recordLabels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Query result labels that differentiate between multiple entities being tracked under the same parent event configuration",
                        "type": "object"
                    }
                }
            },
            "EventRecordStatusWrapper_v1_eventmonitoring_POST": {
                "properties": {
                    "eventOccurrence": {
                        "$ref": "#/components/schemas/EventOccurrence_v1_eventmonitoring_POST",
                        "description": "Current status of the event record being monitored"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Set of (key,values) uniquely identifying a resource being monitored as part of event configuration",
                        "type": "object"
                    },
                    "recordLabels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Query result labels that differentiate between multiple entities being tracked under the same parent event configuration",
                        "type": "object"
                    }
                }
            },
            "EventRecordStatusWrapper_v1_eventmonitoring_PUT": {
                "properties": {
                    "eventOccurrence": {
                        "$ref": "#/components/schemas/EventOccurrence_v1_eventmonitoring_PUT",
                        "description": "Current status of the event record being monitored"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Set of (key,values) uniquely identifying a resource being monitored as part of event configuration",
                        "type": "object"
                    },
                    "recordLabels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Query result labels that differentiate between multiple entities being tracked under the same parent event configuration",
                        "type": "object"
                    }
                }
            },
            "EventRecordStatus_v1_eventmonitoring_GET": {
                "description": "Spec portion of EventRecord resource",
                "properties": {
                    "eventOccurrence": {
                        "$ref": "#/components/schemas/EventOccurrence_v1_eventmonitoring_GET",
                        "description": "Current status of the event record being monitored"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Set of (key,values) uniquely identifying a resource being monitored as part of event configuration",
                        "type": "object"
                    },
                    "recordLabels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Query result labels that differentiate between multiple entities being tracked under the same parent event configuration",
                        "type": "object"
                    }
                }
            },
            "EventRecordStatus_v1_eventmonitoring_POST": {
                "description": "Spec portion of EventRecord resource",
                "properties": {
                    "eventOccurrence": {
                        "$ref": "#/components/schemas/EventOccurrence_v1_eventmonitoring_POST",
                        "description": "Current status of the event record being monitored"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Set of (key,values) uniquely identifying a resource being monitored as part of event configuration",
                        "type": "object"
                    },
                    "recordLabels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Query result labels that differentiate between multiple entities being tracked under the same parent event configuration",
                        "type": "object"
                    }
                }
            },
            "EventRecordStatus_v1_eventmonitoring_PUT": {
                "description": "Spec portion of EventRecord resource",
                "properties": {
                    "eventOccurrence": {
                        "$ref": "#/components/schemas/EventOccurrence_v1_eventmonitoring_PUT",
                        "description": "Current status of the event record being monitored"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Set of (key,values) uniquely identifying a resource being monitored as part of event configuration",
                        "type": "object"
                    },
                    "recordLabels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Query result labels that differentiate between multiple entities being tracked under the same parent event configuration",
                        "type": "object"
                    }
                }
            },
            "EventRecord_v1_eventmonitoring_GET": {
                "description": "An event monitoring record gets generated on a resource that is crossing the threshold set in the parent event configuration",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/EventRecordSpecWrapper_v1_eventmonitoring_GET"
                    },
                    "status": {
                        "$ref": "#/components/schemas/EventRecordStatusWrapper_v1_eventmonitoring_GET"
                    }
                },
                "required": [
                    "spec",
                    "status"
                ]
            },
            "EventRecord_v1_eventmonitoring_GETLIST": {
                "description": "An event monitoring record gets generated on a resource that is crossing the threshold set in the parent event configuration",
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/EventRecord_v1_eventmonitoring_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "EventRecord_v1_eventmonitoring_POST": {
                "description": "An event monitoring record gets generated on a resource that is crossing the threshold set in the parent event configuration",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/EventRecordSpecWrapper_v1_eventmonitoring_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "EventRecord_v1_eventmonitoring_PUT": {
                "description": "An event monitoring record gets generated on a resource that is crossing the threshold set in the parent event configuration",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/EventRecordSpecWrapper_v1_eventmonitoring_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "EventStore_v1_eventmonitoring_GET": {
                "description": "Store of event records with currently active lifecycle",
                "properties": {
                    "currentEventOccurrences": {
                        "description": "List of event records which signify the current alert state for the parent event configuration being monitored",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "totalEventCount": {
                        "description": "Number of event records captued during \"Active\" alert state",
                        "type": "integer"
                    }
                }
            },
            "EventStore_v1_eventmonitoring_POST": {
                "description": "Store of event records with currently active lifecycle",
                "properties": {
                    "currentEventOccurrences": {
                        "description": "List of event records which signify the current alert state for the parent event configuration being monitored",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "totalEventCount": {
                        "description": "Number of event records captued during \"Active\" alert state",
                        "type": "integer"
                    }
                }
            },
            "EventStore_v1_eventmonitoring_PUT": {
                "description": "Store of event records with currently active lifecycle",
                "properties": {
                    "currentEventOccurrences": {
                        "description": "List of event records which signify the current alert state for the parent event configuration being monitored",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "totalEventCount": {
                        "description": "Number of event records captued during \"Active\" alert state",
                        "type": "integer"
                    }
                }
            },
            "ExternalIpSpecWrapper_v1_platform_GET": {
                "properties": {
                    "ip": {
                        "description": "External IP list",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "External service name",
                        "type": "string"
                    },
                    "targetNetwork": {
                        "description": "External IP target network",
                        "type": "string"
                    }
                }
            },
            "ExternalIpSpecWrapper_v1_platform_POST": {
                "properties": {
                    "ip": {
                        "description": "External IP list",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "External service name",
                        "type": "string"
                    },
                    "targetNetwork": {
                        "description": "External IP target network",
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ExternalIpSpecWrapper_v1_platform_PUT": {
                "properties": {
                    "ip": {
                        "description": "External IP list",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "External service name",
                        "type": "string"
                    },
                    "targetNetwork": {
                        "description": "External IP target network",
                        "type": "string"
                    }
                }
            },
            "ExternalIpSpec_v1_platform_GET": {
                "description": "Resource that represents configuration for external IPs allocated for a given target network",
                "properties": {
                    "ip": {
                        "description": "External IP list",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "External service name",
                        "type": "string"
                    },
                    "targetNetwork": {
                        "description": "External IP target network",
                        "type": "string"
                    }
                }
            },
            "ExternalIpSpec_v1_platform_POST": {
                "description": "Resource that represents configuration for external IPs allocated for a given target network",
                "properties": {
                    "ip": {
                        "description": "External IP list",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "External service name",
                        "type": "string"
                    },
                    "targetNetwork": {
                        "description": "External IP target network",
                        "type": "string"
                    }
                }
            },
            "ExternalIpSpec_v1_platform_PUT": {
                "description": "Resource that represents configuration for external IPs allocated for a given target network",
                "properties": {
                    "ip": {
                        "description": "External IP list",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "External service name",
                        "type": "string"
                    },
                    "targetNetwork": {
                        "description": "External IP target network",
                        "type": "string"
                    }
                }
            },
            "ExternalIpStatusError_v1_platform_GET": {
                "description": "error is the last observed error, if any.",
                "properties": {
                    "message": {
                        "description": "message is a string detailing the encountered error",
                        "type": "string"
                    },
                    "time": {
                        "description": "time is the timestamp when the error was encountered.",
                        "type": "string"
                    }
                }
            },
            "ExternalIpStatusError_v1_platform_POST": {
                "description": "error is the last observed error, if any.",
                "properties": {
                    "message": {
                        "description": "message is a string detailing the encountered error",
                        "type": "string"
                    },
                    "time": {
                        "description": "time is the timestamp when the error was encountered.",
                        "type": "string"
                    }
                }
            },
            "ExternalIpStatusError_v1_platform_PUT": {
                "description": "error is the last observed error, if any.",
                "properties": {
                    "message": {
                        "description": "message is a string detailing the encountered error",
                        "type": "string"
                    },
                    "time": {
                        "description": "time is the timestamp when the error was encountered.",
                        "type": "string"
                    }
                }
            },
            "ExternalIpStatusWrapper_v1_platform_GET": {
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/ExternalIpStatusError_v1_platform_GET",
                        "description": "error is the last observed error, if any."
                    },
                    "externalIpAllocation": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of external IPs and the service they are allocated to",
                        "type": "object"
                    }
                }
            },
            "ExternalIpStatusWrapper_v1_platform_POST": {
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/ExternalIpStatusError_v1_platform_POST",
                        "description": "error is the last observed error, if any."
                    },
                    "externalIpAllocation": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of external IPs and the service they are allocated to",
                        "type": "object"
                    }
                }
            },
            "ExternalIpStatusWrapper_v1_platform_PUT": {
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/ExternalIpStatusError_v1_platform_PUT",
                        "description": "error is the last observed error, if any."
                    },
                    "externalIpAllocation": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of external IPs and the service they are allocated to",
                        "type": "object"
                    }
                }
            },
            "ExternalIpStatus_v1_platform_GET": {
                "description": "Status of externalips in this configuration",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/ExternalIpStatusError_v1_platform_GET",
                        "description": "error is the last observed error, if any."
                    },
                    "externalIpAllocation": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of external IPs and the service they are allocated to",
                        "type": "object"
                    }
                }
            },
            "ExternalIpStatus_v1_platform_POST": {
                "description": "Status of externalips in this configuration",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/ExternalIpStatusError_v1_platform_POST",
                        "description": "error is the last observed error, if any."
                    },
                    "externalIpAllocation": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of external IPs and the service they are allocated to",
                        "type": "object"
                    }
                }
            },
            "ExternalIpStatus_v1_platform_PUT": {
                "description": "Status of externalips in this configuration",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/ExternalIpStatusError_v1_platform_PUT",
                        "description": "error is the last observed error, if any."
                    },
                    "externalIpAllocation": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of external IPs and the service they are allocated to",
                        "type": "object"
                    }
                }
            },
            "ExternalIp_v1_platform_GET": {
                "description": "External IP config for external services",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/ExternalIpSpecWrapper_v1_platform_GET"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ExternalIpStatusWrapper_v1_platform_GET"
                    }
                },
                "required": [
                    "spec",
                    "status"
                ]
            },
            "ExternalIp_v1_platform_GETLIST": {
                "description": "External IP config for external services",
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/ExternalIp_v1_platform_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "ExternalIp_v1_platform_POST": {
                "description": "External IP config for external services",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/ExternalIpSpecWrapper_v1_platform_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "ExternalIp_v1_platform_PUT": {
                "description": "External IP config for external services",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/ExternalIpSpecWrapper_v1_platform_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "FabricResponseStatus_v4_sitemanagement_GET": {
                "properties": {
                    "siteList": {
                        "$ref": "#/components/schemas/FabricResponse_v4_sitemanagement_GET"
                    },
                    "siteType": {
                        "description": "site type - ACI/NDFC/DCNM",
                        "type": "string"
                    }
                }
            },
            "FabricResponseStatus_v4_sitemanagement_POST": {
                "properties": {
                    "siteList": {
                        "$ref": "#/components/schemas/FabricResponse_v4_sitemanagement_POST"
                    },
                    "siteType": {
                        "description": "site type - ACI/NDFC/DCNM",
                        "type": "string"
                    }
                }
            },
            "FabricResponseStatus_v4_sitemanagement_PUT": {
                "properties": {
                    "siteList": {
                        "$ref": "#/components/schemas/FabricResponse_v4_sitemanagement_PUT"
                    },
                    "siteType": {
                        "description": "site type - ACI/NDFC/DCNM",
                        "type": "string"
                    }
                }
            },
            "FabricResponse_v4_sitemanagement_GET": {
                "oneOf": [
                    {
                        "properties": {
                            "aci": {
                                "items": {
                                    "$ref": "#/components/schemas/ACIFabricResponse_v4_sitemanagement_GET"
                                },
                                "type": "array"
                            }
                        }
                    },
                    {
                        "properties": {
                            "CloudACI": {
                                "items": {
                                    "$ref": "#/components/schemas/CloudACIFabricResponse_v4_sitemanagement_GET"
                                },
                                "type": "array"
                            }
                        }
                    },
                    {
                        "properties": {
                            "dcnm": {
                                "items": {
                                    "$ref": "#/components/schemas/DCNMFabricResponse_v4_sitemanagement_GET"
                                },
                                "type": "array"
                            }
                        }
                    },
                    {
                        "properties": {
                            "ndfc": {
                                "items": {
                                    "$ref": "#/components/schemas/NDFCFabricResponse_v4_sitemanagement_GET"
                                },
                                "type": "array"
                            }
                        }
                    }
                ]
            },
            "FabricResponse_v4_sitemanagement_POST": {
                "oneOf": [
                    {
                        "properties": {
                            "aci": {
                                "items": {
                                    "$ref": "#/components/schemas/ACIFabricResponse_v4_sitemanagement_POST"
                                },
                                "type": "array"
                            }
                        }
                    },
                    {
                        "properties": {
                            "CloudACI": {
                                "items": {
                                    "$ref": "#/components/schemas/CloudACIFabricResponse_v4_sitemanagement_POST"
                                },
                                "type": "array"
                            }
                        }
                    },
                    {
                        "properties": {
                            "dcnm": {
                                "items": {
                                    "$ref": "#/components/schemas/DCNMFabricResponse_v4_sitemanagement_POST"
                                },
                                "type": "array"
                            }
                        }
                    },
                    {
                        "properties": {
                            "ndfc": {
                                "items": {
                                    "$ref": "#/components/schemas/NDFCFabricResponse_v4_sitemanagement_POST"
                                },
                                "type": "array"
                            }
                        }
                    }
                ]
            },
            "FabricResponse_v4_sitemanagement_PUT": {
                "oneOf": [
                    {
                        "properties": {
                            "aci": {
                                "items": {
                                    "$ref": "#/components/schemas/ACIFabricResponse_v4_sitemanagement_PUT"
                                },
                                "type": "array"
                            }
                        }
                    },
                    {
                        "properties": {
                            "CloudACI": {
                                "items": {
                                    "$ref": "#/components/schemas/CloudACIFabricResponse_v4_sitemanagement_PUT"
                                },
                                "type": "array"
                            }
                        }
                    },
                    {
                        "properties": {
                            "dcnm": {
                                "items": {
                                    "$ref": "#/components/schemas/DCNMFabricResponse_v4_sitemanagement_PUT"
                                },
                                "type": "array"
                            }
                        }
                    },
                    {
                        "properties": {
                            "ndfc": {
                                "items": {
                                    "$ref": "#/components/schemas/NDFCFabricResponse_v4_sitemanagement_PUT"
                                },
                                "type": "array"
                            }
                        }
                    }
                ]
            },
            "FabricSpecWrapper_v4_sitemanagement_GET": {
                "properties": {
                    "loginDomain": {
                        "description": "controller login domain",
                        "type": "string"
                    },
                    "password": {
                        "description": "controller login password - base64 encoded",
                        "type": "string"
                    },
                    "siteType": {
                        "description": "site type - ACI/cloudACI/DCNM/NDFC",
                        "type": "string"
                    },
                    "url": {
                        "description": "controller URL",
                        "type": "string"
                    },
                    "useProxy": {
                        "description": "controller reachable via proxy",
                        "type": "boolean"
                    },
                    "userName": {
                        "description": "controller login username",
                        "type": "string"
                    }
                }
            },
            "FabricSpecWrapper_v4_sitemanagement_POST": {
                "properties": {
                    "loginDomain": {
                        "description": "controller login domain",
                        "type": "string"
                    },
                    "password": {
                        "description": "controller login password - base64 encoded",
                        "type": "string"
                    },
                    "siteType": {
                        "description": "site type - ACI/cloudACI/DCNM/NDFC",
                        "type": "string"
                    },
                    "url": {
                        "description": "controller URL",
                        "type": "string"
                    },
                    "useProxy": {
                        "description": "controller reachable via proxy",
                        "type": "boolean"
                    },
                    "userName": {
                        "description": "controller login username",
                        "type": "string"
                    }
                }
            },
            "FabricSpecWrapper_v4_sitemanagement_PUT": {
                "properties": {
                    "loginDomain": {
                        "description": "controller login domain",
                        "type": "string"
                    },
                    "password": {
                        "description": "controller login password - base64 encoded",
                        "type": "string"
                    },
                    "siteType": {
                        "description": "site type - ACI/cloudACI/DCNM/NDFC",
                        "type": "string"
                    },
                    "url": {
                        "description": "controller URL",
                        "type": "string"
                    },
                    "useProxy": {
                        "description": "controller reachable via proxy",
                        "type": "boolean"
                    },
                    "userName": {
                        "description": "controller login username",
                        "type": "string"
                    }
                }
            },
            "FabricSpec_v4_sitemanagement_GET": {
                "properties": {
                    "loginDomain": {
                        "description": "controller login domain",
                        "type": "string"
                    },
                    "password": {
                        "description": "controller login password - base64 encoded",
                        "type": "string"
                    },
                    "siteType": {
                        "description": "site type - ACI/cloudACI/DCNM/NDFC",
                        "type": "string"
                    },
                    "url": {
                        "description": "controller URL",
                        "type": "string"
                    },
                    "useProxy": {
                        "description": "controller reachable via proxy",
                        "type": "boolean"
                    },
                    "userName": {
                        "description": "controller login username",
                        "type": "string"
                    }
                }
            },
            "FabricSpec_v4_sitemanagement_POST": {
                "properties": {
                    "loginDomain": {
                        "description": "controller login domain",
                        "type": "string"
                    },
                    "password": {
                        "description": "controller login password - base64 encoded",
                        "type": "string"
                    },
                    "siteType": {
                        "description": "site type - ACI/cloudACI/DCNM/NDFC",
                        "type": "string"
                    },
                    "url": {
                        "description": "controller URL",
                        "type": "string"
                    },
                    "useProxy": {
                        "description": "controller reachable via proxy",
                        "type": "boolean"
                    },
                    "userName": {
                        "description": "controller login username",
                        "type": "string"
                    }
                }
            },
            "FabricSpec_v4_sitemanagement_PUT": {
                "properties": {
                    "loginDomain": {
                        "description": "controller login domain",
                        "type": "string"
                    },
                    "password": {
                        "description": "controller login password - base64 encoded",
                        "type": "string"
                    },
                    "siteType": {
                        "description": "site type - ACI/cloudACI/DCNM/NDFC",
                        "type": "string"
                    },
                    "url": {
                        "description": "controller URL",
                        "type": "string"
                    },
                    "useProxy": {
                        "description": "controller reachable via proxy",
                        "type": "boolean"
                    },
                    "userName": {
                        "description": "controller login username",
                        "type": "string"
                    }
                }
            },
            "FabricStatusWrapper_v4_sitemanagement_GET": {
                "properties": {
                    "siteList": {
                        "$ref": "#/components/schemas/FabricResponse_v4_sitemanagement_GET"
                    },
                    "siteType": {
                        "description": "site type - ACI/NDFC/DCNM",
                        "type": "string"
                    }
                }
            },
            "FabricStatusWrapper_v4_sitemanagement_POST": {
                "properties": {
                    "siteList": {
                        "$ref": "#/components/schemas/FabricResponse_v4_sitemanagement_POST"
                    },
                    "siteType": {
                        "description": "site type - ACI/NDFC/DCNM",
                        "type": "string"
                    }
                }
            },
            "FabricStatusWrapper_v4_sitemanagement_PUT": {
                "properties": {
                    "siteList": {
                        "$ref": "#/components/schemas/FabricResponse_v4_sitemanagement_PUT"
                    },
                    "siteType": {
                        "description": "site type - ACI/NDFC/DCNM",
                        "type": "string"
                    }
                }
            },
            "Fabric_v4_sitemanagement_GET": {
                "description": "Fabric Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/FabricSpecWrapper_v4_sitemanagement_GET"
                    },
                    "status": {
                        "$ref": "#/components/schemas/FabricStatusWrapper_v4_sitemanagement_GET"
                    }
                },
                "required": [
                    "spec",
                    "status"
                ]
            },
            "Fabric_v4_sitemanagement_GETLIST": {
                "description": "Fabric Resource",
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Fabric_v4_sitemanagement_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "Fabric_v4_sitemanagement_POST": {
                "description": "Fabric Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/FabricSpecWrapper_v4_sitemanagement_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "Fabric_v4_sitemanagement_PUT": {
                "description": "Fabric Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/FabricSpecWrapper_v4_sitemanagement_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "FederationSpecWrapper_v4_federation_GET": {
                "properties": {
                    "name": {
                        "description": "Federation name",
                        "type": "string"
                    }
                }
            },
            "FederationSpecWrapper_v4_federation_POST": {
                "properties": {
                    "name": {
                        "description": "Federation name",
                        "type": "string"
                    }
                }
            },
            "FederationSpecWrapper_v4_federation_PUT": {
                "properties": {
                    "name": {
                        "description": "Federation name",
                        "type": "string"
                    }
                }
            },
            "FederationSpec_v4_federation_GET": {
                "properties": {
                    "name": {
                        "description": "Federation name",
                        "type": "string"
                    }
                }
            },
            "FederationSpec_v4_federation_POST": {
                "properties": {
                    "name": {
                        "description": "Federation name",
                        "type": "string"
                    }
                }
            },
            "FederationSpec_v4_federation_PUT": {
                "properties": {
                    "name": {
                        "description": "Federation name",
                        "type": "string"
                    }
                }
            },
            "FederationStatusWrapper_v4_federation_GET": {
                "properties": {
                    "federationID": {
                        "description": "Federation ID",
                        "type": "string"
                    },
                    "managerReachability": {
                        "enum": [
                            "Up",
                            "Down"
                        ],
                        "type": "string"
                    }
                }
            },
            "FederationStatusWrapper_v4_federation_POST": {
                "properties": {
                    "federationID": {
                        "description": "Federation ID",
                        "type": "string"
                    },
                    "managerReachability": {
                        "enum": [
                            "Up",
                            "Down"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "federationID"
                ]
            },
            "FederationStatusWrapper_v4_federation_PUT": {
                "properties": {
                    "federationID": {
                        "description": "Federation ID",
                        "type": "string"
                    },
                    "managerReachability": {
                        "enum": [
                            "Up",
                            "Down"
                        ],
                        "type": "string"
                    }
                }
            },
            "FederationStatus_v4_federation_GET": {
                "properties": {
                    "federationID": {
                        "description": "Federation ID",
                        "type": "string"
                    },
                    "managerReachability": {
                        "enum": [
                            "Up",
                            "Down"
                        ],
                        "type": "string"
                    }
                }
            },
            "FederationStatus_v4_federation_POST": {
                "properties": {
                    "federationID": {
                        "description": "Federation ID",
                        "type": "string"
                    },
                    "managerReachability": {
                        "enum": [
                            "Up",
                            "Down"
                        ],
                        "type": "string"
                    }
                }
            },
            "FederationStatus_v4_federation_PUT": {
                "properties": {
                    "federationID": {
                        "description": "Federation ID",
                        "type": "string"
                    },
                    "managerReachability": {
                        "enum": [
                            "Up",
                            "Down"
                        ],
                        "type": "string"
                    }
                }
            },
            "Federation_v4_federation_GET": {
                "description": "Federation Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/FederationSpecWrapper_v4_federation_GET"
                    },
                    "status": {
                        "$ref": "#/components/schemas/FederationStatusWrapper_v4_federation_GET"
                    }
                },
                "required": [
                    "spec",
                    "status"
                ]
            },
            "Federation_v4_federation_GETLIST": {
                "description": "Federation Resource",
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Federation_v4_federation_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "Federation_v4_federation_POST": {
                "description": "Federation Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/FederationSpecWrapper_v4_federation_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "Federation_v4_federation_PUT": {
                "description": "Federation Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/FederationSpecWrapper_v4_federation_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "FieldSelectorMatchExpression": {
                "properties": {
                    "field": {
                        "type": "string"
                    },
                    "operator": {
                        "enum": [
                            "TRUE",
                            "FALSE",
                            "ISSET",
                            "EQ",
                            "NE",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "AND",
                            "OR",
                            "NOT",
                            "REGEX",
                            "CUSTOM"
                        ],
                        "type": "string"
                    },
                    "value": {},
                    "values": {
                        "items": {},
                        "type": "array"
                    }
                }
            },
            "FieldSelectorSpec": {
                "properties": {
                    "matchExpression": {
                        "$ref": "#/components/schemas/FieldSelectorMatchExpression"
                    }
                }
            },
            "GatewayConfigSpec_v4_aaa_GET": {
                "properties": {
                    "httpServerOptions": {
                        "$ref": "#/components/schemas/HTTPServerOptions_v4_aaa_GET",
                        "description": "Set HTTP Server Options"
                    },
                    "idleSessionTimeoutSeconds": {
                        "description": "Idle Session Timeout",
                        "type": "integer"
                    },
                    "jwtSessionTimeoutSeconds": {
                        "description": "JWT Session Timeout",
                        "type": "integer"
                    },
                    "name": {
                        "description": "APIGW Config Name",
                        "type": "string"
                    }
                }
            },
            "GatewayConfigSpec_v4_aaa_POST": {
                "properties": {
                    "httpServerOptions": {
                        "$ref": "#/components/schemas/HTTPServerOptions_v4_aaa_POST",
                        "description": "Set HTTP Server Options"
                    },
                    "idleSessionTimeoutSeconds": {
                        "description": "Idle Session Timeout",
                        "type": "integer"
                    },
                    "jwtSessionTimeoutSeconds": {
                        "description": "JWT Session Timeout",
                        "type": "integer"
                    },
                    "name": {
                        "description": "APIGW Config Name",
                        "type": "string"
                    }
                }
            },
            "GatewayConfigSpec_v4_aaa_PUT": {
                "properties": {
                    "httpServerOptions": {
                        "$ref": "#/components/schemas/HTTPServerOptions_v4_aaa_PUT",
                        "description": "Set HTTP Server Options"
                    },
                    "idleSessionTimeoutSeconds": {
                        "description": "Idle Session Timeout",
                        "type": "integer"
                    },
                    "jwtSessionTimeoutSeconds": {
                        "description": "JWT Session Timeout",
                        "type": "integer"
                    },
                    "name": {
                        "description": "APIGW Config Name",
                        "type": "string"
                    }
                }
            },
            "GatewayConfigurationSpecWrapper_v4_aaa_GET": {
                "properties": {
                    "httpServerOptions": {
                        "$ref": "#/components/schemas/HTTPServerOptions_v4_aaa_GET",
                        "description": "Set HTTP Server Options"
                    },
                    "idleSessionTimeoutSeconds": {
                        "description": "Idle Session Timeout",
                        "type": "integer"
                    },
                    "jwtSessionTimeoutSeconds": {
                        "description": "JWT Session Timeout",
                        "type": "integer"
                    },
                    "name": {
                        "description": "APIGW Config Name",
                        "type": "string"
                    }
                }
            },
            "GatewayConfigurationSpecWrapper_v4_aaa_POST": {
                "properties": {
                    "httpServerOptions": {
                        "$ref": "#/components/schemas/HTTPServerOptions_v4_aaa_POST",
                        "description": "Set HTTP Server Options"
                    },
                    "idleSessionTimeoutSeconds": {
                        "description": "Idle Session Timeout",
                        "type": "integer"
                    },
                    "jwtSessionTimeoutSeconds": {
                        "description": "JWT Session Timeout",
                        "type": "integer"
                    },
                    "name": {
                        "description": "APIGW Config Name",
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "GatewayConfigurationSpecWrapper_v4_aaa_PUT": {
                "properties": {
                    "httpServerOptions": {
                        "$ref": "#/components/schemas/HTTPServerOptions_v4_aaa_PUT",
                        "description": "Set HTTP Server Options"
                    },
                    "idleSessionTimeoutSeconds": {
                        "description": "Idle Session Timeout",
                        "type": "integer"
                    },
                    "jwtSessionTimeoutSeconds": {
                        "description": "JWT Session Timeout",
                        "type": "integer"
                    },
                    "name": {
                        "description": "APIGW Config Name",
                        "type": "string"
                    }
                }
            },
            "GatewayConfiguration_v4_aaa_GET": {
                "description": "API Gateway Configuration Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/GatewayConfigurationSpecWrapper_v4_aaa_GET"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "GatewayConfiguration_v4_aaa_GETLIST": {
                "description": "API Gateway Configuration Resource",
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/GatewayConfiguration_v4_aaa_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "GatewayConfiguration_v4_aaa_POST": {
                "description": "API Gateway Configuration Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/GatewayConfigurationSpecWrapper_v4_aaa_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "GatewayConfiguration_v4_aaa_PUT": {
                "description": "API Gateway Configuration Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/GatewayConfigurationSpecWrapper_v4_aaa_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "GroupRestrictions_v4_sitemanagement_GET": {
                "properties": {
                    "allow-non-empty-delete": {
                        "type": "boolean"
                    },
                    "allow-remote-members": {
                        "type": "boolean"
                    }
                }
            },
            "GroupRestrictions_v4_sitemanagement_POST": {
                "properties": {
                    "allow-non-empty-delete": {
                        "type": "boolean"
                    },
                    "allow-remote-members": {
                        "type": "boolean"
                    }
                }
            },
            "GroupRestrictions_v4_sitemanagement_PUT": {
                "properties": {
                    "allow-non-empty-delete": {
                        "type": "boolean"
                    },
                    "allow-remote-members": {
                        "type": "boolean"
                    }
                }
            },
            "GroupSelector_v4_sitemanagement_GET": {
                "properties": {
                    "values": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                }
            },
            "GroupSelector_v4_sitemanagement_POST": {
                "properties": {
                    "values": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                }
            },
            "GroupSelector_v4_sitemanagement_PUT": {
                "properties": {
                    "values": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                }
            },
            "HTTPServerOptions_v4_aaa_GET": {
                "properties": {
                    "certificateMetadata": {
                        "$ref": "#/components/schemas/CertificateMetadata_v4_aaa_GET",
                        "description": "User certificate"
                    },
                    "minVersion": {
                        "description": "SSL Min Version",
                        "enum": [
                            "TLS12",
                            "TLS13"
                        ],
                        "type": "string"
                    },
                    "serverName": {
                        "description": "Server Name",
                        "type": "string"
                    }
                }
            },
            "HTTPServerOptions_v4_aaa_POST": {
                "properties": {
                    "certificateMetadata": {
                        "$ref": "#/components/schemas/CertificateMetadata_v4_aaa_POST",
                        "description": "User certificate"
                    },
                    "minVersion": {
                        "description": "SSL Min Version",
                        "enum": [
                            "TLS12",
                            "TLS13"
                        ],
                        "type": "string"
                    },
                    "serverName": {
                        "description": "Server Name",
                        "type": "string"
                    }
                }
            },
            "HTTPServerOptions_v4_aaa_PUT": {
                "properties": {
                    "certificateMetadata": {
                        "$ref": "#/components/schemas/CertificateMetadata_v4_aaa_PUT",
                        "description": "User certificate"
                    },
                    "minVersion": {
                        "description": "SSL Min Version",
                        "enum": [
                            "TLS12",
                            "TLS13"
                        ],
                        "type": "string"
                    },
                    "serverName": {
                        "description": "Server Name",
                        "type": "string"
                    }
                }
            },
            "IdentityProvider_v4_aaa_GET": {
                "properties": {
                    "authType": {
                        "description": "OIDC authentication mechanism",
                        "enum": [
                            "CiscoAVPair",
                            "Localuser",
                            "Groups"
                        ],
                        "type": "string"
                    },
                    "clientID": {
                        "description": "OIDC Identity Provider Client ID",
                        "type": "string"
                    },
                    "clientSecret": {
                        "description": "Base64 encoded OIDC Identity Provider Client Secret",
                        "type": "string"
                    },
                    "guiBannerMessage": {
                        "description": "GUI Banner Message Page URL",
                        "type": "string"
                    },
                    "issuer": {
                        "description": "OIDC Identity Provider Issuer URL",
                        "type": "string"
                    },
                    "scopes": {
                        "description": "OIDC Identity Provider Scopes",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "useProxy": {
                        "description": "Flag to determine whether to use system proxy for OIDC Identity Provider",
                        "type": "boolean"
                    },
                    "usernameAttribute": {
                        "description": "Username attribute to be searched in claims",
                        "type": "string"
                    }
                }
            },
            "IdentityProvider_v4_aaa_POST": {
                "properties": {
                    "authType": {
                        "description": "OIDC authentication mechanism",
                        "enum": [
                            "CiscoAVPair",
                            "Localuser",
                            "Groups"
                        ],
                        "type": "string"
                    },
                    "clientID": {
                        "description": "OIDC Identity Provider Client ID",
                        "type": "string"
                    },
                    "clientSecret": {
                        "description": "Base64 encoded OIDC Identity Provider Client Secret",
                        "type": "string"
                    },
                    "guiBannerMessage": {
                        "description": "GUI Banner Message Page URL",
                        "type": "string"
                    },
                    "issuer": {
                        "description": "OIDC Identity Provider Issuer URL",
                        "type": "string"
                    },
                    "scopes": {
                        "description": "OIDC Identity Provider Scopes",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "useProxy": {
                        "description": "Flag to determine whether to use system proxy for OIDC Identity Provider",
                        "type": "boolean"
                    },
                    "usernameAttribute": {
                        "description": "Username attribute to be searched in claims",
                        "type": "string"
                    }
                }
            },
            "IdentityProvider_v4_aaa_PUT": {
                "properties": {
                    "authType": {
                        "description": "OIDC authentication mechanism",
                        "enum": [
                            "CiscoAVPair",
                            "Localuser",
                            "Groups"
                        ],
                        "type": "string"
                    },
                    "clientID": {
                        "description": "OIDC Identity Provider Client ID",
                        "type": "string"
                    },
                    "clientSecret": {
                        "description": "Base64 encoded OIDC Identity Provider Client Secret",
                        "type": "string"
                    },
                    "guiBannerMessage": {
                        "description": "GUI Banner Message Page URL",
                        "type": "string"
                    },
                    "issuer": {
                        "description": "OIDC Identity Provider Issuer URL",
                        "type": "string"
                    },
                    "scopes": {
                        "description": "OIDC Identity Provider Scopes",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "useProxy": {
                        "description": "Flag to determine whether to use system proxy for OIDC Identity Provider",
                        "type": "boolean"
                    },
                    "usernameAttribute": {
                        "description": "Username attribute to be searched in claims",
                        "type": "string"
                    }
                }
            },
            "LDAPConfig_v4_aaa_GET": {
                "description": "LDAP login domain configuration",
                "properties": {
                    "adGroup": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/RBAC_v4_aaa_GET"
                        },
                        "description": "LDAP login domain AD group map",
                        "type": "object"
                    },
                    "option": {
                        "description": "LDAP login domain authentication mechanism",
                        "enum": [
                            "CiscoAVPair",
                            "LDAPGroupMap"
                        ],
                        "type": "string"
                    },
                    "providers": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/LDAPProvider_v4_aaa_GET"
                        },
                        "description": "LDAP login domain provider servers",
                        "type": "object"
                    }
                }
            },
            "LDAPConfig_v4_aaa_POST": {
                "description": "LDAP login domain configuration",
                "properties": {
                    "adGroup": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/RBAC_v4_aaa_POST"
                        },
                        "description": "LDAP login domain AD group map",
                        "type": "object"
                    },
                    "option": {
                        "description": "LDAP login domain authentication mechanism",
                        "enum": [
                            "CiscoAVPair",
                            "LDAPGroupMap"
                        ],
                        "type": "string"
                    },
                    "providers": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/LDAPProvider_v4_aaa_POST"
                        },
                        "description": "LDAP login domain provider servers",
                        "type": "object"
                    }
                }
            },
            "LDAPConfig_v4_aaa_PUT": {
                "description": "LDAP login domain configuration",
                "properties": {
                    "adGroup": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/RBAC_v4_aaa_PUT"
                        },
                        "description": "LDAP login domain AD group map",
                        "type": "object"
                    },
                    "option": {
                        "description": "LDAP login domain authentication mechanism",
                        "enum": [
                            "CiscoAVPair",
                            "LDAPGroupMap"
                        ],
                        "type": "string"
                    },
                    "providers": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/LDAPProvider_v4_aaa_PUT"
                        },
                        "description": "LDAP login domain provider servers",
                        "type": "object"
                    }
                }
            },
            "LDAPProvider_v4_aaa_GET": {
                "properties": {
                    "attribute": {
                        "description": "LDAP provider server authentication mechanism",
                        "type": "string"
                    },
                    "baseDN": {
                        "description": "Starting point when searching for users authentication within LDAP directory",
                        "type": "string"
                    },
                    "bindDN": {
                        "description": "Specifies the login DN to access the LDAP provider server",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description about the LDAP provider server",
                        "type": "string"
                    },
                    "filterDN": {
                        "description": "Field based on which to filter DN",
                        "type": "string"
                    },
                    "key": {
                        "description": "Base64 encoded LDAP provider server secret",
                        "type": "string"
                    },
                    "monitor": {
                        "description": "Flag to determine whether to monitor this LDAP provider",
                        "type": "boolean"
                    },
                    "monitorPassword": {
                        "description": "Monitoring user password",
                        "type": "string"
                    },
                    "monitorUsername": {
                        "description": "User name used for monitoring",
                        "type": "string"
                    },
                    "port": {
                        "description": "LDAP provider server connection port",
                        "type": "integer"
                    },
                    "priority": {
                        "description": "LDAP provider server priority based on which authentication will be attempted",
                        "type": "integer"
                    },
                    "retries": {
                        "description": "LDAP provider server connection retries parameter",
                        "type": "integer"
                    },
                    "sslCert": {
                        "description": "SSL Certificate",
                        "type": "string"
                    },
                    "sslEnabled": {
                        "description": "Flag to determine whether to enable SSL",
                        "type": "boolean"
                    },
                    "sslStrictnessLevel": {
                        "description": "SSL Strictness Level",
                        "enum": [
                            "Strict",
                            "Permissive"
                        ],
                        "type": "string"
                    },
                    "timeout": {
                        "description": "LDAP provider server connection timeout parameter",
                        "type": "integer"
                    }
                }
            },
            "LDAPProvider_v4_aaa_POST": {
                "properties": {
                    "attribute": {
                        "description": "LDAP provider server authentication mechanism",
                        "type": "string"
                    },
                    "baseDN": {
                        "description": "Starting point when searching for users authentication within LDAP directory",
                        "type": "string"
                    },
                    "bindDN": {
                        "description": "Specifies the login DN to access the LDAP provider server",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description about the LDAP provider server",
                        "type": "string"
                    },
                    "filterDN": {
                        "description": "Field based on which to filter DN",
                        "type": "string"
                    },
                    "key": {
                        "description": "Base64 encoded LDAP provider server secret",
                        "type": "string"
                    },
                    "monitor": {
                        "description": "Flag to determine whether to monitor this LDAP provider",
                        "type": "boolean"
                    },
                    "monitorPassword": {
                        "description": "Monitoring user password",
                        "type": "string"
                    },
                    "monitorUsername": {
                        "description": "User name used for monitoring",
                        "type": "string"
                    },
                    "port": {
                        "description": "LDAP provider server connection port",
                        "type": "integer"
                    },
                    "priority": {
                        "description": "LDAP provider server priority based on which authentication will be attempted",
                        "type": "integer"
                    },
                    "retries": {
                        "description": "LDAP provider server connection retries parameter",
                        "type": "integer"
                    },
                    "sslCert": {
                        "description": "SSL Certificate",
                        "type": "string"
                    },
                    "sslEnabled": {
                        "description": "Flag to determine whether to enable SSL",
                        "type": "boolean"
                    },
                    "sslStrictnessLevel": {
                        "description": "SSL Strictness Level",
                        "enum": [
                            "Strict",
                            "Permissive"
                        ],
                        "type": "string"
                    },
                    "timeout": {
                        "description": "LDAP provider server connection timeout parameter",
                        "type": "integer"
                    }
                }
            },
            "LDAPProvider_v4_aaa_PUT": {
                "properties": {
                    "attribute": {
                        "description": "LDAP provider server authentication mechanism",
                        "type": "string"
                    },
                    "baseDN": {
                        "description": "Starting point when searching for users authentication within LDAP directory",
                        "type": "string"
                    },
                    "bindDN": {
                        "description": "Specifies the login DN to access the LDAP provider server",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description about the LDAP provider server",
                        "type": "string"
                    },
                    "filterDN": {
                        "description": "Field based on which to filter DN",
                        "type": "string"
                    },
                    "key": {
                        "description": "Base64 encoded LDAP provider server secret",
                        "type": "string"
                    },
                    "monitor": {
                        "description": "Flag to determine whether to monitor this LDAP provider",
                        "type": "boolean"
                    },
                    "monitorPassword": {
                        "description": "Monitoring user password",
                        "type": "string"
                    },
                    "monitorUsername": {
                        "description": "User name used for monitoring",
                        "type": "string"
                    },
                    "port": {
                        "description": "LDAP provider server connection port",
                        "type": "integer"
                    },
                    "priority": {
                        "description": "LDAP provider server priority based on which authentication will be attempted",
                        "type": "integer"
                    },
                    "retries": {
                        "description": "LDAP provider server connection retries parameter",
                        "type": "integer"
                    },
                    "sslCert": {
                        "description": "SSL Certificate",
                        "type": "string"
                    },
                    "sslEnabled": {
                        "description": "Flag to determine whether to enable SSL",
                        "type": "boolean"
                    },
                    "sslStrictnessLevel": {
                        "description": "SSL Strictness Level",
                        "enum": [
                            "Strict",
                            "Permissive"
                        ],
                        "type": "string"
                    },
                    "timeout": {
                        "description": "LDAP provider server connection timeout parameter",
                        "type": "integer"
                    }
                }
            },
            "LabelSelectorMatchExpression": {
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "operator": {
                        "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                        ],
                        "type": "string"
                    },
                    "values": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                }
            },
            "LabelSelectorSpec": {
                "properties": {
                    "matchExpression": {
                        "items": {
                            "$ref": "#/components/schemas/LabelSelectorMatchExpression"
                        },
                        "type": "array"
                    }
                }
            },
            "LocalConfig_v4_aaa_GET": {
                "description": "Local login domain configuration"
            },
            "LocalConfig_v4_aaa_POST": {
                "description": "Local login domain configuration"
            },
            "LocalConfig_v4_aaa_PUT": {
                "description": "Local login domain configuration"
            },
            "LocalUserSpecWrapper_v4_aaa_GET": {
                "properties": {
                    "email": {
                        "description": "Local user email",
                        "type": "string"
                    },
                    "firstName": {
                        "description": "Local user first name",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "Local user last name",
                        "type": "string"
                    },
                    "loginID": {
                        "description": "Local user login ID",
                        "type": "string"
                    },
                    "password": {
                        "description": "Base64 encoded local user password",
                        "type": "string"
                    },
                    "passwordPolicy": {
                        "$ref": "#/components/schemas/PasswordPolicy_v4_aaa_GET",
                        "description": "Local user Password Policy"
                    },
                    "phone": {
                        "description": "Local user phone",
                        "type": "string"
                    },
                    "rbac": {
                        "$ref": "#/components/schemas/RBAC_v4_aaa_GET",
                        "description": "Local user RBAC"
                    },
                    "remoteIDClaim": {
                        "description": "CX UserID mapped to localuser",
                        "type": "string"
                    },
                    "userID": {
                        "description": "Local user ID",
                        "type": "string"
                    },
                    "xLaunch": {
                        "description": "Local user cross launch Option",
                        "type": "boolean"
                    }
                }
            },
            "LocalUserSpecWrapper_v4_aaa_POST": {
                "properties": {
                    "email": {
                        "description": "Local user email",
                        "type": "string"
                    },
                    "firstName": {
                        "description": "Local user first name",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "Local user last name",
                        "type": "string"
                    },
                    "loginID": {
                        "description": "Local user login ID",
                        "type": "string"
                    },
                    "password": {
                        "description": "Base64 encoded local user password",
                        "type": "string"
                    },
                    "passwordPolicy": {
                        "$ref": "#/components/schemas/PasswordPolicy_v4_aaa_POST",
                        "description": "Local user Password Policy"
                    },
                    "phone": {
                        "description": "Local user phone",
                        "type": "string"
                    },
                    "rbac": {
                        "$ref": "#/components/schemas/RBAC_v4_aaa_POST",
                        "description": "Local user RBAC"
                    },
                    "remoteIDClaim": {
                        "description": "CX UserID mapped to localuser",
                        "type": "string"
                    },
                    "xLaunch": {
                        "description": "Local user cross launch Option",
                        "type": "boolean"
                    }
                },
                "required": [
                    "loginID"
                ]
            },
            "LocalUserSpecWrapper_v4_aaa_PUT": {
                "properties": {
                    "email": {
                        "description": "Local user email",
                        "type": "string"
                    },
                    "firstName": {
                        "description": "Local user first name",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "Local user last name",
                        "type": "string"
                    },
                    "loginID": {
                        "description": "Local user login ID",
                        "type": "string"
                    },
                    "password": {
                        "description": "Base64 encoded local user password",
                        "type": "string"
                    },
                    "passwordPolicy": {
                        "$ref": "#/components/schemas/PasswordPolicy_v4_aaa_PUT",
                        "description": "Local user Password Policy"
                    },
                    "phone": {
                        "description": "Local user phone",
                        "type": "string"
                    },
                    "rbac": {
                        "$ref": "#/components/schemas/RBAC_v4_aaa_PUT",
                        "description": "Local user RBAC"
                    },
                    "remoteIDClaim": {
                        "description": "CX UserID mapped to localuser",
                        "type": "string"
                    },
                    "xLaunch": {
                        "description": "Local user cross launch Option",
                        "type": "boolean"
                    }
                }
            },
            "LocalUserSpec_v4_aaa_GET": {
                "properties": {
                    "email": {
                        "description": "Local user email",
                        "type": "string"
                    },
                    "firstName": {
                        "description": "Local user first name",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "Local user last name",
                        "type": "string"
                    },
                    "loginID": {
                        "description": "Local user login ID",
                        "type": "string"
                    },
                    "password": {
                        "description": "Base64 encoded local user password",
                        "type": "string"
                    },
                    "passwordPolicy": {
                        "$ref": "#/components/schemas/PasswordPolicy_v4_aaa_GET",
                        "description": "Local user Password Policy"
                    },
                    "phone": {
                        "description": "Local user phone",
                        "type": "string"
                    },
                    "rbac": {
                        "$ref": "#/components/schemas/RBAC_v4_aaa_GET",
                        "description": "Local user RBAC"
                    },
                    "remoteIDClaim": {
                        "description": "CX UserID mapped to localuser",
                        "type": "string"
                    },
                    "userID": {
                        "description": "Local user ID",
                        "type": "string"
                    },
                    "xLaunch": {
                        "description": "Local user cross launch Option",
                        "type": "boolean"
                    }
                }
            },
            "LocalUserSpec_v4_aaa_POST": {
                "properties": {
                    "email": {
                        "description": "Local user email",
                        "type": "string"
                    },
                    "firstName": {
                        "description": "Local user first name",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "Local user last name",
                        "type": "string"
                    },
                    "loginID": {
                        "description": "Local user login ID",
                        "type": "string"
                    },
                    "password": {
                        "description": "Base64 encoded local user password",
                        "type": "string"
                    },
                    "passwordPolicy": {
                        "$ref": "#/components/schemas/PasswordPolicy_v4_aaa_POST",
                        "description": "Local user Password Policy"
                    },
                    "phone": {
                        "description": "Local user phone",
                        "type": "string"
                    },
                    "rbac": {
                        "$ref": "#/components/schemas/RBAC_v4_aaa_POST",
                        "description": "Local user RBAC"
                    },
                    "remoteIDClaim": {
                        "description": "CX UserID mapped to localuser",
                        "type": "string"
                    },
                    "xLaunch": {
                        "description": "Local user cross launch Option",
                        "type": "boolean"
                    }
                }
            },
            "LocalUserSpec_v4_aaa_PUT": {
                "properties": {
                    "email": {
                        "description": "Local user email",
                        "type": "string"
                    },
                    "firstName": {
                        "description": "Local user first name",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "Local user last name",
                        "type": "string"
                    },
                    "loginID": {
                        "description": "Local user login ID",
                        "type": "string"
                    },
                    "password": {
                        "description": "Base64 encoded local user password",
                        "type": "string"
                    },
                    "passwordPolicy": {
                        "$ref": "#/components/schemas/PasswordPolicy_v4_aaa_PUT",
                        "description": "Local user Password Policy"
                    },
                    "phone": {
                        "description": "Local user phone",
                        "type": "string"
                    },
                    "rbac": {
                        "$ref": "#/components/schemas/RBAC_v4_aaa_PUT",
                        "description": "Local user RBAC"
                    },
                    "remoteIDClaim": {
                        "description": "CX UserID mapped to localuser",
                        "type": "string"
                    },
                    "xLaunch": {
                        "description": "Local user cross launch Option",
                        "type": "boolean"
                    }
                }
            },
            "LocalUser_v4_aaa_GET": {
                "description": "Local User Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/LocalUserSpecWrapper_v4_aaa_GET"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "LocalUser_v4_aaa_GETLIST": {
                "description": "Local User Resource",
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/LocalUser_v4_aaa_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "LocalUser_v4_aaa_POST": {
                "description": "Local User Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/LocalUserSpecWrapper_v4_aaa_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "LocalUser_v4_aaa_PUT": {
                "description": "Local User Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/LocalUserSpecWrapper_v4_aaa_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "LoginDomainSpecWrapper_v4_aaa_GET": {
                "properties": {
                    "description": {
                        "description": "Description about the login domain",
                        "type": "string"
                    },
                    "domain": {
                        "description": "Login domain name",
                        "type": "string"
                    },
                    "realm": {
                        "description": "Login domain realm type",
                        "enum": [
                            "Local",
                            "LDAP",
                            "RADIUS",
                            "TACACS",
                            "OIDC"
                        ],
                        "type": "string"
                    },
                    "servers": {
                        "$ref": "#/components/schemas/ProviderData_v4_aaa_GET",
                        "description": "Login domain provider servers"
                    }
                }
            },
            "LoginDomainSpecWrapper_v4_aaa_POST": {
                "properties": {
                    "description": {
                        "description": "Description about the login domain",
                        "type": "string"
                    },
                    "domain": {
                        "description": "Login domain name",
                        "type": "string"
                    },
                    "realm": {
                        "description": "Login domain realm type",
                        "enum": [
                            "Local",
                            "LDAP",
                            "RADIUS",
                            "TACACS",
                            "OIDC"
                        ],
                        "type": "string"
                    },
                    "servers": {
                        "$ref": "#/components/schemas/ProviderData_v4_aaa_POST",
                        "description": "Login domain provider servers"
                    }
                },
                "required": [
                    "domain"
                ]
            },
            "LoginDomainSpecWrapper_v4_aaa_PUT": {
                "properties": {
                    "description": {
                        "description": "Description about the login domain",
                        "type": "string"
                    },
                    "domain": {
                        "description": "Login domain name",
                        "type": "string"
                    },
                    "realm": {
                        "description": "Login domain realm type",
                        "enum": [
                            "Local",
                            "LDAP",
                            "RADIUS",
                            "TACACS",
                            "OIDC"
                        ],
                        "type": "string"
                    },
                    "servers": {
                        "$ref": "#/components/schemas/ProviderData_v4_aaa_PUT",
                        "description": "Login domain provider servers"
                    }
                }
            },
            "LoginDomainSpec_v4_aaa_GET": {
                "properties": {
                    "description": {
                        "description": "Description about the login domain",
                        "type": "string"
                    },
                    "domain": {
                        "description": "Login domain name",
                        "type": "string"
                    },
                    "realm": {
                        "description": "Login domain realm type",
                        "enum": [
                            "Local",
                            "LDAP",
                            "RADIUS",
                            "TACACS",
                            "OIDC"
                        ],
                        "type": "string"
                    },
                    "servers": {
                        "$ref": "#/components/schemas/ProviderData_v4_aaa_GET",
                        "description": "Login domain provider servers"
                    }
                }
            },
            "LoginDomainSpec_v4_aaa_POST": {
                "properties": {
                    "description": {
                        "description": "Description about the login domain",
                        "type": "string"
                    },
                    "domain": {
                        "description": "Login domain name",
                        "type": "string"
                    },
                    "realm": {
                        "description": "Login domain realm type",
                        "enum": [
                            "Local",
                            "LDAP",
                            "RADIUS",
                            "TACACS",
                            "OIDC"
                        ],
                        "type": "string"
                    },
                    "servers": {
                        "$ref": "#/components/schemas/ProviderData_v4_aaa_POST",
                        "description": "Login domain provider servers"
                    }
                }
            },
            "LoginDomainSpec_v4_aaa_PUT": {
                "properties": {
                    "description": {
                        "description": "Description about the login domain",
                        "type": "string"
                    },
                    "domain": {
                        "description": "Login domain name",
                        "type": "string"
                    },
                    "realm": {
                        "description": "Login domain realm type",
                        "enum": [
                            "Local",
                            "LDAP",
                            "RADIUS",
                            "TACACS",
                            "OIDC"
                        ],
                        "type": "string"
                    },
                    "servers": {
                        "$ref": "#/components/schemas/ProviderData_v4_aaa_PUT",
                        "description": "Login domain provider servers"
                    }
                }
            },
            "LoginDomainStatusWrapper_v4_aaa_GET": {
                "properties": {
                    "providerStatus": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Login domain providers reachability status",
                        "type": "object"
                    }
                }
            },
            "LoginDomainStatusWrapper_v4_aaa_POST": {
                "properties": {
                    "providerStatus": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Login domain providers reachability status",
                        "type": "object"
                    }
                }
            },
            "LoginDomainStatusWrapper_v4_aaa_PUT": {
                "properties": {
                    "providerStatus": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Login domain providers reachability status",
                        "type": "object"
                    }
                }
            },
            "LoginDomainStatus_v4_aaa_GET": {
                "properties": {
                    "providerStatus": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Login domain providers reachability status",
                        "type": "object"
                    }
                }
            },
            "LoginDomainStatus_v4_aaa_POST": {
                "properties": {
                    "providerStatus": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Login domain providers reachability status",
                        "type": "object"
                    }
                }
            },
            "LoginDomainStatus_v4_aaa_PUT": {
                "properties": {
                    "providerStatus": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Login domain providers reachability status",
                        "type": "object"
                    }
                }
            },
            "LoginDomain_v4_aaa_GET": {
                "description": "Login Domain Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/LoginDomainSpecWrapper_v4_aaa_GET"
                    },
                    "status": {
                        "$ref": "#/components/schemas/LoginDomainStatusWrapper_v4_aaa_GET"
                    }
                },
                "required": [
                    "spec",
                    "status"
                ]
            },
            "LoginDomain_v4_aaa_GETLIST": {
                "description": "Login Domain Resource",
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/LoginDomain_v4_aaa_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "LoginDomain_v4_aaa_POST": {
                "description": "Login Domain Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/LoginDomainSpecWrapper_v4_aaa_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "LoginDomain_v4_aaa_PUT": {
                "description": "Login Domain Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/LoginDomainSpecWrapper_v4_aaa_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "ManagedObjectMeta_v1_argo.cisco.com_GET": {
                "properties": {
                    "account": {
                        "description": "An account to which the resource belongs to.",
                        "type": "string"
                    },
                    "annotations": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of string key-value pairs that are used to store arbitrary metadata.",
                        "type": "object"
                    },
                    "creationTimestamp": {
                        "description": "A timestamp at which the resource was created.",
                        "type": "string"
                    },
                    "deletionTimestamp": {
                        "description": "A timestamp at which the resource has been marked for deletion.",
                        "type": "string"
                    },
                    "finalizers": {
                        "additionalProperties": {
                            "type": "boolean"
                        },
                        "description": "A set of entries that are interested in the deletion of the resource. This set must be empty before the resource is fully deleted from the system.",
                        "type": "object"
                    },
                    "generation": {
                        "description": "A running sequence number that represents the current generation of the resource.",
                        "type": "integer"
                    },
                    "id": {
                        "description": "A Unique ID associated with the resource.",
                        "type": "string"
                    },
                    "intraTypeID": {
                        "type": "string"
                    },
                    "intraTypeIDKey": {
                        "type": "string"
                    },
                    "kind": {
                        "description": "A kind to which the resource belongs to.",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of string key-value pairs that are used to categorize objects and perform label selection.",
                        "type": "object"
                    },
                    "modificationTimestamp": {
                        "description": "A timestamp at which the resource was last modified.",
                        "type": "string"
                    },
                    "namespace": {
                        "description": "A namespace to which the resource belongs to. Can be empty for non-namespaced resources.",
                        "type": "string"
                    },
                    "org": {
                        "description": "An organization to which the resource belongs to.",
                        "type": "string"
                    },
                    "resourceVersion": {
                        "description": "A value that identifies the internal revision of the resource. This is used for optimistic concurrency control.",
                        "type": "integer"
                    },
                    "schemaVersion": {
                        "description": "A value that identifies the minor revision of the resource schema.",
                        "type": "string"
                    },
                    "statusGeneration": {
                        "description": "A running sequence number that represents the current generation of the status portion of the resource.",
                        "type": "integer"
                    }
                }
            },
            "ManagedObjectMeta_v1_argo.cisco.com_POST": {
                "properties": {
                    "annotations": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of string key-value pairs that are used to store arbitrary metadata.",
                        "type": "object"
                    },
                    "kind": {
                        "description": "A kind to which the resource belongs to.",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of string key-value pairs that are used to categorize objects and perform label selection.",
                        "type": "object"
                    },
                    "namespace": {
                        "description": "A namespace to which the resource belongs to. Can be empty for non-namespaced resources.",
                        "type": "string"
                    },
                    "org": {
                        "description": "An organization to which the resource belongs to.",
                        "type": "string"
                    }
                }
            },
            "ManagedObjectMeta_v1_argo.cisco.com_PUT": {
                "properties": {
                    "annotations": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of string key-value pairs that are used to store arbitrary metadata.",
                        "type": "object"
                    },
                    "kind": {
                        "description": "A kind to which the resource belongs to.",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of string key-value pairs that are used to categorize objects and perform label selection.",
                        "type": "object"
                    },
                    "org": {
                        "description": "An organization to which the resource belongs to.",
                        "type": "string"
                    }
                }
            },
            "MemberSpecWrapper_v4_federation_GET": {
                "properties": {
                    "host": {
                        "description": "hostname/IP address used to on-board the member to the Nexus Dashboard federation",
                        "type": "string"
                    },
                    "loginDomain": {
                        "description": "logindomain used to on-board member to the federation",
                        "type": "string"
                    },
                    "password": {
                        "description": "password used to on-board member to the federation, base64 encoded",
                        "type": "string"
                    },
                    "userName": {
                        "description": "user name used to on-board member to the federation",
                        "type": "string"
                    }
                }
            },
            "MemberSpecWrapper_v4_federation_POST": {
                "properties": {
                    "host": {
                        "description": "hostname/IP address used to on-board the member to the Nexus Dashboard federation",
                        "type": "string"
                    },
                    "loginDomain": {
                        "description": "logindomain used to on-board member to the federation",
                        "type": "string"
                    },
                    "password": {
                        "description": "password used to on-board member to the federation, base64 encoded",
                        "type": "string"
                    },
                    "userName": {
                        "description": "user name used to on-board member to the federation",
                        "type": "string"
                    }
                }
            },
            "MemberSpecWrapper_v4_federation_PUT": {
                "properties": {
                    "host": {
                        "description": "hostname/IP address used to on-board the member to the Nexus Dashboard federation",
                        "type": "string"
                    },
                    "loginDomain": {
                        "description": "logindomain used to on-board member to the federation",
                        "type": "string"
                    },
                    "password": {
                        "description": "password used to on-board member to the federation, base64 encoded",
                        "type": "string"
                    },
                    "userName": {
                        "description": "user name used to on-board member to the federation",
                        "type": "string"
                    }
                }
            },
            "MemberSpec_v4_federation_GET": {
                "properties": {
                    "host": {
                        "description": "hostname/IP address used to on-board the member to the Nexus Dashboard federation",
                        "type": "string"
                    },
                    "loginDomain": {
                        "description": "logindomain used to on-board member to the federation",
                        "type": "string"
                    },
                    "password": {
                        "description": "password used to on-board member to the federation, base64 encoded",
                        "type": "string"
                    },
                    "userName": {
                        "description": "user name used to on-board member to the federation",
                        "type": "string"
                    }
                }
            },
            "MemberSpec_v4_federation_POST": {
                "properties": {
                    "host": {
                        "description": "hostname/IP address used to on-board the member to the Nexus Dashboard federation",
                        "type": "string"
                    },
                    "loginDomain": {
                        "description": "logindomain used to on-board member to the federation",
                        "type": "string"
                    },
                    "password": {
                        "description": "password used to on-board member to the federation, base64 encoded",
                        "type": "string"
                    },
                    "userName": {
                        "description": "user name used to on-board member to the federation",
                        "type": "string"
                    }
                }
            },
            "MemberSpec_v4_federation_PUT": {
                "properties": {
                    "host": {
                        "description": "hostname/IP address used to on-board the member to the Nexus Dashboard federation",
                        "type": "string"
                    },
                    "loginDomain": {
                        "description": "logindomain used to on-board member to the federation",
                        "type": "string"
                    },
                    "password": {
                        "description": "password used to on-board member to the federation, base64 encoded",
                        "type": "string"
                    },
                    "userName": {
                        "description": "user name used to on-board member to the federation",
                        "type": "string"
                    }
                }
            },
            "MemberStatusWrapper_v4_federation_GET": {
                "properties": {
                    "clusterInfo": {
                        "items": {
                            "$ref": "#/components/schemas/ClusterNode_v4_federation_GET"
                        },
                        "type": "array"
                    },
                    "federationID": {
                        "description": "ID of the federation member associated with",
                        "type": "string"
                    },
                    "manager": {
                        "description": "Federation member is also federation manager, set to true.",
                        "type": "boolean"
                    },
                    "memberID": {
                        "description": "unique ID assigned to the federation member",
                        "type": "string"
                    },
                    "name": {
                        "description": "clustername of the member in the federation",
                        "type": "string"
                    },
                    "reachability": {
                        "description": "Member reachability status - Unknown/Up/Down",
                        "enum": [
                            "Unknown",
                            "Up",
                            "Down"
                        ],
                        "type": "string"
                    }
                }
            },
            "MemberStatusWrapper_v4_federation_POST": {
                "properties": {
                    "clusterInfo": {
                        "items": {
                            "$ref": "#/components/schemas/ClusterNode_v4_federation_POST"
                        },
                        "type": "array"
                    },
                    "federationID": {
                        "description": "ID of the federation member associated with",
                        "type": "string"
                    },
                    "manager": {
                        "description": "Federation member is also federation manager, set to true.",
                        "type": "boolean"
                    },
                    "memberID": {
                        "description": "unique ID assigned to the federation member",
                        "type": "string"
                    },
                    "name": {
                        "description": "clustername of the member in the federation",
                        "type": "string"
                    },
                    "reachability": {
                        "description": "Member reachability status - Unknown/Up/Down",
                        "enum": [
                            "Unknown",
                            "Up",
                            "Down"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "memberID"
                ]
            },
            "MemberStatusWrapper_v4_federation_PUT": {
                "properties": {
                    "clusterInfo": {
                        "items": {
                            "$ref": "#/components/schemas/ClusterNode_v4_federation_PUT"
                        },
                        "type": "array"
                    },
                    "federationID": {
                        "description": "ID of the federation member associated with",
                        "type": "string"
                    },
                    "manager": {
                        "description": "Federation member is also federation manager, set to true.",
                        "type": "boolean"
                    },
                    "memberID": {
                        "description": "unique ID assigned to the federation member",
                        "type": "string"
                    },
                    "name": {
                        "description": "clustername of the member in the federation",
                        "type": "string"
                    },
                    "reachability": {
                        "description": "Member reachability status - Unknown/Up/Down",
                        "enum": [
                            "Unknown",
                            "Up",
                            "Down"
                        ],
                        "type": "string"
                    }
                }
            },
            "MemberStatus_v4_federation_GET": {
                "properties": {
                    "clusterInfo": {
                        "items": {
                            "$ref": "#/components/schemas/ClusterNode_v4_federation_GET"
                        },
                        "type": "array"
                    },
                    "federationID": {
                        "description": "ID of the federation member associated with",
                        "type": "string"
                    },
                    "manager": {
                        "description": "Federation member is also federation manager, set to true.",
                        "type": "boolean"
                    },
                    "memberID": {
                        "description": "unique ID assigned to the federation member",
                        "type": "string"
                    },
                    "name": {
                        "description": "clustername of the member in the federation",
                        "type": "string"
                    },
                    "reachability": {
                        "description": "Member reachability status - Unknown/Up/Down",
                        "enum": [
                            "Unknown",
                            "Up",
                            "Down"
                        ],
                        "type": "string"
                    }
                }
            },
            "MemberStatus_v4_federation_POST": {
                "properties": {
                    "clusterInfo": {
                        "items": {
                            "$ref": "#/components/schemas/ClusterNode_v4_federation_POST"
                        },
                        "type": "array"
                    },
                    "federationID": {
                        "description": "ID of the federation member associated with",
                        "type": "string"
                    },
                    "manager": {
                        "description": "Federation member is also federation manager, set to true.",
                        "type": "boolean"
                    },
                    "memberID": {
                        "description": "unique ID assigned to the federation member",
                        "type": "string"
                    },
                    "name": {
                        "description": "clustername of the member in the federation",
                        "type": "string"
                    },
                    "reachability": {
                        "description": "Member reachability status - Unknown/Up/Down",
                        "enum": [
                            "Unknown",
                            "Up",
                            "Down"
                        ],
                        "type": "string"
                    }
                }
            },
            "MemberStatus_v4_federation_PUT": {
                "properties": {
                    "clusterInfo": {
                        "items": {
                            "$ref": "#/components/schemas/ClusterNode_v4_federation_PUT"
                        },
                        "type": "array"
                    },
                    "federationID": {
                        "description": "ID of the federation member associated with",
                        "type": "string"
                    },
                    "manager": {
                        "description": "Federation member is also federation manager, set to true.",
                        "type": "boolean"
                    },
                    "memberID": {
                        "description": "unique ID assigned to the federation member",
                        "type": "string"
                    },
                    "name": {
                        "description": "clustername of the member in the federation",
                        "type": "string"
                    },
                    "reachability": {
                        "description": "Member reachability status - Unknown/Up/Down",
                        "enum": [
                            "Unknown",
                            "Up",
                            "Down"
                        ],
                        "type": "string"
                    }
                }
            },
            "Member_v4_federation_GET": {
                "description": "Federation Member Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/MemberSpecWrapper_v4_federation_GET"
                    },
                    "status": {
                        "$ref": "#/components/schemas/MemberStatusWrapper_v4_federation_GET"
                    }
                },
                "required": [
                    "spec",
                    "status"
                ]
            },
            "Member_v4_federation_GETLIST": {
                "description": "Federation Member Resource",
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Member_v4_federation_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "Member_v4_federation_POST": {
                "description": "Federation Member Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/MemberSpecWrapper_v4_federation_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "Member_v4_federation_PUT": {
                "description": "Federation Member Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/MemberSpecWrapper_v4_federation_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "NDFCConfig_v4_sitemanagement_GET": {
                "properties": {
                    "fabricName": {
                        "description": "NDFC fabric name",
                        "type": "string"
                    },
                    "fabricTechnology": {
                        "type": "string"
                    },
                    "fabricType": {
                        "description": "NDFC fabric type",
                        "type": "string"
                    },
                    "internalOnboard": {
                        "description": "site on-boarded by NDFC locally",
                        "type": "boolean"
                    }
                }
            },
            "NDFCConfig_v4_sitemanagement_POST": {
                "properties": {
                    "fabricName": {
                        "description": "NDFC fabric name",
                        "type": "string"
                    },
                    "fabricTechnology": {
                        "type": "string"
                    },
                    "fabricType": {
                        "description": "NDFC fabric type",
                        "type": "string"
                    },
                    "internalOnboard": {
                        "description": "site on-boarded by NDFC locally",
                        "type": "boolean"
                    }
                }
            },
            "NDFCConfig_v4_sitemanagement_PUT": {
                "properties": {
                    "fabricName": {
                        "description": "NDFC fabric name",
                        "type": "string"
                    },
                    "fabricTechnology": {
                        "type": "string"
                    },
                    "fabricType": {
                        "description": "NDFC fabric type",
                        "type": "string"
                    },
                    "internalOnboard": {
                        "description": "site on-boarded by NDFC locally",
                        "type": "boolean"
                    }
                }
            },
            "NDFCFabricResponse_v4_sitemanagement_GET": {
                "properties": {
                    "inUse": {
                        "description": "NDFC Site already on-boarded",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "NDFC Site/Fabric name",
                        "type": "string"
                    },
                    "parentName": {
                        "description": "NDFC fabric parent name",
                        "type": "string"
                    },
                    "technology": {
                        "description": "DCNM/NDFC fabric technology - VxlanFabric, External, EBGPVxlanFabric, EBGPRoutedFabric, LanClassic,  Meta, IosXEVxlanFabric, Srv6Fabric, LanMonitor, SwitchGroup, MsoSiteGroup, SanFabric, IpfmFabric, IpfmClassic,  VlanFabric",
                        "type": "string"
                    },
                    "type": {
                        "description": "DCNM/NDFC fabric types - SwitchFabric, External,LanMonitor, Mfd, MsoSiteGroup,SanFabric",
                        "type": "string"
                    }
                }
            },
            "NDFCFabricResponse_v4_sitemanagement_POST": {
                "properties": {
                    "inUse": {
                        "description": "NDFC Site already on-boarded",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "NDFC Site/Fabric name",
                        "type": "string"
                    },
                    "parentName": {
                        "description": "NDFC fabric parent name",
                        "type": "string"
                    },
                    "technology": {
                        "description": "DCNM/NDFC fabric technology - VxlanFabric, External, EBGPVxlanFabric, EBGPRoutedFabric, LanClassic,  Meta, IosXEVxlanFabric, Srv6Fabric, LanMonitor, SwitchGroup, MsoSiteGroup, SanFabric, IpfmFabric, IpfmClassic,  VlanFabric",
                        "type": "string"
                    },
                    "type": {
                        "description": "DCNM/NDFC fabric types - SwitchFabric, External,LanMonitor, Mfd, MsoSiteGroup,SanFabric",
                        "type": "string"
                    }
                }
            },
            "NDFCFabricResponse_v4_sitemanagement_PUT": {
                "properties": {
                    "inUse": {
                        "description": "NDFC Site already on-boarded",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "NDFC Site/Fabric name",
                        "type": "string"
                    },
                    "parentName": {
                        "description": "NDFC fabric parent name",
                        "type": "string"
                    },
                    "technology": {
                        "description": "DCNM/NDFC fabric technology - VxlanFabric, External, EBGPVxlanFabric, EBGPRoutedFabric, LanClassic,  Meta, IosXEVxlanFabric, Srv6Fabric, LanMonitor, SwitchGroup, MsoSiteGroup, SanFabric, IpfmFabric, IpfmClassic,  VlanFabric",
                        "type": "string"
                    },
                    "type": {
                        "description": "DCNM/NDFC fabric types - SwitchFabric, External,LanMonitor, Mfd, MsoSiteGroup,SanFabric",
                        "type": "string"
                    }
                }
            },
            "NDFCStatus_v4_sitemanagement_GET": {
                "properties": {
                    "fabric": {
                        "$ref": "#/components/schemas/NXOSFabric_v4_sitemanagement_GET"
                    }
                }
            },
            "NDFCStatus_v4_sitemanagement_POST": {
                "properties": {
                    "fabric": {
                        "$ref": "#/components/schemas/NXOSFabric_v4_sitemanagement_POST"
                    }
                }
            },
            "NDFCStatus_v4_sitemanagement_PUT": {
                "properties": {
                    "fabric": {
                        "$ref": "#/components/schemas/NXOSFabric_v4_sitemanagement_PUT"
                    }
                }
            },
            "NXOSFabric_v4_sitemanagement_GET": {
                "properties": {
                    "name": {
                        "description": "DCNM/NDFC fabric name",
                        "type": "string"
                    },
                    "readOnly": {
                        "description": "DCNM/NDFC fabric readonly mode",
                        "type": "boolean"
                    },
                    "siteID": {
                        "description": "DCNM/NDFC fabric siteID",
                        "type": "string"
                    },
                    "technology": {
                        "description": "DCNM/NDFC fabric technology - VxlanFabric, External, EBGPVxlanFabric, EBGPRoutedFabric,  LanClassic, Meta, IosXEVxlanFabric, Srv6Fabric, LanMonitor, SwitchGroup, MsoSiteGroup, SanFabric,  IpfmFabric, IpfmClassic, VlanFabric",
                        "type": "string"
                    },
                    "type": {
                        "description": "DCNM/NDFC fabric types - SwitchFabric, External,LanMonitor, Mfd, MsoSiteGroup,SanFabric",
                        "type": "string"
                    }
                }
            },
            "NXOSFabric_v4_sitemanagement_POST": {
                "properties": {
                    "name": {
                        "description": "DCNM/NDFC fabric name",
                        "type": "string"
                    },
                    "readOnly": {
                        "description": "DCNM/NDFC fabric readonly mode",
                        "type": "boolean"
                    },
                    "siteID": {
                        "description": "DCNM/NDFC fabric siteID",
                        "type": "string"
                    },
                    "technology": {
                        "description": "DCNM/NDFC fabric technology - VxlanFabric, External, EBGPVxlanFabric, EBGPRoutedFabric,  LanClassic, Meta, IosXEVxlanFabric, Srv6Fabric, LanMonitor, SwitchGroup, MsoSiteGroup, SanFabric,  IpfmFabric, IpfmClassic, VlanFabric",
                        "type": "string"
                    },
                    "type": {
                        "description": "DCNM/NDFC fabric types - SwitchFabric, External,LanMonitor, Mfd, MsoSiteGroup,SanFabric",
                        "type": "string"
                    }
                }
            },
            "NXOSFabric_v4_sitemanagement_PUT": {
                "properties": {
                    "name": {
                        "description": "DCNM/NDFC fabric name",
                        "type": "string"
                    },
                    "readOnly": {
                        "description": "DCNM/NDFC fabric readonly mode",
                        "type": "boolean"
                    },
                    "siteID": {
                        "description": "DCNM/NDFC fabric siteID",
                        "type": "string"
                    },
                    "technology": {
                        "description": "DCNM/NDFC fabric technology - VxlanFabric, External, EBGPVxlanFabric, EBGPRoutedFabric,  LanClassic, Meta, IosXEVxlanFabric, Srv6Fabric, LanMonitor, SwitchGroup, MsoSiteGroup, SanFabric,  IpfmFabric, IpfmClassic, VlanFabric",
                        "type": "string"
                    },
                    "type": {
                        "description": "DCNM/NDFC fabric types - SwitchFabric, External,LanMonitor, Mfd, MsoSiteGroup,SanFabric",
                        "type": "string"
                    }
                }
            },
            "NamespaceSpecWrapper_v1_argo.cisco.com_GET": {
                "properties": {
                    "identity": {
                        "type": "string"
                    }
                }
            },
            "NamespaceSpecWrapper_v1_argo.cisco.com_POST": {
                "properties": {
                    "identity": {
                        "type": "string"
                    }
                }
            },
            "NamespaceSpecWrapper_v1_argo.cisco.com_PUT": {
                "properties": {
                    "identity": {
                        "type": "string"
                    }
                }
            },
            "NamespaceSpec_v1_argo.cisco.com_GET": {
                "properties": {
                    "identity": {
                        "type": "string"
                    }
                }
            },
            "NamespaceSpec_v1_argo.cisco.com_POST": {
                "properties": {
                    "identity": {
                        "type": "string"
                    }
                }
            },
            "NamespaceSpec_v1_argo.cisco.com_PUT": {
                "properties": {
                    "identity": {
                        "type": "string"
                    }
                }
            },
            "NetworkStorageSpecWrapper_v1_platform_GET": {
                "properties": {
                    "accessMode": {
                        "description": "Allowed accessmode of storage",
                        "enum": [
                            "ReadOnly",
                            "ReadWrite"
                        ],
                        "type": "string"
                    },
                    "alertThreshold": {
                        "description": "Alert Threshold for storage size usage",
                        "type": "integer"
                    },
                    "allowedApps": {
                        "description": "Applications allowed to use this config",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "description": {
                        "description": "Description about this config",
                        "type": "string"
                    },
                    "exportPath": {
                        "description": "Export Path",
                        "type": "string"
                    },
                    "limit": {
                        "description": "Limit size for pvs allocated on this storage",
                        "type": "string"
                    },
                    "name": {
                        "description": "Configuration name",
                        "type": "string"
                    },
                    "port": {
                        "description": "Server Port",
                        "type": "integer"
                    },
                    "serverAddress": {
                        "description": "Server Address",
                        "type": "string"
                    }
                }
            },
            "NetworkStorageSpecWrapper_v1_platform_POST": {
                "properties": {
                    "accessMode": {
                        "description": "Allowed accessmode of storage",
                        "enum": [
                            "ReadOnly",
                            "ReadWrite"
                        ],
                        "type": "string"
                    },
                    "alertThreshold": {
                        "description": "Alert Threshold for storage size usage",
                        "type": "integer"
                    },
                    "allowedApps": {
                        "description": "Applications allowed to use this config",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "description": {
                        "description": "Description about this config",
                        "type": "string"
                    },
                    "exportPath": {
                        "description": "Export Path",
                        "type": "string"
                    },
                    "limit": {
                        "description": "Limit size for pvs allocated on this storage",
                        "type": "string"
                    },
                    "name": {
                        "description": "Configuration name",
                        "type": "string"
                    },
                    "port": {
                        "description": "Server Port",
                        "type": "integer"
                    },
                    "serverAddress": {
                        "description": "Server Address",
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "NetworkStorageSpecWrapper_v1_platform_PUT": {
                "properties": {
                    "accessMode": {
                        "description": "Allowed accessmode of storage",
                        "enum": [
                            "ReadOnly",
                            "ReadWrite"
                        ],
                        "type": "string"
                    },
                    "alertThreshold": {
                        "description": "Alert Threshold for storage size usage",
                        "type": "integer"
                    },
                    "allowedApps": {
                        "description": "Applications allowed to use this config",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "description": {
                        "description": "Description about this config",
                        "type": "string"
                    },
                    "exportPath": {
                        "description": "Export Path",
                        "type": "string"
                    },
                    "limit": {
                        "description": "Limit size for pvs allocated on this storage",
                        "type": "string"
                    },
                    "name": {
                        "description": "Configuration name",
                        "type": "string"
                    },
                    "port": {
                        "description": "Server Port",
                        "type": "integer"
                    },
                    "serverAddress": {
                        "description": "Server Address",
                        "type": "string"
                    }
                }
            },
            "NetworkStorageSpec_v1_platform_GET": {
                "description": "Network Storage configuration",
                "properties": {
                    "accessMode": {
                        "description": "Allowed accessmode of storage",
                        "enum": [
                            "ReadOnly",
                            "ReadWrite"
                        ],
                        "type": "string"
                    },
                    "alertThreshold": {
                        "description": "Alert Threshold for storage size usage",
                        "type": "integer"
                    },
                    "allowedApps": {
                        "description": "Applications allowed to use this config",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "description": {
                        "description": "Description about this config",
                        "type": "string"
                    },
                    "exportPath": {
                        "description": "Export Path",
                        "type": "string"
                    },
                    "limit": {
                        "description": "Limit size for pvs allocated on this storage",
                        "type": "string"
                    },
                    "name": {
                        "description": "Configuration name",
                        "type": "string"
                    },
                    "port": {
                        "description": "Server Port",
                        "type": "integer"
                    },
                    "serverAddress": {
                        "description": "Server Address",
                        "type": "string"
                    }
                }
            },
            "NetworkStorageSpec_v1_platform_POST": {
                "description": "Network Storage configuration",
                "properties": {
                    "accessMode": {
                        "description": "Allowed accessmode of storage",
                        "enum": [
                            "ReadOnly",
                            "ReadWrite"
                        ],
                        "type": "string"
                    },
                    "alertThreshold": {
                        "description": "Alert Threshold for storage size usage",
                        "type": "integer"
                    },
                    "allowedApps": {
                        "description": "Applications allowed to use this config",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "description": {
                        "description": "Description about this config",
                        "type": "string"
                    },
                    "exportPath": {
                        "description": "Export Path",
                        "type": "string"
                    },
                    "limit": {
                        "description": "Limit size for pvs allocated on this storage",
                        "type": "string"
                    },
                    "name": {
                        "description": "Configuration name",
                        "type": "string"
                    },
                    "port": {
                        "description": "Server Port",
                        "type": "integer"
                    },
                    "serverAddress": {
                        "description": "Server Address",
                        "type": "string"
                    }
                }
            },
            "NetworkStorageSpec_v1_platform_PUT": {
                "description": "Network Storage configuration",
                "properties": {
                    "accessMode": {
                        "description": "Allowed accessmode of storage",
                        "enum": [
                            "ReadOnly",
                            "ReadWrite"
                        ],
                        "type": "string"
                    },
                    "alertThreshold": {
                        "description": "Alert Threshold for storage size usage",
                        "type": "integer"
                    },
                    "allowedApps": {
                        "description": "Applications allowed to use this config",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "description": {
                        "description": "Description about this config",
                        "type": "string"
                    },
                    "exportPath": {
                        "description": "Export Path",
                        "type": "string"
                    },
                    "limit": {
                        "description": "Limit size for pvs allocated on this storage",
                        "type": "string"
                    },
                    "name": {
                        "description": "Configuration name",
                        "type": "string"
                    },
                    "port": {
                        "description": "Server Port",
                        "type": "integer"
                    },
                    "serverAddress": {
                        "description": "Server Address",
                        "type": "string"
                    }
                }
            },
            "NetworkStorageStatusWrapper_v1_platform_GET": {
                "properties": {
                    "healthState": {
                        "description": "Current health of the storage",
                        "enum": [
                            "Healthy",
                            "Minor",
                            "Major",
                            "Critical"
                        ],
                        "type": "string"
                    },
                    "message": {
                        "description": "Status message about this storage's health",
                        "type": "string"
                    },
                    "usage": {
                        "description": "Current storage usage %",
                        "type": "integer"
                    },
                    "usageState": {
                        "description": "Current usage state of the storage",
                        "enum": [
                            "UsageOverThreshold",
                            "UsageUnderThreshold"
                        ],
                        "type": "string"
                    },
                    "userApps": {
                        "description": "Applications currently using this config",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                }
            },
            "NetworkStorageStatusWrapper_v1_platform_POST": {
                "properties": {
                    "healthState": {
                        "description": "Current health of the storage",
                        "enum": [
                            "Healthy",
                            "Minor",
                            "Major",
                            "Critical"
                        ],
                        "type": "string"
                    },
                    "message": {
                        "description": "Status message about this storage's health",
                        "type": "string"
                    },
                    "usage": {
                        "description": "Current storage usage %",
                        "type": "integer"
                    },
                    "usageState": {
                        "description": "Current usage state of the storage",
                        "enum": [
                            "UsageOverThreshold",
                            "UsageUnderThreshold"
                        ],
                        "type": "string"
                    },
                    "userApps": {
                        "description": "Applications currently using this config",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                }
            },
            "NetworkStorageStatusWrapper_v1_platform_PUT": {
                "properties": {
                    "healthState": {
                        "description": "Current health of the storage",
                        "enum": [
                            "Healthy",
                            "Minor",
                            "Major",
                            "Critical"
                        ],
                        "type": "string"
                    },
                    "message": {
                        "description": "Status message about this storage's health",
                        "type": "string"
                    },
                    "usage": {
                        "description": "Current storage usage %",
                        "type": "integer"
                    },
                    "usageState": {
                        "description": "Current usage state of the storage",
                        "enum": [
                            "UsageOverThreshold",
                            "UsageUnderThreshold"
                        ],
                        "type": "string"
                    },
                    "userApps": {
                        "description": "Applications currently using this config",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                }
            },
            "NetworkStorageStatus_v1_platform_GET": {
                "description": "Network Storage status",
                "properties": {
                    "healthState": {
                        "description": "Current health of the storage",
                        "enum": [
                            "Healthy",
                            "Minor",
                            "Major",
                            "Critical"
                        ],
                        "type": "string"
                    },
                    "message": {
                        "description": "Status message about this storage's health",
                        "type": "string"
                    },
                    "usage": {
                        "description": "Current storage usage %",
                        "type": "integer"
                    },
                    "usageState": {
                        "description": "Current usage state of the storage",
                        "enum": [
                            "UsageOverThreshold",
                            "UsageUnderThreshold"
                        ],
                        "type": "string"
                    },
                    "userApps": {
                        "description": "Applications currently using this config",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                }
            },
            "NetworkStorageStatus_v1_platform_POST": {
                "description": "Network Storage status",
                "properties": {
                    "healthState": {
                        "description": "Current health of the storage",
                        "enum": [
                            "Healthy",
                            "Minor",
                            "Major",
                            "Critical"
                        ],
                        "type": "string"
                    },
                    "message": {
                        "description": "Status message about this storage's health",
                        "type": "string"
                    },
                    "usage": {
                        "description": "Current storage usage %",
                        "type": "integer"
                    },
                    "usageState": {
                        "description": "Current usage state of the storage",
                        "enum": [
                            "UsageOverThreshold",
                            "UsageUnderThreshold"
                        ],
                        "type": "string"
                    },
                    "userApps": {
                        "description": "Applications currently using this config",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                }
            },
            "NetworkStorageStatus_v1_platform_PUT": {
                "description": "Network Storage status",
                "properties": {
                    "healthState": {
                        "description": "Current health of the storage",
                        "enum": [
                            "Healthy",
                            "Minor",
                            "Major",
                            "Critical"
                        ],
                        "type": "string"
                    },
                    "message": {
                        "description": "Status message about this storage's health",
                        "type": "string"
                    },
                    "usage": {
                        "description": "Current storage usage %",
                        "type": "integer"
                    },
                    "usageState": {
                        "description": "Current usage state of the storage",
                        "enum": [
                            "UsageOverThreshold",
                            "UsageUnderThreshold"
                        ],
                        "type": "string"
                    },
                    "userApps": {
                        "description": "Applications currently using this config",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                }
            },
            "NetworkStorage_v1_platform_GET": {
                "description": "Network attached storage config",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/NetworkStorageSpecWrapper_v1_platform_GET"
                    },
                    "status": {
                        "$ref": "#/components/schemas/NetworkStorageStatusWrapper_v1_platform_GET"
                    }
                },
                "required": [
                    "spec",
                    "status"
                ]
            },
            "NetworkStorage_v1_platform_GETLIST": {
                "description": "Network attached storage config",
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/NetworkStorage_v1_platform_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "NetworkStorage_v1_platform_POST": {
                "description": "Network attached storage config",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/NetworkStorageSpecWrapper_v1_platform_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "NetworkStorage_v1_platform_PUT": {
                "description": "Network attached storage config",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/NetworkStorageSpecWrapper_v1_platform_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "NodeBGPPeer_v1_platform_GET": {
                "description": "Node bgp peer",
                "properties": {
                    "as": {
                        "description": "Peer autonomous system (AS) number",
                        "type": "integer"
                    },
                    "ip": {
                        "description": "IPv4 peer address",
                        "type": "string"
                    },
                    "ipv6": {
                        "description": "IPv6 peer address",
                        "type": "string"
                    }
                }
            },
            "NodeBGPPeer_v1_platform_POST": {
                "description": "Node bgp peer",
                "properties": {
                    "as": {
                        "description": "Peer autonomous system (AS) number",
                        "type": "integer"
                    },
                    "ip": {
                        "description": "IPv4 peer address",
                        "type": "string"
                    },
                    "ipv6": {
                        "description": "IPv6 peer address",
                        "type": "string"
                    }
                }
            },
            "NodeBGPPeer_v1_platform_PUT": {
                "description": "Node bgp peer",
                "properties": {
                    "as": {
                        "description": "Peer autonomous system (AS) number",
                        "type": "integer"
                    },
                    "ip": {
                        "description": "IPv4 peer address",
                        "type": "string"
                    },
                    "ipv6": {
                        "description": "IPv6 peer address",
                        "type": "string"
                    }
                }
            },
            "NodeHardware_v1_platform_GET": {
                "description": "Hardware specs of the node",
                "properties": {
                    "cpu": {
                        "$ref": "#/components/schemas/NodeStatusCpu_v1_platform_GET",
                        "description": "Node cpu stats"
                    },
                    "disks": {
                        "description": "Node disk list",
                        "items": {
                            "$ref": "#/components/schemas/NodeStatusDisk_v1_platform_GET"
                        },
                        "type": "array"
                    },
                    "memory": {
                        "$ref": "#/components/schemas/NodeStatusMemory_v1_platform_GET",
                        "description": "Node memory stats"
                    }
                }
            },
            "NodeHardware_v1_platform_POST": {
                "description": "Hardware specs of the node",
                "properties": {
                    "cpu": {
                        "$ref": "#/components/schemas/NodeStatusCpu_v1_platform_POST",
                        "description": "Node cpu stats"
                    },
                    "disks": {
                        "description": "Node disk list",
                        "items": {
                            "$ref": "#/components/schemas/NodeStatusDisk_v1_platform_POST"
                        },
                        "type": "array"
                    },
                    "memory": {
                        "$ref": "#/components/schemas/NodeStatusMemory_v1_platform_POST",
                        "description": "Node memory stats"
                    }
                }
            },
            "NodeHardware_v1_platform_PUT": {
                "description": "Hardware specs of the node",
                "properties": {
                    "cpu": {
                        "$ref": "#/components/schemas/NodeStatusCpu_v1_platform_PUT",
                        "description": "Node cpu stats"
                    },
                    "disks": {
                        "description": "Node disk list",
                        "items": {
                            "$ref": "#/components/schemas/NodeStatusDisk_v1_platform_PUT"
                        },
                        "type": "array"
                    },
                    "memory": {
                        "$ref": "#/components/schemas/NodeStatusMemory_v1_platform_PUT",
                        "description": "Node memory stats"
                    }
                }
            },
            "NodeReachabilityStatus_v4_sitemanagement_GET": {
                "properties": {
                    "ip": {
                        "description": "IP address of node",
                        "type": "string"
                    },
                    "state": {
                        "description": "reachability of the node - Up/Down",
                        "type": "string"
                    }
                }
            },
            "NodeReachabilityStatus_v4_sitemanagement_POST": {
                "properties": {
                    "ip": {
                        "description": "IP address of node",
                        "type": "string"
                    },
                    "state": {
                        "description": "reachability of the node - Up/Down",
                        "type": "string"
                    }
                }
            },
            "NodeReachabilityStatus_v4_sitemanagement_PUT": {
                "properties": {
                    "ip": {
                        "description": "IP address of node",
                        "type": "string"
                    },
                    "state": {
                        "description": "reachability of the node - Up/Down",
                        "type": "string"
                    }
                }
            },
            "NodeSpecBgpConfig_v1_platform_GET": {
                "description": "Node BGP config",
                "properties": {
                    "as": {
                        "description": "Node autonomous system (AS) number",
                        "type": "integer"
                    },
                    "peers": {
                        "description": "BGP peer list",
                        "items": {
                            "$ref": "#/components/schemas/NodeBGPPeer_v1_platform_GET"
                        },
                        "type": "array"
                    },
                    "routerID": {
                        "description": "Unique Router ID",
                        "type": "string"
                    }
                }
            },
            "NodeSpecBgpConfig_v1_platform_POST": {
                "description": "Node BGP config",
                "properties": {
                    "as": {
                        "description": "Node autonomous system (AS) number",
                        "type": "integer"
                    },
                    "peers": {
                        "description": "BGP peer list",
                        "items": {
                            "$ref": "#/components/schemas/NodeBGPPeer_v1_platform_POST"
                        },
                        "type": "array"
                    },
                    "routerID": {
                        "description": "Unique Router ID",
                        "type": "string"
                    }
                }
            },
            "NodeSpecBgpConfig_v1_platform_PUT": {
                "description": "Node BGP config",
                "properties": {
                    "as": {
                        "description": "Node autonomous system (AS) number",
                        "type": "integer"
                    },
                    "peers": {
                        "description": "BGP peer list",
                        "items": {
                            "$ref": "#/components/schemas/NodeBGPPeer_v1_platform_PUT"
                        },
                        "type": "array"
                    },
                    "routerID": {
                        "description": "Unique Router ID",
                        "type": "string"
                    }
                }
            },
            "NodeSpecNetwork_v1_platform_GET": {
                "description": "Node Network config. Inband represents cluster internal network information, OOB represents user-accessible network information",
                "properties": {
                    "gateway": {
                        "description": "IPv4 node gateway address",
                        "type": "string"
                    },
                    "gatewayv6": {
                        "description": "IPv6 node gateway address",
                        "type": "string"
                    },
                    "subnet": {
                        "description": "IPv4 node subnet address",
                        "type": "string"
                    },
                    "subnetv6": {
                        "description": "IPv6 node subnet address",
                        "type": "string"
                    },
                    "vlanID": {
                        "description": "Node vlan ID",
                        "type": "integer"
                    }
                }
            },
            "NodeSpecNetwork_v1_platform_POST": {
                "description": "Node Network config. Inband represents cluster internal network information, OOB represents user-accessible network information",
                "properties": {
                    "gateway": {
                        "description": "IPv4 node gateway address",
                        "type": "string"
                    },
                    "gatewayv6": {
                        "description": "IPv6 node gateway address",
                        "type": "string"
                    },
                    "subnet": {
                        "description": "IPv4 node subnet address",
                        "type": "string"
                    },
                    "subnetv6": {
                        "description": "IPv6 node subnet address",
                        "type": "string"
                    },
                    "vlanID": {
                        "description": "Node vlan ID",
                        "type": "integer"
                    }
                }
            },
            "NodeSpecNetwork_v1_platform_PUT": {
                "description": "Node Network config. Inband represents cluster internal network information, OOB represents user-accessible network information",
                "properties": {
                    "gateway": {
                        "description": "IPv4 node gateway address",
                        "type": "string"
                    },
                    "gatewayv6": {
                        "description": "IPv6 node gateway address",
                        "type": "string"
                    },
                    "subnet": {
                        "description": "IPv4 node subnet address",
                        "type": "string"
                    },
                    "subnetv6": {
                        "description": "IPv6 node subnet address",
                        "type": "string"
                    },
                    "vlanID": {
                        "description": "Node vlan ID",
                        "type": "integer"
                    }
                }
            },
            "NodeSpecWrapper_v1_platform_GET": {
                "properties": {
                    "bgpConfig": {
                        "$ref": "#/components/schemas/NodeSpecBgpConfig_v1_platform_GET",
                        "description": "Node BGP config"
                    },
                    "cimcIP": {
                        "description": "Node cimc IP (physical only)",
                        "type": "string"
                    },
                    "inbNetwork": {
                        "$ref": "#/components/schemas/NodeSpecNetwork_v1_platform_GET",
                        "description": "Node inband (data) network config"
                    },
                    "name": {
                        "description": "Node name",
                        "type": "string"
                    },
                    "oobNetwork": {
                        "$ref": "#/components/schemas/NodeSpecNetwork_v1_platform_GET",
                        "description": "Node OOB (MGMT) network config"
                    },
                    "registered": {
                        "description": "Node registered flag",
                        "type": "boolean"
                    },
                    "role": {
                        "description": "Node role",
                        "enum": [
                            "Master",
                            "Worker",
                            "Standby"
                        ],
                        "type": "string"
                    },
                    "serialNumber": {
                        "description": "Node serial number",
                        "type": "string"
                    }
                }
            },
            "NodeSpecWrapper_v1_platform_POST": {
                "properties": {
                    "bgpConfig": {
                        "$ref": "#/components/schemas/NodeSpecBgpConfig_v1_platform_POST",
                        "description": "Node BGP config"
                    },
                    "cimcIP": {
                        "description": "Node cimc IP (physical only)",
                        "type": "string"
                    },
                    "inbNetwork": {
                        "$ref": "#/components/schemas/NodeSpecNetwork_v1_platform_POST",
                        "description": "Node inband (data) network config"
                    },
                    "name": {
                        "description": "Node name",
                        "type": "string"
                    },
                    "oobNetwork": {
                        "$ref": "#/components/schemas/NodeSpecNetwork_v1_platform_POST",
                        "description": "Node OOB (MGMT) network config"
                    },
                    "registered": {
                        "description": "Node registered flag",
                        "type": "boolean"
                    },
                    "role": {
                        "description": "Node role",
                        "enum": [
                            "Master",
                            "Worker",
                            "Standby"
                        ],
                        "type": "string"
                    },
                    "serialNumber": {
                        "description": "Node serial number",
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "NodeSpecWrapper_v1_platform_PUT": {
                "properties": {
                    "bgpConfig": {
                        "$ref": "#/components/schemas/NodeSpecBgpConfig_v1_platform_PUT",
                        "description": "Node BGP config"
                    },
                    "cimcIP": {
                        "description": "Node cimc IP (physical only)",
                        "type": "string"
                    },
                    "inbNetwork": {
                        "$ref": "#/components/schemas/NodeSpecNetwork_v1_platform_PUT",
                        "description": "Node inband (data) network config"
                    },
                    "name": {
                        "description": "Node name",
                        "type": "string"
                    },
                    "oobNetwork": {
                        "$ref": "#/components/schemas/NodeSpecNetwork_v1_platform_PUT",
                        "description": "Node OOB (MGMT) network config"
                    },
                    "registered": {
                        "description": "Node registered flag",
                        "type": "boolean"
                    },
                    "role": {
                        "description": "Node role",
                        "enum": [
                            "Master",
                            "Worker",
                            "Standby"
                        ],
                        "type": "string"
                    },
                    "serialNumber": {
                        "description": "Node serial number",
                        "type": "string"
                    }
                }
            },
            "NodeSpec_v1_platform_GET": {
                "description": "Node configuration",
                "properties": {
                    "bgpConfig": {
                        "$ref": "#/components/schemas/NodeSpecBgpConfig_v1_platform_GET",
                        "description": "Node BGP config"
                    },
                    "cimcIP": {
                        "description": "Node cimc IP (physical only)",
                        "type": "string"
                    },
                    "inbNetwork": {
                        "$ref": "#/components/schemas/NodeSpecNetwork_v1_platform_GET",
                        "description": "Node inband (data) network config"
                    },
                    "name": {
                        "description": "Node name",
                        "type": "string"
                    },
                    "oobNetwork": {
                        "$ref": "#/components/schemas/NodeSpecNetwork_v1_platform_GET",
                        "description": "Node OOB (MGMT) network config"
                    },
                    "registered": {
                        "description": "Node registered flag",
                        "type": "boolean"
                    },
                    "role": {
                        "description": "Node role",
                        "enum": [
                            "Master",
                            "Worker",
                            "Standby"
                        ],
                        "type": "string"
                    },
                    "serialNumber": {
                        "description": "Node serial number",
                        "type": "string"
                    }
                }
            },
            "NodeSpec_v1_platform_POST": {
                "description": "Node configuration",
                "properties": {
                    "bgpConfig": {
                        "$ref": "#/components/schemas/NodeSpecBgpConfig_v1_platform_POST",
                        "description": "Node BGP config"
                    },
                    "cimcIP": {
                        "description": "Node cimc IP (physical only)",
                        "type": "string"
                    },
                    "inbNetwork": {
                        "$ref": "#/components/schemas/NodeSpecNetwork_v1_platform_POST",
                        "description": "Node inband (data) network config"
                    },
                    "name": {
                        "description": "Node name",
                        "type": "string"
                    },
                    "oobNetwork": {
                        "$ref": "#/components/schemas/NodeSpecNetwork_v1_platform_POST",
                        "description": "Node OOB (MGMT) network config"
                    },
                    "registered": {
                        "description": "Node registered flag",
                        "type": "boolean"
                    },
                    "role": {
                        "description": "Node role",
                        "enum": [
                            "Master",
                            "Worker",
                            "Standby"
                        ],
                        "type": "string"
                    },
                    "serialNumber": {
                        "description": "Node serial number",
                        "type": "string"
                    }
                }
            },
            "NodeSpec_v1_platform_PUT": {
                "description": "Node configuration",
                "properties": {
                    "bgpConfig": {
                        "$ref": "#/components/schemas/NodeSpecBgpConfig_v1_platform_PUT",
                        "description": "Node BGP config"
                    },
                    "cimcIP": {
                        "description": "Node cimc IP (physical only)",
                        "type": "string"
                    },
                    "inbNetwork": {
                        "$ref": "#/components/schemas/NodeSpecNetwork_v1_platform_PUT",
                        "description": "Node inband (data) network config"
                    },
                    "name": {
                        "description": "Node name",
                        "type": "string"
                    },
                    "oobNetwork": {
                        "$ref": "#/components/schemas/NodeSpecNetwork_v1_platform_PUT",
                        "description": "Node OOB (MGMT) network config"
                    },
                    "registered": {
                        "description": "Node registered flag",
                        "type": "boolean"
                    },
                    "role": {
                        "description": "Node role",
                        "enum": [
                            "Master",
                            "Worker",
                            "Standby"
                        ],
                        "type": "string"
                    },
                    "serialNumber": {
                        "description": "Node serial number",
                        "type": "string"
                    }
                }
            },
            "NodeStatusCpu_v1_platform_GET": {
                "description": "Node Cpu stats",
                "properties": {
                    "cores": {
                        "description": "Total number of CPU cores",
                        "type": "integer"
                    }
                }
            },
            "NodeStatusCpu_v1_platform_POST": {
                "description": "Node Cpu stats",
                "properties": {
                    "cores": {
                        "description": "Total number of CPU cores",
                        "type": "integer"
                    }
                }
            },
            "NodeStatusCpu_v1_platform_PUT": {
                "description": "Node Cpu stats",
                "properties": {
                    "cores": {
                        "description": "Total number of CPU cores",
                        "type": "integer"
                    }
                }
            },
            "NodeStatusDisk_v1_platform_GET": {
                "description": "Node Disk Stats",
                "properties": {
                    "capacity": {
                        "description": "Total size (Bytes)",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Disk name",
                        "type": "string"
                    },
                    "storageController": {
                        "enum": [
                            "Unknown",
                            "IDE",
                            "SCSI",
                            "NVMe",
                            "virtio",
                            "MMC"
                        ],
                        "type": "string"
                    },
                    "type": {
                        "description": "Disk type",
                        "enum": [
                            "Unknown",
                            "HDD",
                            "SSD"
                        ],
                        "type": "string"
                    }
                }
            },
            "NodeStatusDisk_v1_platform_POST": {
                "description": "Node Disk Stats",
                "properties": {
                    "capacity": {
                        "description": "Total size (Bytes)",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Disk name",
                        "type": "string"
                    },
                    "storageController": {
                        "enum": [
                            "Unknown",
                            "IDE",
                            "SCSI",
                            "NVMe",
                            "virtio",
                            "MMC"
                        ],
                        "type": "string"
                    },
                    "type": {
                        "description": "Disk type",
                        "enum": [
                            "Unknown",
                            "HDD",
                            "SSD"
                        ],
                        "type": "string"
                    }
                }
            },
            "NodeStatusDisk_v1_platform_PUT": {
                "description": "Node Disk Stats",
                "properties": {
                    "capacity": {
                        "description": "Total size (Bytes)",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Disk name",
                        "type": "string"
                    },
                    "storageController": {
                        "enum": [
                            "Unknown",
                            "IDE",
                            "SCSI",
                            "NVMe",
                            "virtio",
                            "MMC"
                        ],
                        "type": "string"
                    },
                    "type": {
                        "description": "Disk type",
                        "enum": [
                            "Unknown",
                            "HDD",
                            "SSD"
                        ],
                        "type": "string"
                    }
                }
            },
            "NodeStatusError_v1_platform_GET": {
                "description": "error is the last observed error, if any.",
                "properties": {
                    "message": {
                        "description": "message is a string detailing the encountered error",
                        "type": "string"
                    },
                    "time": {
                        "description": "time is the timestamp when the error was encountered.",
                        "type": "string"
                    }
                }
            },
            "NodeStatusError_v1_platform_POST": {
                "description": "error is the last observed error, if any.",
                "properties": {
                    "message": {
                        "description": "message is a string detailing the encountered error",
                        "type": "string"
                    },
                    "time": {
                        "description": "time is the timestamp when the error was encountered.",
                        "type": "string"
                    }
                }
            },
            "NodeStatusError_v1_platform_PUT": {
                "description": "error is the last observed error, if any.",
                "properties": {
                    "message": {
                        "description": "message is a string detailing the encountered error",
                        "type": "string"
                    },
                    "time": {
                        "description": "time is the timestamp when the error was encountered.",
                        "type": "string"
                    }
                }
            },
            "NodeStatusMemory_v1_platform_GET": {
                "description": "Node Memory stats",
                "properties": {
                    "capacity": {
                        "description": "Total Memory (GB)",
                        "type": "integer"
                    }
                }
            },
            "NodeStatusMemory_v1_platform_POST": {
                "description": "Node Memory stats",
                "properties": {
                    "capacity": {
                        "description": "Total Memory (GB)",
                        "type": "integer"
                    }
                }
            },
            "NodeStatusMemory_v1_platform_PUT": {
                "description": "Node Memory stats",
                "properties": {
                    "capacity": {
                        "description": "Total Memory (GB)",
                        "type": "integer"
                    }
                }
            },
            "NodeStatusWrapper_v1_platform_GET": {
                "properties": {
                    "bootTime": {
                        "description": "Node's last boot time",
                        "type": "string"
                    },
                    "clusterName": {
                        "description": "Cluster name",
                        "type": "string"
                    },
                    "error": {
                        "$ref": "#/components/schemas/NodeStatusError_v1_platform_GET",
                        "description": "error is the last observed error, if any."
                    },
                    "firmwareUpgradeTime": {
                        "description": "Node's last firmware upgrade time",
                        "type": "string"
                    },
                    "hardwareStatus": {
                        "$ref": "#/components/schemas/NodeHardware_v1_platform_GET",
                        "description": "Hardware specs of the node"
                    },
                    "k8sStatus": {
                        "description": "Node's K8 status",
                        "type": "string"
                    },
                    "machineType": {
                        "description": "Node hardware type",
                        "enum": [
                            "Unknown",
                            "BareMetal",
                            "Virtual"
                        ],
                        "type": "string"
                    },
                    "model": {
                        "description": "Node model",
                        "type": "string"
                    },
                    "platformType": {
                        "description": "Node platform type",
                        "enum": [
                            "Unknown",
                            "Ova",
                            "Kvm",
                            "Azure",
                            "Aws",
                            "Physical",
                            "RhelBareMetal",
                            "RhelVirtual"
                        ],
                        "type": "string"
                    },
                    "serfStatus": {
                        "description": "Node's Serf status",
                        "type": "string"
                    },
                    "state": {
                        "description": "Node operational Status",
                        "enum": [
                            "Unknown",
                            "Init",
                            "Active",
                            "Inactive",
                            "Discovering",
                            "Undiscovered",
                            "Unregistered",
                            "Deleted",
                            "Incompatible",
                            "Rebooting",
                            "Unhealthy",
                            "Failover",
                            "MigratingToDualStack"
                        ],
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Node id",
                        "type": "string"
                    },
                    "version": {
                        "description": "Node version",
                        "type": "string"
                    }
                }
            },
            "NodeStatusWrapper_v1_platform_POST": {
                "properties": {
                    "bootTime": {
                        "description": "Node's last boot time",
                        "type": "string"
                    },
                    "clusterName": {
                        "description": "Cluster name",
                        "type": "string"
                    },
                    "error": {
                        "$ref": "#/components/schemas/NodeStatusError_v1_platform_POST",
                        "description": "error is the last observed error, if any."
                    },
                    "firmwareUpgradeTime": {
                        "description": "Node's last firmware upgrade time",
                        "type": "string"
                    },
                    "hardwareStatus": {
                        "$ref": "#/components/schemas/NodeHardware_v1_platform_POST",
                        "description": "Hardware specs of the node"
                    },
                    "k8sStatus": {
                        "description": "Node's K8 status",
                        "type": "string"
                    },
                    "machineType": {
                        "description": "Node hardware type",
                        "enum": [
                            "Unknown",
                            "BareMetal",
                            "Virtual"
                        ],
                        "type": "string"
                    },
                    "model": {
                        "description": "Node model",
                        "type": "string"
                    },
                    "platformType": {
                        "description": "Node platform type",
                        "enum": [
                            "Unknown",
                            "Ova",
                            "Kvm",
                            "Azure",
                            "Aws",
                            "Physical",
                            "RhelBareMetal",
                            "RhelVirtual"
                        ],
                        "type": "string"
                    },
                    "serfStatus": {
                        "description": "Node's Serf status",
                        "type": "string"
                    },
                    "state": {
                        "description": "Node operational Status",
                        "enum": [
                            "Unknown",
                            "Init",
                            "Active",
                            "Inactive",
                            "Discovering",
                            "Undiscovered",
                            "Unregistered",
                            "Deleted",
                            "Incompatible",
                            "Rebooting",
                            "Unhealthy",
                            "Failover",
                            "MigratingToDualStack"
                        ],
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Node id",
                        "type": "string"
                    },
                    "version": {
                        "description": "Node version",
                        "type": "string"
                    }
                }
            },
            "NodeStatusWrapper_v1_platform_PUT": {
                "properties": {
                    "bootTime": {
                        "description": "Node's last boot time",
                        "type": "string"
                    },
                    "clusterName": {
                        "description": "Cluster name",
                        "type": "string"
                    },
                    "error": {
                        "$ref": "#/components/schemas/NodeStatusError_v1_platform_PUT",
                        "description": "error is the last observed error, if any."
                    },
                    "firmwareUpgradeTime": {
                        "description": "Node's last firmware upgrade time",
                        "type": "string"
                    },
                    "hardwareStatus": {
                        "$ref": "#/components/schemas/NodeHardware_v1_platform_PUT",
                        "description": "Hardware specs of the node"
                    },
                    "k8sStatus": {
                        "description": "Node's K8 status",
                        "type": "string"
                    },
                    "machineType": {
                        "description": "Node hardware type",
                        "enum": [
                            "Unknown",
                            "BareMetal",
                            "Virtual"
                        ],
                        "type": "string"
                    },
                    "model": {
                        "description": "Node model",
                        "type": "string"
                    },
                    "platformType": {
                        "description": "Node platform type",
                        "enum": [
                            "Unknown",
                            "Ova",
                            "Kvm",
                            "Azure",
                            "Aws",
                            "Physical",
                            "RhelBareMetal",
                            "RhelVirtual"
                        ],
                        "type": "string"
                    },
                    "serfStatus": {
                        "description": "Node's Serf status",
                        "type": "string"
                    },
                    "state": {
                        "description": "Node operational Status",
                        "enum": [
                            "Unknown",
                            "Init",
                            "Active",
                            "Inactive",
                            "Discovering",
                            "Undiscovered",
                            "Unregistered",
                            "Deleted",
                            "Incompatible",
                            "Rebooting",
                            "Unhealthy",
                            "Failover",
                            "MigratingToDualStack"
                        ],
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Node id",
                        "type": "string"
                    },
                    "version": {
                        "description": "Node version",
                        "type": "string"
                    }
                }
            },
            "NodeStatus_v1_platform_GET": {
                "description": "Node status information",
                "properties": {
                    "bootTime": {
                        "description": "Node's last boot time",
                        "type": "string"
                    },
                    "clusterName": {
                        "description": "Cluster name",
                        "type": "string"
                    },
                    "error": {
                        "$ref": "#/components/schemas/NodeStatusError_v1_platform_GET",
                        "description": "error is the last observed error, if any."
                    },
                    "firmwareUpgradeTime": {
                        "description": "Node's last firmware upgrade time",
                        "type": "string"
                    },
                    "hardwareStatus": {
                        "$ref": "#/components/schemas/NodeHardware_v1_platform_GET",
                        "description": "Hardware specs of the node"
                    },
                    "k8sStatus": {
                        "description": "Node's K8 status",
                        "type": "string"
                    },
                    "machineType": {
                        "description": "Node hardware type",
                        "enum": [
                            "Unknown",
                            "BareMetal",
                            "Virtual"
                        ],
                        "type": "string"
                    },
                    "model": {
                        "description": "Node model",
                        "type": "string"
                    },
                    "platformType": {
                        "description": "Node platform type",
                        "enum": [
                            "Unknown",
                            "Ova",
                            "Kvm",
                            "Azure",
                            "Aws",
                            "Physical",
                            "RhelBareMetal",
                            "RhelVirtual"
                        ],
                        "type": "string"
                    },
                    "serfStatus": {
                        "description": "Node's Serf status",
                        "type": "string"
                    },
                    "state": {
                        "description": "Node operational Status",
                        "enum": [
                            "Unknown",
                            "Init",
                            "Active",
                            "Inactive",
                            "Discovering",
                            "Undiscovered",
                            "Unregistered",
                            "Deleted",
                            "Incompatible",
                            "Rebooting",
                            "Unhealthy",
                            "Failover",
                            "MigratingToDualStack"
                        ],
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Node id",
                        "type": "string"
                    },
                    "version": {
                        "description": "Node version",
                        "type": "string"
                    }
                }
            },
            "NodeStatus_v1_platform_POST": {
                "description": "Node status information",
                "properties": {
                    "bootTime": {
                        "description": "Node's last boot time",
                        "type": "string"
                    },
                    "clusterName": {
                        "description": "Cluster name",
                        "type": "string"
                    },
                    "error": {
                        "$ref": "#/components/schemas/NodeStatusError_v1_platform_POST",
                        "description": "error is the last observed error, if any."
                    },
                    "firmwareUpgradeTime": {
                        "description": "Node's last firmware upgrade time",
                        "type": "string"
                    },
                    "hardwareStatus": {
                        "$ref": "#/components/schemas/NodeHardware_v1_platform_POST",
                        "description": "Hardware specs of the node"
                    },
                    "k8sStatus": {
                        "description": "Node's K8 status",
                        "type": "string"
                    },
                    "machineType": {
                        "description": "Node hardware type",
                        "enum": [
                            "Unknown",
                            "BareMetal",
                            "Virtual"
                        ],
                        "type": "string"
                    },
                    "model": {
                        "description": "Node model",
                        "type": "string"
                    },
                    "platformType": {
                        "description": "Node platform type",
                        "enum": [
                            "Unknown",
                            "Ova",
                            "Kvm",
                            "Azure",
                            "Aws",
                            "Physical",
                            "RhelBareMetal",
                            "RhelVirtual"
                        ],
                        "type": "string"
                    },
                    "serfStatus": {
                        "description": "Node's Serf status",
                        "type": "string"
                    },
                    "state": {
                        "description": "Node operational Status",
                        "enum": [
                            "Unknown",
                            "Init",
                            "Active",
                            "Inactive",
                            "Discovering",
                            "Undiscovered",
                            "Unregistered",
                            "Deleted",
                            "Incompatible",
                            "Rebooting",
                            "Unhealthy",
                            "Failover",
                            "MigratingToDualStack"
                        ],
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Node id",
                        "type": "string"
                    },
                    "version": {
                        "description": "Node version",
                        "type": "string"
                    }
                }
            },
            "NodeStatus_v1_platform_PUT": {
                "description": "Node status information",
                "properties": {
                    "bootTime": {
                        "description": "Node's last boot time",
                        "type": "string"
                    },
                    "clusterName": {
                        "description": "Cluster name",
                        "type": "string"
                    },
                    "error": {
                        "$ref": "#/components/schemas/NodeStatusError_v1_platform_PUT",
                        "description": "error is the last observed error, if any."
                    },
                    "firmwareUpgradeTime": {
                        "description": "Node's last firmware upgrade time",
                        "type": "string"
                    },
                    "hardwareStatus": {
                        "$ref": "#/components/schemas/NodeHardware_v1_platform_PUT",
                        "description": "Hardware specs of the node"
                    },
                    "k8sStatus": {
                        "description": "Node's K8 status",
                        "type": "string"
                    },
                    "machineType": {
                        "description": "Node hardware type",
                        "enum": [
                            "Unknown",
                            "BareMetal",
                            "Virtual"
                        ],
                        "type": "string"
                    },
                    "model": {
                        "description": "Node model",
                        "type": "string"
                    },
                    "platformType": {
                        "description": "Node platform type",
                        "enum": [
                            "Unknown",
                            "Ova",
                            "Kvm",
                            "Azure",
                            "Aws",
                            "Physical",
                            "RhelBareMetal",
                            "RhelVirtual"
                        ],
                        "type": "string"
                    },
                    "serfStatus": {
                        "description": "Node's Serf status",
                        "type": "string"
                    },
                    "state": {
                        "description": "Node operational Status",
                        "enum": [
                            "Unknown",
                            "Init",
                            "Active",
                            "Inactive",
                            "Discovering",
                            "Undiscovered",
                            "Unregistered",
                            "Deleted",
                            "Incompatible",
                            "Rebooting",
                            "Unhealthy",
                            "Failover",
                            "MigratingToDualStack"
                        ],
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Node id",
                        "type": "string"
                    },
                    "version": {
                        "description": "Node version",
                        "type": "string"
                    }
                }
            },
            "Node_v1_platform_GET": {
                "description": "Resource that represents a node in the cluster",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/NodeSpecWrapper_v1_platform_GET"
                    },
                    "status": {
                        "$ref": "#/components/schemas/NodeStatusWrapper_v1_platform_GET"
                    }
                },
                "required": [
                    "spec",
                    "status"
                ]
            },
            "Node_v1_platform_GETLIST": {
                "description": "Resource that represents a node in the cluster",
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Node_v1_platform_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "Node_v1_platform_POST": {
                "description": "Resource that represents a node in the cluster",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/NodeSpecWrapper_v1_platform_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "Node_v1_platform_PUT": {
                "description": "Resource that represents a node in the cluster",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/NodeSpecWrapper_v1_platform_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "OIDCConfig_v4_aaa_GET": {
                "properties": {
                    "identityProvider": {
                        "$ref": "#/components/schemas/IdentityProvider_v4_aaa_GET",
                        "description": "OIDC login domain configuration"
                    }
                }
            },
            "OIDCConfig_v4_aaa_POST": {
                "properties": {
                    "identityProvider": {
                        "$ref": "#/components/schemas/IdentityProvider_v4_aaa_POST",
                        "description": "OIDC login domain configuration"
                    }
                }
            },
            "OIDCConfig_v4_aaa_PUT": {
                "properties": {
                    "identityProvider": {
                        "$ref": "#/components/schemas/IdentityProvider_v4_aaa_PUT",
                        "description": "OIDC login domain configuration"
                    }
                }
            },
            "PaginatedObjectDescriptor_v1_argo.cisco.com_GET": {
                "properties": {
                    "idKey": {
                        "type": "string"
                    },
                    "vals": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                }
            },
            "PaginatedObjectDescriptor_v1_argo.cisco.com_POST": {
                "properties": {
                    "idKey": {
                        "type": "string"
                    },
                    "vals": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                }
            },
            "PaginatedObjectDescriptor_v1_argo.cisco.com_PUT": {
                "properties": {
                    "idKey": {
                        "type": "string"
                    },
                    "vals": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                }
            },
            "PaginationSpecWrapper_v1_argo.cisco.com_GET": {
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    }
                }
            },
            "PaginationSpecWrapper_v1_argo.cisco.com_POST": {
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    }
                }
            },
            "PaginationSpecWrapper_v1_argo.cisco.com_PUT": {
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    }
                }
            },
            "PaginationSpec_v1_argo.cisco.com_GET": {
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    }
                }
            },
            "PaginationSpec_v1_argo.cisco.com_POST": {
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    }
                }
            },
            "PaginationSpec_v1_argo.cisco.com_PUT": {
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    }
                }
            },
            "PaginationStatusWrapper_v1_argo.cisco.com_GET": {
                "properties": {
                    "fieldsResolveMetaPtrs": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "inc": {
                        "type": "boolean"
                    },
                    "intraTypeIDs": {
                        "additionalProperties": {
                            "type": "boolean"
                        },
                        "type": "object"
                    },
                    "matchExpression": {
                        "type": "string"
                    },
                    "orderBy": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "results": {
                        "items": {
                            "$ref": "#/components/schemas/PaginatedObjectDescriptor_v1_argo.cisco.com_GET"
                        },
                        "type": "array"
                    },
                    "updated": {
                        "type": "string"
                    }
                }
            },
            "PaginationStatusWrapper_v1_argo.cisco.com_POST": {
                "properties": {
                    "fieldsResolveMetaPtrs": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "inc": {
                        "type": "boolean"
                    },
                    "intraTypeIDs": {
                        "additionalProperties": {
                            "type": "boolean"
                        },
                        "type": "object"
                    },
                    "matchExpression": {
                        "type": "string"
                    },
                    "orderBy": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "results": {
                        "items": {
                            "$ref": "#/components/schemas/PaginatedObjectDescriptor_v1_argo.cisco.com_POST"
                        },
                        "type": "array"
                    },
                    "updated": {
                        "type": "string"
                    }
                }
            },
            "PaginationStatusWrapper_v1_argo.cisco.com_PUT": {
                "properties": {
                    "fieldsResolveMetaPtrs": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "inc": {
                        "type": "boolean"
                    },
                    "intraTypeIDs": {
                        "additionalProperties": {
                            "type": "boolean"
                        },
                        "type": "object"
                    },
                    "matchExpression": {
                        "type": "string"
                    },
                    "orderBy": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "results": {
                        "items": {
                            "$ref": "#/components/schemas/PaginatedObjectDescriptor_v1_argo.cisco.com_PUT"
                        },
                        "type": "array"
                    },
                    "updated": {
                        "type": "string"
                    }
                }
            },
            "PaginationStatus_v1_argo.cisco.com_GET": {
                "properties": {
                    "fieldsResolveMetaPtrs": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "inc": {
                        "type": "boolean"
                    },
                    "intraTypeIDs": {
                        "additionalProperties": {
                            "type": "boolean"
                        },
                        "type": "object"
                    },
                    "matchExpression": {
                        "type": "string"
                    },
                    "orderBy": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "results": {
                        "items": {
                            "$ref": "#/components/schemas/PaginatedObjectDescriptor_v1_argo.cisco.com_GET"
                        },
                        "type": "array"
                    },
                    "updated": {
                        "type": "string"
                    }
                }
            },
            "PaginationStatus_v1_argo.cisco.com_POST": {
                "properties": {
                    "fieldsResolveMetaPtrs": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "inc": {
                        "type": "boolean"
                    },
                    "intraTypeIDs": {
                        "additionalProperties": {
                            "type": "boolean"
                        },
                        "type": "object"
                    },
                    "matchExpression": {
                        "type": "string"
                    },
                    "orderBy": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "results": {
                        "items": {
                            "$ref": "#/components/schemas/PaginatedObjectDescriptor_v1_argo.cisco.com_POST"
                        },
                        "type": "array"
                    },
                    "updated": {
                        "type": "string"
                    }
                }
            },
            "PaginationStatus_v1_argo.cisco.com_PUT": {
                "properties": {
                    "fieldsResolveMetaPtrs": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "inc": {
                        "type": "boolean"
                    },
                    "intraTypeIDs": {
                        "additionalProperties": {
                            "type": "boolean"
                        },
                        "type": "object"
                    },
                    "matchExpression": {
                        "type": "string"
                    },
                    "orderBy": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "results": {
                        "items": {
                            "$ref": "#/components/schemas/PaginatedObjectDescriptor_v1_argo.cisco.com_PUT"
                        },
                        "type": "array"
                    },
                    "updated": {
                        "type": "string"
                    }
                }
            },
            "PasswordPolicy_v4_aaa_GET": {
                "properties": {
                    "passwordChangeTime": {
                        "description": "Time Recent Password Changed",
                        "type": "string"
                    },
                    "reuseLimitation": {
                        "description": "Password Reuse Limitation",
                        "type": "integer"
                    },
                    "timeIntervalLimitation": {
                        "description": "Password Time Interval Limitation",
                        "type": "integer"
                    }
                }
            },
            "PasswordPolicy_v4_aaa_POST": {
                "properties": {
                    "reuseLimitation": {
                        "description": "Password Reuse Limitation",
                        "type": "integer"
                    },
                    "timeIntervalLimitation": {
                        "description": "Password Time Interval Limitation",
                        "type": "integer"
                    }
                }
            },
            "PasswordPolicy_v4_aaa_PUT": {
                "properties": {
                    "reuseLimitation": {
                        "description": "Password Reuse Limitation",
                        "type": "integer"
                    },
                    "timeIntervalLimitation": {
                        "description": "Password Time Interval Limitation",
                        "type": "integer"
                    }
                }
            },
            "ProviderData_v4_aaa_GET": {
                "oneOf": [
                    {
                        "properties": {
                            "ldap": {
                                "$ref": "#/components/schemas/LDAPConfig_v4_aaa_GET"
                            }
                        }
                    },
                    {
                        "properties": {
                            "radius": {
                                "$ref": "#/components/schemas/RADIUSConfig_v4_aaa_GET"
                            }
                        }
                    },
                    {
                        "properties": {
                            "tacacs": {
                                "$ref": "#/components/schemas/TACACSConfig_v4_aaa_GET"
                            }
                        }
                    },
                    {
                        "properties": {
                            "oidc": {
                                "$ref": "#/components/schemas/OIDCConfig_v4_aaa_GET"
                            }
                        }
                    },
                    {
                        "properties": {
                            "local": {
                                "$ref": "#/components/schemas/LocalConfig_v4_aaa_GET"
                            }
                        }
                    }
                ]
            },
            "ProviderData_v4_aaa_POST": {
                "oneOf": [
                    {
                        "properties": {
                            "local": {
                                "$ref": "#/components/schemas/LocalConfig_v4_aaa_POST"
                            }
                        }
                    },
                    {
                        "properties": {
                            "ldap": {
                                "$ref": "#/components/schemas/LDAPConfig_v4_aaa_POST"
                            }
                        }
                    },
                    {
                        "properties": {
                            "radius": {
                                "$ref": "#/components/schemas/RADIUSConfig_v4_aaa_POST"
                            }
                        }
                    },
                    {
                        "properties": {
                            "tacacs": {
                                "$ref": "#/components/schemas/TACACSConfig_v4_aaa_POST"
                            }
                        }
                    },
                    {
                        "properties": {
                            "oidc": {
                                "$ref": "#/components/schemas/OIDCConfig_v4_aaa_POST"
                            }
                        }
                    }
                ]
            },
            "ProviderData_v4_aaa_PUT": {
                "oneOf": [
                    {
                        "properties": {
                            "oidc": {
                                "$ref": "#/components/schemas/OIDCConfig_v4_aaa_PUT"
                            }
                        }
                    },
                    {
                        "properties": {
                            "local": {
                                "$ref": "#/components/schemas/LocalConfig_v4_aaa_PUT"
                            }
                        }
                    },
                    {
                        "properties": {
                            "ldap": {
                                "$ref": "#/components/schemas/LDAPConfig_v4_aaa_PUT"
                            }
                        }
                    },
                    {
                        "properties": {
                            "radius": {
                                "$ref": "#/components/schemas/RADIUSConfig_v4_aaa_PUT"
                            }
                        }
                    },
                    {
                        "properties": {
                            "tacacs": {
                                "$ref": "#/components/schemas/TACACSConfig_v4_aaa_PUT"
                            }
                        }
                    }
                ]
            },
            "RADIUSConfig_v4_aaa_GET": {
                "properties": {
                    "providers": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/RADIUSProvider_v4_aaa_GET"
                        },
                        "description": "RADIUS login domain configuration",
                        "type": "object"
                    }
                }
            },
            "RADIUSConfig_v4_aaa_POST": {
                "properties": {
                    "providers": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/RADIUSProvider_v4_aaa_POST"
                        },
                        "description": "RADIUS login domain configuration",
                        "type": "object"
                    }
                }
            },
            "RADIUSConfig_v4_aaa_PUT": {
                "properties": {
                    "providers": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/RADIUSProvider_v4_aaa_PUT"
                        },
                        "description": "RADIUS login domain configuration",
                        "type": "object"
                    }
                }
            },
            "RADIUSProvider_v4_aaa_GET": {
                "properties": {
                    "authProtocol": {
                        "description": "RADIUS provider server authentication mechanism",
                        "enum": [
                            "PAP",
                            "CHAP",
                            "MSCHAP"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "Description about the RADIUS provider server",
                        "type": "string"
                    },
                    "key": {
                        "description": "Base64 encoded RADIUS provider server secret",
                        "type": "string"
                    },
                    "monitor": {
                        "description": "Flag to determine whether to monitor this LDAP provider",
                        "type": "boolean"
                    },
                    "monitorPassword": {
                        "description": "Monitoring user password",
                        "type": "string"
                    },
                    "monitorUsername": {
                        "description": "User name used for monitoring",
                        "type": "string"
                    },
                    "port": {
                        "description": "RADIUS provider server connection port",
                        "type": "integer"
                    },
                    "priority": {
                        "description": "RADIUS provider server priority based on which authentication will be attempted",
                        "type": "integer"
                    },
                    "retries": {
                        "description": "RADIUS provider server connection retries parameter",
                        "type": "integer"
                    },
                    "stateCode": {
                        "description": "RADIUS state code",
                        "type": "string"
                    },
                    "timeout": {
                        "description": "RADIUS provider server connection timeout parameter",
                        "type": "integer"
                    }
                }
            },
            "RADIUSProvider_v4_aaa_POST": {
                "properties": {
                    "authProtocol": {
                        "description": "RADIUS provider server authentication mechanism",
                        "enum": [
                            "PAP",
                            "CHAP",
                            "MSCHAP"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "Description about the RADIUS provider server",
                        "type": "string"
                    },
                    "key": {
                        "description": "Base64 encoded RADIUS provider server secret",
                        "type": "string"
                    },
                    "monitor": {
                        "description": "Flag to determine whether to monitor this LDAP provider",
                        "type": "boolean"
                    },
                    "monitorPassword": {
                        "description": "Monitoring user password",
                        "type": "string"
                    },
                    "monitorUsername": {
                        "description": "User name used for monitoring",
                        "type": "string"
                    },
                    "port": {
                        "description": "RADIUS provider server connection port",
                        "type": "integer"
                    },
                    "priority": {
                        "description": "RADIUS provider server priority based on which authentication will be attempted",
                        "type": "integer"
                    },
                    "retries": {
                        "description": "RADIUS provider server connection retries parameter",
                        "type": "integer"
                    },
                    "stateCode": {
                        "description": "RADIUS state code",
                        "type": "string"
                    },
                    "timeout": {
                        "description": "RADIUS provider server connection timeout parameter",
                        "type": "integer"
                    }
                }
            },
            "RADIUSProvider_v4_aaa_PUT": {
                "properties": {
                    "authProtocol": {
                        "description": "RADIUS provider server authentication mechanism",
                        "enum": [
                            "PAP",
                            "CHAP",
                            "MSCHAP"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "Description about the RADIUS provider server",
                        "type": "string"
                    },
                    "key": {
                        "description": "Base64 encoded RADIUS provider server secret",
                        "type": "string"
                    },
                    "monitor": {
                        "description": "Flag to determine whether to monitor this LDAP provider",
                        "type": "boolean"
                    },
                    "monitorPassword": {
                        "description": "Monitoring user password",
                        "type": "string"
                    },
                    "monitorUsername": {
                        "description": "User name used for monitoring",
                        "type": "string"
                    },
                    "port": {
                        "description": "RADIUS provider server connection port",
                        "type": "integer"
                    },
                    "priority": {
                        "description": "RADIUS provider server priority based on which authentication will be attempted",
                        "type": "integer"
                    },
                    "retries": {
                        "description": "RADIUS provider server connection retries parameter",
                        "type": "integer"
                    },
                    "stateCode": {
                        "description": "RADIUS state code",
                        "type": "string"
                    },
                    "timeout": {
                        "description": "RADIUS provider server connection timeout parameter",
                        "type": "integer"
                    }
                }
            },
            "RBAC_v4_aaa_GET": {
                "properties": {
                    "domains": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Roles_v4_aaa_GET"
                        },
                        "description": "Mapping of ND Security Domains and Roles",
                        "type": "object"
                    }
                }
            },
            "RBAC_v4_aaa_POST": {
                "properties": {
                    "domains": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Roles_v4_aaa_POST"
                        },
                        "description": "Mapping of ND Security Domains and Roles",
                        "type": "object"
                    }
                }
            },
            "RBAC_v4_aaa_PUT": {
                "properties": {
                    "domains": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Roles_v4_aaa_PUT"
                        },
                        "description": "Mapping of ND Security Domains and Roles",
                        "type": "object"
                    }
                }
            },
            "ReconcileRecordEntry_v1_argo.cisco.com_GET": {
                "properties": {
                    "observedVersion": {
                        "type": "integer"
                    }
                }
            },
            "ReconcileRecordEntry_v1_argo.cisco.com_POST": {
                "properties": {
                    "observedVersion": {
                        "type": "integer"
                    }
                }
            },
            "ReconcileRecordEntry_v1_argo.cisco.com_PUT": {
                "properties": {
                    "observedVersion": {
                        "type": "integer"
                    }
                }
            },
            "ReconcileRecordSpecWrapper_v1_argo.cisco.com_GET": {
                "properties": {
                    "instances": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ReconcileRecordEntry_v1_argo.cisco.com_GET"
                        },
                        "type": "object"
                    },
                    "kind": {
                        "type": "string"
                    }
                }
            },
            "ReconcileRecordSpecWrapper_v1_argo.cisco.com_POST": {
                "properties": {
                    "instances": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ReconcileRecordEntry_v1_argo.cisco.com_POST"
                        },
                        "type": "object"
                    },
                    "kind": {
                        "type": "string"
                    }
                }
            },
            "ReconcileRecordSpecWrapper_v1_argo.cisco.com_PUT": {
                "properties": {
                    "instances": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ReconcileRecordEntry_v1_argo.cisco.com_PUT"
                        },
                        "type": "object"
                    },
                    "kind": {
                        "type": "string"
                    }
                }
            },
            "ReconcileRecordSpec_v1_argo.cisco.com_GET": {
                "properties": {
                    "instances": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ReconcileRecordEntry_v1_argo.cisco.com_GET"
                        },
                        "type": "object"
                    },
                    "kind": {
                        "type": "string"
                    }
                }
            },
            "ReconcileRecordSpec_v1_argo.cisco.com_POST": {
                "properties": {
                    "instances": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ReconcileRecordEntry_v1_argo.cisco.com_POST"
                        },
                        "type": "object"
                    },
                    "kind": {
                        "type": "string"
                    }
                }
            },
            "ReconcileRecordSpec_v1_argo.cisco.com_PUT": {
                "properties": {
                    "instances": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ReconcileRecordEntry_v1_argo.cisco.com_PUT"
                        },
                        "type": "object"
                    },
                    "kind": {
                        "type": "string"
                    }
                }
            },
            "ReconcileSpecWrapper_v1_argo.cisco.com_GET": {
                "properties": {
                    "dn": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "org": {
                        "type": "string"
                    }
                }
            },
            "ReconcileSpecWrapper_v1_argo.cisco.com_POST": {
                "properties": {
                    "dn": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "org": {
                        "type": "string"
                    }
                }
            },
            "ReconcileSpecWrapper_v1_argo.cisco.com_PUT": {
                "properties": {
                    "dn": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "org": {
                        "type": "string"
                    }
                }
            },
            "ReconcileSpec_v1_argo.cisco.com_GET": {
                "properties": {
                    "dn": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "org": {
                        "type": "string"
                    }
                }
            },
            "ReconcileSpec_v1_argo.cisco.com_POST": {
                "properties": {
                    "dn": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "org": {
                        "type": "string"
                    }
                }
            },
            "ReconcileSpec_v1_argo.cisco.com_PUT": {
                "properties": {
                    "dn": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "org": {
                        "type": "string"
                    }
                }
            },
            "RecordStream_v1_eventmonitoring_GET": {
                "description": "List of streams where event record alert information is broadcasted and the status of the stream operation",
                "properties": {
                    "name": {
                        "description": "Type of stream",
                        "type": "string"
                    },
                    "status": {
                        "description": "Whether the stream broadcast was \"Completed\" or \"Failed\"",
                        "enum": [
                            "Completed",
                            "Failed"
                        ],
                        "type": "string"
                    },
                    "timestamp": {
                        "description": "Timestamp when the stream operation was attempted",
                        "type": "string"
                    }
                }
            },
            "RecordStream_v1_eventmonitoring_POST": {
                "description": "List of streams where event record alert information is broadcasted and the status of the stream operation",
                "properties": {
                    "name": {
                        "description": "Type of stream",
                        "type": "string"
                    },
                    "status": {
                        "description": "Whether the stream broadcast was \"Completed\" or \"Failed\"",
                        "enum": [
                            "Completed",
                            "Failed"
                        ],
                        "type": "string"
                    },
                    "timestamp": {
                        "description": "Timestamp when the stream operation was attempted",
                        "type": "string"
                    }
                }
            },
            "RecordStream_v1_eventmonitoring_PUT": {
                "description": "List of streams where event record alert information is broadcasted and the status of the stream operation",
                "properties": {
                    "name": {
                        "description": "Type of stream",
                        "type": "string"
                    },
                    "status": {
                        "description": "Whether the stream broadcast was \"Completed\" or \"Failed\"",
                        "enum": [
                            "Completed",
                            "Failed"
                        ],
                        "type": "string"
                    },
                    "timestamp": {
                        "description": "Timestamp when the stream operation was attempted",
                        "type": "string"
                    }
                }
            },
            "RemoteUserSpecWrapper_v4_aaa_GET": {
                "properties": {
                    "ciscoAVPair": {
                        "description": "Remote user ciscoAVPair",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description about remote user",
                        "type": "string"
                    },
                    "loginDomain": {
                        "description": "Login domain that the remote user has logged in to",
                        "type": "string"
                    },
                    "loginID": {
                        "description": "Remote user login ID",
                        "type": "string"
                    },
                    "loginTime": {
                        "description": "Remote user login timestamp",
                        "type": "string"
                    },
                    "rbac": {
                        "$ref": "#/components/schemas/RBAC_v4_aaa_GET",
                        "description": "Remote user RBAC"
                    },
                    "unixuserid": {
                        "description": "Remote user unix user ID",
                        "type": "integer"
                    },
                    "userID": {
                        "description": "Remote user ID",
                        "type": "string"
                    }
                }
            },
            "RemoteUserSpecWrapper_v4_aaa_POST": {
                "properties": {
                    "ciscoAVPair": {
                        "description": "Remote user ciscoAVPair",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description about remote user",
                        "type": "string"
                    },
                    "loginDomain": {
                        "description": "Login domain that the remote user has logged in to",
                        "type": "string"
                    },
                    "loginID": {
                        "description": "Remote user login ID",
                        "type": "string"
                    },
                    "loginTime": {
                        "description": "Remote user login timestamp",
                        "type": "string"
                    },
                    "rbac": {
                        "$ref": "#/components/schemas/RBAC_v4_aaa_POST",
                        "description": "Remote user RBAC"
                    }
                },
                "required": [
                    "loginID"
                ]
            },
            "RemoteUserSpecWrapper_v4_aaa_PUT": {
                "properties": {
                    "ciscoAVPair": {
                        "description": "Remote user ciscoAVPair",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description about remote user",
                        "type": "string"
                    },
                    "loginDomain": {
                        "description": "Login domain that the remote user has logged in to",
                        "type": "string"
                    },
                    "loginID": {
                        "description": "Remote user login ID",
                        "type": "string"
                    },
                    "loginTime": {
                        "description": "Remote user login timestamp",
                        "type": "string"
                    },
                    "rbac": {
                        "$ref": "#/components/schemas/RBAC_v4_aaa_PUT",
                        "description": "Remote user RBAC"
                    }
                }
            },
            "RemoteUserSpec_v4_aaa_GET": {
                "properties": {
                    "ciscoAVPair": {
                        "description": "Remote user ciscoAVPair",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description about remote user",
                        "type": "string"
                    },
                    "loginDomain": {
                        "description": "Login domain that the remote user has logged in to",
                        "type": "string"
                    },
                    "loginID": {
                        "description": "Remote user login ID",
                        "type": "string"
                    },
                    "loginTime": {
                        "description": "Remote user login timestamp",
                        "type": "string"
                    },
                    "rbac": {
                        "$ref": "#/components/schemas/RBAC_v4_aaa_GET",
                        "description": "Remote user RBAC"
                    },
                    "unixuserid": {
                        "description": "Remote user unix user ID",
                        "type": "integer"
                    },
                    "userID": {
                        "description": "Remote user ID",
                        "type": "string"
                    }
                }
            },
            "RemoteUserSpec_v4_aaa_POST": {
                "properties": {
                    "ciscoAVPair": {
                        "description": "Remote user ciscoAVPair",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description about remote user",
                        "type": "string"
                    },
                    "loginDomain": {
                        "description": "Login domain that the remote user has logged in to",
                        "type": "string"
                    },
                    "loginID": {
                        "description": "Remote user login ID",
                        "type": "string"
                    },
                    "loginTime": {
                        "description": "Remote user login timestamp",
                        "type": "string"
                    },
                    "rbac": {
                        "$ref": "#/components/schemas/RBAC_v4_aaa_POST",
                        "description": "Remote user RBAC"
                    }
                }
            },
            "RemoteUserSpec_v4_aaa_PUT": {
                "properties": {
                    "ciscoAVPair": {
                        "description": "Remote user ciscoAVPair",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description about remote user",
                        "type": "string"
                    },
                    "loginDomain": {
                        "description": "Login domain that the remote user has logged in to",
                        "type": "string"
                    },
                    "loginID": {
                        "description": "Remote user login ID",
                        "type": "string"
                    },
                    "loginTime": {
                        "description": "Remote user login timestamp",
                        "type": "string"
                    },
                    "rbac": {
                        "$ref": "#/components/schemas/RBAC_v4_aaa_PUT",
                        "description": "Remote user RBAC"
                    }
                }
            },
            "RemoteUser_v4_aaa_GET": {
                "description": "Remote User Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/RemoteUserSpecWrapper_v4_aaa_GET"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "RemoteUser_v4_aaa_GETLIST": {
                "description": "Remote User Resource",
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/RemoteUser_v4_aaa_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "RemoteUser_v4_aaa_POST": {
                "description": "Remote User Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/RemoteUserSpecWrapper_v4_aaa_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "RemoteUser_v4_aaa_PUT": {
                "description": "Remote User Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/RemoteUserSpecWrapper_v4_aaa_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "ResourceDescriptor_v1_argo.cisco.com_GET": {
                "properties": {
                    "endpoint": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "service": {
                        "type": "string"
                    },
                    "url": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                }
            },
            "ResourceDescriptor_v1_argo.cisco.com_POST": {
                "properties": {
                    "endpoint": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "service": {
                        "type": "string"
                    },
                    "url": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                }
            },
            "ResourceDescriptor_v1_argo.cisco.com_PUT": {
                "properties": {
                    "endpoint": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "service": {
                        "type": "string"
                    },
                    "url": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                }
            },
            "RetentionPolicy_v1_eventmonitoring_GET": {
                "description": "Retention policy for the generated event records as part of the parent event configuration",
                "properties": {
                    "count": {
                        "description": "Total number of most recent event records to retain",
                        "type": "integer"
                    },
                    "duration": {
                        "description": "Duration for which event records should be retained",
                        "type": "string"
                    },
                    "size": {
                        "description": "Upper limit on the size of the event records to retain. Units in d (days), m (minutes) or s (seconds). For example - 20m will retain event records for 20 minutes",
                        "type": "string"
                    }
                }
            },
            "RetentionPolicy_v1_eventmonitoring_POST": {
                "description": "Retention policy for the generated event records as part of the parent event configuration",
                "properties": {
                    "count": {
                        "description": "Total number of most recent event records to retain",
                        "type": "integer"
                    },
                    "duration": {
                        "description": "Duration for which event records should be retained",
                        "type": "string"
                    },
                    "size": {
                        "description": "Upper limit on the size of the event records to retain. Units in d (days), m (minutes) or s (seconds). For example - 20m will retain event records for 20 minutes",
                        "type": "string"
                    }
                }
            },
            "RetentionPolicy_v1_eventmonitoring_PUT": {
                "description": "Retention policy for the generated event records as part of the parent event configuration",
                "properties": {
                    "count": {
                        "description": "Total number of most recent event records to retain",
                        "type": "integer"
                    },
                    "duration": {
                        "description": "Duration for which event records should be retained",
                        "type": "string"
                    },
                    "size": {
                        "description": "Upper limit on the size of the event records to retain. Units in d (days), m (minutes) or s (seconds). For example - 20m will retain event records for 20 minutes",
                        "type": "string"
                    }
                }
            },
            "Roles_v4_aaa_GET": {
                "properties": {
                    "roles": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Mapping of ND Roles and Read/Write Privileges",
                        "type": "object"
                    }
                }
            },
            "Roles_v4_aaa_POST": {
                "properties": {
                    "roles": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Mapping of ND Roles and Read/Write Privileges",
                        "type": "object"
                    }
                }
            },
            "Roles_v4_aaa_PUT": {
                "properties": {
                    "roles": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Mapping of ND Roles and Read/Write Privileges",
                        "type": "object"
                    }
                }
            },
            "RouteSpecWrapper_v1_platform_GET": {
                "properties": {
                    "destination": {
                        "description": "Route Destination address/mask",
                        "type": "string"
                    },
                    "targetNetwork": {
                        "description": "Route Target Network",
                        "enum": [
                            "Management",
                            "Data"
                        ],
                        "type": "string"
                    }
                }
            },
            "RouteSpecWrapper_v1_platform_POST": {
                "properties": {
                    "destination": {
                        "description": "Route Destination address/mask",
                        "type": "string"
                    },
                    "targetNetwork": {
                        "description": "Route Target Network",
                        "enum": [
                            "Management",
                            "Data"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "destination"
                ]
            },
            "RouteSpecWrapper_v1_platform_PUT": {
                "properties": {
                    "destination": {
                        "description": "Route Destination address/mask",
                        "type": "string"
                    },
                    "targetNetwork": {
                        "description": "Route Target Network",
                        "enum": [
                            "Management",
                            "Data"
                        ],
                        "type": "string"
                    }
                }
            },
            "RouteSpec_v1_platform_GET": {
                "description": "Route configuration",
                "properties": {
                    "destination": {
                        "description": "Route Destination address/mask",
                        "type": "string"
                    },
                    "targetNetwork": {
                        "description": "Route Target Network",
                        "enum": [
                            "Management",
                            "Data"
                        ],
                        "type": "string"
                    }
                }
            },
            "RouteSpec_v1_platform_POST": {
                "description": "Route configuration",
                "properties": {
                    "destination": {
                        "description": "Route Destination address/mask",
                        "type": "string"
                    },
                    "targetNetwork": {
                        "description": "Route Target Network",
                        "enum": [
                            "Management",
                            "Data"
                        ],
                        "type": "string"
                    }
                }
            },
            "RouteSpec_v1_platform_PUT": {
                "description": "Route configuration",
                "properties": {
                    "destination": {
                        "description": "Route Destination address/mask",
                        "type": "string"
                    },
                    "targetNetwork": {
                        "description": "Route Target Network",
                        "enum": [
                            "Management",
                            "Data"
                        ],
                        "type": "string"
                    }
                }
            },
            "RouteStatusError_v1_platform_GET": {
                "description": "error is the last observed error, if any.",
                "properties": {
                    "message": {
                        "description": "message is a string detailing the encountered error",
                        "type": "string"
                    },
                    "time": {
                        "description": "time is the timestamp when the error was encountered.",
                        "type": "string"
                    }
                }
            },
            "RouteStatusError_v1_platform_POST": {
                "description": "error is the last observed error, if any.",
                "properties": {
                    "message": {
                        "description": "message is a string detailing the encountered error",
                        "type": "string"
                    },
                    "time": {
                        "description": "time is the timestamp when the error was encountered.",
                        "type": "string"
                    }
                }
            },
            "RouteStatusError_v1_platform_PUT": {
                "description": "error is the last observed error, if any.",
                "properties": {
                    "message": {
                        "description": "message is a string detailing the encountered error",
                        "type": "string"
                    },
                    "time": {
                        "description": "time is the timestamp when the error was encountered.",
                        "type": "string"
                    }
                }
            },
            "RouteStatusWrapper_v1_platform_GET": {
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/RouteStatusError_v1_platform_GET",
                        "description": "error is the last observed error, if any."
                    }
                }
            },
            "RouteStatusWrapper_v1_platform_POST": {
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/RouteStatusError_v1_platform_POST",
                        "description": "error is the last observed error, if any."
                    }
                }
            },
            "RouteStatusWrapper_v1_platform_PUT": {
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/RouteStatusError_v1_platform_PUT",
                        "description": "error is the last observed error, if any."
                    }
                }
            },
            "RouteStatus_v1_platform_GET": {
                "description": "Route status information",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/RouteStatusError_v1_platform_GET",
                        "description": "error is the last observed error, if any."
                    }
                }
            },
            "RouteStatus_v1_platform_POST": {
                "description": "Route status information",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/RouteStatusError_v1_platform_POST",
                        "description": "error is the last observed error, if any."
                    }
                }
            },
            "RouteStatus_v1_platform_PUT": {
                "description": "Route status information",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/RouteStatusError_v1_platform_PUT",
                        "description": "error is the last observed error, if any."
                    }
                }
            },
            "Route_v1_platform_GET": {
                "description": "Resource that represents configuration for a network route, to be set on all nodes",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/RouteSpecWrapper_v1_platform_GET"
                    },
                    "status": {
                        "$ref": "#/components/schemas/RouteStatusWrapper_v1_platform_GET"
                    }
                },
                "required": [
                    "spec",
                    "status"
                ]
            },
            "Route_v1_platform_GETLIST": {
                "description": "Resource that represents configuration for a network route, to be set on all nodes",
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Route_v1_platform_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "Route_v1_platform_POST": {
                "description": "Resource that represents configuration for a network route, to be set on all nodes",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/RouteSpecWrapper_v1_platform_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "Route_v1_platform_PUT": {
                "description": "Resource that represents configuration for a network route, to be set on all nodes",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/RouteSpecWrapper_v1_platform_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "SecurityDomainSpecWrapper_v4_aaa_GET": {
                "properties": {
                    "description": {
                        "description": "Description about the Security Domain",
                        "type": "string"
                    },
                    "name": {
                        "description": "Security Domain Name",
                        "type": "string"
                    }
                }
            },
            "SecurityDomainSpecWrapper_v4_aaa_POST": {
                "properties": {
                    "description": {
                        "description": "Description about the Security Domain",
                        "type": "string"
                    },
                    "name": {
                        "description": "Security Domain Name",
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "SecurityDomainSpecWrapper_v4_aaa_PUT": {
                "properties": {
                    "description": {
                        "description": "Description about the Security Domain",
                        "type": "string"
                    },
                    "name": {
                        "description": "Security Domain Name",
                        "type": "string"
                    }
                }
            },
            "SecurityDomainSpec_v4_aaa_GET": {
                "properties": {
                    "description": {
                        "description": "Description about the Security Domain",
                        "type": "string"
                    },
                    "name": {
                        "description": "Security Domain Name",
                        "type": "string"
                    }
                }
            },
            "SecurityDomainSpec_v4_aaa_POST": {
                "properties": {
                    "description": {
                        "description": "Description about the Security Domain",
                        "type": "string"
                    },
                    "name": {
                        "description": "Security Domain Name",
                        "type": "string"
                    }
                }
            },
            "SecurityDomainSpec_v4_aaa_PUT": {
                "properties": {
                    "description": {
                        "description": "Description about the Security Domain",
                        "type": "string"
                    },
                    "name": {
                        "description": "Security Domain Name",
                        "type": "string"
                    }
                }
            },
            "SecurityDomain_v4_aaa_GET": {
                "description": "API Gateway Security Domains",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/SecurityDomainSpecWrapper_v4_aaa_GET"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "SecurityDomain_v4_aaa_GETLIST": {
                "description": "API Gateway Security Domains",
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/SecurityDomain_v4_aaa_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "SecurityDomain_v4_aaa_POST": {
                "description": "API Gateway Security Domains",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/SecurityDomainSpecWrapper_v4_aaa_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "SecurityDomain_v4_aaa_PUT": {
                "description": "API Gateway Security Domains",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/SecurityDomainSpecWrapper_v4_aaa_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "SelectorStatus": {
                "properties": {
                    "error": {
                        "type": "object"
                    },
                    "resolvedIDs": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                }
            },
            "ServiceDescriptor_v1_argo.cisco.com_GET": {
                "properties": {
                    "databaseName": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "ServiceDescriptor_v1_argo.cisco.com_POST": {
                "properties": {
                    "databaseName": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "ServiceDescriptor_v1_argo.cisco.com_PUT": {
                "properties": {
                    "databaseName": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "SeverityCondition_v1_eventmonitoring_GET": {
                "description": "Types of severity conditions to track",
                "properties": {
                    "alertDescription": {
                        "description": "Description of the alert being raised",
                        "type": "string"
                    },
                    "isDeactivated": {
                        "description": "Whether the SeverityCondition is not activated to be monitored",
                        "type": "boolean"
                    },
                    "key": {
                        "description": "label or key to compare value",
                        "type": "string"
                    },
                    "lvalue": {
                        "description": "Threshold value being tracked",
                        "type": "string"
                    },
                    "operator": {
                        "description": "Comparison operator for the prometheus metric being tracked",
                        "type": "string"
                    },
                    "rvalue": {
                        "description": "Upper bound of threshold value when \"between\" operator is used",
                        "type": "string"
                    },
                    "severity": {
                        "description": "Severity of the alert to be raised",
                        "enum": [
                            "critical",
                            "major",
                            "minor",
                            "warning"
                        ],
                        "type": "string"
                    }
                }
            },
            "SeverityCondition_v1_eventmonitoring_POST": {
                "description": "Types of severity conditions to track",
                "properties": {
                    "alertDescription": {
                        "description": "Description of the alert being raised",
                        "type": "string"
                    },
                    "isDeactivated": {
                        "description": "Whether the SeverityCondition is not activated to be monitored",
                        "type": "boolean"
                    },
                    "key": {
                        "description": "label or key to compare value",
                        "type": "string"
                    },
                    "lvalue": {
                        "description": "Threshold value being tracked",
                        "type": "string"
                    },
                    "operator": {
                        "description": "Comparison operator for the prometheus metric being tracked",
                        "type": "string"
                    },
                    "rvalue": {
                        "description": "Upper bound of threshold value when \"between\" operator is used",
                        "type": "string"
                    },
                    "severity": {
                        "description": "Severity of the alert to be raised",
                        "enum": [
                            "critical",
                            "major",
                            "minor",
                            "warning"
                        ],
                        "type": "string"
                    }
                }
            },
            "SeverityCondition_v1_eventmonitoring_PUT": {
                "description": "Types of severity conditions to track",
                "properties": {
                    "alertDescription": {
                        "description": "Description of the alert being raised",
                        "type": "string"
                    },
                    "isDeactivated": {
                        "description": "Whether the SeverityCondition is not activated to be monitored",
                        "type": "boolean"
                    },
                    "key": {
                        "description": "label or key to compare value",
                        "type": "string"
                    },
                    "lvalue": {
                        "description": "Threshold value being tracked",
                        "type": "string"
                    },
                    "operator": {
                        "description": "Comparison operator for the prometheus metric being tracked",
                        "type": "string"
                    },
                    "rvalue": {
                        "description": "Upper bound of threshold value when \"between\" operator is used",
                        "type": "string"
                    },
                    "severity": {
                        "description": "Severity of the alert to be raised",
                        "enum": [
                            "critical",
                            "major",
                            "minor",
                            "warning"
                        ],
                        "type": "string"
                    }
                }
            },
            "SiteAppDataSpecWrapper_v4_sitemanagement_GET": {
                "properties": {
                    "apps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "siteAnnotation": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "siteAnnotationLock": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/AnnotationLockValue_v4_sitemanagement_GET"
                        },
                        "type": "object"
                    },
                    "siteUUID": {
                        "type": "string"
                    }
                }
            },
            "SiteAppDataSpecWrapper_v4_sitemanagement_POST": {
                "properties": {
                    "apps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "siteAnnotation": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "siteAnnotationLock": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/AnnotationLockValue_v4_sitemanagement_POST"
                        },
                        "type": "object"
                    },
                    "siteUUID": {
                        "type": "string"
                    }
                }
            },
            "SiteAppDataSpecWrapper_v4_sitemanagement_PUT": {
                "properties": {
                    "apps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "siteAnnotation": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "siteAnnotationLock": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/AnnotationLockValue_v4_sitemanagement_PUT"
                        },
                        "type": "object"
                    },
                    "siteUUID": {
                        "type": "string"
                    }
                }
            },
            "SiteAppDataSpec_v4_sitemanagement_GET": {
                "properties": {
                    "apps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "siteAnnotation": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "siteAnnotationLock": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/AnnotationLockValue_v4_sitemanagement_GET"
                        },
                        "type": "object"
                    },
                    "siteUUID": {
                        "type": "string"
                    }
                }
            },
            "SiteAppDataSpec_v4_sitemanagement_POST": {
                "properties": {
                    "apps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "siteAnnotation": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "siteAnnotationLock": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/AnnotationLockValue_v4_sitemanagement_POST"
                        },
                        "type": "object"
                    },
                    "siteUUID": {
                        "type": "string"
                    }
                }
            },
            "SiteAppDataSpec_v4_sitemanagement_PUT": {
                "properties": {
                    "apps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "siteAnnotation": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "siteAnnotationLock": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/AnnotationLockValue_v4_sitemanagement_PUT"
                        },
                        "type": "object"
                    },
                    "siteUUID": {
                        "type": "string"
                    }
                }
            },
            "SiteAppDataStatusWrapper_v4_sitemanagement_GET": {
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "SiteAppDataStatusWrapper_v4_sitemanagement_POST": {
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "SiteAppDataStatusWrapper_v4_sitemanagement_PUT": {
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "SiteAppDataStatus_v4_sitemanagement_GET": {
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "SiteAppDataStatus_v4_sitemanagement_POST": {
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "SiteAppDataStatus_v4_sitemanagement_PUT": {
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "SiteAppData_v4_sitemanagement_GET": {
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/SiteAppDataSpecWrapper_v4_sitemanagement_GET"
                    },
                    "status": {
                        "$ref": "#/components/schemas/SiteAppDataStatusWrapper_v4_sitemanagement_GET"
                    }
                },
                "required": [
                    "spec",
                    "status"
                ]
            },
            "SiteAppData_v4_sitemanagement_GETLIST": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/SiteAppData_v4_sitemanagement_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "SiteAppData_v4_sitemanagement_POST": {
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/SiteAppDataSpecWrapper_v4_sitemanagement_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "SiteAppData_v4_sitemanagement_PUT": {
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/SiteAppDataSpecWrapper_v4_sitemanagement_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "SiteConfigData_v4_sitemanagement_GET": {
                "oneOf": [
                    {
                        "properties": {
                            "aci": {
                                "$ref": "#/components/schemas/ACIConfig_v4_sitemanagement_GET"
                            }
                        }
                    },
                    {
                        "properties": {
                            "CloudACI": {
                                "$ref": "#/components/schemas/CloudACIConfig_v4_sitemanagement_GET"
                            }
                        }
                    },
                    {
                        "properties": {
                            "dcnm": {
                                "$ref": "#/components/schemas/DCNMConfig_v4_sitemanagement_GET"
                            }
                        }
                    },
                    {
                        "properties": {
                            "ndfc": {
                                "$ref": "#/components/schemas/NDFCConfig_v4_sitemanagement_GET"
                            }
                        }
                    }
                ]
            },
            "SiteConfigData_v4_sitemanagement_POST": {
                "oneOf": [
                    {
                        "properties": {
                            "aci": {
                                "$ref": "#/components/schemas/ACIConfig_v4_sitemanagement_POST"
                            }
                        }
                    },
                    {
                        "properties": {
                            "CloudACI": {
                                "$ref": "#/components/schemas/CloudACIConfig_v4_sitemanagement_POST"
                            }
                        }
                    },
                    {
                        "properties": {
                            "dcnm": {
                                "$ref": "#/components/schemas/DCNMConfig_v4_sitemanagement_POST"
                            }
                        }
                    },
                    {
                        "properties": {
                            "ndfc": {
                                "$ref": "#/components/schemas/NDFCConfig_v4_sitemanagement_POST"
                            }
                        }
                    }
                ]
            },
            "SiteConfigData_v4_sitemanagement_PUT": {
                "oneOf": [
                    {
                        "properties": {
                            "dcnm": {
                                "$ref": "#/components/schemas/DCNMConfig_v4_sitemanagement_PUT"
                            }
                        }
                    },
                    {
                        "properties": {
                            "ndfc": {
                                "$ref": "#/components/schemas/NDFCConfig_v4_sitemanagement_PUT"
                            }
                        }
                    },
                    {
                        "properties": {
                            "aci": {
                                "$ref": "#/components/schemas/ACIConfig_v4_sitemanagement_PUT"
                            }
                        }
                    },
                    {
                        "properties": {
                            "CloudACI": {
                                "$ref": "#/components/schemas/CloudACIConfig_v4_sitemanagement_PUT"
                            }
                        }
                    }
                ]
            },
            "SiteController_v4_sitemanagement_GET": {
                "properties": {
                    "dataIP": {
                        "description": "ACI/cloudACI/DCNM/NDFC controller node Data IP",
                        "type": "string"
                    },
                    "dataURL": {
                        "description": "ACI/cloudACI/DCNM/NDFC controller node Data URL",
                        "type": "string"
                    },
                    "fabricDomain": {
                        "description": "ACI/cloudACI/DCNM/NDFC fabric domain",
                        "type": "string"
                    },
                    "managementIP": {
                        "description": "ACI/cloudACI/DCNM/NDFC controller node Management IP",
                        "type": "string"
                    },
                    "managementURL": {
                        "description": "ACI/cloudACI/DCNM/NDFC controller node management URL",
                        "type": "string"
                    },
                    "sn": {
                        "description": "ACI/cloudACI/DCNM/NDFC controller node Serial number",
                        "type": "string"
                    },
                    "version": {
                        "description": "ACI/cloudACI/DCNM/NDFC controller node version",
                        "type": "string"
                    }
                }
            },
            "SiteController_v4_sitemanagement_POST": {
                "properties": {
                    "dataIP": {
                        "description": "ACI/cloudACI/DCNM/NDFC controller node Data IP",
                        "type": "string"
                    },
                    "dataURL": {
                        "description": "ACI/cloudACI/DCNM/NDFC controller node Data URL",
                        "type": "string"
                    },
                    "fabricDomain": {
                        "description": "ACI/cloudACI/DCNM/NDFC fabric domain",
                        "type": "string"
                    },
                    "managementIP": {
                        "description": "ACI/cloudACI/DCNM/NDFC controller node Management IP",
                        "type": "string"
                    },
                    "managementURL": {
                        "description": "ACI/cloudACI/DCNM/NDFC controller node management URL",
                        "type": "string"
                    },
                    "sn": {
                        "description": "ACI/cloudACI/DCNM/NDFC controller node Serial number",
                        "type": "string"
                    },
                    "version": {
                        "description": "ACI/cloudACI/DCNM/NDFC controller node version",
                        "type": "string"
                    }
                }
            },
            "SiteController_v4_sitemanagement_PUT": {
                "properties": {
                    "dataIP": {
                        "description": "ACI/cloudACI/DCNM/NDFC controller node Data IP",
                        "type": "string"
                    },
                    "dataURL": {
                        "description": "ACI/cloudACI/DCNM/NDFC controller node Data URL",
                        "type": "string"
                    },
                    "fabricDomain": {
                        "description": "ACI/cloudACI/DCNM/NDFC fabric domain",
                        "type": "string"
                    },
                    "managementIP": {
                        "description": "ACI/cloudACI/DCNM/NDFC controller node Management IP",
                        "type": "string"
                    },
                    "managementURL": {
                        "description": "ACI/cloudACI/DCNM/NDFC controller node management URL",
                        "type": "string"
                    },
                    "sn": {
                        "description": "ACI/cloudACI/DCNM/NDFC controller node Serial number",
                        "type": "string"
                    },
                    "version": {
                        "description": "ACI/cloudACI/DCNM/NDFC controller node version",
                        "type": "string"
                    }
                }
            },
            "SiteFederationInfo_v4_sitemanagement_GET": {
                "properties": {
                    "federationMemberUUID": {
                        "description": "Federation member UUID",
                        "type": "string"
                    },
                    "local": {
                        "description": "site on-boarded locally, set to true",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "Federation member cluster name",
                        "type": "string"
                    },
                    "siteFingerprint": {
                        "description": "Federation member site fingerprint - not set currently",
                        "type": "string"
                    },
                    "siteUUID": {
                        "description": "UUID of the site",
                        "type": "string"
                    }
                }
            },
            "SiteFederationInfo_v4_sitemanagement_POST": {
                "properties": {
                    "federationMemberUUID": {
                        "description": "Federation member UUID",
                        "type": "string"
                    },
                    "local": {
                        "description": "site on-boarded locally, set to true",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "Federation member cluster name",
                        "type": "string"
                    },
                    "siteFingerprint": {
                        "description": "Federation member site fingerprint - not set currently",
                        "type": "string"
                    },
                    "siteUUID": {
                        "description": "UUID of the site",
                        "type": "string"
                    }
                }
            },
            "SiteFederationInfo_v4_sitemanagement_PUT": {
                "properties": {
                    "federationMemberUUID": {
                        "description": "Federation member UUID",
                        "type": "string"
                    },
                    "local": {
                        "description": "site on-boarded locally, set to true",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "Federation member cluster name",
                        "type": "string"
                    },
                    "siteFingerprint": {
                        "description": "Federation member site fingerprint - not set currently",
                        "type": "string"
                    },
                    "siteUUID": {
                        "description": "UUID of the site",
                        "type": "string"
                    }
                }
            },
            "SiteGroupSelectorSites_v4_sitemanagement_GET": {
                "properties": {
                    "selector": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/GroupSelector_v4_sitemanagement_GET"
                        },
                        "type": "object"
                    },
                    "selector-site-type": {
                        "enum": [
                            "Any",
                            "All"
                        ],
                        "type": "string"
                    }
                }
            },
            "SiteGroupSelectorSites_v4_sitemanagement_POST": {
                "properties": {
                    "selector": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/GroupSelector_v4_sitemanagement_POST"
                        },
                        "type": "object"
                    },
                    "selector-site-type": {
                        "enum": [
                            "Any",
                            "All"
                        ],
                        "type": "string"
                    }
                }
            },
            "SiteGroupSelectorSites_v4_sitemanagement_PUT": {
                "properties": {
                    "selector": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/GroupSelector_v4_sitemanagement_PUT"
                        },
                        "type": "object"
                    },
                    "selector-site-type": {
                        "enum": [
                            "Any",
                            "All"
                        ],
                        "type": "string"
                    }
                }
            },
            "SiteGroupSpecWrapper_v4_sitemanagement_GET": {
                "properties": {
                    "defaultGroup": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "restrictions": {
                        "$ref": "#/components/schemas/GroupRestrictions_v4_sitemanagement_GET"
                    },
                    "selector-sites": {
                        "$ref": "#/components/schemas/SiteGroupSelectorSites_v4_sitemanagement_GET"
                    }
                }
            },
            "SiteGroupSpecWrapper_v4_sitemanagement_POST": {
                "properties": {
                    "defaultGroup": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "restrictions": {
                        "$ref": "#/components/schemas/GroupRestrictions_v4_sitemanagement_POST"
                    },
                    "selector-sites": {
                        "$ref": "#/components/schemas/SiteGroupSelectorSites_v4_sitemanagement_POST"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "SiteGroupSpecWrapper_v4_sitemanagement_PUT": {
                "properties": {
                    "defaultGroup": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "restrictions": {
                        "$ref": "#/components/schemas/GroupRestrictions_v4_sitemanagement_PUT"
                    },
                    "selector-sites": {
                        "$ref": "#/components/schemas/SiteGroupSelectorSites_v4_sitemanagement_PUT"
                    }
                }
            },
            "SiteGroupSpec_v4_sitemanagement_GET": {
                "properties": {
                    "defaultGroup": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "restrictions": {
                        "$ref": "#/components/schemas/GroupRestrictions_v4_sitemanagement_GET"
                    },
                    "selector-sites": {
                        "$ref": "#/components/schemas/SiteGroupSelectorSites_v4_sitemanagement_GET"
                    }
                }
            },
            "SiteGroupSpec_v4_sitemanagement_POST": {
                "properties": {
                    "defaultGroup": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "restrictions": {
                        "$ref": "#/components/schemas/GroupRestrictions_v4_sitemanagement_POST"
                    },
                    "selector-sites": {
                        "$ref": "#/components/schemas/SiteGroupSelectorSites_v4_sitemanagement_POST"
                    }
                }
            },
            "SiteGroupSpec_v4_sitemanagement_PUT": {
                "properties": {
                    "defaultGroup": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "restrictions": {
                        "$ref": "#/components/schemas/GroupRestrictions_v4_sitemanagement_PUT"
                    },
                    "selector-sites": {
                        "$ref": "#/components/schemas/SiteGroupSelectorSites_v4_sitemanagement_PUT"
                    }
                }
            },
            "SiteGroupStatusWrapper_v4_sitemanagement_GET": {
                "properties": {
                    "apps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "members": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                }
            },
            "SiteGroupStatusWrapper_v4_sitemanagement_POST": {
                "properties": {
                    "apps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "members": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                }
            },
            "SiteGroupStatusWrapper_v4_sitemanagement_PUT": {
                "properties": {
                    "apps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "members": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                }
            },
            "SiteGroupStatus_v4_sitemanagement_GET": {
                "properties": {
                    "apps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "members": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                }
            },
            "SiteGroupStatus_v4_sitemanagement_POST": {
                "properties": {
                    "apps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "members": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                }
            },
            "SiteGroupStatus_v4_sitemanagement_PUT": {
                "properties": {
                    "apps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "members": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                }
            },
            "SiteGroup_v4_sitemanagement_GET": {
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/SiteGroupSpecWrapper_v4_sitemanagement_GET"
                    },
                    "status": {
                        "$ref": "#/components/schemas/SiteGroupStatusWrapper_v4_sitemanagement_GET"
                    }
                },
                "required": [
                    "spec",
                    "status"
                ]
            },
            "SiteGroup_v4_sitemanagement_GETLIST": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/SiteGroup_v4_sitemanagement_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "SiteGroup_v4_sitemanagement_POST": {
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/SiteGroupSpecWrapper_v4_sitemanagement_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "SiteGroup_v4_sitemanagement_PUT": {
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/SiteGroupSpecWrapper_v4_sitemanagement_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "SiteReachabiltyStatus_v4_sitemanagement_GET": {
                "properties": {
                    "description": {
                        "description": "site reachability description",
                        "type": "string"
                    },
                    "nodeReachability": {
                        "description": "node reachability information",
                        "items": {
                            "$ref": "#/components/schemas/NodeReachabilityStatus_v4_sitemanagement_GET"
                        },
                        "type": "array"
                    },
                    "state": {
                        "description": "site reachability status",
                        "type": "string"
                    }
                }
            },
            "SiteReachabiltyStatus_v4_sitemanagement_POST": {
                "properties": {
                    "description": {
                        "description": "site reachability description",
                        "type": "string"
                    },
                    "nodeReachability": {
                        "description": "node reachability information",
                        "items": {
                            "$ref": "#/components/schemas/NodeReachabilityStatus_v4_sitemanagement_POST"
                        },
                        "type": "array"
                    },
                    "state": {
                        "description": "site reachability status",
                        "type": "string"
                    }
                }
            },
            "SiteReachabiltyStatus_v4_sitemanagement_PUT": {
                "properties": {
                    "description": {
                        "description": "site reachability description",
                        "type": "string"
                    },
                    "nodeReachability": {
                        "description": "node reachability information",
                        "items": {
                            "$ref": "#/components/schemas/NodeReachabilityStatus_v4_sitemanagement_PUT"
                        },
                        "type": "array"
                    },
                    "state": {
                        "description": "site reachability status",
                        "type": "string"
                    }
                }
            },
            "SiteSpecWrapper_v4_sitemanagement_GET": {
                "properties": {
                    "annotation": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "annotation for the site",
                        "type": "object"
                    },
                    "host": {
                        "description": "IP/Hostname of used to on-board the site",
                        "type": "string"
                    },
                    "latitude": {
                        "description": "geo location for the site being added",
                        "type": "string"
                    },
                    "loginDomain": {
                        "description": "login domain of the controller",
                        "type": "string"
                    },
                    "longitude": {
                        "description": "geo location for the site being added",
                        "type": "string"
                    },
                    "name": {
                        "description": "name of the site",
                        "type": "string"
                    },
                    "password": {
                        "description": "login password of the controller",
                        "type": "string"
                    },
                    "secureVerify": {
                        "description": "enable certificate verification for the site",
                        "type": "boolean"
                    },
                    "securityDomains": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "siteConfig": {
                        "$ref": "#/components/schemas/SiteConfigData_v4_sitemanagement_GET"
                    },
                    "siteType": {
                        "description": "site type - ACI/cloudACI/DCNM/NDFC",
                        "type": "string"
                    },
                    "useProxy": {
                        "description": "need proxy to reach the controller",
                        "type": "boolean"
                    },
                    "userName": {
                        "description": "login username for the controller",
                        "type": "string"
                    }
                }
            },
            "SiteSpecWrapper_v4_sitemanagement_POST": {
                "properties": {
                    "annotation": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "annotation for the site",
                        "type": "object"
                    },
                    "host": {
                        "description": "IP/Hostname of used to on-board the site",
                        "type": "string"
                    },
                    "latitude": {
                        "description": "geo location for the site being added",
                        "type": "string"
                    },
                    "loginDomain": {
                        "description": "login domain of the controller",
                        "type": "string"
                    },
                    "longitude": {
                        "description": "geo location for the site being added",
                        "type": "string"
                    },
                    "name": {
                        "description": "name of the site",
                        "type": "string"
                    },
                    "password": {
                        "description": "login password of the controller",
                        "type": "string"
                    },
                    "secureVerify": {
                        "description": "enable certificate verification for the site",
                        "type": "boolean"
                    },
                    "securityDomains": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "siteConfig": {
                        "$ref": "#/components/schemas/SiteConfigData_v4_sitemanagement_POST"
                    },
                    "siteType": {
                        "description": "site type - ACI/cloudACI/DCNM/NDFC",
                        "type": "string"
                    },
                    "useProxy": {
                        "description": "need proxy to reach the controller",
                        "type": "boolean"
                    },
                    "userName": {
                        "description": "login username for the controller",
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "SiteSpecWrapper_v4_sitemanagement_PUT": {
                "properties": {
                    "annotation": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "annotation for the site",
                        "type": "object"
                    },
                    "host": {
                        "description": "IP/Hostname of used to on-board the site",
                        "type": "string"
                    },
                    "latitude": {
                        "description": "geo location for the site being added",
                        "type": "string"
                    },
                    "loginDomain": {
                        "description": "login domain of the controller",
                        "type": "string"
                    },
                    "longitude": {
                        "description": "geo location for the site being added",
                        "type": "string"
                    },
                    "name": {
                        "description": "name of the site",
                        "type": "string"
                    },
                    "password": {
                        "description": "login password of the controller",
                        "type": "string"
                    },
                    "secureVerify": {
                        "description": "enable certificate verification for the site",
                        "type": "boolean"
                    },
                    "securityDomains": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "siteConfig": {
                        "$ref": "#/components/schemas/SiteConfigData_v4_sitemanagement_PUT"
                    },
                    "siteType": {
                        "description": "site type - ACI/cloudACI/DCNM/NDFC",
                        "type": "string"
                    },
                    "useProxy": {
                        "description": "need proxy to reach the controller",
                        "type": "boolean"
                    },
                    "userName": {
                        "description": "login username for the controller",
                        "type": "string"
                    }
                }
            },
            "SiteSpec_v4_sitemanagement_GET": {
                "properties": {
                    "annotation": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "annotation for the site",
                        "type": "object"
                    },
                    "host": {
                        "description": "IP/Hostname of used to on-board the site",
                        "type": "string"
                    },
                    "latitude": {
                        "description": "geo location for the site being added",
                        "type": "string"
                    },
                    "loginDomain": {
                        "description": "login domain of the controller",
                        "type": "string"
                    },
                    "longitude": {
                        "description": "geo location for the site being added",
                        "type": "string"
                    },
                    "name": {
                        "description": "name of the site",
                        "type": "string"
                    },
                    "password": {
                        "description": "login password of the controller",
                        "type": "string"
                    },
                    "secureVerify": {
                        "description": "enable certificate verification for the site",
                        "type": "boolean"
                    },
                    "securityDomains": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "siteConfig": {
                        "$ref": "#/components/schemas/SiteConfigData_v4_sitemanagement_GET"
                    },
                    "siteType": {
                        "description": "site type - ACI/cloudACI/DCNM/NDFC",
                        "type": "string"
                    },
                    "useProxy": {
                        "description": "need proxy to reach the controller",
                        "type": "boolean"
                    },
                    "userName": {
                        "description": "login username for the controller",
                        "type": "string"
                    }
                }
            },
            "SiteSpec_v4_sitemanagement_POST": {
                "properties": {
                    "annotation": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "annotation for the site",
                        "type": "object"
                    },
                    "host": {
                        "description": "IP/Hostname of used to on-board the site",
                        "type": "string"
                    },
                    "latitude": {
                        "description": "geo location for the site being added",
                        "type": "string"
                    },
                    "loginDomain": {
                        "description": "login domain of the controller",
                        "type": "string"
                    },
                    "longitude": {
                        "description": "geo location for the site being added",
                        "type": "string"
                    },
                    "name": {
                        "description": "name of the site",
                        "type": "string"
                    },
                    "password": {
                        "description": "login password of the controller",
                        "type": "string"
                    },
                    "secureVerify": {
                        "description": "enable certificate verification for the site",
                        "type": "boolean"
                    },
                    "securityDomains": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "siteConfig": {
                        "$ref": "#/components/schemas/SiteConfigData_v4_sitemanagement_POST"
                    },
                    "siteType": {
                        "description": "site type - ACI/cloudACI/DCNM/NDFC",
                        "type": "string"
                    },
                    "useProxy": {
                        "description": "need proxy to reach the controller",
                        "type": "boolean"
                    },
                    "userName": {
                        "description": "login username for the controller",
                        "type": "string"
                    }
                }
            },
            "SiteSpec_v4_sitemanagement_PUT": {
                "properties": {
                    "annotation": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "annotation for the site",
                        "type": "object"
                    },
                    "host": {
                        "description": "IP/Hostname of used to on-board the site",
                        "type": "string"
                    },
                    "latitude": {
                        "description": "geo location for the site being added",
                        "type": "string"
                    },
                    "loginDomain": {
                        "description": "login domain of the controller",
                        "type": "string"
                    },
                    "longitude": {
                        "description": "geo location for the site being added",
                        "type": "string"
                    },
                    "name": {
                        "description": "name of the site",
                        "type": "string"
                    },
                    "password": {
                        "description": "login password of the controller",
                        "type": "string"
                    },
                    "secureVerify": {
                        "description": "enable certificate verification for the site",
                        "type": "boolean"
                    },
                    "securityDomains": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "siteConfig": {
                        "$ref": "#/components/schemas/SiteConfigData_v4_sitemanagement_PUT"
                    },
                    "siteType": {
                        "description": "site type - ACI/cloudACI/DCNM/NDFC",
                        "type": "string"
                    },
                    "useProxy": {
                        "description": "need proxy to reach the controller",
                        "type": "boolean"
                    },
                    "userName": {
                        "description": "login username for the controller",
                        "type": "string"
                    }
                }
            },
            "SiteStatusData_v4_sitemanagement_GET": {
                "oneOf": [
                    {
                        "properties": {
                            "aci": {
                                "$ref": "#/components/schemas/ACIStatus_v4_sitemanagement_GET"
                            }
                        }
                    },
                    {
                        "properties": {
                            "CloudACI": {
                                "$ref": "#/components/schemas/CloudACIStatus_v4_sitemanagement_GET"
                            }
                        }
                    },
                    {
                        "properties": {
                            "dcnm": {
                                "$ref": "#/components/schemas/DCNMStatus_v4_sitemanagement_GET"
                            }
                        }
                    },
                    {
                        "properties": {
                            "ndfc": {
                                "$ref": "#/components/schemas/NDFCStatus_v4_sitemanagement_GET"
                            }
                        }
                    }
                ]
            },
            "SiteStatusData_v4_sitemanagement_POST": {
                "oneOf": [
                    {
                        "properties": {
                            "dcnm": {
                                "$ref": "#/components/schemas/DCNMStatus_v4_sitemanagement_POST"
                            }
                        }
                    },
                    {
                        "properties": {
                            "ndfc": {
                                "$ref": "#/components/schemas/NDFCStatus_v4_sitemanagement_POST"
                            }
                        }
                    },
                    {
                        "properties": {
                            "aci": {
                                "$ref": "#/components/schemas/ACIStatus_v4_sitemanagement_POST"
                            }
                        }
                    },
                    {
                        "properties": {
                            "CloudACI": {
                                "$ref": "#/components/schemas/CloudACIStatus_v4_sitemanagement_POST"
                            }
                        }
                    }
                ]
            },
            "SiteStatusData_v4_sitemanagement_PUT": {
                "oneOf": [
                    {
                        "properties": {
                            "aci": {
                                "$ref": "#/components/schemas/ACIStatus_v4_sitemanagement_PUT"
                            }
                        }
                    },
                    {
                        "properties": {
                            "CloudACI": {
                                "$ref": "#/components/schemas/CloudACIStatus_v4_sitemanagement_PUT"
                            }
                        }
                    },
                    {
                        "properties": {
                            "dcnm": {
                                "$ref": "#/components/schemas/DCNMStatus_v4_sitemanagement_PUT"
                            }
                        }
                    },
                    {
                        "properties": {
                            "ndfc": {
                                "$ref": "#/components/schemas/NDFCStatus_v4_sitemanagement_PUT"
                            }
                        }
                    }
                ]
            },
            "SiteStatusWrapper_v4_sitemanagement_GET": {
                "properties": {
                    "apps": {
                        "description": "apps using the site",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "controllers": {
                        "description": "controller nodes information",
                        "items": {
                            "$ref": "#/components/schemas/SiteController_v4_sitemanagement_GET"
                        },
                        "type": "array"
                    },
                    "federationInfo": {
                        "$ref": "#/components/schemas/SiteFederationInfo_v4_sitemanagement_GET"
                    },
                    "launchURL": {
                        "description": "URL need to be used for SSO for NDFC",
                        "type": "string"
                    },
                    "notifyReason": {
                        "description": "last site status notification sent to the apps",
                        "type": "string"
                    },
                    "pollingDetectionDone": {
                        "description": "polling auto detectetion status",
                        "type": "boolean"
                    },
                    "pollingType": {
                        "description": "polling auto detected type",
                        "type": "string"
                    },
                    "siteData": {
                        "$ref": "#/components/schemas/SiteStatusData_v4_sitemanagement_GET"
                    },
                    "siteHealth": {
                        "description": "health of the fabric",
                        "type": "string"
                    },
                    "siteReachabilty": {
                        "$ref": "#/components/schemas/SiteReachabiltyStatus_v4_sitemanagement_GET",
                        "description": "Reachability of the site"
                    },
                    "switches": {
                        "description": "switches connected to the fabric",
                        "items": {
                            "$ref": "#/components/schemas/Switch_v4_sitemanagement_GET"
                        },
                        "type": "array"
                    }
                }
            },
            "SiteStatusWrapper_v4_sitemanagement_POST": {
                "properties": {
                    "apps": {
                        "description": "apps using the site",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "controllers": {
                        "description": "controller nodes information",
                        "items": {
                            "$ref": "#/components/schemas/SiteController_v4_sitemanagement_POST"
                        },
                        "type": "array"
                    },
                    "federationInfo": {
                        "$ref": "#/components/schemas/SiteFederationInfo_v4_sitemanagement_POST"
                    },
                    "launchURL": {
                        "description": "URL need to be used for SSO for NDFC",
                        "type": "string"
                    },
                    "notifyReason": {
                        "description": "last site status notification sent to the apps",
                        "type": "string"
                    },
                    "pollingDetectionDone": {
                        "description": "polling auto detectetion status",
                        "type": "boolean"
                    },
                    "pollingType": {
                        "description": "polling auto detected type",
                        "type": "string"
                    },
                    "siteData": {
                        "$ref": "#/components/schemas/SiteStatusData_v4_sitemanagement_POST"
                    },
                    "siteHealth": {
                        "description": "health of the fabric",
                        "type": "string"
                    },
                    "siteReachabilty": {
                        "$ref": "#/components/schemas/SiteReachabiltyStatus_v4_sitemanagement_POST",
                        "description": "Reachability of the site"
                    },
                    "switches": {
                        "description": "switches connected to the fabric",
                        "items": {
                            "$ref": "#/components/schemas/Switch_v4_sitemanagement_POST"
                        },
                        "type": "array"
                    }
                }
            },
            "SiteStatusWrapper_v4_sitemanagement_PUT": {
                "properties": {
                    "apps": {
                        "description": "apps using the site",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "controllers": {
                        "description": "controller nodes information",
                        "items": {
                            "$ref": "#/components/schemas/SiteController_v4_sitemanagement_PUT"
                        },
                        "type": "array"
                    },
                    "federationInfo": {
                        "$ref": "#/components/schemas/SiteFederationInfo_v4_sitemanagement_PUT"
                    },
                    "launchURL": {
                        "description": "URL need to be used for SSO for NDFC",
                        "type": "string"
                    },
                    "notifyReason": {
                        "description": "last site status notification sent to the apps",
                        "type": "string"
                    },
                    "pollingDetectionDone": {
                        "description": "polling auto detectetion status",
                        "type": "boolean"
                    },
                    "pollingType": {
                        "description": "polling auto detected type",
                        "type": "string"
                    },
                    "siteData": {
                        "$ref": "#/components/schemas/SiteStatusData_v4_sitemanagement_PUT"
                    },
                    "siteHealth": {
                        "description": "health of the fabric",
                        "type": "string"
                    },
                    "siteReachabilty": {
                        "$ref": "#/components/schemas/SiteReachabiltyStatus_v4_sitemanagement_PUT",
                        "description": "Reachability of the site"
                    },
                    "switches": {
                        "description": "switches connected to the fabric",
                        "items": {
                            "$ref": "#/components/schemas/Switch_v4_sitemanagement_PUT"
                        },
                        "type": "array"
                    }
                }
            },
            "SiteStatus_v4_sitemanagement_GET": {
                "properties": {
                    "apps": {
                        "description": "apps using the site",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "controllers": {
                        "description": "controller nodes information",
                        "items": {
                            "$ref": "#/components/schemas/SiteController_v4_sitemanagement_GET"
                        },
                        "type": "array"
                    },
                    "federationInfo": {
                        "$ref": "#/components/schemas/SiteFederationInfo_v4_sitemanagement_GET"
                    },
                    "launchURL": {
                        "description": "URL need to be used for SSO for NDFC",
                        "type": "string"
                    },
                    "notifyReason": {
                        "description": "last site status notification sent to the apps",
                        "type": "string"
                    },
                    "pollingDetectionDone": {
                        "description": "polling auto detectetion status",
                        "type": "boolean"
                    },
                    "pollingType": {
                        "description": "polling auto detected type",
                        "type": "string"
                    },
                    "siteData": {
                        "$ref": "#/components/schemas/SiteStatusData_v4_sitemanagement_GET"
                    },
                    "siteHealth": {
                        "description": "health of the fabric",
                        "type": "string"
                    },
                    "siteReachabilty": {
                        "$ref": "#/components/schemas/SiteReachabiltyStatus_v4_sitemanagement_GET",
                        "description": "Reachability of the site"
                    },
                    "switches": {
                        "description": "switches connected to the fabric",
                        "items": {
                            "$ref": "#/components/schemas/Switch_v4_sitemanagement_GET"
                        },
                        "type": "array"
                    }
                }
            },
            "SiteStatus_v4_sitemanagement_POST": {
                "properties": {
                    "apps": {
                        "description": "apps using the site",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "controllers": {
                        "description": "controller nodes information",
                        "items": {
                            "$ref": "#/components/schemas/SiteController_v4_sitemanagement_POST"
                        },
                        "type": "array"
                    },
                    "federationInfo": {
                        "$ref": "#/components/schemas/SiteFederationInfo_v4_sitemanagement_POST"
                    },
                    "launchURL": {
                        "description": "URL need to be used for SSO for NDFC",
                        "type": "string"
                    },
                    "notifyReason": {
                        "description": "last site status notification sent to the apps",
                        "type": "string"
                    },
                    "pollingDetectionDone": {
                        "description": "polling auto detectetion status",
                        "type": "boolean"
                    },
                    "pollingType": {
                        "description": "polling auto detected type",
                        "type": "string"
                    },
                    "siteData": {
                        "$ref": "#/components/schemas/SiteStatusData_v4_sitemanagement_POST"
                    },
                    "siteHealth": {
                        "description": "health of the fabric",
                        "type": "string"
                    },
                    "siteReachabilty": {
                        "$ref": "#/components/schemas/SiteReachabiltyStatus_v4_sitemanagement_POST",
                        "description": "Reachability of the site"
                    },
                    "switches": {
                        "description": "switches connected to the fabric",
                        "items": {
                            "$ref": "#/components/schemas/Switch_v4_sitemanagement_POST"
                        },
                        "type": "array"
                    }
                }
            },
            "SiteStatus_v4_sitemanagement_PUT": {
                "properties": {
                    "apps": {
                        "description": "apps using the site",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "controllers": {
                        "description": "controller nodes information",
                        "items": {
                            "$ref": "#/components/schemas/SiteController_v4_sitemanagement_PUT"
                        },
                        "type": "array"
                    },
                    "federationInfo": {
                        "$ref": "#/components/schemas/SiteFederationInfo_v4_sitemanagement_PUT"
                    },
                    "launchURL": {
                        "description": "URL need to be used for SSO for NDFC",
                        "type": "string"
                    },
                    "notifyReason": {
                        "description": "last site status notification sent to the apps",
                        "type": "string"
                    },
                    "pollingDetectionDone": {
                        "description": "polling auto detectetion status",
                        "type": "boolean"
                    },
                    "pollingType": {
                        "description": "polling auto detected type",
                        "type": "string"
                    },
                    "siteData": {
                        "$ref": "#/components/schemas/SiteStatusData_v4_sitemanagement_PUT"
                    },
                    "siteHealth": {
                        "description": "health of the fabric",
                        "type": "string"
                    },
                    "siteReachabilty": {
                        "$ref": "#/components/schemas/SiteReachabiltyStatus_v4_sitemanagement_PUT",
                        "description": "Reachability of the site"
                    },
                    "switches": {
                        "description": "switches connected to the fabric",
                        "items": {
                            "$ref": "#/components/schemas/Switch_v4_sitemanagement_PUT"
                        },
                        "type": "array"
                    }
                }
            },
            "Site_v4_sitemanagement_GET": {
                "description": "Site Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/SiteSpecWrapper_v4_sitemanagement_GET"
                    },
                    "status": {
                        "$ref": "#/components/schemas/SiteStatusWrapper_v4_sitemanagement_GET"
                    }
                },
                "required": [
                    "spec",
                    "status"
                ]
            },
            "Site_v4_sitemanagement_GETLIST": {
                "description": "Site Resource",
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Site_v4_sitemanagement_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "Site_v4_sitemanagement_POST": {
                "description": "Site Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/SiteSpecWrapper_v4_sitemanagement_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "Site_v4_sitemanagement_PUT": {
                "description": "Site Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/SiteSpecWrapper_v4_sitemanagement_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "Switch_v4_sitemanagement_GET": {
                "properties": {
                    "inbandIP": {
                        "description": "switch inband IP",
                        "type": "string"
                    },
                    "model": {
                        "description": "switch model",
                        "type": "string"
                    },
                    "outofbandIP": {
                        "description": "switch outofband IP",
                        "type": "string"
                    },
                    "sn": {
                        "description": "switch serial number",
                        "type": "string"
                    },
                    "type": {
                        "description": "switch type",
                        "type": "string"
                    },
                    "version": {
                        "description": "switch image version",
                        "type": "string"
                    }
                }
            },
            "Switch_v4_sitemanagement_POST": {
                "properties": {
                    "inbandIP": {
                        "description": "switch inband IP",
                        "type": "string"
                    },
                    "model": {
                        "description": "switch model",
                        "type": "string"
                    },
                    "outofbandIP": {
                        "description": "switch outofband IP",
                        "type": "string"
                    },
                    "sn": {
                        "description": "switch serial number",
                        "type": "string"
                    },
                    "type": {
                        "description": "switch type",
                        "type": "string"
                    },
                    "version": {
                        "description": "switch image version",
                        "type": "string"
                    }
                }
            },
            "Switch_v4_sitemanagement_PUT": {
                "properties": {
                    "inbandIP": {
                        "description": "switch inband IP",
                        "type": "string"
                    },
                    "model": {
                        "description": "switch model",
                        "type": "string"
                    },
                    "outofbandIP": {
                        "description": "switch outofband IP",
                        "type": "string"
                    },
                    "sn": {
                        "description": "switch serial number",
                        "type": "string"
                    },
                    "type": {
                        "description": "switch type",
                        "type": "string"
                    },
                    "version": {
                        "description": "switch image version",
                        "type": "string"
                    }
                }
            },
            "SyslogSyncSpecWrapper_v1_platform_GET": {
                "properties": {
                    "address": {
                        "description": "Server hostname or ipaddress",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "Syslog server enabled flag",
                        "type": "boolean"
                    },
                    "forwardingFacility": {
                        "description": "Syslog server forwarding facility",
                        "enum": [
                            "Local0"
                        ],
                        "type": "string"
                    },
                    "port": {
                        "description": "Syslog server port",
                        "type": "integer"
                    },
                    "severity": {
                        "description": "Syslog server severity level",
                        "enum": [
                            "Alert",
                            "Critical"
                        ],
                        "type": "string"
                    },
                    "transport": {
                        "description": "Syslog server transport protocol",
                        "enum": [
                            "TCP",
                            "UDP"
                        ],
                        "type": "string"
                    }
                }
            },
            "SyslogSyncSpecWrapper_v1_platform_POST": {
                "properties": {
                    "address": {
                        "description": "Server hostname or ipaddress",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "Syslog server enabled flag",
                        "type": "boolean"
                    },
                    "forwardingFacility": {
                        "description": "Syslog server forwarding facility",
                        "enum": [
                            "Local0"
                        ],
                        "type": "string"
                    },
                    "port": {
                        "description": "Syslog server port",
                        "type": "integer"
                    },
                    "severity": {
                        "description": "Syslog server severity level",
                        "enum": [
                            "Alert",
                            "Critical"
                        ],
                        "type": "string"
                    },
                    "transport": {
                        "description": "Syslog server transport protocol",
                        "enum": [
                            "TCP",
                            "UDP"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "address"
                ]
            },
            "SyslogSyncSpecWrapper_v1_platform_PUT": {
                "properties": {
                    "address": {
                        "description": "Server hostname or ipaddress",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "Syslog server enabled flag",
                        "type": "boolean"
                    },
                    "forwardingFacility": {
                        "description": "Syslog server forwarding facility",
                        "enum": [
                            "Local0"
                        ],
                        "type": "string"
                    },
                    "port": {
                        "description": "Syslog server port",
                        "type": "integer"
                    },
                    "severity": {
                        "description": "Syslog server severity level",
                        "enum": [
                            "Alert",
                            "Critical"
                        ],
                        "type": "string"
                    },
                    "transport": {
                        "description": "Syslog server transport protocol",
                        "enum": [
                            "TCP",
                            "UDP"
                        ],
                        "type": "string"
                    }
                }
            },
            "SyslogSyncSpec_v1_platform_GET": {
                "description": "Syslog server configuration",
                "properties": {
                    "address": {
                        "description": "Server hostname or ipaddress",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "Syslog server enabled flag",
                        "type": "boolean"
                    },
                    "forwardingFacility": {
                        "description": "Syslog server forwarding facility",
                        "enum": [
                            "Local0"
                        ],
                        "type": "string"
                    },
                    "port": {
                        "description": "Syslog server port",
                        "type": "integer"
                    },
                    "severity": {
                        "description": "Syslog server severity level",
                        "enum": [
                            "Alert",
                            "Critical"
                        ],
                        "type": "string"
                    },
                    "transport": {
                        "description": "Syslog server transport protocol",
                        "enum": [
                            "TCP",
                            "UDP"
                        ],
                        "type": "string"
                    }
                }
            },
            "SyslogSyncSpec_v1_platform_POST": {
                "description": "Syslog server configuration",
                "properties": {
                    "address": {
                        "description": "Server hostname or ipaddress",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "Syslog server enabled flag",
                        "type": "boolean"
                    },
                    "forwardingFacility": {
                        "description": "Syslog server forwarding facility",
                        "enum": [
                            "Local0"
                        ],
                        "type": "string"
                    },
                    "port": {
                        "description": "Syslog server port",
                        "type": "integer"
                    },
                    "severity": {
                        "description": "Syslog server severity level",
                        "enum": [
                            "Alert",
                            "Critical"
                        ],
                        "type": "string"
                    },
                    "transport": {
                        "description": "Syslog server transport protocol",
                        "enum": [
                            "TCP",
                            "UDP"
                        ],
                        "type": "string"
                    }
                }
            },
            "SyslogSyncSpec_v1_platform_PUT": {
                "description": "Syslog server configuration",
                "properties": {
                    "address": {
                        "description": "Server hostname or ipaddress",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "Syslog server enabled flag",
                        "type": "boolean"
                    },
                    "forwardingFacility": {
                        "description": "Syslog server forwarding facility",
                        "enum": [
                            "Local0"
                        ],
                        "type": "string"
                    },
                    "port": {
                        "description": "Syslog server port",
                        "type": "integer"
                    },
                    "severity": {
                        "description": "Syslog server severity level",
                        "enum": [
                            "Alert",
                            "Critical"
                        ],
                        "type": "string"
                    },
                    "transport": {
                        "description": "Syslog server transport protocol",
                        "enum": [
                            "TCP",
                            "UDP"
                        ],
                        "type": "string"
                    }
                }
            },
            "SyslogSyncStatusError_v1_platform_GET": {
                "description": "error is the last observed error, if any.",
                "properties": {
                    "message": {
                        "description": "message is a string detailing the encountered error",
                        "type": "string"
                    },
                    "time": {
                        "description": "time is the timestamp when the error was encountered.",
                        "type": "string"
                    }
                }
            },
            "SyslogSyncStatusError_v1_platform_POST": {
                "description": "error is the last observed error, if any.",
                "properties": {
                    "message": {
                        "description": "message is a string detailing the encountered error",
                        "type": "string"
                    },
                    "time": {
                        "description": "time is the timestamp when the error was encountered.",
                        "type": "string"
                    }
                }
            },
            "SyslogSyncStatusError_v1_platform_PUT": {
                "description": "error is the last observed error, if any.",
                "properties": {
                    "message": {
                        "description": "message is a string detailing the encountered error",
                        "type": "string"
                    },
                    "time": {
                        "description": "time is the timestamp when the error was encountered.",
                        "type": "string"
                    }
                }
            },
            "SyslogSyncStatusWrapper_v1_platform_GET": {
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/SyslogSyncStatusError_v1_platform_GET",
                        "description": "error is the last observed error, if any."
                    }
                }
            },
            "SyslogSyncStatusWrapper_v1_platform_POST": {
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/SyslogSyncStatusError_v1_platform_POST",
                        "description": "error is the last observed error, if any."
                    }
                }
            },
            "SyslogSyncStatusWrapper_v1_platform_PUT": {
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/SyslogSyncStatusError_v1_platform_PUT",
                        "description": "error is the last observed error, if any."
                    }
                }
            },
            "SyslogSyncStatus_v1_platform_GET": {
                "description": "Syslog server status information",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/SyslogSyncStatusError_v1_platform_GET",
                        "description": "error is the last observed error, if any."
                    }
                }
            },
            "SyslogSyncStatus_v1_platform_POST": {
                "description": "Syslog server status information",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/SyslogSyncStatusError_v1_platform_POST",
                        "description": "error is the last observed error, if any."
                    }
                }
            },
            "SyslogSyncStatus_v1_platform_PUT": {
                "description": "Syslog server status information",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/SyslogSyncStatusError_v1_platform_PUT",
                        "description": "error is the last observed error, if any."
                    }
                }
            },
            "SyslogSync_v1_platform_GET": {
                "description": "Resource that represents configuration for a remote syslog server",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/SyslogSyncSpecWrapper_v1_platform_GET"
                    },
                    "status": {
                        "$ref": "#/components/schemas/SyslogSyncStatusWrapper_v1_platform_GET"
                    }
                },
                "required": [
                    "spec",
                    "status"
                ]
            },
            "SyslogSync_v1_platform_GETLIST": {
                "description": "Resource that represents configuration for a remote syslog server",
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/SyslogSync_v1_platform_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "SyslogSync_v1_platform_POST": {
                "description": "Resource that represents configuration for a remote syslog server",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/SyslogSyncSpecWrapper_v1_platform_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "SyslogSync_v1_platform_PUT": {
                "description": "Resource that represents configuration for a remote syslog server",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/SyslogSyncSpecWrapper_v1_platform_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "TACACSConfig_v4_aaa_GET": {
                "properties": {
                    "providers": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/TACACSProvider_v4_aaa_GET"
                        },
                        "description": "TACACS login domain configuration",
                        "type": "object"
                    }
                }
            },
            "TACACSConfig_v4_aaa_POST": {
                "properties": {
                    "providers": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/TACACSProvider_v4_aaa_POST"
                        },
                        "description": "TACACS login domain configuration",
                        "type": "object"
                    }
                }
            },
            "TACACSConfig_v4_aaa_PUT": {
                "properties": {
                    "providers": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/TACACSProvider_v4_aaa_PUT"
                        },
                        "description": "TACACS login domain configuration",
                        "type": "object"
                    }
                }
            },
            "TACACSProvider_v4_aaa_GET": {
                "properties": {
                    "authProtocol": {
                        "description": "TACACS provider server authentication mechanism",
                        "enum": [
                            "PAP",
                            "CHAP",
                            "MSCHAP"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "Description about the TACACS provider server",
                        "type": "string"
                    },
                    "key": {
                        "description": "Base64 encoded TACACS provider server secret",
                        "type": "string"
                    },
                    "monitor": {
                        "description": "Flag to determine whether to monitor this LDAP provider",
                        "type": "boolean"
                    },
                    "monitorPassword": {
                        "description": "Monitoring user password",
                        "type": "string"
                    },
                    "monitorUsername": {
                        "description": "User name used for monitoring",
                        "type": "string"
                    },
                    "port": {
                        "description": "TACACS provider server connection port",
                        "type": "integer"
                    },
                    "priority": {
                        "description": "TACACS provider server priority based on which authentication will be attempted",
                        "type": "integer"
                    },
                    "retries": {
                        "description": "TACACS provider server connection retries parameter",
                        "type": "integer"
                    },
                    "timeout": {
                        "description": "TACACS provider server connection timeout parameter",
                        "type": "integer"
                    }
                }
            },
            "TACACSProvider_v4_aaa_POST": {
                "properties": {
                    "authProtocol": {
                        "description": "TACACS provider server authentication mechanism",
                        "enum": [
                            "PAP",
                            "CHAP",
                            "MSCHAP"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "Description about the TACACS provider server",
                        "type": "string"
                    },
                    "key": {
                        "description": "Base64 encoded TACACS provider server secret",
                        "type": "string"
                    },
                    "monitor": {
                        "description": "Flag to determine whether to monitor this LDAP provider",
                        "type": "boolean"
                    },
                    "monitorPassword": {
                        "description": "Monitoring user password",
                        "type": "string"
                    },
                    "monitorUsername": {
                        "description": "User name used for monitoring",
                        "type": "string"
                    },
                    "port": {
                        "description": "TACACS provider server connection port",
                        "type": "integer"
                    },
                    "priority": {
                        "description": "TACACS provider server priority based on which authentication will be attempted",
                        "type": "integer"
                    },
                    "retries": {
                        "description": "TACACS provider server connection retries parameter",
                        "type": "integer"
                    },
                    "timeout": {
                        "description": "TACACS provider server connection timeout parameter",
                        "type": "integer"
                    }
                }
            },
            "TACACSProvider_v4_aaa_PUT": {
                "properties": {
                    "authProtocol": {
                        "description": "TACACS provider server authentication mechanism",
                        "enum": [
                            "PAP",
                            "CHAP",
                            "MSCHAP"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "Description about the TACACS provider server",
                        "type": "string"
                    },
                    "key": {
                        "description": "Base64 encoded TACACS provider server secret",
                        "type": "string"
                    },
                    "monitor": {
                        "description": "Flag to determine whether to monitor this LDAP provider",
                        "type": "boolean"
                    },
                    "monitorPassword": {
                        "description": "Monitoring user password",
                        "type": "string"
                    },
                    "monitorUsername": {
                        "description": "User name used for monitoring",
                        "type": "string"
                    },
                    "port": {
                        "description": "TACACS provider server connection port",
                        "type": "integer"
                    },
                    "priority": {
                        "description": "TACACS provider server priority based on which authentication will be attempted",
                        "type": "integer"
                    },
                    "retries": {
                        "description": "TACACS provider server connection retries parameter",
                        "type": "integer"
                    },
                    "timeout": {
                        "description": "TACACS provider server connection timeout parameter",
                        "type": "integer"
                    }
                }
            },
            "TriggerGroup_v1_eventmonitoring_GET": {
                "description": "List of triggers that govern the stream types where the alert can be broadcasted",
                "properties": {
                    "consideredDuration": {
                        "description": "Duration for which the alert remains Active",
                        "type": "string"
                    },
                    "consideredSeverities": {
                        "description": "Types of severities that are eligible for the trigger",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "streams": {
                        "description": "Types of streams to broadcast the alert",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "thresholdOccurrence": {
                        "description": "Number of events occurred to initiate the trigger",
                        "type": "integer"
                    },
                    "trigger": {
                        "description": "Type of trigger",
                        "type": "string"
                    }
                }
            },
            "TriggerGroup_v1_eventmonitoring_POST": {
                "description": "List of triggers that govern the stream types where the alert can be broadcasted",
                "properties": {
                    "consideredDuration": {
                        "description": "Duration for which the alert remains Active",
                        "type": "string"
                    },
                    "consideredSeverities": {
                        "description": "Types of severities that are eligible for the trigger",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "streams": {
                        "description": "Types of streams to broadcast the alert",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "thresholdOccurrence": {
                        "description": "Number of events occurred to initiate the trigger",
                        "type": "integer"
                    },
                    "trigger": {
                        "description": "Type of trigger",
                        "type": "string"
                    }
                }
            },
            "TriggerGroup_v1_eventmonitoring_PUT": {
                "description": "List of triggers that govern the stream types where the alert can be broadcasted",
                "properties": {
                    "consideredDuration": {
                        "description": "Duration for which the alert remains Active",
                        "type": "string"
                    },
                    "consideredSeverities": {
                        "description": "Types of severities that are eligible for the trigger",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "streams": {
                        "description": "Types of streams to broadcast the alert",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "thresholdOccurrence": {
                        "description": "Number of events occurred to initiate the trigger",
                        "type": "integer"
                    },
                    "trigger": {
                        "description": "Type of trigger",
                        "type": "string"
                    }
                }
            },
            "TrustedCASpecWrapper_v4_certmanagement_GET": {
                "properties": {
                    "cert": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "TrustedCASpecWrapper_v4_certmanagement_POST": {
                "properties": {
                    "cert": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "TrustedCASpecWrapper_v4_certmanagement_PUT": {
                "properties": {
                    "cert": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "TrustedCASpec_v4_certmanagement_GET": {
                "properties": {
                    "cert": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "TrustedCASpec_v4_certmanagement_POST": {
                "properties": {
                    "cert": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "TrustedCASpec_v4_certmanagement_PUT": {
                "properties": {
                    "cert": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "TrustedCA_v4_certmanagement_GET": {
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/TrustedCASpecWrapper_v4_certmanagement_GET"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "TrustedCA_v4_certmanagement_GETLIST": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/TrustedCA_v4_certmanagement_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "TrustedCA_v4_certmanagement_POST": {
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/TrustedCASpecWrapper_v4_certmanagement_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "TrustedCA_v4_certmanagement_PUT": {
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/TrustedCASpecWrapper_v4_certmanagement_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "TrustedJWTKeysSpecWrapper_v4_aaa_GET": {
                "properties": {
                    "appName": {
                        "description": "App Name",
                        "type": "string"
                    },
                    "keyID": {
                        "description": "JWT Key ID",
                        "type": "string"
                    },
                    "publicKey": {
                        "description": "JWT Public Key in base64 format",
                        "type": "string"
                    },
                    "remoteIDClaim": {
                        "description": "Claim to check while verifying OTP request using this key",
                        "type": "string"
                    }
                }
            },
            "TrustedJWTKeysSpecWrapper_v4_aaa_POST": {
                "properties": {
                    "appName": {
                        "description": "App Name",
                        "type": "string"
                    },
                    "keyID": {
                        "description": "JWT Key ID",
                        "type": "string"
                    },
                    "publicKey": {
                        "description": "JWT Public Key in base64 format",
                        "type": "string"
                    },
                    "remoteIDClaim": {
                        "description": "Claim to check while verifying OTP request using this key",
                        "type": "string"
                    }
                },
                "required": [
                    "keyID"
                ]
            },
            "TrustedJWTKeysSpecWrapper_v4_aaa_PUT": {
                "properties": {
                    "keyID": {
                        "description": "JWT Key ID",
                        "type": "string"
                    },
                    "publicKey": {
                        "description": "JWT Public Key in base64 format",
                        "type": "string"
                    },
                    "remoteIDClaim": {
                        "description": "Claim to check while verifying OTP request using this key",
                        "type": "string"
                    }
                }
            },
            "TrustedJWTKeysSpec_v4_aaa_GET": {
                "properties": {
                    "appName": {
                        "description": "App Name",
                        "type": "string"
                    },
                    "keyID": {
                        "description": "JWT Key ID",
                        "type": "string"
                    },
                    "publicKey": {
                        "description": "JWT Public Key in base64 format",
                        "type": "string"
                    },
                    "remoteIDClaim": {
                        "description": "Claim to check while verifying OTP request using this key",
                        "type": "string"
                    }
                }
            },
            "TrustedJWTKeysSpec_v4_aaa_POST": {
                "properties": {
                    "appName": {
                        "description": "App Name",
                        "type": "string"
                    },
                    "keyID": {
                        "description": "JWT Key ID",
                        "type": "string"
                    },
                    "publicKey": {
                        "description": "JWT Public Key in base64 format",
                        "type": "string"
                    },
                    "remoteIDClaim": {
                        "description": "Claim to check while verifying OTP request using this key",
                        "type": "string"
                    }
                }
            },
            "TrustedJWTKeysSpec_v4_aaa_PUT": {
                "properties": {
                    "keyID": {
                        "description": "JWT Key ID",
                        "type": "string"
                    },
                    "publicKey": {
                        "description": "JWT Public Key in base64 format",
                        "type": "string"
                    },
                    "remoteIDClaim": {
                        "description": "Claim to check while verifying OTP request using this key",
                        "type": "string"
                    }
                }
            },
            "TrustedJWTKeys_v4_aaa_GET": {
                "description": "API Gateway Trusted JWT Keys Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/TrustedJWTKeysSpecWrapper_v4_aaa_GET"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "TrustedJWTKeys_v4_aaa_GETLIST": {
                "description": "API Gateway Trusted JWT Keys Resource",
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/TrustedJWTKeys_v4_aaa_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "TrustedJWTKeys_v4_aaa_POST": {
                "description": "API Gateway Trusted JWT Keys Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/TrustedJWTKeysSpecWrapper_v4_aaa_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "TrustedJWTKeys_v4_aaa_PUT": {
                "description": "API Gateway Trusted JWT Keys Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/TrustedJWTKeysSpecWrapper_v4_aaa_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "URLDiscoverySpecWrapper_v1_argo.cisco.com_GET": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "realm": {
                        "type": "string"
                    },
                    "resources": {
                        "items": {
                            "$ref": "#/components/schemas/ResourceDescriptor_v1_argo.cisco.com_GET"
                        },
                        "type": "array"
                    },
                    "services": {
                        "items": {
                            "$ref": "#/components/schemas/ServiceDescriptor_v1_argo.cisco.com_GET"
                        },
                        "type": "array"
                    },
                    "urlList": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "urlTree": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "URLDiscoverySpecWrapper_v1_argo.cisco.com_POST": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "realm": {
                        "type": "string"
                    },
                    "resources": {
                        "items": {
                            "$ref": "#/components/schemas/ResourceDescriptor_v1_argo.cisco.com_POST"
                        },
                        "type": "array"
                    },
                    "services": {
                        "items": {
                            "$ref": "#/components/schemas/ServiceDescriptor_v1_argo.cisco.com_POST"
                        },
                        "type": "array"
                    },
                    "urlList": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "urlTree": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "URLDiscoverySpecWrapper_v1_argo.cisco.com_PUT": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "realm": {
                        "type": "string"
                    },
                    "resources": {
                        "items": {
                            "$ref": "#/components/schemas/ResourceDescriptor_v1_argo.cisco.com_PUT"
                        },
                        "type": "array"
                    },
                    "services": {
                        "items": {
                            "$ref": "#/components/schemas/ServiceDescriptor_v1_argo.cisco.com_PUT"
                        },
                        "type": "array"
                    },
                    "urlList": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "urlTree": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "URLRegistryFlatNode": {
                "properties": {
                    "MetaKey": {
                        "type": "string"
                    },
                    "NestedOps": {
                        "additionalProperties": {
                            "type": "boolean"
                        },
                        "type": "object"
                    },
                    "OwnOps": {
                        "additionalProperties": {
                            "type": "boolean"
                        },
                        "type": "object"
                    },
                    "URLEntry": {
                        "type": "string"
                    }
                }
            },
            "URLRegistryNode": {
                "properties": {
                    "Children": {
                        "type": "object"
                    },
                    "MetaKey": {
                        "type": "string"
                    },
                    "NestedOps": {
                        "additionalProperties": {
                            "type": "boolean"
                        },
                        "type": "object"
                    },
                    "OwnOps": {
                        "additionalProperties": {
                            "type": "boolean"
                        },
                        "type": "object"
                    },
                    "URLEntry": {
                        "type": "string"
                    }
                }
            },
            "UserAPIKeySpecWrapper_v4_aaa_GET": {
                "properties": {
                    "apiKey": {
                        "description": "User API Key for a local user to access ND Resources",
                        "type": "string"
                    },
                    "apiKeyName": {
                        "description": "Name of the User API Key",
                        "type": "string"
                    },
                    "userName": {
                        "description": "UserName of the associated local user for this API Key",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Unique identifier for an API Key made by MD5 hashing + formatting to appear as uuid",
                        "type": "string"
                    }
                }
            },
            "UserAPIKeySpecWrapper_v4_aaa_POST": {
                "properties": {
                    "apiKey": {
                        "description": "User API Key for a local user to access ND Resources",
                        "type": "string"
                    },
                    "apiKeyName": {
                        "description": "Name of the User API Key",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Unique identifier for an API Key made by MD5 hashing + formatting to appear as uuid",
                        "type": "string"
                    }
                },
                "required": [
                    "uuid"
                ]
            },
            "UserAPIKeySpecWrapper_v4_aaa_PUT": {
                "properties": {
                    "apiKey": {
                        "description": "User API Key for a local user to access ND Resources",
                        "type": "string"
                    },
                    "apiKeyName": {
                        "description": "Name of the User API Key",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Unique identifier for an API Key made by MD5 hashing + formatting to appear as uuid",
                        "type": "string"
                    }
                }
            },
            "UserAPIKeySpec_v4_aaa_GET": {
                "properties": {
                    "apiKey": {
                        "description": "User API Key for a local user to access ND Resources",
                        "type": "string"
                    },
                    "apiKeyName": {
                        "description": "Name of the User API Key",
                        "type": "string"
                    },
                    "userName": {
                        "description": "UserName of the associated local user for this API Key",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Unique identifier for an API Key made by MD5 hashing + formatting to appear as uuid",
                        "type": "string"
                    }
                }
            },
            "UserAPIKeySpec_v4_aaa_POST": {
                "properties": {
                    "apiKey": {
                        "description": "User API Key for a local user to access ND Resources",
                        "type": "string"
                    },
                    "apiKeyName": {
                        "description": "Name of the User API Key",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Unique identifier for an API Key made by MD5 hashing + formatting to appear as uuid",
                        "type": "string"
                    }
                }
            },
            "UserAPIKeySpec_v4_aaa_PUT": {
                "properties": {
                    "apiKey": {
                        "description": "User API Key for a local user to access ND Resources",
                        "type": "string"
                    },
                    "apiKeyName": {
                        "description": "Name of the User API Key",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Unique identifier for an API Key made by MD5 hashing + formatting to appear as uuid",
                        "type": "string"
                    }
                }
            },
            "UserAPIKey_v4_aaa_GET": {
                "description": "User API Key Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/UserAPIKeySpecWrapper_v4_aaa_GET"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "UserAPIKey_v4_aaa_GETLIST": {
                "description": "User API Key Resource",
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/UserAPIKey_v4_aaa_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "UserAPIKey_v4_aaa_POST": {
                "description": "User API Key Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/UserAPIKeySpecWrapper_v4_aaa_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "UserAPIKey_v4_aaa_PUT": {
                "description": "User API Key Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/UserAPIKeySpecWrapper_v4_aaa_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "UserPreferenceSpecWrapper_v4_aaa_GET": {
                "properties": {
                    "customPreferences": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Custom user preferences fields",
                        "type": "object"
                    },
                    "displayedAppInstances": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/AppInstances_v4_aaa_GET"
                        },
                        "description": "Application instances for which What's New already displayed",
                        "type": "object"
                    },
                    "lastLoggedInVersion": {
                        "description": "Last logged in version of ND",
                        "type": "string"
                    },
                    "loginID": {
                        "description": "User login ID",
                        "type": "string"
                    },
                    "showWelcomeScreen": {
                        "description": "Option to show welcome screen on login",
                        "type": "boolean"
                    },
                    "uiIdleTimeoutSeconds": {
                        "description": "UI idle timeout in seconds",
                        "type": "integer"
                    }
                }
            },
            "UserPreferenceSpecWrapper_v4_aaa_POST": {
                "properties": {
                    "customPreferences": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Custom user preferences fields",
                        "type": "object"
                    },
                    "displayedAppInstances": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/AppInstances_v4_aaa_POST"
                        },
                        "description": "Application instances for which What's New already displayed",
                        "type": "object"
                    },
                    "lastLoggedInVersion": {
                        "description": "Last logged in version of ND",
                        "type": "string"
                    },
                    "loginID": {
                        "description": "User login ID",
                        "type": "string"
                    },
                    "showWelcomeScreen": {
                        "description": "Option to show welcome screen on login",
                        "type": "boolean"
                    },
                    "uiIdleTimeoutSeconds": {
                        "description": "UI idle timeout in seconds",
                        "type": "integer"
                    }
                },
                "required": [
                    "loginID"
                ]
            },
            "UserPreferenceSpecWrapper_v4_aaa_PUT": {
                "properties": {
                    "customPreferences": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Custom user preferences fields",
                        "type": "object"
                    },
                    "displayedAppInstances": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/AppInstances_v4_aaa_PUT"
                        },
                        "description": "Application instances for which What's New already displayed",
                        "type": "object"
                    },
                    "lastLoggedInVersion": {
                        "description": "Last logged in version of ND",
                        "type": "string"
                    },
                    "loginID": {
                        "description": "User login ID",
                        "type": "string"
                    },
                    "showWelcomeScreen": {
                        "description": "Option to show welcome screen on login",
                        "type": "boolean"
                    },
                    "uiIdleTimeoutSeconds": {
                        "description": "UI idle timeout in seconds",
                        "type": "integer"
                    }
                }
            },
            "UserPreferenceSpec_v4_aaa_GET": {
                "properties": {
                    "customPreferences": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Custom user preferences fields",
                        "type": "object"
                    },
                    "displayedAppInstances": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/AppInstances_v4_aaa_GET"
                        },
                        "description": "Application instances for which What's New already displayed",
                        "type": "object"
                    },
                    "lastLoggedInVersion": {
                        "description": "Last logged in version of ND",
                        "type": "string"
                    },
                    "loginID": {
                        "description": "User login ID",
                        "type": "string"
                    },
                    "showWelcomeScreen": {
                        "description": "Option to show welcome screen on login",
                        "type": "boolean"
                    },
                    "uiIdleTimeoutSeconds": {
                        "description": "UI idle timeout in seconds",
                        "type": "integer"
                    }
                }
            },
            "UserPreferenceSpec_v4_aaa_POST": {
                "properties": {
                    "customPreferences": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Custom user preferences fields",
                        "type": "object"
                    },
                    "displayedAppInstances": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/AppInstances_v4_aaa_POST"
                        },
                        "description": "Application instances for which What's New already displayed",
                        "type": "object"
                    },
                    "lastLoggedInVersion": {
                        "description": "Last logged in version of ND",
                        "type": "string"
                    },
                    "loginID": {
                        "description": "User login ID",
                        "type": "string"
                    },
                    "showWelcomeScreen": {
                        "description": "Option to show welcome screen on login",
                        "type": "boolean"
                    },
                    "uiIdleTimeoutSeconds": {
                        "description": "UI idle timeout in seconds",
                        "type": "integer"
                    }
                }
            },
            "UserPreferenceSpec_v4_aaa_PUT": {
                "properties": {
                    "customPreferences": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Custom user preferences fields",
                        "type": "object"
                    },
                    "displayedAppInstances": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/AppInstances_v4_aaa_PUT"
                        },
                        "description": "Application instances for which What's New already displayed",
                        "type": "object"
                    },
                    "lastLoggedInVersion": {
                        "description": "Last logged in version of ND",
                        "type": "string"
                    },
                    "loginID": {
                        "description": "User login ID",
                        "type": "string"
                    },
                    "showWelcomeScreen": {
                        "description": "Option to show welcome screen on login",
                        "type": "boolean"
                    },
                    "uiIdleTimeoutSeconds": {
                        "description": "UI idle timeout in seconds",
                        "type": "integer"
                    }
                }
            },
            "UserPreference_v4_aaa_GET": {
                "description": "User Preference Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_GET"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/UserPreferenceSpecWrapper_v4_aaa_GET"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "UserPreference_v4_aaa_GETLIST": {
                "description": "User Preference Resource",
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/UserPreference_v4_aaa_GET"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "UserPreference_v4_aaa_POST": {
                "description": "User Preference Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_POST"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/UserPreferenceSpecWrapper_v4_aaa_POST"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "UserPreference_v4_aaa_PUT": {
                "description": "User Preference Resource",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ManagedObjectMeta_v1_argo.cisco.com_PUT"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/UserPreferenceSpecWrapper_v4_aaa_PUT"
                    }
                },
                "required": [
                    "spec"
                ]
            },
            "br_status": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "internal operation id"
                    },
                    "operation": {
                        "type": "string",
                        "description": "Type of operation",
                        "enum": [
                            "none",
                            "backup",
                            "restore"
                        ]
                    },
                    "state": {
                        "type": "string",
                        "description": "Current state of the operation",
                        "enum": [
                            "idle",
                            "downloading",
                            "ready",
                            "processing",
                            "complete",
                            "error",
                            "validationError"
                        ]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error occurred during the operation"
                    },
                    "restoreConfig": {
                        "type": "object",
                        "description": "Configuration used for restore operations",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/br_type"
                            },
                            "services": {
                                "type": "array",
                                "description": "Running services",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "source": {
                                "type": "string",
                                "description": "remote location where backup file is stored. Empty for local backups"
                            },
                            "path": {
                                "type": "string",
                                "description": "File path to import from the remote location or file name imported via /api/action/class/backuprestore/file-upload"
                            }
                        }
                    },
                    "details": {
                        "$ref": "#/components/schemas/br_status_details"
                    }
                }
            },
            "br_type": {
                "type": "string",
                "description": "Operation type",
                "enum": [
                    "config-only",
                    "full"
                ]
            },
            "br_status_details": {
                "type": "object",
                "description": "Backup/Restore operation details",
                "properties": {
                    "progress": {
                        "type": "integer",
                        "description": "Overall progress",
                        "minimum": 0,
                        "maximum": 100
                    },
                    "progressMsg": {
                        "type": "string",
                        "description": "Overall progress message"
                    },
                    "serviceDetails": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/br_status_service_details"
                        }
                    }
                }
            },
            "br_status_service_details": {
                "type": "object",
                "description": "Service details",
                "properties": {
                    "progress": {
                        "type": "integer",
                        "description": "Overall service progress",
                        "minimum": 0,
                        "maximum": 100
                    },
                    "details": {
                        "type": "array",
                        "description": "Service-specific details",
                        "items": {
                            "$ref": "#/components/schemas/br_status_service_details_items"
                        }
                    }
                }
            },
            "br_status_service_details_items": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Task name"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Overall timeout in seconds"
                    },
                    "progressWeight": {
                        "type": "integer",
                        "description": "Progress weight of task in overall context."
                    },
                    "currentProgress": {
                        "type": "integer",
                        "description": "Current progress for this task",
                        "minimum": 0,
                        "maximum": 100
                    },
                    "failureReason": {
                        "type": "string",
                        "description": "Failure reason if the operation failed for some reason"
                    },
                    "successMessage": {
                        "type": "string",
                        "description": "Additional success message for users"
                    }
                }
            },
            "br_backup_info": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Backup name"
                    },
                    "services": {
                        "type": "array",
                        "description": "List of services",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "description": "Backup/Restore type",
                        "$ref": "#/components/schemas/br_type"
                    },
                    "startTime": {
                        "type": "string",
                        "description": "Backup start time",
                        "format": "date-time"
                    },
                    "endTime": {
                        "type": "string",
                        "description": "Backup end time",
                        "format": "date-time"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of this backup",
                        "enum": [
                            "success",
                            "failure",
                            "in-progress"
                        ]
                    },
                    "destination": {
                        "type": "string",
                        "description": "Remote location where the backup is stored or empty if local"
                    },
                    "path": {
                        "type": "string",
                        "description": "Path to the backup file (remote backups only)"
                    },
                    "user": {
                        "type": "string",
                        "description": "ID of user triggering the backup"
                    },
                    "schedule": {
                        "type": "string",
                        "description": "Name of the schedule that created this backup"
                    },
                    "details": {
                        "description": "Backup details",
                        "$ref": "#/components/schemas/br_status_service_details_items"
                    }
                }
            },
            "br_schedule_info": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Backup schedule name"
                    },
                    "type": {
                        "$ref": "#/components/schemas/br_type",
                        "description": "Backup type"
                    },
                    "startTime": {
                        "type": "string",
                        "description": "Time of first scheduled backup",
                        "format": "date-time"
                    },
                    "frequency": {
                        "type": "integer",
                        "description": "Frequency in days",
                        "minimum": 1
                    },
                    "user": {
                        "type": "string",
                        "description": "ID of the user creating the schedule"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Remote location where the backup is stored"
                    },
                    "path": {
                        "type": "string",
                        "description": "Path to the backup file on the remote location"
                    }
                }
            },
            "br_file_import_request": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of a known backup to be restored"
                    },
                    "source": {
                        "type": "string",
                        "description": "Source of the backup file"
                    },
                    "path": {
                        "type": "string",
                        "description": "Path or name of the file to import"
                    },
                    "encryptionKey": {
                        "type": "string",
                        "description": "Encryption key for the backup"
                    }
                },
                "required": [
                    "encryptionKey",
                    "name",
                    "source",
                    "path"
                ]
            },
            "br_restore_request": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "config-only",
                            "full"
                        ],
                        "description": "Type of restore to perform"
                    },
                    "ignorePersistentIPs": {
                        "type": "boolean",
                        "description": "Whether to ignore persistent IPs during restore"
                    }
                },
                "required": [
                    "type",
                    "ignorePersistentIPs"
                ]
            },
            "br_error_response": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string",
                        "description": "Error message (empty if no error)"
                    }
                }
            },
            "br_sc_error_forbidden": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string",
                        "description": "Error message (empty if no error)"
                    },
                    "hostKey": {
                        "type": "string",
                        "description": "Set when error is 'Host key must be validated'"
                    },
                    "oldHostKey": {
                        "type": "string",
                        "description": "Set when error is 'Host key must be validated' and an older key exists"
                    }
                }
            },
            "br_secure_copy": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the remote scp/sftp location"
                    },
                    "host": {
                        "type": "string",
                        "description": "Host name or ip address"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Protocol to use",
                        "enum": [
                            "scp",
                            "sftp"
                        ]
                    },
                    "path": {
                        "type": "string",
                        "description": "Path to existing directory on the remote location"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port",
                        "default": 22,
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "authentication": {
                        "type": "string",
                        "description": "Authentication method",
                        "enum": [
                            "password",
                            "publickey"
                        ]
                    },
                    "username": {
                        "type": "string",
                        "description": "Username"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password (for password-based authentication)"
                    },
                    "sshKey": {
                        "type": "string",
                        "description": "Private Key (for publickey-based authentication)"
                    },
                    "passphrase": {
                        "type": "string",
                        "description": "Passphrase for the private key"
                    },
                    "acceptHostKey": {
                        "type": "boolean",
                        "description": "True if the host key must be accepted, false otherwise (post/put requests only)"
                    }
                },
                "required": [
                    "name",
                    "host",
                    "protocol",
                    "path",
                    "port",
                    "authentication",
                    "username",
                    "password",
                    "sshKey",
                    "passphrase",
                    "acceptHostKey"
                ]
            },
            "br_schedule_request": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Backup schedule name"
                    },
                    "type": {
                        "$ref": "#/components/schemas/br_type",
                        "description": "Backup type"
                    },
                    "startTime": {
                        "type": "string",
                        "description": "Time of first scheduled backup",
                        "format": "date-time"
                    },
                    "frequency": {
                        "type": "integer",
                        "description": "Frequency in days",
                        "minimum": 1
                    },
                    "destination": {
                        "type": "string",
                        "description": "Remote location where the backup is stored"
                    },
                    "encryptionKey": {
                        "type": "string",
                        "description": "Backup file encryption key"
                    }
                },
                "required": [
                    "name",
                    "type",
                    "startTime",
                    "frequency",
                    "destination",
                    "encryption"
                ]
            }
        },
        "responses": {
            "br_error_response": {
                "description": "Error response",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/br_error_response"
                        }
                    }
                }
            },
            "br_sc_error_forbidden": {
                "description": "Error response",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/br_sc_error_forbidden"
                        }
                    }
                }
            }
        }
    }
}